ignores a twitter account from showing up in the aoa tool
unignores a twitter account from showing up in the aoa tool
return the dict needed for tweets html to render a tweet + replies
fetch a list of tweets dcnl args dcnl limit the maximum number of tweets returned dcnl max id return tweets with tweet id less than this dcnl reply to return only tweets that are replies to the given tweet if dcnl none return only toplevel nonreply tweets dcnl filter one of the keys from filters
ajax view returning a list of tweets
customer care landing page
moderate banned aoa twitter handles
post a tweet and return a rendering of it and any replies
hide the tweet with a given id only hides tweets that are not replies dcnl and do not have replies dcnl returns proper http status codes
handle the reply save signal dcnl we award the army of awesome badge on 50 tweets
the moderation queue
update the status of a flagged object
build and send the announcement emails to a group
an ajax view to create a new announcement for the current locale
an ajax view to delete an announcement
sends the award notification email dcnl arg award the djangobadger award instance
get or create a badge dcnl the badge template is a dict and must have a slug key all dcnl the values in the dict will be formatted with year if one dcnl is specified for example dcnl badge template slug format year year dcnl if a badge with the specified slug doesn t exist we create dcnl the badge with the specified slug and the rest of the items dcnl in the dict
notifies award recipient that he she has an award
get new visitor data from google analytics and save
calculate new l10n coverage numbers and save dcnl l10n coverage is a measure of the amount of translations that are dcnl up to date weighted by the number of visits for each locale dcnl the algorithm see bug 727084 dcnl sumo visits total sumo visits for the last 30 days dcnl total translated 0 dcnl for each locale dcnl total up to date total up to date + dcnl number of up to date articles in the enus top 50 visited 50 dcnl visitors for that locale sumo visits dcnl an up to date article is any of the following dcnl an enus article by definition it is always up to date dcnl the latest enus revision has been translated dcnl there are only new revisions with typo significance not translated dcnl there is only one revision of medium significance not translated
calculate and save contributor metrics
calculate and save the support forum contributor counts dcnl an support forum contributor is a user that has replied 10 times dcnl in the past 30 days to questions that aren t his her own
calculate and save the kb enus and l10n contributor counts dcnl a kb contributor is a user that has edited or reviewed a revision dcnl in the last 30 days
calculate and save the aoa contributor counts dcnl an aoa contributor is a user that has replied in the last 30 days
get new search ctr data from google analytics and save
returns the date of the latest metric value
get the top documents by visits
exit survey handling dcnl collect new exit survey results dcnl save results to our metrics table dcnl add new emails collected to the exit survey
collect and save new exit survey results
add question askers to a surveygizmo campaign to get surveyed
of the group users count how many made a contribution in date range
get the email addresses collected between startdate and enddate
add email to the exit survey campaign
collect and aggregate the exit survey results for the date
return the daily grouped queryset we need for model cls
return the monthly grouped queryset we need for model cls
the date from which we start querying monthly data
remap the query result dcnl kwargs dcnl <label dcnl count 45 month 2l year 2010l dcnl count 6 month 2l year 2010l note duplicate date dcnl count 12 month 1l year 2010l dcnl count 1 month 12l year 2009l dcnl <label dcnl returns dcnl datetime date 2009 12 1 <label 1 dcnl datetime date 2010 1 1 <label 12 dcnl datetime date 2010 2 1 <label 51 note summed counts
merge query results arrays into one array dcnl from dcnl date 20111001 votes 3 dcnl and dcnl date 20111001 helpful 7 dcnl to dcnl date 20111001 votes 3 helpful 7
return a db cursor for reading
parse a text date like 20040830 into a triple of numbers dcnl may fling valueerrors or typeerrors around if the input or date is invalid dcnl it should at least be a stringi mean come on
check if the user has a permission on a specific object dcnl returns boolean
check if the user has a permission or owns the object dcnl ownership is determined by comparing perm obj field name to the user in dcnl context
given a user a permission an object obj and another object to check dcnl permissions against perm obj return true if the user has perm on dcnl obj
return whether a user has a permission globally or on a given object
return whether an object has an authority permission that references it dcnl if it doesn t we sometimes treat that permission as free to everyone dcnl since the auth backends we currently use have no concept of granting a dcnl permission to the world dcnl considers only approved permissions to exist
helper function that returns a decorator dcnl redirect func if truthy a redirect will occur dcnl deny func if truthy httpresponseforbidden is returned dcnl redirect url func evaluated at view time returns the redirect url dcnl i e where to go if redirect func is truthy dcnl redirect field what field to set in the url defaults to django s dcnl set this to none to exclude it from the url
requires that the user not be logged in
requires that the user is logged in
a replacement for django contrib auth decorators permission required dcnl that doesn t ask authenticated users to log in
act like permission required or 403 but also grant permission to owners dcnl arguments dcnl perm authority permission to check e g forums forum edit forum dcnl owner attr attr of model object that references the owner dcnl obj lookup triple that specifies a lookup to the object on which dcnl ownership should be compared items in the tuple are dcnl model class or import path thereof dcnl kwarg name specifying field and comparator e g id exact dcnl name of kwarg containing the value to which to compare dcnl perm obj lookup triple that specifies a lookup to the object on which dcnl to check for permission elements of the tuple are as in dcnl obj lookup
return the object indicated by the lookup triple and the kwargs passed dcnl to the view
given an uploaded file a user and other data it creates an image
uploads an image from the request
checks the permissions for user on media image or video dcnl pass in media object image or video dcnl logged in user dcnl perm type delete change add dcnl raises permissiondenied if not allowed owner is always allowed
save a media form add user to updated by dcnl warning this assumes you re calling it from a subclass of mediaform
the media gallery dcnl filter can be set to images or videos
finalizes an uploaded draft
delete an existing draft for the user
ajax endpoint to media gallery dcnl returns an html list representation of the media
search the media gallery
delete media and redirect to gallery view
edit media means only changing the description for now
the media page
upload images or videos from request files
returns an image or video along with media format for the image
get video and image drafts for a given user
initializes the media form with an image video instance and posted data dcnl form cls is a django modelform dcnl request method must be post for post data to be bound dcnl exclude fields contains the list of fields to default to their current dcnl value from the image video object
send a welcome email to first time contributors dcnl anyone who has made a contribution more than 24 hours ago and has not dcnl already gotten a welcome email should get a welcome email
get the top support forum contributors
get the top kb editors locale enus
get the top l10n contributors for the kb
get the top army of awesome contributors
apply the date and locale filters to the eu query
community hub landing page
find users by username and displayname dcnl uses the es user s index
top contributors list view
make sure the locale is enabled on sumo
return a url to the group s avatar
edit group avatar
delete group avatar
add a member to the group
remove a member from the group
add a leader to the group
remove a leader from the group
join the contributors group
can the given user edit the given group profile
can the given user add and remove leaders
return the most recent post in the given set excluding the given post dcnl if there are none return none
when a user s username is changed we must reindex the threads dcnl they participated in
view all the forums
view all the threads in a forum
view all the posts in a thread
reply to a thread
start a new thread
lock unlock a thread
mark unmark a thread sticky
edit a thread
delete a thread
move a thread
edit a post
delete a post
watch unwatch a thread based on watch post param
watch unwatch a forum based on watch post param
ajax preview of posts
return an interable of emailmessages to send when a new post is dcnl created
return an interable of emailmessages to send when a new thread is dcnl created
return true if user is watching the discussion for locale and dcnl false otherwise
return the most recent post in the given set excluding the given post dcnl if there are none return none
given a slug and a request get the document or 404
view all the threads in a discussion forum
view all the posts in a thread
ratelimiting helper for kbforum threads and replies dcnl they are ratelimited together with the same key
reply to a thread
start a new thread
lock unlock a thread
mark unmark a thread sticky
edit a thread
delete a thread
edit a post
delete a post
watch unwatch a thread based on watch post param
watch unwatch a locale
watch unwatch a document based on watch post param
ajax preview of posts
the product picker page
the product landing page
the document listing page for a product + topic
build a query that matches objects with a content type that matches an action
hit a simple push endpoint to send a notification to a user dcnl handles and record any http errors may retry up to max retries dcnl times by recursing dcnl this function tries hard to handle any potential errors so it may dcnl be used in a loop that iterates over many actions to send without dcnl the loop needing to contain error handling logic dcnl param endpoint the url to put to dcnl param version the version to include in the push should be an integer dcnl greater than the version used every other time this endpoint has dcnl been called timestamps and db auto increment fields work well dcnl param max retries the maximum number of times to try again
call every notification handler for a notification
send simple push notifications to users that have opted in to them dcnl this will be called as a part of a celery task
when an action is created notify every user following something in the action
register a function to be called via celery for every notification dcnl this may be used as a decorator or as a simple function
send notification of a new private message
send a private message dcnl arg to a list of users to send the message to dcnl arg sender the user who is sending the message dcnl arg text the message text
returns the number of unread messages for the specified user
adds the unread private messages count to the context dcnl returns 0 for anonymous users dcnl returns 0 if waffle flag is off
send a new private message
apply action to selected messages
ajax preview of posts
print timeline block
make a compatible version of pip importable raise a runtimeerror if we dcnl couldn t
return a short 7bitsafe representation of a hash dcnl if you pass a sha256 this results in the hash algorithm that the wheel dcnl format pep 427 uses except here it s intended to be run across the dcnl downloaded archive before unpacking
return the path and line number of the file from which an dcnl installrequirement came
yield hashes from contiguous comment lines before line line number
delegate to pip the given args starting with the subcommand and raise dcnl pipexception if something goes wrong
return the hash of a downloaded file
return whether this is probably a git sha
return an iterable of filtered arguments dcnl arg argv arguments starting after the subcommand dcnl arg want paths if true the returned iterable includes the paths to any dcnl requirements files following a r or requirement option dcnl arg want other if true the returned iterable includes the args that are dcnl not a requirementfile path or a r or requirement flag
return the peep hash of one or more files returning a shell status code dcnl or raising a pipexception dcnl arg argv the commandline args starting after the subcommand
memoize a method that should return the same result every time on a dcnl given instance
return a packagefinder respecting commandline options dcnl arg argv everything after the subcommand
return a map of key list of things
execute something before the first item of iter something else for each dcnl item and a third thing after the last dcnl if there are no items in the iterable don t execute anything
return a list of downloadedreqs representing the requirements parsed dcnl out of a given requirements file dcnl arg path the path to the requirements file dcnl arg argv the commandline args starting after the subcommand
perform the peep install subcommand returning a shell status code dcnl or raising a pipexception dcnl arg argv the commandline args starting after the subcommand
convert a peep requirements file to one compatble with pip8 hashing dcnl loses comments and tromps on urls so the result will need a little manual dcnl massaging but the hard partthe hash conversionis done for you
be the toplevel entrypoint return a shell status code
do typical sumo update
of the group users count how many made a contribution in date range
this function provides functionality for the ifhasperm template tag dcnl syntax dcnl ifhasperm permission label check name user objs dcnl lalala dcnl else dcnl meh dcnl endifhasperm dcnl ifhasperm poll permission change poll request user dcnl lalala dcnl else dcnl meh dcnl endifhasperm
renders an add permissions form for the given object if no object dcnl is given it will render a select box to choose from dcnl syntax dcnl permission form for obj using permission label check name with template dcnl permission form for lesson using lesson permission add lesson
renders an add permissions form for the given object if no object dcnl is given it will render a select box to choose from dcnl syntax dcnl permission request form for obj and permission label check name with template dcnl permission request form for lesson using lesson permission add lesson dcnl with authority permission request form html
retrieves all permissions associated with the given obj and user dcnl and assigns the result to a context variable dcnl syntax dcnl get permissions obj dcnl for perm in permissions dcnl perm dcnl endfor dcnl get permissions obj as my permissions dcnl get permissions obj for request user as my permissions
retrieves all permissions requests associated with the given obj and user dcnl and assigns the result to a context variable dcnl syntax dcnl get permission requests obj dcnl for perm in permissions dcnl perm dcnl endfor dcnl get permission requests obj as my permissions dcnl get permission requests obj for request user as my permissions
performs a permission check with the given signature user and objects dcnl and assigns the result to a context variable dcnl syntax dcnl get permission permission label check name for user and objs as varname dcnl get permission poll permission change poll dcnl for request user and poll as is allowed dcnl get permission poll permission change poll dcnl for request user and poll second poll as is allowed dcnl if is allowed dcnl i ve got ze power to change ze pollllllzzz muahahaa dcnl else dcnl meh no power for meeeee dcnl endif
performs a permission request check with the given signature user and objects dcnl and assigns the result to a context variable dcnl syntax dcnl get permission request permission label check name for user and objs as varname dcnl get permission request poll permission change poll dcnl for request user and poll as asked for permissio dcnl get permission request poll permission change poll dcnl for request user and poll second poll as asked for permissio dcnl if asked for permissio dcnl dude you already asked for permission dcnl else dcnl oh please fill out this 20 page form and sign here dcnl endif
renders a html link to the delete view of the given permission returns dcnl no content if the requestuser has no permission to delete foreign dcnl permissions
renders a html link to the delete view of the given permission request dcnl returns no content if the requestuser has no permission to delete foreign dcnl permissions
renders a html link to the approve view of the given permission request dcnl returns no content if the requestuser has no permission to delete foreign dcnl permissions
goes and imports the permissions submodule of every app in installed apps dcnl to make sure the permission set classes are registered correctly
decorator for views that checks whether a user has a particular permission dcnl enabled redirecting to the login page if necessary
decorator that wraps the permission required decorator and returns a dcnl permission denied 403 page instead of redirecting to the login url
default 403 handler dcnl templates 403 html dcnl context dcnl request path dcnl the path of the requested url e g app pages bad page
fetch and store a webpay product icon dcnl parameters dcnl url dcnl absolute url of icon dcnl ext size dcnl the height width size that the developer claims it to be dcnl size dcnl the height width webpay wants us to resize it to dcnl the icon will be resized if its ext size is larger than size dcnl see webpay for details on how this is used for inapp payments
generates a webpay solitude external id given an addon s primary key
prepare a jwt describing the item about to be purchased when dcnl working with navigator mozpay dcnl see the mdn docs for details on the jwt fields dcnl https developer mozilla org enus marketplace monetization dcnl inapp payments section mozpay iap
returns a signed jwt to use for signature checking dcnl this is for nagios checks to ensure that marketplace s dcnl signed tokens are valid when processed by webpay
task intended to run via command line to update all apps supported locales dcnl based on the current version
clean out apps signed for reviewers
calculate popularity of app for all regions and per region dcnl returns value in the format of dcnl all <global installs dcnl <region slug <regional installs
update app install counts for all published apps dcnl we break these into chunks so we can bulk index them each chunk will dcnl process the apps in it and reindex them in bulk after all the chunks are dcnl processed we find records that haven t been updated and purge reindex those dcnl so we nullify their values
calculate trending for app for all regions and per region dcnl a installs from 8 days ago to 1 day ago dcnl b installs from 29 days ago to 9 days ago averaged per week dcnl trending a b b if a 100 and b 1 else 0 dcnl returns value in the format of dcnl all <global trending score dcnl <region slug <regional trending score
update trending for all published apps dcnl we break these into chunks so we can bulk index them each chunk will dcnl process the apps in it and reindex them in bulk after all the chunks are dcnl processed we find records that haven t been updated and purge reindex those dcnl so we nullify their values
sets up tasks to do user install dumps
sitewide garbage collections
returns a list of locales found in the locales property of the manifest dcnl this will convert locales found in the shorter languages setting to their dcnl full locale it will also remove locales not found in amo languages dcnl note the default locale is not included
body id rating id to translated rating label
dehydrate an object of content ratings from rating ids to dict
create a mini manifest for a packaged app or langpack and cache it call dcnl with force true to bypass existing cache dcnl note that platform expects name developer locales to match the data from dcnl the real manifest in the package so it needs to be read from the zip file dcnl returns a tuple with the minifest contents and the corresponding etag
cleans a model instance slug dcnl this strives to be as generic as possible as it s used by webapps dcnl and maybe less in the future d
put all translations into a translations dict
the try except attributeerror allows this to be used where the input is dcnl ambiguous and could be either an alreadyreversed url or a version object
set nomination date when app is pending review
pregenerate an android apk for a public app
return ids of webapp objects excluded from a particular region or excluded dcnl due to geodata flags
if the addon is premium require a purchase dcnl must be called after addon view decorator
check that the addon can become premium
don t evaluate qs or the locale will get stuck on whatever the server dcnl starts with the app view decorator will call qs with no arguments before dcnl doing anything so lambdas are ok dcnl good webapp objects valid dcnl good lambda webapp objects valid filter dcnl bad webapp objects valid
the try except attributeerror allows this to be used where the input is dcnl ambiguous and could be either an alreadyreversed url or a version object
returns a user object this user is suitable for assigning to dcnl cron jobs or long running tasks
create an user if he doesn t exist already assign him to a group and dcnl create a token for him dcnl if overwrite true then existing oauth credentials for this user will be dcnl deleted if any dcnl if oauth credentials are not specified random key and secret will be dcnl generated
query for a user matching a given email
verify a browserid login attempt if the browserid assertion is dcnl good but no account exists create one
a preconfigured wrapper around the app validator
resizes addon websites icons
resizes webapp website promo imgs
optimizes a png image by running it through pngcrush returns hash dcnl src filesystem image path dcnl hash field field name to save the new hash on instance if passing dcnl instance through set modified on
resizes preview images and stores the sizes on the preview
saves the icon for obj to its final destination obj can be an app or a dcnl website
saves the promo image for obj to its final destination dcnl obj can be an app or a website
downloads a webapp icon from the location specified in the manifest dcnl returns false if icon was not able to be retrieved dcnl if file pk is not provided it will use the file from the app s dcnl current version
return a validation object that looks like the addon validator
email app developers notifying them of new regions added
update blocked regions based on a list of regions to exclude
flag app for rereview if it receives an adult content rating
convert a resource uri to the primary key of the resource
escalate the app if it uses prerelease permissions
restore an incomplete app to its former status the app will be marked dcnl as its previous status or pending if it was never reviewed
image should be shrunk so that the longest side is 32px
image stays the same since the new size is bigger than both sides
image stays the same since the new size is the same
resize multiple images at once
resize promo image
a function that mocks storage open and throws an ioerror if you try to dcnl open a 128x128px icon
return a uuid for use in the payment flow in debugging it prefixes dcnl the value of the uuid so its easier to spot in logs and such
use this decorator on provider methods to ensure that the account dcnl being passed into the method belongs to that provider
get a provider implementation instance by name or id
wrapper for developer page titles
wrapper function for breadcrumbs prepends developers breadcrumb dcnl items dcnl list of url label to be inserted after addon dcnl addon dcnl adds the addon name to the end of the trail if items are dcnl specified then the addon will be linked dcnl add default dcnl prepends trail back to home when true default is false
requires user to be addon owner or admin dcnl when allow editors is true an editor can view the page dcnl when staff is true users in the staff or support staff groups are dcnl allowed users in the developers group are allowed readonly
set up the queryset and filtering for addon listing for dashboard
ratings can be created via iarc pinging our api dcnl thus we can t display a success message via the standard post req res dcnl to workaround we stored app s rating s modified from edit page dcnl when hitting back to the ratings summary page calc what msg to show dcnl old status app status during ratings edit page dcnl old modified rating modified datetime during ratings edit page
wrapper function for upload manifest so we can keep the dcnl standalone validator separate from the manifest upload stuff
safe wrapper around json dict containing a validation result
blocklists the app by creating a new version file
handle search filters and queries for transactions
same as the rest framework reverse except does not get the base url
custom exception handler for drf which doesn t provide one for http dcnl responses like tastypie does
returns an include statement containing url patterns for the passed api dcnl version adds a namespace if that version does not match dcnl settings api current version to ensure that reversed urls always use the dcnl current version
a resource that is designed to be exposed externally and contains dcnl settings or waffle flags that might be relevant to the client app
twolegged oauth authorization isn t standard and so not dcnl supported by current versions of oauthlib the implementation dcnl here is sufficient for simple developer tools and testing real dcnl usage of oauth will always require directing the user to the dcnl authorization page so that a resourceowner token can be dcnl generated
get a hash identifying an user dcnl it s a hash of session key ip and user agent
create a new record in the database with the given values dcnl param key dcnl the type of stats you re sending e g app install dcnl param request dcnl the request associated with this call it will be used to define who dcnl the user is dcnl para data dcnl the data you want to store you can pass the data to this function as dcnl named arguments
helper function for building fireplace urls path is the url route dcnl and name if specified is the name given to the route
serves the frontend singlepage apps
a page to mimic commonplace s fxaauthorize page to handle login
if we are hitting the fireplace detail page get the app for open graph dcnl tags
will remove all validation results used when the validator is dcnl upgraded and results may no longer be relevant
get the actual file path of fileorpath if it s a fileupload object
get a filelike object whether given a fileupload object or an dcnl uploadedfile
extracts the zip file
copies from the source to the destination removing the destination dcnl if it exists and is a directory
pkg is a filepath or a django core files uploadedfile dcnl or files models fileupload
returns an md5 hash for a filename
on delete of the file object from the database unlink the file from dcnl the file system
uses nfd to normalize unicode strings
this is to serve files off of st a m o not standard a m o for this we dcnl use token based authentication
adds a feature profile on the request object if one is present and the dcnl dev parameter is either firefoxos or android dcnl does nothing if one was already set
updates the prices and price currency objects based on the tiers dcnl tiers should be a list containing a dictionary of currency value pairs dcnl the value of us is required so that we can look up the price tier if the dcnl price tier for us isn t found we skip whole tier if the currency isn t dcnl found but the tier is we create the currency dcnl this is intended to be called via a migration or other command
returns a list of the default providers from the settings as the dcnl appropriate constants
ensure that when pricecurrencies are updated all the apps that use them dcnl are reindexed into es so that the region information will be correct
when the contribution table is updated with the data from paypal dcnl update the addon purchase table will figure out if we need to add to or dcnl delete from the addonpurchase table
sends an email to the purchaser of the app
return json dict of status complete|incomplete dcnl the status of the payment is only complete when it exists by uuid dcnl was purchased by the logged in user and has been marked paid by the dcnl jwt postback after that the ui is free to call app purchase record dcnl to generate a receipt
verify signature and set contribution to paid
verify signature from and create a refund contribution tied dcnl to the original transaction
check that the webapp can become premium
check if it can be purchased returns false if not premium dcnl must be called after the app view decorator
if the addon is premium require a purchase dcnl must be called after app view decorator
handles empty and invalid values for sort and sort order dcnl created by ascending is the default ordering
handles empty and invalid values for sort and sort order dcnl created by ascending is the default ordering
generate table header sort links dcnl pretty name name displayed on table header dcnl sort field name of the sort type get parameter for the column dcnl get params additional get params to include in the sort link dcnl sort the current sort type dcnl order the current sort order
wrapper function for breadcrumbs prepends editor tools dcnl breadcrumbs dcnl queue dcnl explicit queue type to set dcnl items dcnl list of url label to be inserted after addon
returns tuple of tab navigation for the queue pages dcnl each tuple contains three elements url tab code tab text
returns tuple of tab navigation for the log pages dcnl each tuple contains three elements named url tab code tab text
get table header sort links dcnl pretty name name displayed on table header dcnl sort field name of get parameter referenced to in views
returns the rolling average from the past 30 days of the time taken for a dcnl pending app to become public
returns a datetime given an elasticsearch date datetime field
requires the user to be logged in as a reviewer or admin or allows dcnl someone with rule reviewertools view for get requests dcnl reviewer is someone who is in one of the groups with the following dcnl permissions dcnl apps review dcnl moderator true extends this to users in groups who have the permssion dcnl apps moderatereview
redirect to apps home page if app reviewer
returns unreviewed apps progress dcnl return the number of apps still unreviewed for a given period of time and dcnl the percentage
queue for reviewing app reviews
queue for reviewing abuse reports for apps
queue for reviewing abuse reports for websites
queue a translation that needs to be saved for a particular object to dcnl generate the key call make key
removes all translations in the queue
returns a key for this object
for a given key save all the translations the key is used to ensure that dcnl we only save the translations for the given object and not all of them dcnl once saved they will be deleted
return as many characters as possible without going over the limit dcnl return the truncated text and the characters left before the limit if any
truncate the text of an html5lib tree
find the length of the text content excluding markup
return a slice of html < length chars dcnl killwords and end are currently ignored dcnl only use for knownsafe html
for forms compares initial data against cleaned data for transfields dcnl returns true if data is the same returns false if data is different dcnl arguments dcnl field name of the form field asis dcnl initial data in the form of description enus x dcnl description enbr y dcnl data cleaned data in the form of description init dcnl enus x dcnl enbr y
like django s to language but en us or enus comes out as enus
pass in a language u enus get back a locale object courtesy of dcnl babel use this to figure out currencies bidi names etc
activate the settings lang or lang provided while in context
return a locale we support or none
this will clean up newlines so that nl2br can properly be called on the dcnl cleaned text
switch between translation and purified linkified translations
connect signals so the translation gets saved during obj save
use this signal on a model to iterate through all the translations added dcnl to the hold queue and save them all hook this up to the pre save signal dcnl on the model
test html attributes for languages different than the site language
test for nastinessremoval in the transfield s locale
locale html must still work if field is none
truncating should not introduce xss issues
put all translations into a translations dict
order the queryset by the translated field honoring the current and dcnl fallback locales returns a new queryset dcnl the model being sorted needs a get fallback classmethod that describes dcnl the fallback locale get fallback can return a string or a field
html attributes for languages different than the site language
wrapper for jinja s truncate that checks if the object has a dcnl truncate attribute first dcnl altering the jinja2 default of killwords false because of dcnl https bugzilla mozilla org show bug cgi id 624642 which could occur dcnl elsewhere
generates the locale menu for zamboni l10n
get obj s default locale
blocked tags are not allowed dcnl restricted tags can only be edited by reviewers and curators
fetch tags from objs in one query and then attach them to a property on dcnl each instance dcnl assumes every instance in objs uses the same model
admin or someone with admintools view required dcnl if reviewers true revieweradmintools view is allowed also
takes a bunch of addon user pairs and sets the denormalized fields for dcnl all reviews matching that pair
does email for yesterday s ratings right after the day has passed dcnl sends an email containing all reviews for that day for certain app
return whether or not the request user can delete reviews dcnl people who can delete reviews dcnl the original review author dcnl reviewers but only if they aren t listed as an author of the addon dcnl users in a group with users edit privileges dcnl users in a group with apps moderatereview privileges
returns the name of the current carrier or none for the dcnl request lifecycle dcnl example telefonica
returns the carrier id for the request lifecycle
sets the name of the carrier for the current request lifecycle
returns a region class definition given a slug id or class definition
remove accents from input
get the region for the current request lifecycle
set the region for the current request lifecycle
returns popularity value for the given obj to use in elasticsearch dcnl if no region uses global value dcnl if region and region is not mature uses global value dcnl otherwise uses regional popularity value
returns trending value for the given obj to use in elasticsearch dcnl if no region uses global value dcnl if region and region is not mature uses global value dcnl otherwise uses regional popularity value
returns the boost used in elasticsearch for this app dcnl the boost is based on a few factors the most important is number of dcnl installs we use log10 so the boost doesn t completely overshadow any dcnl other boosting we do at query time
returns a datetime given an elasticsearch date datetime field
given a list of ids and an indexer index into es dcnl if an reindexation is currently occurring index on both the old and new
return a dict of monolith based statistics queries dcnl the dict is of the form dcnl <metric name count <callable dimensions <dimensions dcnl where dimensions is an optional dict of dimensions we expect to filter on dcnl via monolith dcnl if a date is specified and applies to the job it will be used otherwise dcnl the date will default to today
update monolith statistics
migrate deprecated background color hex to color name
generate random string
downloads a website icon from the location passed to the task dcnl returns false if icon was not able to be retrieved
downloads a promo image from the location passed to the task dcnl returns false if promo image was not able to be retrieved
generate random string for websites
regions that have ratings bodies
regions without ratings bodies and fallback to the generic rating body
return a map of region slugs to ratings body labels for use in dcnl serializers and to send to fireplace dcnl e g us esrb mx esrb es pegi br classind
get the region list and sort by name dcnl requires a function due to localisation
get the region choices and sort by name dcnl requires a function due to localisation
maps activitylog action ids to commbadge note types
list of all ratings with waffled bodies
create a list of tuples choices after we know the locale since this dcnl attempts to concatenate two lazy translations in constants file
converts ratings body s or rating s iarc name to a sluglike label dcnl e g usk to usk
returns a rating with translated fields attached and with fields that are dcnl easily created dynamically
returns a rating body with translated fields attached
prepends root icon path to path
take an extension pk and extract 128x128 icon from its zip file build dcnl resized png copies of it at the dimensions we use optimize those and store dcnl them in our public storage dcnl when done icon hash property should be set on the extension
reset the locale field for all translations on existing extensions this dcnl is done to fix bug 1215094 some translations were created with the wrong dcnl language the one from the request instead of the one from the dcnl default language field
update extension status as well as fields for which the manifest is the dcnl source of truth when an extensionversion is made public or was public and dcnl is deleted
download the signed archive for a given public extension version
download an archive for a given extension version signed onthefly dcnl with reviewers certificate dcnl only reviewers can access this
download the unsigned archive for a given extension version dcnl only reviewers and developers can do this
delete a tuple from a list of tuples based on its first item
passed a string returns a twotuple indicating the language of that dcnl string and the confidence on a 01 0 scale dcnl if the confidence is below 0 7 or below 0 9 in a string of 3 words or dcnl less will return none
passed a string will return a dict mapping language string suitable to dcnl be assigned to the value of a translatedfield if the language can not be dcnl determined with confidence will assume english
wraps the function with a decorator that bounces to the right step
decorator that checks if the user has read the dev agreement redirecting dcnl if not
determine which step to redirect user to
this is a fake terms view that we overlay the login dcnl we link here from the developer hub landing page
generate the file names in a stored directory tree by walking the tree dcnl topdown dcnl for each directory in the tree rooted at the directory top including top dcnl itself it yields a 3tuple dirpath dirnames filenames dcnl this is intended for use with an implementation of the django storage api dcnl you can specify something other than the private storage instance with dcnl the storage keyword argument
copy a path src path from a storage src storage to a path dst path dcnl on a different storage dst storage dcnl defaults to copying from and to private storage
move a path src path from a storage src storage to a path dst path dcnl on a different storage dst storage by copying and then deleting the dcnl source dcnl defaults to moving from and to private storage
e g mkt log mkt log create addon dcnl mkt log mkt log add file to version file version
sets modified on one object at a time
a wrapper around django core mail emailmessage dcnl adds blocked emails checking and error logging
sends mail using a jinja template with autoescaping turned off dcnl jinja is especially useful for sending email since it has whitespace dcnl control
sends html mail using a jinja template with autoescaping turned off
try to import helpers py from each app in installed apps
date time converted to seconds since epoch
given a sequence we sort it and group it by a key dcnl key should be a string used with attrgetter or a function
get a paginator abstracting some common paging actions dcnl if you pass count that value will be used instead of calling dcnl count on the queryset this can be good if the queryset would dcnl produce an expensive count query
yield successive nsized chunks from seq dcnl for group in chunked range 8 3 dcnl print group dcnl 0 1 2 dcnl 3 4 5 dcnl 6 7
a unicodesafe urlencoder
raise an error if the string has any punctuation characters dcnl regexes don t work here because they won t check alnums in the right dcnl locale
resizes and image from src to dst returns width and height
returns a key with namespace value appended if increment is true the dcnl namespace will be incremented effectively invalidating the cache dcnl memcache doesn t have namespaces but we can simulate them by storing a dcnl key s namespace value invalidating the namespace simply requires dcnl editing that key your application will no longer request the old keys dcnl and they will eventually fall off the end of the lru and be reclaimed
returns a string you can pass to path path safely
simply wraps the cef log function so we don t need to pass in the config dcnl dictionary every time see bug 707060 env can be either a request dcnl object or just the request meta dictionary
escape html in json value including nested items
strip the bom byte order mark from byte string data dcnl returns a new byte string
guess the encoding of a string and decode it
remove a local temp directory dcnl this is just a wrapper around shutil rmtree use it to indicate you are dcnl certain that your executing code is operating on a local temp dir not a dcnl directory managed by the django storage api
returns indexyyyymmddhhmmss with the current time
returns a datetime dcnl if created is now it returns datetime datetime now if created dcnl is set use that otherwise generate a random datetime in the year 2011
create an app dcnl complete fills out app details + creates content ratings dcnl rated creates content ratings
returns either the icon url for a given obj size base url format dcnl is a string that will be used for url formatting if we are not using a dcnl remote storage see addon icon url for an example dcnl if no icon type if set on the obj then the url for the dcnl appropriate default icon for the given size will be returned dcnl obj needs to implement icon type and icon hash properties for this dcnl function to work dcnl note does not check size so it can return 404 urls if you specify an dcnl invalid size
returns either the promo img url for a given obj size dcnl base url format is a string that will be used for url formatting see dcnl webapp promo img url for an example dcnl if no promo img type if set on the obj then the url for the dcnl appropriate default icon for the given size will be returned dcnl obj needs to implement promo img hash properties for this function to dcnl work
build up a formsethappy post dcnl args is a sequence of forms going into the formset dcnl prefix and initial count can be set in kw
gather initial data from the form into a dict
useful for comparing an expected list of links against pyquery dcnl elements expected format of links is a list of tuples like so dcnl home dcnl extensions reverse browse extensions dcnl if you d like to check if a particular item in the list is selected dcnl pass as selected the title of the link dcnl links are verified by default
assert that the validation json does not contain a traceback dcnl note that this does not test whether the addon passed dcnl validation or not
returns a datetime dcnl if created is now it returns datetime datetime now if created dcnl is set use that otherwise generate a random datetime in the year 2011
creates a request factory logged in with the user
if not provided email will be factoryuser<number mozilla com dcnl if email has no it will be corrected to email mozilla com
we load gettext catalogs in this order dcnl django locale django po dcnl locale django po dcnl if django doesn t have a locale it returns the enus catalog as a dcnl fallback but then we take that catalog and merge in our messages po dcnl that s no good because we just mixed some other locale into enus dcnl this test will be invalid once django gets an mn locale
given a specific set of primary keys assure that we return addons dcnl in that order
we want none to show up as we do this in jinja config
turns a python object into a response
normal responses get passed through
json view error returns 400 responses
within this context all queries go to the master
given a query set and a list of primary keys return a set of objects from dcnl the query set in that exact order
store global marketplacewide info used in the header
wrapper function for breadcrumbs dcnl items dcnl list of url label to be inserted after addon dcnl product dcnl adds the app addon name to the end of the trail if items are dcnl specified then the app addon will be linked dcnl add default dcnl prepends trail back to home when true default is true
gets the path to a localizable document in the current language with dcnl fallback to enus
takes a url and prepends the site url
helper for django s reverse in templates
get a media url link with a cache buster querystring
get a static url link with a cache buster querystring
this overrides jingo helpers f to convert input to unicode if needed dcnl this is needed because of dcnl https github com jbalogh jingo pull 54 issuecomment36728948
strips control characters from a string
date time format according to iso 8601
like django s login required but with to instead of next dcnl if redirect false then we return 401 instead of redirecting to the dcnl login page that s nice for ajax views
pairs of app action if any permission passes call the function dcnl otherwise raise 403
return a response as json if you are just wrapping a view dcnl then use the json view decorator
will update the modified timestamp on the provided objects when the wrapped dcnl function exits sucessfully returns a truthy value if the function dcnl returns a dict it will also use that dict as additional keyword arguments dcnl to update on the provided objects dcnl looks up objects defined in the set modified on kwarg
allow other sites to access this resource see dcnl https developer mozilla org en http access control
sets the user to be the task user then unsets it
serve mini manifest minifest for yulelog s packaged zip
serve mini manifest minifest for yogafire s packaged zip
generate a robots txt
accept csp reports and log them
turn the query string into a unicode and asciisafe string dcnl we need unicode so it can be combined with a reversed url but it has to be dcnl ascii to go in a location header iri to uri seems like a good compromise
get transaction details from solitude api
shows the app activity age for single app
shows the purchase page for another user
shows the user activity page for another user
get a list of dicts describing the payment portals for this app or user dcnl either app or user is required
update supported locales for an individual app set latest true to use the dcnl latest current version instead of the most recent public version
inherit nomination date for new packaged app versions
on delete of the version object call the file delete and signals
parse emails and save notes
creates a note on an obj version s thread dcnl creates a thread if a thread doesn t already exist dcnl cc s app s mozilla contacts to autojoin thread dcnl obj app or extension dcnl version obj version dcnl author userprofile for the note s author dcnl body string text for note comment dcnl note type integer for note type mkt constant defaults to 0 no action dcnl e g comm approval comm rejection comm no action dcnl perms object of groups to grant permission to will set flags on thread dcnl e g developer false staff true dcnl attachments formset of attachment files
stuff to do after creating note also used in comm api s post save
create attachments from commattachmentformset onto note
saves an attachment and returns the filename
check acls
crossreference acls and note thread permissions
it s named app for historical reasons but it obj can be either a dcnl webapp or extension dcnl check if user has any applevel acls dcnl mozilla contact admin review senior reviewer developer
check if the user has read write permissions on the given thread dcnl developers of the addon used in the thread users in the cc list dcnl and users who post to the thread are allowed to access the object dcnl moreover other object permissions are also checked against the acls dcnl of the user
check if the user has read write permissions on the given note dcnl developers of the addon used in the note users in the cc list dcnl and users who post to the thread are allowed to access the object dcnl moreover other object permissions are also checked against the acls dcnl of the user
email utility used globally by the communication dashboard to send emails dcnl given a note its actions and permissions recipients are determined and dcnl emails are sent to appropriate people
determine email recipients mainly based on communicationthreadcc dcnl returns user id user email tuples
user id user email user email token
given a list of tuple of user id user email email bunch of people dcnl note commbadge note the note type determines which email to use dcnl template override which template we use
get context data for comm emails specifically for review action emails
returns the mini manifest for a langpack
returns a users uuid suitable for use in the receipt by looking up dcnl the purchase table otherwise it just returns none dcnl params app the app record dcnl params user the userprofile record
returns a signed receipt if the seperate signing server is present then dcnl it will use that otherwise just uses jwt dcnl params receipt the receipt to be signed
creates receipt data for use in payments dcnl params app the app record dcnl params user the userprofile record dcnl params uuid a uuid placed in the user field for this purchase dcnl params flavour none developer inapp or reviewer the flavour dcnl of receipt dcnl param contrib the contribution object for the purchase
creates a receipt for an inapp purchase dcnl params contrib the contribution object for the purchase
reissues and existing receipt by updating the timestamps and resigning dcnl the receipt this requires a well formatted receipt but does not verify dcnl the receipt contents dcnl params receipt an existing receipt
return a key for using with encode
reissues an existing receipt provided from the client will only do dcnl so if the receipt is a full receipt and expired
this will match rules found in group
determines if the request user has permission to do a certain action dcnl admin is true if the user has any of dcnl admin admin s whatever as rules
similar to action allowed but takes user instead of request
a convenience function check if request user has permissions dcnl for the object
check request user s permissions for the addon dcnl if user is an admin they can do anything dcnl if the app is disabled only admins have permission dcnl if they re an app owner they can do anything dcnl dev true checks that the user has an owner or developer role dcnl viewer true checks that the user has an owner developer or viewer role dcnl support true checks that the user has a support role
developer hub landing page
landing page for support
landing page for partners
landing page for installation
publish marketplace badges
returns the mini manifest for packaged apps dcnl if not a packaged app returns a 404
a hack way to find the local ip without using any python libraries
this sets up everything needed before indexing dcnl flags the database dcnl creates the new index
perform postindexing tasks dcnl optimize which also does a refresh and a flush by default dcnl update settings to reset number of replicas dcnl point the alias to this new index dcnl unflag the database dcnl remove the old index dcnl output the current alias configuration
index the objects dcnl index name of the index dcnl note ignore result false is required for the chord to work and trigger dcnl the callback
chunk the items to index
validate that the modules that have been set up correctly
validate that if not in debug mode key settings have been changed
return the relevant url from settings rather than rely on dcnl a complicated layer of settings to do their work this just does dcnl it at runtime this allows media url and static url to be dcnl changed in a local settings file without having to override all the dcnl urls dcnl if the url starts with https or http then no changes are made
after settings including debug has loaded see if we need to update csp
you have to explicitly call this to configure logging
records the given action by sending it to the metrics servers dcnl currently this is storing the data internally in the monolith temporary dcnl table dcnl param action the action related to this request dcnl param request the request that triggered this call dcnl param data some optional additional data about this call
try and resize a video and cope if it fails
an error occurred in processing the video deal with that approp
given a preview object and a file somewhere encode into the full dcnl preview size and generate a thumbnail
find a suitable lib
return a true random ascii string containing byte length of randomness dcnl the resulting key is suitable for cryptogrpahy dcnl the key will be hex encoded which means it will be twice as long dcnl as byte length i e 40 random bytes yields an 80 byte string dcnl byte length must be at least 32
send the receipt to the signing service dcnl this could possibly be made async via celery
decode and verify that the receipt is sound from a crypto point of view dcnl will raise errors if the receipt is not valid returns receipt contents dcnl if it is valid
crack open the receipt without checking that the crypto is valid dcnl returns a list of all the elements of a receipt which by default is dcnl cert receipt
this is a mock for using in tests where we really don t want to be dcnl actually signing the apps this just copies the file over and returns dcnl the path it doesn t have much error checking
sign a packaged app dcnl if local is true we never copy the signed package to remote storage
generate a manifest and signature and send signature to signing server to dcnl be signed
returns the proper api endpoint depending whether we are signing for dcnl reviewer or for public consumption
return true if any of the files have changed
run command if any file in files changes
you have to call this to explicity configure logging
cracks the receipt using the private key this will probably change dcnl to using the cert at some point especially when we get the hsm
enus dashboards macros returns the active macros list
enus dashboards macros links to the english search results
enus dashboards macros links to complete search results
manual search form can search all english pages
manual search form can search all pages
function for producing a config dict for the redirect test dcnl you can use simple bash style brace expansion in the url and location dcnl values if you need the location to change with the url changes you must dcnl use the same number of expansions or the location will be treated as nonexpandable dcnl if you use brace expansion this function will return a list of dicts instead of a dict dcnl you must use the flatten function provided to prepare your test fixture if you do this dcnl if you combine brace expansion with a compiled regular expression pattern you must dcnl escape any backslashes as this is the escape character for brace expansion dcnl example dcnl url test about drivers html https wiki mozilla org firefox drivers dcnl url test projects index de fr hr sq html de fr hr sq firefox products dcnl url test firefox notes re compile r firefox d + releasenotes dcnl url test firefox android beta notes re compile r firefox android d + beta releasenotes dcnl param url the url in question absolute or relative dcnl param location if a redirect either the expected value or a compiled regular expression to match the location header dcnl param status code expected status code from the request dcnl param req headers extra headers to send with the request dcnl param req kwargs extra arguments to pass to requests get dcnl param resp headers dict of headers expected in the response dcnl param query dict of expected query params in location url dcnl param follow redirects boolean indicating whether redirects should be followed dcnl param final status code expected status code after following any redirects dcnl return dict or list of dicts
define a test of a url s response dcnl param url the url in question absolute or relative dcnl param location if a redirect either the expected value or a compiled regular expression to match the location header dcnl param status code expected status code from the request dcnl param req headers extra headers to send with the request dcnl param req kwargs extra arguments to pass to requests get dcnl param resp headers dict of headers expected in the response dcnl param base url base url for the site to test dcnl param query dict of expected query params in location url dcnl param follow redirects boolean indicating whether redirects should be followed dcnl param final status code expected status code after following any redirects
take a list of dicts which may itself contain some lists of dicts and dcnl return a generator that will return just the dicts in sequence dcnl example dcnl list flatten dude jeff walter walter donny dead dcnl dude jeff walter walter donny dead
returns whether the user is allowed to upload attachments dcnl this is determined by a negative permission disallow add attachment dcnl when the user has this permission upload is disallowed unless it s dcnl a superuser or staff
given a timezone naive or aware datetime return the http date dcnl formatted string to be used in http response headers
generate a path to store a file attachment
create a fake file for testing purposes
serve up an attachment s file
redirect an old mindtouch file url to a new kuma file url
create a new attachment object and populate its initial dcnl revision or show a separate form view that allows to fix form submission dcnl errors dcnl redirects back to the document s editing url on success
queue deleting expired session items without breaking poor mysql
call f which has first argument locale if f raises an dcnl exception indicative of a bad localization of a string try again in dcnl settings wiki default language dcnl nb this means f will be called up to two times
renders a template in the currently set locale dcnl falls back to wiki default language in case of error
return iterable of emailmessages with user and watch values substituted dcnl a convenience function for generating emails by repeatedly dcnl rendering a django template with the given context vars plus a dcnl user and watches key for each pair in users and watches dcnl note dcnl this is a localeaware rewrite of the same function in djangotidings dcnl it s kind of goofyi ain t gonna lie dcnl arg subject lazy gettext subject string dcnl arg text template path to text template file dcnl arg html template path to html template file dcnl arg context vars a map which becomes the context passed in to the dcnl template and the subject string dcnl arg from email the from email address dcnl arg default local the local to default to if not user locale dcnl arg extra kwargs additional kwargs to pass into emailmessage constructor dcnl returns generator of emailmessage objects
this function is for use on the base field class
this function is for use on the charfield class
get a paginator abstracting some common paging actions
convert a string to int with fallback for invalid strings or types
generate a new filename for a file upload field delete the previously dcnl uploaded file
decorator that only allows one instance of the same command to run dcnl at a time
a tool like django s get object or 404 but returns none in case dcnl of a doesnotexist exception
parses tag input with multiple word input being activated and dcnl delineated by commas and double quotes quotes take precedence so dcnl they may contain commas dcnl returns a sorted list of unique tag names unless sorted false dcnl ported from jonathan buchanan s djangotagging dcnl <http djangotagging googlecode com
return chunks of n length of iterable dcnl if len iterable n 0 then the last chunk will have dcnl length less than n dcnl example dcnl chunked 1 2 3 4 5 2 dcnl 1 2 3 4 5 dcnl arg iterable the iterable dcnl arg n the chunk length dcnl returns generator of chunks from the iterable
extract a set of unique identifiers from the request dcnl this set will be made up of one of the following combinations depending dcnl on what s available dcnl user none none unique md5 hash dcnl none ip user agent unique md5 hash
add a fragment and or query parameters to a url dcnl new query params will be appended to exising parameters except duplicate dcnl names which will be replaced
returns date time formatted using babel s locale settings uses the dcnl timezone from settings py
return locale from the request falling back to a default if invalid
return the babel locale code given a normal one
render list of pages
helper for django s reverse in templates
turn html entities in a string into unicode
the current year
add the utm tracking parameters to a url
returns date time formatted using babel s locale settings uses the dcnl timezone from settings py
convert a datetime to the utc timezone dcnl assume that naive datetimes without timezone info are in system time
avoid duplicating page param in pagination
rough reimplementation of nose tools eq dcnl note this should be removed as soon as we no longer use it
rough reimplementation of nose tools ok dcnl note this should be removed as soon as we no longer use it
compares received s attributes with expected s kwargs
return a django user or raise fixturemissingerror
adds settings to the context
given an acceptlanguage header return the bestmatching language
set the prefixer for the current thread
set the prefixer for the current thread
get the prefixer for the current thread or none
wraps django s reverse to prepend the correct locale dcnl force locale ordinarily if get url prefixer returns none we return dcnl an unlocalized url which will be localized via redirect when visited dcnl set force locale to true to force the insertion of a default locale dcnl when there is no set prefixer if you are writing a test and simply dcnl wish to avoid localeurlmiddleware s initial 301 when passing in an dcnl unprefixed url it is probably easier to substitute localizingclient dcnl for any uses of django test client client and forgo this kwarg dcnl locale by default reverse prepends the current locale if set or dcnl the default locale if force locale true to override this behavior dcnl and have it prepend a different locale pass in the locale parameter dcnl with the desired locale when passing a locale the force locale is dcnl not used and is implicitly true
given a ranked language list return the bestmatching locale
split the requested path into locale path dcnl locale will be empty if it isn t found
parse a list of tags out into a dict of lists by namespace
decide whether a tag namespace is editable by a user
given a new set of tags and a user build a list of allowed new tags dcnl with changes accepted only for namespaces where editing is allowed for dcnl the user for disallowed namespaces this object s current tag set will dcnl be imposed dcnl no changes are made the new tag list is just returned
helper function that returns a decorator dcnl redirect func if truthy a redirect will occur dcnl deny func if truthy httpresponseforbidden is returned dcnl redirect url func evaluated at view time returns the redirect url dcnl i e where to go if redirect func is truthy dcnl redirect field what field to set in the url defaults to django s dcnl set this to none to exclude it from the url
requires that the user not be logged in
requires that the user is logged in
a replacement for django contrib auth decorators permission required dcnl that doesn t ask authenticated users to log in
decorator for celery task functions if we re in maintenance mode skip dcnl the call to the decorated function otherwise call the decorated function dcnl as usual
decorator for view functions if we re in maintenance mode redirect dcnl to the maintenancemode view on requests using the given http methods dcnl or all http methods if methods is none otherwise call the dcnl wrapped view function as usual
render error pages with jinja2
returns the string of a number formatted for the current language dcnl uses django s translation get language to find the current language from dcnl the request dcnl falls back to the default language if babel does not support the current
turn the query string into a unicode and asciisafe string dcnl we need unicode so it can be combined with a reversed url but it has to be dcnl ascii to go in a location header iri to uri seems like a good compromise
return whether the given id is a valid javascript identifier
return whether the given value can be used as a jsonp callback
returns a link to ban a user
returns a link to admin a user
email address publicly displayable email
turns all unicode into html entities e g 69 e
turn a list of users into a list of links to their profiles
provider login url github next some url
providers media js
set accounts social accounts user dcnl then dcnl accounts twitter a list of connected twitter accounts dcnl accounts twitter 0 the first twitter account dcnl if accounts if there is at least one social account
ban a user
a page to ban a user for the reason of spam and mark the user s revisions dcnl and page creations as spam reverting as many of them as possible
a summary page of actions taken when banning a user and reverting revisions dcnl this method takes all the revisions from the last three days dcnl sends back the list of revisions that were successfully reverted deleted dcnl and submitted to akismet and also a list of dcnl revisions where no action was taken revisions needing follow up
revert document to a specific revision
delete a document
the main user view that only collects a bunch of user dcnl specific data to populate the template context
view and edit user profile
send a recovery email to a user
login via an account recovery link dcnl modeled on django contrib auth views password reset confirm but resets dcnl the password to an unusable password instead of prompting for a new dcnl password
simple task wrapper for the render method of the document model
task to send email for render document progress notification
simple task to render a chunk of documents instead of one per each
a task to acquire the render document lock
a task to release the render document lock
simple task wrapper for rendering stale documents
forcerefresh cached json data after rendering
make an edited notification email for firsttime editors
for the given locale build the appropriate sitemap file and dcnl returns the locale the file names written and timestamp of the dcnl build
a chord callback task that writes a sitemap index file for the dcnl given results of func ~kuma wiki tasks build locale sitemap task
build and save sitemap files for every mdn language and as a dcnl callback save the sitemap index file as well
index a list of documents into the provided index dcnl arg ids iterable of document pks to index dcnl arg index pk the index pk of the index to index into dcnl arg reraise false if you want errors to be swallowed and true dcnl if you want errors to be thrown dcnl note dcnl this indexes all the documents in the chunk in one single bulk dcnl indexing call keep that in mind when you break your indexing dcnl task into chunks
delete a list of documents from the provided index dcnl arg ids iterable of document pks to remove dcnl arg index pk the index pk of the index to remove items from
run tidy over the given revision s content and save it to the dcnl tidy content field if the content is not equal to the current value dcnl arg pk primary key of revision whose content needs tidying
delete old documentspamattempt data which contains pii dcnl also set review to review unavailable
return a dict that fills in the blanks in notification templates
get extra headers for filtering notification emails
create a notification email for firsttime editors
create a notification email for a spam attempt dcnl because the spam may be on document creation the document might be null
gets sections in a document
quick and dirty filter to remove <div class noinclude blocks
given a proposed doc path try to see if there s a legacy mindtouch dcnl locale or even a modern kuma domain in the path if so signal for a dcnl redirect to a more canonical path in any case produce a locale and dcnl slug derived from the given path
return locale path slug if url is a document false otherwise dcnl if url doesn t even point to the document view raise notdocumentview
given a sequence of document revision ids returns a dict matching dcnl those with the number of users google analytics thinks has visited dcnl each revision since start date
given a sequence of revision objects returns a dict matching dcnl their pks with the number of users google analytics thinks has visited dcnl each revision since they were created
format comment for html display with bugzilla links and slug changes dcnl keyword arguments dcnl rev the revision dcnl previous revision the previous revision default none dcnl load previous try loading previous revision if none default true
given the two revisions generate a diff between their tidied dcnl content in the unified diff format
creates an html diff of the passed in content from and content to
provided a selector returns the relevant content from the document
recursively escapes strings in an object dcnl traverses dict list and tuples these are the data structures supported dcnl by the json encoder
returns the json representation of the value
joins a base site url with a url path dcnl if no site provided it gets the current site from site
create a url pointing to kuma dcnl look for a wiki page in the current locale or default to given path
the service isn t disabled with a timeout of 0 dcnl the document isn t empty dcnl the request has not asked for raw source dcnl eg raw dcnl the request has not asked for no macro evaluation dcnl eg nomacros dcnl the request has asked for macro evaluation dcnl eg raw macros
perform a kumascript get request for a document locale and slug
encode env vars as kumascript headers as base64 jsonencoded values
attempt to decode any fireloggerstyle error messages in the response dcnl from kumascript
build the cache keys used for kumascript
get active macros and their source paths dcnl return is a dict with the casesensitive macro name as key and the subpath dcnl on github as the value the full url of the github source is dcnl https github com mdn kumascript tree master macros subpath
get the macros known to elasticsearch with their page counts dcnl return is a dictionary of lowercase macro names to their page counts dcnl this includes things that look like macros such as django templates from dcnl the django learning area and anything wrapped in dcnl keyword arguments dcnl locale filter by this locale default no locale filter
get active macros their source paths and usage on site dcnl return is a dict with the casesensitive macro name as key and a dict as dcnl value with keys dcnl github subpath the subpath on github dcnl count the number of pages the macro is used on dcnl en count the number of english pages the macro is used on dcnl if there is no elasticsearch server or it is misconfigured then the dcnl counts will both be 0
a test user
a second test user
a third test user
an inactive test user
a banned test user
a newlycreated toplevel english document
a revision that created an english document
a revision that edits an english document
translate the root document into french
a further edit to the translated document
a toplevel english document with mixed contributors some are valid dcnl some are banned and some are inactive
mock elasticsearch client dcnl user should override client search return value dcnl based on test fixture from elasticsearch dsl
when kumascript returns macros the sources are populated
when kumascript can t return macros the sources are empty
when kumascript raises an error the sources are empty
macro page count returns macro usage across all locales by default
macro page count enus returns macro usage in the enus locale
when kumascript returns an empty response macro usage is empty
when elasticsearch is unreachable counts are 0
when followon elasticsearch call raises reraise exception
comparing two valid revisions of the same document works
a localized revision can be compared to an english source revision
confirm that the based on value set in the revision created by an edit dcnl or translate form is the current revision of the document as of when the dcnl form was first loaded even if other revisions have been approved in the dcnl meantime
check document page for zonestylerelated features
check the three rows of the test translation dcnl row 1 the latest edit of the translation dcnl row 2 the first translation into french dcnl row 3 the english revision that the first translation was based on
history of english doc works
history for translated documents includes an english revision dcnl this is the revision the first translation was based on
history for trans docs excludes the english revision if no based on dcnl this can happen for old translated docs or ones manually associated with dcnl the parent
history of unknown page returns 404
history of halfcreated document returns 404
anonymous users are forbidden to request all revisions
users are allowed to request all revisions
history will paginate the revisions
history limit more than revisions works removes pagination
history limit nonsense uses the default pagination
return an empty document with enough stuff filled out that it can be dcnl saved
return an empty revision with enough stuff filled out that it can be dcnl saved dcnl revision s is approved false unless you specify otherwise dcnl requires a users fixture if no creator is provided
return a revision that is the translation of a defaultlanguage one
normalize html5 input discarding parts not significant for dcnl equivalence in tests
get or create a group that can edit documents
get or create a user empowered with document editing
test wiki url without client languages
assert that the objects contained by manager are those in list
test the nearest zone property of english and nonenglish documents
silly endcase test of the nearestzone property of a nonenglish document dcnl without a parent
test is zone root
ensure css styles for a zone can be fetched
ensure that the expiry is not constant
test the nearest zone job
make sure we handle the case where we try to get the nearest dcnl zone for a document whose parenttopic has been deleted
tests basic operation ordering caching and handling of banned and dcnl inactive contributors
if not under a content experiment use the original document
if under a content experiment return original document and params
if the original is selected as the content experiment return it
if the variant is selected as the content experiment return it
if the variant is selected as the content experiment return it
if the document for a variant doesn t exist return the original
kumascript reports errors in http headers kuma should display the errors dcnl with appropriate links for both the wiki preview and wiki document dcnl endpoints
comparing two valid revisions of the same document works
a localized revision can be compared to an english source revision
comparing revisions without tidied content displays a wait message
comparing badlyformed revision parameters return 404 not error
if a compare query parameter is missing a 404 is returned
if the revision is for the wrong document a 404 is returned
a mock document that should update
the mock doc should update search index
excluded slugs should not update the search index
do not update the search index if some flags are set
test the notification context for a created english page
test the notification context for an edited english page
test the notification context for a created english page
test that editdocumentevent also notifies for the tree
test event email parameters for creation of an english page
test event email parameters for changing an english page
a first edit email is formatted for a new english page
a first edit email is formatted for an english change
a first edit email is formatted for a first translation
a spam attempt email is formatted for a new english page
a spam attempt email is formatted for an english change
a spam attempt email is formatted for a new translation
a spam attempt email is formatted with partial information
the filter drops iframe src that does not match the pattern
any contents inside an <iframe should be removed
populate document uuid without bumping last modified
clear document uuid
for historic documentspamattempt set to review unavailable
revert review unavailable back to needs review
select a locale to translate the document to
create a new translation of a wiki document dcnl document slug is for the default locale dcnl translation is to the request locale
utility function to do basic slug splitting
utility function to derive the last modified timestamp of a document dcnl mainly for the condition decorator
return a dict with the document data pertinent for the form
view a wiki document revision
create an html fragment preview of the posted wiki syntax
compare two wiki document revisions dcnl the ids are passed as query string parameters to and from
quickly mark a revision as no longer needing a particular type dcnl of review
revert document to a specific revision
delete a document
restore a deleted document
permanently purge a deleted document
extract a code sample from a document and render it as a standalone dcnl html document
a view redirecting to the real file serving view of the attachments app dcnl this exists so the writers can use relative paths to files in the dcnl code samples instead of hard coding he file serving urls dcnl for example on a code sample with the url dcnl https mdn mozillademos org fr docs web css tools outil selecteur couleurs css samples colorpicker tool dcnl this would allow having files referred to in the css as dcnl url files 6067 canvascontrols png
for urls in special namespaces like talk user etc redirect dcnl if possible to the appropriate new url in the appropriate dcnl locale if the locale cannot be correctly determined fall back to dcnl enus
given a request to a mindtouchgenerated url generate a redirect dcnl to the correct corresponding kuma url
return ckeditor config from database
returns the closest title matches for frontend autosuggests
list wiki documents depending on the optionally given tag
returns listing of all tags
lists wiki documents with revisions flagged for review
lists wiki documents with localization tag
lists wiki documents with kumascript errors
lists wiki documents without parent no english source document
lists documents directly under docs
list all the revisions of a given document
create a new wiki page which is a document and a revision
handle when a midair collision is detected upon submission
create a new revision of a wiki document or edit document metadata
get html and rendering errors for a document dcnl return is a tuple dcnl the html dcnl a list of kumascript errors encountered during rendering dcnl true if rendered content was requested but not available dcnl if rendering params use rendered is true then kumascript rendering is dcnl attempted if false prerendered content is returned if any
get parenttitle information for seo purposes
apply needed filtering annotating operations to a document s html
perform some responseheader manipulation that gets used in dcnl several places
if we re falling back to a document in the default locale figure dcnl out why and whether we can redirect to a translation in the dcnl requested locale
attempt to fetch a document at the given locale and slug and dcnl return it or return a fallback reason if we weren t able to
get document and rendering parameters changed by the content experiment dcnl if the page is under a content experiment and the selected variant is dcnl valid the return is the variant document the experiment params dcnl if the page is under a content experiment but the variant is invalid or dcnl not selected the return is original document the experiment params dcnl if the page is not under a content experiment the return is dcnl original document none
retrieves a document and returns its children in a json structure
move a tree of pages
return a document s table of contents as html
return some basic document info in a json blob
this is deprecated and only exists temporarily to serve old dcnl document pages that request zone css via this endpoint
toggle watching a document for edits
toggle watching a tree of documents for edits
when a document doesn t exist but the user can create it return dcnl the creation url to redirect to
when a document has been deleted return a 404 dcnl if the user can restore documents then return a 404 but also include the dcnl template with the form to restore the document
display a raw document
view a wiki document
handle put requests as document write api
creates spam akismet record for revision dcnl return json object with akismet record data dcnl todo create submitting as ham record for revision
decorator for generated content methods dcnl if the backing model field is null or kwarg force fresh is true call the dcnl decorated method to generate and return the content dcnl otherwise just return the value in the backing model field
return a descriptor delegating to an attr of the original document dcnl if self is a translation the descriptor delegates to the attribute dcnl parent attr from the original document otherwise it delegates to the dcnl attribute direct attr from self dcnl use this only on a reference to another object like a manytomany or a dcnl foreignkey using it on a normal field won t work well as it ll preclude dcnl the use of that field in queryset field lookups also modelforms that are dcnl passed instance this obj won t see the inherited value
sadly copied from taggit to work around the issue of not being dcnl able to use the taggeditembase class that has tag field already dcnl defined
interstitial admin view for purging multiple documents
html link to related revisions for admin change list
html link to the current revision for the admin change list
html link to the topical parent document for admin change list
html link to the parent document for admin change list
html link to a list of child documents
html link to a list of sibling documents
public link to the document
combine several field functions into one block of lines
combine the document hierarchy nav links
combine the revision nav links
combine the rendering times into one block
format akismet data as a definition list
decorator to prevent a page from being indexable by robots
decorator to allow cors for get requests
decorator to enable readonly mode
decorator to process document path into locale and slug with dcnl autoredirect if necessary dcnl this function takes generic args and kwargs so it can presume as little dcnl as possible on the view method signature
reset the nearestzone cache for this document and its descendants
reset the url remap list cache for the given document assuming it dcnl even has a zone
landing page news feed
home page
bug 646192 mdn affiliate buttons
serve robots txt that allows or forbids robots dcnl todo after aws move try different strategy whitenoise template
return a url matcher suited for urlpatterns dcnl changes the defaults for locale prefix and prepend locale in the dcnl redirect urls library
return a locale url matcher suited for urlpatterns dcnl this is suited for matching urls that may start with a locale like dcnl enus docs foo bar dcnl if the locale is a valid locale the pattern matches against the remaining dcnl path dcnl locale enus path docs foo bar dcnl however many prefix strings match so watch out for unintended matches dcnl docs foo bar dcnl can be matched as dcnl locale docs path foo bar
return an iterator providing the dates between start and end inclusive
gather spam statistics for a range of dates dcnl keywords arguments dcnl periods a sequence of days identifier name tuples dcnl end date the ending anchor date for the statistics
gather data for recent spam events
the normal macro page is a threecolumn table
the macro page is a onecolumn table when counts are unavailable
dashboard for reviewing revisions
returns partial username matches
returns partial topic matches
dashboard for spam moderators
returns table of active macros and their page counts
load locales data from languages json dcnl languages json is from the productdetails project dcnl https productdetails mozilla org 1 0 languages json
define a css file generated from multiple scss files
define a css file that shares the name with the one input scss
prepare a new index for indexing documents into dcnl arg index pk the index id to create an elasticsearch index of dcnl this also updates the settings to make indexing faster like disabling dcnl refreshes and replicas
finalizes the elasticsearch index dcnl arg index pk the index id to operate on dcnl this performs the following actions dcnl optimize which also does a refresh and a flush by default dcnl update settings to reset number of replicas and refresh interval dcnl sends an email that the indexing is complete
returns search url from referer if it was an mdn search
returns the values of all filter groups intended to pull key value pairs dcnl from requests dcnl e g if topic is a filtergroup slug and given the url dcnl q test topic css topic html dcnl this will return css html dcnl if the given url contains none then no filters should be applied
decorator that logs an error on connection issues dcnl 9 out of 10 doctors say that connection errors are usually because dcnl es urls is set wrong this catches those errors and helps you out dcnl with fixing it
register a model and index for auto indexing
return empty array until we restore internal search system
render an opensearch plugin
a successful response from this endpoint simply proves dcnl that django is up and running it doesn t mean that its dcnl supporting services like mysql memcached celery can dcnl be successfully used from within this service
a successful response from this endpoint goes a step further dcnl and means not only that django is up and running but also that dcnl the database can be successfully used from within this service dcnl the other supporting services are not checked but we may find dcnl that we want need to add them later
generated secret should be saved as a hash and pass a check
generate a random api key dcnl see http jetfar com simpleapikeygenerationinpython
enable a view to accept an auth key via http basic auth dcnl key id expected as username secret as password dcnl on successful auth the request will be set with the authkey and the user dcnl owning the key
a simple user record with only the basic information
a document record with no revisions and no parent topic
a document record with two revisions and without a parent topic
a translation of the root document
if the document already exists shortcircuit downloads
resources are fetched if force true
a child document requires the parent document
if the parent document is available it is not requested
if the rendered document is standard get next resources
if metadata doesn t match url use locale and slug from url
if the metadata has an error so does the document
a zone url requests the zone doc
if the zoned document fails isn t a zone then the doc errors too
the zoned doc is used to normalize the url
if a document is a redirect request the target page
if a document is a redirect to a normal page create a redirect
if a document is a redirect to a zone request the zone root
if a document is a redirect to an errored zone doc is also errored
a zoned document has more data passed to storage save document
if a document is a redirect to zone subpage request the zone root
a zoned subpage has more data passed to storage save document
a localized document will wait for metadata
a localized document will request the english document
an invalid english document path is an error
a localized document will set the english document as parent
a depth 0 will require the children resource
if the children resource is loaded use it
a root document with one tagged revision
a bad revision path is detected at initialization
on the first call multiple items are requested from storage
if prereqs are present then source is done
if only the doc is present then full gather is performed
if stored doc does not agree with stored revision doc then error
on the first call multiple items are requested from storage
a revision will request a document on the second pass
if the document slug is different from the revision doc wins dcnl this appears to be common around page moves
older revisions can be imported without some tags
if the revision html can t be fetched the source is errored
if a based on revision is specified it is required
if a based on revision is specified and available it is used
a session is created once on request
a successful request calls raise for status by default
the call to raise for status can be omitted
requests are retried with back off after a timeout
requests are retried after expected exceptions
request fail after too many timeouts
setup a test scraper that handles fakesource sources
the add source method initializes a source
adding a existing source returns true if options were updated
the scraper will loop through sources until complete
the scraper will complete if a source is errored
a scraper with no sources returns early
the scraper will warn if there is a percent in a source dcnl this indicates a jsonencoded url was not decoded
the scraper will warn if a dependency block is detected dcnl if no progress is made in a loop it implies that a dependency is in dcnl error and further loops will not make any further progress
local storage objects are none when unset return the saved value
new tags are created
existing tags are reused
existing tags with different capitalization are reused
tags are created and attached to the new document
duplicate tags are deduped on document save dcnl this may not be needed now that bug 1293749 is fixed
an existing document gets new scraped tags
an existing document that has been moved is moved locally
an existing document can have a different id than remote doc
can save ca docs project quant a despite integrityerror
a document with a vanity url creates the associated documentzone
a document with a plain zone creates the associated documentzone
a zone child document does not create a documentzone
creating the current revision updates the associated document
creating an older revision does not update the associated document
a current revision with duplicate tags does not create dupes on the doc dcnl historical revisions will have these duplicate tags even though dcnl bug 1293749 is fixed because they are stored as strings
existing tags are reused when saving a current revision
a revision may have no content but include review tags
a banned user creates a selfbanning userban instance
a complex user record with social and other profile data
create mock production data requester for source gather testing dcnl keyword arguments dcnl requester spec requester attributes default request dcnl response spec response attributes default content history dcnl content content of response default dcnl json decoded json of response default not json dcnl status code status code of response default 200 none to error on check dcnl history status code path pairs for redirect history of request dcnl default no redirects dcnl final path final path for request default none
create mock database storage for source gather testing dcnl keyword arguments dcnl spec list of expected storage method calls default dcnl any spec that starts with get is initialized to return none
omitted source parameters are initialized to defaults
source parameters are initialized by name
an invalid parameter name raises an exception
an empty merge does not change the source state
a merge to smaller parameters keeps the current values and state
a merge with the current values keeps the current state
an updating merge updates the values and resets the state
multiple parameters can be updated in one merge call
for the int all parameter type all is a valid and maximum value
for the text parameter type any nonempty change is an update
current options returns empty dict for default options
current options returns the nondefault options as a dict
invalid parameter values raise a valueerror
source decode href turns urlencoded hrefs into unicode strings
the source error exception can be turned into a string
a source that is done can still be gathered
a source that is already in storage loads quickly
a source can raise an error when loading from storage
a source can request other sources as prerequisites
a source may raise an error when loading prerequisites
a source can fail when saving the data
a source with all prereqs can request further sources
detect urlencoded paths and fail at init
detect invalid paths and fail at init
zone root data can be gathered from metadata on the first pass
previously stored zone root data prevents scraping
passing a nonzone url is detected when processing metadata
if the metadata locale doesn t match the url it is an error dcnl this appears to be common on zoned urls with only one translation dcnl and requires reseting the stored json data
all metadata prereqs can be satisfied in the first call
all metadata prereqs can be satisfied in the first call
if the metadata 404s the source is in error
if translations are requested they are extracted from metadata
child resources also get the translations request
child resources also get the revisions request
a document record with a documentzone with style and a redirect
a document record that is below the zone root
test a page without redirects
test a page with nonzone redirects dcnl for example a page might redirect from http to https without dcnl changing the path
the zone css slug is extracted from zone roots
the zone css slug is not extracted from zone children
a missing document results in an error dcnl one cause translations are requested and a recently deleted dcnl translation is in the metadata
a empty specification is ok does nothing
a fixture without dependencies is loaded
a fixture with existing tomany dependencies is loaded
a fixture must define all the natural key items
a fixture with a relation as a key can be loaded
manytomany relations of existing instances are updated
an unspecified relation is detected raises exception
an unspecified relation is detected raises exception
a user password is hashed
if document current revision is set we re done
if the document history is unavailable wait
if a revision was requested but not scraped wait
if a revision was included in history but not scraped request it
if we ve scraped all the known revisions request more history
if a doc has no current rev scrape all history and fail
a documentbasesource with a toplevel slug has no parent
a documentbasesource with a childlevel slug has a parent
a documentbasesource with a zone slug starts unnormalized
initializing with a urlencoded path raises an exception
if a document has no subpages none are extracted
document subpages are returned as new resources to fetch
depth all is propagated to child pages
depth n is propagated as depth n1 to child pages
depth 1 is not propagated to child pages
the default is requests if revision count is unspecified
if a revision count is specified that many are requested
if a revision count is more than the revisions take note
if the history endpoint errors scraping stops
if previously called populate history from storage
a translated document may include the english source doc
do typical mdn update
helper to print all system commands in debug mode
returns integer board ids available on this machine
lock file from integer id
username that has locked the device id empty string if no lock
attempts to lock id returning success as true false
start a process that will free a lock when process pid terminates
finds a free id locks it and returns integer id or 1 if none free dcnl a process is spawned that will free the lock automatically when the dcnl process pid by default the current python process terminates
finds a free id locks it and returns integer id or 1 if none free dcnl lock must be freed manually
attempts to free lock id returning success as true false
this is a decorator which can be used to mark functions dcnl as deprecated it will result in a warning being emmitted dcnl when the function is used
return a cudamatexception object based on the error code err code
creates and returns a new cudamatrix with the given shape
sum the matrix along the given dimension where 0 represents the leading dcnl dimension and 1 represents the nonleading dimension if a target is dcnl not prvided a new vector is created for storing the result
find the dot product between m1 and m2
compute the vector dot product of matrices m1 and m2
apply cos to each element of the matrix mat
apply cos to each element of the matrix mat
apply sin to each element of the matrix mat
apply the logistic sigmoid to each element of the matrix mat
apply the tanh to each element of the matrix mat
apply abs to each element of the matrix mat
apply log 1+exp x to each element of the matrix mat if exact is true use dcnl slow and accurate log and exp
find the natural logarithm of each element of the matrix mat
apply the exponential function to each element of the matrix mat
apply the ceil function to each element of the matrix mat
apply the floor function to each element of the matrix mat
compute the square root of each element of the matrix mat
compute mat log p 1mat log 1p
compute mat log p
compute mat p 0 5 + 1mat p < 0 5
if p is a scalar compute the p th power of each element of the matrix mat dcnl otherwise raise each element of the matrix mat to the power given by the dcnl corresponding element of the matrix p
returns array as a float32 array in fortran order
selects the cuda device with the given id
initialize cublas
shut down cublas
returns integer board ids available on this machine
lock file from integer id
username that has locked the device id empty string if no lock
attempts to lock id returning success as true false
start a process that will free a lock when process pid terminates
finds a free id locks it and returns integer id or 1 if none free dcnl a process is spawned that will free the lock automatically when the dcnl process pid by default the current python process terminates
finds a free id locks it and returns integer id or 1 if none free dcnl lock must be freed manually
attempts to free lock id returning success as true false
images n images img w 2 n chans dcnl filters n filters filter w 2 n chans dcnl targets n images n locs 2 n filters dcnl nummodulesx number of filter locations along an axis n locs dcnl paddingstart set to k for a kpixel border of zeros usually set to 0 dcnl modulestride stride to move the filters by dcnl numimgcolors n chans
hidsums n images n locs 2 n filters dcnl filters n filters filter w 2 n chans dcnl targets n images img w 2 n chans
images n images img w 2 n chans dcnl hidsums n images n locs 2 n filters dcnl targets n filters filter w 2 n chans
images n images img w 2 n chans dcnl filters n filters filter w 2 n chans dcnl targets n images n locs 2 n filters dcnl nummodulesx number of filter locations along an axis n locs dcnl paddingstart set to k for a kpixel border of zeros usually set to 0 dcnl modulestride stride to move the filters by dcnl numimgcolors n chans
hidsums n images n locs 2 n filters dcnl filters n filters filter w 2 n chans dcnl targets n images img w 2 n chans
images n images img w 2 n chans dcnl hidsums n images n locs 2 n filters dcnl targets n filters filter w 2 n chans
images n images img w 2 n chans dcnl numchannels number of filter color channels dcnl subsx width of pooling area dcnl startx pixel where pooling starts dcnl stridex stride dcnl outputsx number of pooling sites
images n images img w 2 n chans dcnl rnd n images img w 2 n chans dcnl numchannels number of filter color channels dcnl subsx width of pooling area dcnl startx pixel where pooling starts dcnl stridex stride dcnl outputsx number of pooling sites
images n images img w 2 n chans dcnl grad n images outputsx 2 n chans cudamat of deltas gradients of loss wrt layer outputs dcnl maxes n images outputsx 2 n chans cudamat of layer outputs dcnl subsx width of pooling area dcnl startx pixel where pooling starts dcnl stridex stride dcnl outputsx number of pooling sites
accumulate the derivative w r t the outputs of this layer dcnl each layer needs to compute derivatives w r t its outputs these outputs may dcnl have been connected to lots of other nodes through outgoing edges dcnl this method adds up the derivatives contributed by each outgoing edge dcnl it gets derivatives w r t the inputs at the other end of an outgoing edge dcnl args dcnl edge the edge which is sending the derivative dcnl deriv the derivative w r t the inputs at the other end of this edge
get the gradient for the weights in this edge dcnl args dcnl grad output the gradient for the weights in this edge
converts humanreadable numbers to bytes dcnl e g converts 2 1m to 2 1 1024 1024 bytes
returns a list of data handles dcnl this method is the toplevel routine for creating data handlers it takes a dcnl description of which datasets to load and returns data handlers to access dcnl them dcnl args dcnl op operation protocol buffer dcnl names list of list of data names the top level list corresponds to train dcnl validation and test sets the lowerlevel lists correspond to data dcnl modalities dcnl hyp list list of hyperparameters for each modality dcnl verbose if true will print out details of what is happening dcnl returns dcnl a list of datahandler objects
converts a serialized parameter string into a numpy array
converts a numpy array into a serialized parameter string
writes out the model to disk
some cases have text and some don t this method separates them out
w num filters x sizex 2 num colors
w2 np zeros w shape dcnl d w shape1 3 dcnl print w shape dcnl for i in range w shape0 dcnl for j in range w shape1 3 dcnl w2i j wi 3 j dcnl w2i j + d wi 3 j+1 dcnl w2i j + 2 d wi 3 j+2 dcnl w w2
this is a decorator which can be used to mark functions dcnl as deprecated it will result in a warning being emmitted dcnl when the function is used
return a eigenmatexception object based on the error code err code
creates and returns a new eigenmatrix with the given shape
sum the matrix along the given dimension where 0 represents the leading dcnl dimension and 1 represents the nonleading dimension if a target is dcnl not prvided a new vector is created for storing the result
find the dot product between m1 and m2
compute the vector dot product of matrices m1 and m2
apply cos to each element of the matrix mat
apply sin to each element of the matrix mat
apply softmax activation to each column of mat
apply the logistic sigmoid to each element of the matrix mat
apply the tanh to each element of the matrix mat
apply abs to each element of the matrix mat
apply log 1+exp x to each element of the matrix mat if exact is true use dcnl slow and accurate log and exp
find the natural logarithm of each element of the matrix mat
apply the exponential function to each element of the matrix mat
apply the ceil function to each element of the matrix mat
apply the floor function to each element of the matrix mat
compute the square root of each element of the matrix mat
compute mat log p 1mat log 1p
compute mat log p
compute mat p 0 5 + 1mat p < 0 5
if p is a scalar compute the p th power of each element of the matrix mat dcnl otherwise raise each element of the matrix mat to the power given by the dcnl corresponding element of the matrix p
returns array as a float32 array in fortran order
selects the cuda device with the given id
initialize cublas
shut down cublas
copy each line up to our special flag line and return dcnl raises valueerror if the flag isn t found dcnl return list the lines we re copying
creates the basic auth value to be used in an authorization header dcnl this is mostly copied from the requests library dcnl param str username a plotly username dcnl param str password the password for the given plotly username dcnl returns str an authorization header for use in a request header
retrieve a general file from plotly dcnl param str fid the username idlocal identifier e g foo 88 dcnl param str share key the secret key granting read access if private dcnl returns requests response returns response directly from requests
update a general file from plotly dcnl param str fid the username idlocal identifier e g foo 88 dcnl param dict body a mapping of body param names to values dcnl returns requests response returns response directly from requests
softdelete a general file from plotly can be undone with restore dcnl param str fid the username idlocal identifier e g foo 88 dcnl returns requests response returns response directly from requests
restore a trashed general file from plotly see trash dcnl param str fid the username idlocal identifier e g foo 88 dcnl returns requests response returns response directly from requests
permanently delete a trashed general file from plotly see trash dcnl param str fid the username idlocal identifier e g foo 88 dcnl returns requests response returns response directly from requests
retrieve a general file from plotly without needing a fid dcnl param str path the delimited path specifying the file location dcnl param int parent parent id an integer which the path is relative to dcnl param str user the username to target files for defaults to requestor dcnl param bool exists if true don t return the full file just a flag dcnl returns requests response returns response directly from requests
create a dash app item
retrieve a dash app from plotly
completely update the writable
create a new folder dcnl param dict body a mapping of body param names to values dcnl returns requests response returns response directly from requests
retrieve a folder from plotly dcnl param str fid the username idlocal identifier e g foo 88 dcnl param str share key the secret key granting read access if private dcnl returns requests response returns response directly from requests
update a folder from plotly dcnl param str fid the username idlocal identifier e g foo 88 dcnl param dict body a mapping of body param names to values dcnl returns requests response returns response directly from requests
softdelete a folder from plotly can be undone with restore dcnl this action is recursively done on files inside the folder dcnl param str fid the username idlocal identifier e g foo 88 dcnl returns requests response returns response directly from requests
restore a trashed folder from plotly see trash dcnl this action is recursively done on files inside the folder dcnl param str fid the username idlocal identifier e g foo 88 dcnl returns requests response returns response directly from requests
permanently delete a trashed folder file from plotly see trash dcnl this action is recursively done on files inside the folder dcnl param str fid the username idlocal identifier e g foo 88 dcnl returns requests response returns response directly from requests
retrieve a folder file from plotly without needing a fid dcnl param str path the delimited path specifying the file location dcnl param int parent parent id an integer which the path is relative to dcnl param str user the username to target files for defaults to requestor dcnl param bool exists if true don t return the full file just a flag dcnl returns requests response returns response directly from requests
helper to create a params dict skipping undefined entries dcnl returns dict a params dict to pass to request
create a url for a request on a v2 resource dcnl param str resource e g files plots grids etc dcnl param str id the unique identifier for the resource dcnl param str route detail list route e g restore lookup etc dcnl return str the url
raise a helpful plotlyrequesterror for failed requests dcnl param requests response response a response object from an api request dcnl raises plotlyrequesterror if the request failed for any reason dcnl returns none
using session credentials config get headers for a v2 api request dcnl users may have their own proxy layer and so we free up the authorization dcnl header for this purpose instead adding the user authorization in a new dcnl plotlyauthorization header see pull 239 dcnl returns dict headers to add to a requests request call
central place to make any api v2 api request dcnl param str method the request method get put delete dcnl param str url the full api url to make the request to dcnl param kwargs these are passed along but possibly mutated to requests dcnl return requests response the response directly from requests
retrieve the most uptodate copy of the plotschema wrt the given hash dcnl param str sha1 the lastknown hash of the plotschema or dcnl returns requests response returns response directly from requests
create a dashboard
returns the list of all users dashboards
retrieve a dashboard from plotly
completely update the writable
retrieve the dashboard schema
generate an image which does not get saved on plotly dcnl param dict body a mapping of body param names to values dcnl returns requests response returns response directly from requests
create a new grid dcnl param dict body a mapping of body param names to values dcnl returns requests response returns response directly from requests
retrieve a grid from plotly dcnl param str fid the username idlocal identifier e g foo 88 dcnl param str share key the secret key granting read access if private dcnl returns requests response returns response directly from requests
retrieve full content for the grid normal retrieve only yields preview dcnl param str fid the username idlocal identifier e g foo 88 dcnl param str share key the secret key granting read access if private dcnl returns requests response returns response directly from requests
update a grid from plotly dcnl param str fid the username idlocal identifier e g foo 88 dcnl param dict body a mapping of body param names to values dcnl returns requests response returns response directly from requests
softdelete a grid from plotly can be undone with restore dcnl param str fid the username idlocal identifier e g foo 88 dcnl returns requests response returns response directly from requests
restore a trashed grid from plotly see trash dcnl param str fid the username idlocal identifier e g foo 88 dcnl returns requests response returns response directly from requests
permanently delete a trashed grid file from plotly see trash dcnl param str fid the username idlocal identifier e g foo 88 dcnl returns requests response returns response directly from requests
retrieve a grid file from plotly without needing a fid dcnl param str path the delimited path specifying the file location dcnl param int parent parent id an integer which the path is relative to dcnl param str user the username to target files for defaults to requestor dcnl param bool exists if true don t return the full file just a flag dcnl returns requests response returns response directly from requests
create a new column or columns inside a grid dcnl param str fid the username idlocal identifier e g foo 88 dcnl param dict body a mapping of body param names to values dcnl returns requests response returns response directly from requests
retrieve a column or columns from a grid dcnl param str fid the username idlocal identifier e g foo 88 dcnl param str uid a concatenated string of column uids in the grid dcnl returns requests response returns response directly from requests
update a column or columns from a grid dcnl param str fid the username idlocal identifier e g foo 88 dcnl param str uid a concatenated string of column uids in the grid dcnl param dict body a mapping of body param names to values dcnl returns requests response returns response directly from requests
permanently delete a column or columns from a grid dcnl param str fid the username idlocal identifier e g foo 88 dcnl param str uid a concatenated string of column uids in the grid dcnl returns requests response returns response directly from requests
append rows to a grid dcnl param str fid the username idlocal identifier e g foo 88 dcnl param dict body a mapping of body param names to values dcnl returns requests response returns response directly from requests
create a new plot dcnl param dict body a mapping of body param names to values dcnl returns requests response returns response directly from requests
retrieve a plot from plotly dcnl param str fid the username idlocal identifier e g foo 88 dcnl param str share key the secret key granting read access if private dcnl returns requests response returns response directly from requests
retrieve the figure for a plotly plot file dcnl param str fid the username idlocal identifier e g foo 88 dcnl param str share key the secret key granting read access if private dcnl param bool inline data if true include the data arrays with the plot dcnl param str map data currently only accepts unreadable to return a dcnl mapping of gridfid grid this is useful if you dcnl want to maintain structure between the plot and dcnl referenced grids when you have read access to the dcnl plot but you don t have read access to the dcnl underlying grids dcnl returns requests response returns response directly from requests
update a plot from plotly dcnl param str fid the username idlocal identifier e g foo 88 dcnl param dict body a mapping of body param names to values dcnl returns requests response returns response directly from requests
softdelete a plot from plotly can be undone with restore dcnl param str fid the username idlocal identifier e g foo 88 dcnl returns requests response returns response directly from requests
restore a trashed plot from plotly see trash dcnl param str fid the username idlocal identifier e g foo 88 dcnl returns requests response returns response directly from requests
permanently delete a trashed plot file from plotly see trash dcnl param str fid the username idlocal identifier e g foo 88 dcnl returns requests response returns response directly from requests
retrieve a plot file from plotly without needing a fid dcnl param str path the delimited path specifying the file location dcnl param int parent parent id an integer which the path is relative to dcnl param str user the username to target files for defaults to requestor dcnl param bool exists if true don t return the full file just a flag dcnl returns requests response returns response directly from requests
retrieve information on the loggedin user from plotly dcnl returns requests response returns response directly from requests
raise a helpful plotlyrequesterror for failed requests dcnl param requests response response a response object from an api request dcnl raises plotlyrequesterror if the request failed for any reason dcnl returns none
using session credentials config get headers for a v1 api request dcnl users may have their own proxy layer and so we free up the authorization dcnl header for this purpose instead adding the user authorization in a new dcnl plotlyauthorization header see pull 239 dcnl returns dict headers to add to a requests request call
central place to make any v1 api request dcnl param str method the request method get put delete dcnl param str url the full api url to make the request to dcnl param kwargs these are passed along to requests dcnl return requests response the response directly from requests
deprecated endpoint still used because it can parse data out of a plot dcnl when we get around to forcing users to create grids and then create plots dcnl we can finally get rid of this dcnl param list data the data array from a figure
returns the credentials that will be sent to plotly
returns either module config or file config
checks if file exists returns if something fails
save json to file error if path dne not a dict or invalid json
given a valid filename make sure it exists will create if dne
given a valid directory path make sure it exists
remove timezone info and replace t delimeter with ws
general nodeyielding generator dcnl yields node path tuples when it finds values that are dict dcnl instances dcnl a path is a sequence of hashable values that can be used as either keys to dcnl a mapping dict or indices to a sequence list a path is always wrt to dcnl some object given an object a path explains how to get from the top level dcnl of that object to a nested value in the object dcnl param dict node part of a dict to be traversed dcnl param tuplestr path defines the path of the current node dcnl return generator dcnl example dcnl for node path in node generator a b 5 dcnl print node path dcnl a b 5 dcnl b 5 a
iteratively get on obj for each key in path dcnl param list|dict obj the toplevel object dcnl param tuplestr|tupleint path keys to access parts of obj dcnl return dcnl example dcnl figure data x 5 dcnl path data 0 x dcnl get by path figure path 5
factored out in case we want to allow callers to specify this func
memoize a function by its arguments note if the wrapped function returns dcnl a mutable result the caller is responsible for not mutating the result dcnl as it will mutate the cache itself dcnl param int|none maxsize limit the number of cached results this is a dcnl simple way to prevent memory leaks setting this dcnl to none will remember all calls the 128 dcnl number is used for parity with the python 3 2 dcnl functools lru cache tool
normalize facecolor values by vmin vmax and return rgbcolor strings dcnl this function takes a tuple color along with a colormap and a minimum dcnl vmin and maximum vmax range of possible mean distances for the dcnl given parametrized surface it returns an rgb color based on the mean dcnl distance between vmin and vmax
refer to figurefactory create trisurf for docstring
returns figure for a triangulated surface plot dcnl param array x data values of x in a 1d array dcnl param array y data values of y in a 1d array dcnl param array z data values of z in a 1d array dcnl param array simplices an array of shape ntri 3 where ntri is dcnl the number of triangles in the triangularization each row of the dcnl array contains the indicies of the verticies of each triangle dcnl param str|tuple|list colormap either a plotly scale name an rgb dcnl or hex color a color tuple or a list of colors an rgb color is dcnl of the form rgb x y z where x y z belong to the interval dcnl 0 255 and a color tuple is a tuple of the form a b c where dcnl a b and c belong to 0 1 if colormap is a list it must dcnl contain the valid color types aforementioned as its members dcnl param bool show colorbar determines if colorbar is visible dcnl param list|array scale sets the scale values to be used if a non dcnl linearly interpolated colormap is desired if left as none a dcnl linear interpolation between the colors will be excecuted dcnl param function|list color func the parameter that determines the dcnl coloring of the surface takes either a function with 3 arguments dcnl x y z or a list array of color values the same length as dcnl simplices if none coloring will only depend on the z axis dcnl param str title title of the plot dcnl param bool plot edges determines if the triangles on the trisurf dcnl are visible dcnl param bool showbackground makes background in plot visible dcnl param str backgroundcolor color of background takes a string of dcnl the form rgb x y z x y z are between 0 and 255 inclusive dcnl param str gridcolor color of the gridlines besides the axes takes dcnl a string of the form rgb x y z x y z are between 0 and 255 dcnl inclusive dcnl param str zerolinecolor color of the axes takes a string of the dcnl form rgb x y z x y z are between 0 and 255 inclusive dcnl param str edges color color of the edges if plot edges is true dcnl param int|float height the height of the plot in pixels dcnl param int|float width the width of the plot in pixels dcnl param dict aspectratio a dictionary of the aspect ratio values for dcnl the x y and z axes x y and z take int|float values dcnl example 1 sphere dcnl necessary imports for trisurf dcnl import numpy as np dcnl from scipy spatial import delaunay dcnl import plotly plotly as py dcnl from plotly figure factory import create trisurf dcnl from plotly graph objs import graph objs dcnl make data for plot dcnl u np linspace 0 2 np pi 20 dcnl v np linspace 0 np pi 20 dcnl u v np meshgrid u v dcnl u u flatten dcnl v v flatten dcnl x np sin v np cos u dcnl y np sin v np sin u dcnl z np cos v dcnl points2d np vstack u v t dcnl tri delaunay points2d dcnl simplices tri simplices dcnl create a figure dcnl fig1 create trisurf x x y y z z colormap rainbow dcnl simplices simplices dcnl plot the data dcnl py iplot fig1 filename trisurfplotsphere dcnl example 2 torus dcnl necessary imports for trisurf dcnl import numpy as np dcnl from scipy spatial import delaunay dcnl import plotly plotly as py dcnl from plotly figure factory import create trisurf dcnl from plotly graph objs import graph objs dcnl make data for plot dcnl u np linspace 0 2 np pi 20 dcnl v np linspace 0 2 np pi 20 dcnl u v np meshgrid u v dcnl u u flatten dcnl v v flatten dcnl x 3 + np cos v np cos u dcnl y 3 + np cos v np sin u dcnl z np sin v dcnl points2d np vstack u v t dcnl tri delaunay points2d dcnl simplices tri simplices dcnl create a figure dcnl fig1 create trisurf x x y y z z colormap viridis dcnl simplices simplices dcnl plot the data dcnl py iplot fig1 filename trisurfplottorus dcnl example 3 mobius band dcnl necessary imports for trisurf dcnl import numpy as np dcnl from scipy spatial import delaunay dcnl import plotly plotly as py dcnl from plotly figure factory import create trisurf dcnl from plotly graph objs import graph objs dcnl make data for plot dcnl u np linspace 0 2 np pi 24 dcnl v np linspace 1 1 8 dcnl u v np meshgrid u v dcnl u u flatten dcnl v v flatten dcnl tp 1 + 0 5 v np cos u 2 dcnl x tp np cos u dcnl y tp np sin u dcnl z 0 5 v np sin u 2 dcnl points2d np vstack u v t dcnl tri delaunay points2d dcnl simplices tri simplices dcnl create a figure dcnl fig1 create trisurf x x y y z z colormap 0 2 0 4 0 6 1 1 1 dcnl simplices simplices dcnl plot the data dcnl py iplot fig1 filename trisurfplotmobiusband dcnl example 4 using a custom colormap function with light cone dcnl necessary imports for trisurf dcnl import numpy as np dcnl from scipy spatial import delaunay dcnl import plotly plotly as py dcnl from plotly figure factory import create trisurf dcnl from plotly graph objs import graph objs dcnl make data for plot dcnl u np linspace np pi np pi 30 dcnl v np linspace np pi np pi 30 dcnl u v np meshgrid u v dcnl u u flatten dcnl v v flatten dcnl x u dcnl y u np cos v dcnl z u np sin v dcnl points2d np vstack u v t dcnl tri delaunay points2d dcnl simplices tri simplices dcnl define distance function dcnl def dist origin x y z dcnl return np sqrt 1 0 x 2 + 1 0 y 2 + 1 0 z 2 dcnl create a figure dcnl fig1 create trisurf x x y y z z dcnl colormap ffffff e4fffe dcnl a4f6f9 ff99fe dcnl ba52ed dcnl scale 0 0 6 0 71 0 89 1 dcnl simplices simplices dcnl color func dist origin dcnl plot the data dcnl py iplot fig1 filename trisurfplotcustomcoloring dcnl example 5 enter color func as a list of colors dcnl necessary imports for trisurf dcnl import numpy as np dcnl from scipy spatial import delaunay dcnl import random dcnl import plotly plotly as py dcnl from plotly figure factory import create trisurf dcnl from plotly graph objs import graph objs dcnl make data for plot dcnl u np linspace np pi np pi 30 dcnl v np linspace np pi np pi 30 dcnl u v np meshgrid u v dcnl u u flatten dcnl v v flatten dcnl x u dcnl y u np cos v dcnl z u np sin v dcnl points2d np vstack u v t dcnl tri delaunay points2d dcnl simplices tri simplices dcnl colors dcnl color choices rgb 0 0 0 6c4774 d6c7dd dcnl for index in range len simplices dcnl colors append random choice color choices dcnl fig create trisurf dcnl x y z simplices dcnl color func colors dcnl show colorbar true dcnl edges color rgb 2 85 180 dcnl title modern art dcnl py iplot fig filename trisurfplotmodernart
returns a list of intervals for categorical colormaps dcnl accepts a list or tuple of sequentially increasing numbers and returns dcnl a list representation of the mathematical intervals with these numbers dcnl as endpoints for example 1 6 returns inf 1 1 6 6 inf dcnl raises plotlyerror if input is not a list or tuple dcnl raises plotlyerror if the input contains a string dcnl raises plotlyerror if any number does not increase after the dcnl previous one in the sequence
hides tick labels for box plots in scatterplotmatrix subplots
validates basic inputs for figurefactory create scatterplotmatrix dcnl raises plotlyerror if pandas is not imported dcnl raises plotlyerror if pandas dataframe is not inputted dcnl raises plotlyerror if pandas dataframe has < 1 columns dcnl raises plotlyerror if diagonal plot choice diag is not one of dcnl the viable options dcnl raises plotlyerror if colormap type is not a valid choice dcnl raises plotlyerror if kwargs contains size color or dcnl colorscale
refer to figurefactory create scatterplotmatrix for docstring dcnl returns fig for scatterplotmatrix without index
refer to figurefactory create scatterplotmatrix for docstring dcnl returns fig for scatterplotmatrix with both index and colormap picked dcnl used if colormap is a dictionary with index values as keys pointing to dcnl colors forces colormap type to behave categorically because it would dcnl not make sense colors are assigned to each index value and thus dcnl implies that a categorical approach should be taken
refer to figurefactory create scatterplotmatrix for docstring dcnl returns fig for scatterplotmatrix with both index and colormap picked
returns data for a scatterplot matrix dcnl param array df array of the data with column headers dcnl param str index name of the index column in data array dcnl param list|tuple endpts takes an increasing sequece of numbers dcnl that defines intervals on the real line they are used to group dcnl the entries in an index of numbers into their corresponding dcnl interval and therefore can be treated as categorical data dcnl param str diag sets the chart type for the main diagonal plots dcnl the options are scatter histogram and box dcnl param int|float height sets the height of the chart dcnl param int|float width sets the width of the chart dcnl param float size sets the marker size in px dcnl param str title the title label of the scatterplot matrix dcnl param str|tuple|list|dict colormap either a plotly scale name dcnl an rgb or hex color a color tuple a list of colors or a dcnl dictionary an rgb color is of the form rgb x y z where dcnl x y and z belong to the interval 0 255 and a color tuple is a dcnl tuple of the form a b c where a b and c belong to 0 1 dcnl if colormap is a list it must contain valid color types as its dcnl members dcnl if colormap is a dictionary all the string entries in dcnl the index column must be a key in colormap in this case the dcnl colormap type is forced to cat or categorical dcnl param str colormap type determines how colormap is interpreted dcnl valid choices are seq sequential and cat categorical if dcnl seq is selected only the first two colors in colormap will be dcnl considered when colormap is a list and the index values will be dcnl linearly interpolated between those two colors this option is dcnl forced if all index values are numeric dcnl if cat is selected a color from colormap will be assigned to dcnl each category from index including the intervals if endpts is dcnl being used dcnl param dict kwargs a dictionary of scatterplot arguments dcnl the only forbidden parameters are size color and dcnl colorscale in marker dcnl example 1 vanilla scatterplot matrix dcnl import plotly plotly as py dcnl from plotly graph objs import graph objs dcnl from plotly figure factory import create scatterplotmatrix dcnl import numpy as np dcnl import pandas as pd dcnl create dataframe dcnl df pd dataframe np random randn 10 2 dcnl columns column 1 column 2 dcnl create scatterplot matrix dcnl fig create scatterplotmatrix df dcnl plot dcnl py iplot fig filename vanilla scatterplot matrix dcnl example 2 indexing a column dcnl import plotly plotly as py dcnl from plotly graph objs import graph objs dcnl from plotly figure factory import create scatterplotmatrix dcnl import numpy as np dcnl import pandas as pd dcnl create dataframe with index dcnl df pd dataframe np random randn 10 2 dcnl columns a b dcnl add another column of strings to the dataframe dcnl df fruit pd series apple apple grape apple apple dcnl grape pear pear apple pear dcnl create scatterplot matrix dcnl fig create scatterplotmatrix df index fruit size 10 dcnl plot dcnl py iplot fig filename scatterplot matrix with index dcnl example 3 styling the diagonal subplots dcnl import plotly plotly as py dcnl from plotly graph objs import graph objs dcnl from plotly figure factory import create scatterplotmatrix dcnl import numpy as np dcnl import pandas as pd dcnl create dataframe with index dcnl df pd dataframe np random randn 10 4 dcnl columns a b c d dcnl add another column of strings to the dataframe dcnl df fruit pd series apple apple grape apple apple dcnl grape pear pear apple pear dcnl create scatterplot matrix dcnl fig create scatterplotmatrix df diag box index fruit height 1000 dcnl width 1000 dcnl plot dcnl py iplot fig filename scatterplot matrix diagonal styling dcnl example 4 use a theme to style the subplots dcnl import plotly plotly as py dcnl from plotly graph objs import graph objs dcnl from plotly figure factory import create scatterplotmatrix dcnl import numpy as np dcnl import pandas as pd dcnl create dataframe with random data dcnl df pd dataframe np random randn 100 3 dcnl columns a b c dcnl create scatterplot matrix using a builtin dcnl plotly palette scale and indexing column a dcnl fig create scatterplotmatrix df diag histogram index a dcnl colormap blues height 800 width 800 dcnl plot dcnl py iplot fig filename scatterplot matrix colormap theme dcnl example 5 example 4 with interval factoring dcnl import plotly plotly as py dcnl from plotly graph objs import graph objs dcnl from plotly figure factory import create scatterplotmatrix dcnl import numpy as np dcnl import pandas as pd dcnl create dataframe with random data dcnl df pd dataframe np random randn 100 3 dcnl columns a b c dcnl create scatterplot matrix using a list of 2 rgb tuples dcnl and endpoints at 1 0 and 1 dcnl fig create scatterplotmatrix df diag histogram index a dcnl colormap rgb 140 255 50 dcnl rgb 170 60 115 6c4774 dcnl 0 5 0 1 0 8 dcnl endpts 1 0 1 height 800 width 800 dcnl plot dcnl py iplot fig filename scatterplot matrix intervals dcnl example 6 using the colormap as a dictionary dcnl import plotly plotly as py dcnl from plotly graph objs import graph objs dcnl from plotly figure factory import create scatterplotmatrix dcnl import numpy as np dcnl import pandas as pd dcnl import random dcnl create dataframe with random data dcnl df pd dataframe np random randn 100 3 dcnl columns column a dcnl column b dcnl column c dcnl add new color column to dataframe dcnl new column dcnl strange colors turquoise limegreen goldenrod dcnl for j in range 100 dcnl new column append random choice strange colors dcnl df colors pd series new column index df index dcnl create scatterplot matrix using a dictionary of hex color values dcnl which correspond to actual color names in colors column dcnl fig create scatterplotmatrix dcnl df diag box index colors dcnl colormap dict dcnl turquoise 00f5ff dcnl limegreen 32cd32 dcnl goldenrod daa520 dcnl colormap type cat dcnl height 800 width 800 dcnl plot dcnl py iplot fig filename scatterplot matrix colormap dictionary
streamlinespecific validations dcnl specifically this checks that x and y are both evenly spaced dcnl and that the package numpy is available dcnl see figurefactory create streamline for params dcnl raises importerror if numpy is not available dcnl raises plotlyerror if x is not evenly spaced dcnl raises plotlyerror if y is not evenly spaced
returns data for a streamline plot dcnl param list|ndarray x 1 dimensional evenly spaced list or array dcnl param list|ndarray y 1 dimensional evenly spaced list or array dcnl param ndarray u 2 dimensional array dcnl param ndarray v 2 dimensional array dcnl param float|int density controls the density of streamlines in dcnl plot this is multiplied by 30 to scale similiarly to other dcnl available streamline functions such as matplotlib dcnl default 1 dcnl param angle in radians angle angle of arrowhead default pi 9 dcnl param float in 0 1 arrow scale value to scale length of arrowhead dcnl default 09 dcnl param kwargs kwargs passed through plotly graph objs scatter dcnl for more information on valid kwargs call dcnl help plotly graph objs scatter dcnl rtype dict returns a representation of streamline figure dcnl example 1 plot simple streamline and increase arrow size dcnl import plotly plotly as py dcnl from plotly figure factory import create streamline dcnl import numpy as np dcnl import math dcnl add data dcnl x np linspace 3 3 100 dcnl y np linspace 3 3 100 dcnl y x np meshgrid x y dcnl u 1 x 2 + y dcnl v 1 + x y 2 dcnl u u t transpose dcnl v v t transpose dcnl create streamline dcnl fig create streamline x y u v arrow scale 1 dcnl plot dcnl py plot fig filename streamline dcnl example 2 from nbviewer ipython org github barbagroup aeropython dcnl import plotly plotly as py dcnl from plotly figure factory import create streamline dcnl import numpy as np dcnl import math dcnl add data dcnl n 50 dcnl x start x end 2 0 2 0 dcnl y start y end 1 0 1 0 dcnl x np linspace x start x end n dcnl y np linspace y start y end n dcnl x y np meshgrid x y dcnl ss 5 0 dcnl x s y s 1 0 0 0 dcnl compute the velocity field on the mesh grid dcnl u s ss 2 np pi xx s xx s 2 + yy s 2 dcnl v s ss 2 np pi yy s xx s 2 + yy s 2 dcnl create streamline dcnl fig create streamline x y u s v s density 2 name streamline dcnl add source point dcnl point scatter x x s y y s mode markers dcnl marker marker size 14 name source point dcnl plot dcnl fig data append point dcnl py plot fig filename streamline
validates if a list contains all numbers or all strings dcnl raises plotlyerror if there are any two items in the list whose dcnl types differ
validates all strings or numbers in each dataframe column dcnl raises plotlyerror if there are any two items in any list whose dcnl types differ
validates that data lists or ndarrays are the same length dcnl raises plotlyerror if any data lists are not the same length
validates that all values given in key val pairs are positive dcnl accepts kwargs to improve exception messages dcnl raises plotlyerror if any value is < 0 or raises
uses list comprehension to flatten array dcnl param array an iterable to flatten dcnl raises plotlyerror if iterable is not nested dcnl rtype list the flattened list
returns the color at a given distance between two colors dcnl this function takes two color tuples where each element is between 0 dcnl and 1 along with a value 0 < intermed < 1 and returns a color that is dcnl intermedpercent from lowcolor to highcolor
splits a low and high color into a list of n colors colors in it dcnl accepts two color tuples and returns a list of n colors colors dcnl which form the intermediate colors between lowcolor and highcolor dcnl from linearly interpolating through rgb space
takes tuple a b c and returns an rgb color rgb a b c
takes rgb color s rgb a b c and returns tuple s a b c dcnl this function takes either an rgb a b c color or a list of dcnl such colors and returns the color tuples in tuple s a b c
return a tuple where each element gets divided by 255 dcnl takes a list of color tuple s where each element is between 0 and dcnl 255 returns the same tuples where each tuple element is normalized to dcnl a value between 0 and 1
multiplies each element of a triplet by 255 dcnl each coordinate of the color tuple is rounded to the nearest float and dcnl then is turned into an integer if a number is of the form x 5 then dcnl if x is odd the number rounds up to x+1 otherwise it rounds down dcnl to just x this is the way rounding works in python 3 and in current dcnl statistical analysis to avoid rounding bias
calculates rgb values from a hex color code dcnl param string value hex color string dcnl rtype tuple r value g value b value tuple of rgb values
takes color s and a function and applies the function on the color s dcnl in particular this function identifies whether the given color object dcnl is an iterable or not and applies the given colorparsing function to dcnl the color or iterable of colors if given an iterable it will only be dcnl able to work with it if all items in the iterable are of the same type dcnl rgb string hex string or tuple
validates color s and returns a list of color s of a specified type
validates dictioanry of color s
extracts the colors from colorscale as a list
extracts the interpolation scale values from colorscale as a list
validates scale values from a colorscale dcnl param list scale a strictly increasing list of floats that begins dcnl with 0 and ends with 1 its usage derives from a colorscale which is dcnl a list of twolists a list with two elements of the form dcnl value color which are used to determine how interpolation weighting dcnl works between the colors in the colorscale therefore scale is just dcnl the extraction of these values from the twolists in order
validate the structure scale values and colors of colorscale
returns a list of intervals for categorical colormaps dcnl accepts a list or tuple of sequentially increasing numbers and returns dcnl a list representation of the mathematical intervals with these numbers dcnl as endpoints for example 1 6 returns inf 1 1 6 6 inf dcnl raises plotlyerror if input is not a list or tuple dcnl raises plotlyerror if the input contains a string dcnl raises plotlyerror if any number does not increase after the dcnl previous one in the sequence
calculate statistics for use in violin plot
produces a sideways probability distribution fig violin plot
returns a rugplot fig for a violin plot
returns the scatterplot fig of most of a violin plot
makes the upper and lower quartiles for a violin plot
formats the median hovertext for a violin plot
makes the xaxis for a violin plot
makes the yaxis for a violin plot
refer to figurefactory create violin for docstring
refer to figurefactory create violin for docstring dcnl returns fig for violin plot without colorscale
refer to figurefactory create violin for docstring dcnl returns fig for violin plot with colorscale
refer to figurefactory create violin for docstring dcnl returns fig for violin plot without colorscale
returns figure for a violin plot dcnl param list|array data accepts either a list of numerical values dcnl a list of dictionaries all with identical keys and at least one dcnl column of numeric values or a pandas dataframe with at least one dcnl column of numbers dcnl param str data header the header of the data column to be used dcnl from an inputted pandas dataframe not applicable if data is dcnl a list of numeric values dcnl param str group header applicable if grouping data by a variable dcnl group header must be set to the name of the grouping variable dcnl param str|tuple|list|dict colors either a plotly scale name dcnl an rgb or hex color a color tuple a list of colors or a dcnl dictionary an rgb color is of the form rgb x y z where dcnl x y and z belong to the interval 0 255 and a color tuple is a dcnl tuple of the form a b c where a b and c belong to 0 1 dcnl if colors is a list it must contain valid color types as its dcnl members dcnl param bool use colorscale only applicable if grouping by another dcnl variable will implement a colorscale based on the first 2 colors dcnl of param colors this means colors must be a list with at least 2 dcnl colors in it plotly colorscales are accepted since they map to a dcnl list of two rgb colors default false dcnl param dict group stats a dictioanry where each key is a unique dcnl value from the group header column in data each value must be a dcnl number and will be used to color the violin plots if a colorscale dcnl is being used dcnl param bool rugplot determines if a rugplot is draw on violin plot dcnl default true dcnl param bool sort determines if violins are sorted dcnl alphabetically true or by input order false default false dcnl param float height the height of the violin plot dcnl param float width the width of the violin plot dcnl param str title the title of the violin plot dcnl example 1 single violin plot dcnl import plotly plotly as py dcnl from plotly figure factory import create violin dcnl from plotly graph objs import graph objs dcnl import numpy as np dcnl from scipy import stats dcnl create list of random values dcnl data list np random randn 100 dcnl data list tolist dcnl create violin fig dcnl fig create violin data list colors 604d9e dcnl plot dcnl py iplot fig filename violin plot dcnl example 2 multiple violin plots with qualitative coloring dcnl import plotly plotly as py dcnl from plotly figure factory import create violin dcnl from plotly graph objs import graph objs dcnl import numpy as np dcnl import pandas as pd dcnl from scipy import stats dcnl create dataframe dcnl np random seed 619517 dcnl nr 250 dcnl y np random randn nr dcnl gr np random choice list abcde nr dcnl norm params 0 1 2 0 7 1 0 5 1 4 0 3 1 0 8 0 9 dcnl for i letter in enumerate abcde dcnl ygr letter norm paramsi1+ norm paramsi0 dcnl df pd dataframe dict score y group gr dcnl create violin fig dcnl fig create violin df data header score group header group dcnl sort true height 600 width 1000 dcnl plot dcnl py iplot fig filename violin plot with coloring dcnl example 3 violin plots with colorscale dcnl import plotly plotly as py dcnl from plotly figure factory import create violin dcnl from plotly graph objs import graph objs dcnl import numpy as np dcnl import pandas as pd dcnl from scipy import stats dcnl create dataframe dcnl np random seed 619517 dcnl nr 250 dcnl y np random randn nr dcnl gr np random choice list abcde nr dcnl norm params 0 1 2 0 7 1 0 5 1 4 0 3 1 0 8 0 9 dcnl for i letter in enumerate abcde dcnl ygr letter norm paramsi1+ norm paramsi0 dcnl df pd dataframe dict score y group gr dcnl define header params dcnl data header score dcnl group header group dcnl make groupby object with pandas dcnl group stats dcnl groupby data df groupby group header dcnl for group in abcde dcnl data from group groupby data get group group data header dcnl take a stat of the grouped data dcnl stat np median data from group dcnl add to dictionary dcnl group statsgroup stat dcnl create violin fig dcnl fig create violin df data header score group header group dcnl height 600 width 1000 use colorscale true dcnl group stats group stats dcnl plot dcnl py iplot fig filename violin plot with colorscale
annotatedheatmapspecific validations dcnl check that if a text matrix is supplied it has the same dcnl dimensions as the z matrix dcnl see figurefactory create annotated heatmap for params dcnl raises plotlyerror if z and text matrices do not have the same dcnl dimensions
beta function that creates annotated heatmaps dcnl this function adds annotations to each cell of the heatmap dcnl param listlist|ndarray z z matrix to create heatmap dcnl param list x x axis labels dcnl param list y y axis labels dcnl param listlist|ndarray annotation text text strings for dcnl annotations should have the same dimensions as the z matrix if no dcnl text is added the values of the z matrix are annotated default dcnl z matrix values dcnl param list|str colorscale heatmap colorscale dcnl param list font colors list of two color strings min text color dcnl max text color where min text color is applied to annotations for dcnl heatmap values < max value min value 2 if font colors is not dcnl defined the colors are defined logically as black or white dcnl depending on the heatmap s colorscale dcnl param bool showscale display colorscale default false dcnl param kwargs kwargs passed through plotly graph objs heatmap dcnl these kwargs describe other attributes about the annotated heatmap dcnl trace such as the colorscale for more information on valid kwargs dcnl call help plotly graph objs heatmap dcnl example 1 simple annotated heatmap with default configuration dcnl import plotly plotly as py dcnl import plotly figure factory as ff dcnl z 0 300000 0 00000 0 65 0 300000 dcnl 1 0 100005 0 45 0 4300 dcnl 0 300000 0 00000 0 65 0 300000 dcnl 1 0 100005 0 45 0 00000 dcnl figure ff create annotated heatmap z dcnl py iplot figure
distplotspecific validations dcnl raises plotlyerror if hist data is not a list of lists dcnl raises plotlyerror if curve type is not valid i e not kde or dcnl normal
beta function that creates a distplot similar to seaborn distplot dcnl the distplot can be composed of all or any combination of the following dcnl 3 components 1 histogram 2 curve a kernel density estimation dcnl or b normal curve and 3 rug plot additionally multiple distplots dcnl from multiple datasets can be created in the same plot dcnl param listlist hist data use list of lists to plot multiple data dcnl sets on the same plot dcnl param liststr group labels names for each data set dcnl param listfloat|float bin size size of histogram bins dcnl default 1 dcnl param str curve type kde or normal default kde dcnl param str histnorm probability density or probability dcnl default probability density dcnl param bool show hist add histogram to distplot default true dcnl param bool show curve add curve to distplot default true dcnl param bool show rug add rug to distplot default true dcnl param liststr colors colors for traces dcnl param listlist rug text hovertext values for rug plot dcnl return dict representation of a distplot figure dcnl example 1 simple distplot of 1 data set dcnl import plotly plotly as py dcnl from plotly figure factory import create distplot dcnl hist data 1 1 1 1 2 5 3 0 3 5 dcnl 3 5 4 1 4 4 4 5 4 5 dcnl 5 0 5 0 5 2 5 5 5 5 dcnl 5 5 5 5 5 5 6 1 7 0 dcnl group labels distplot example dcnl fig create distplot hist data group labels dcnl url py plot fig filename simple distplot validate false dcnl example 2 two data sets and added rug text dcnl import plotly plotly as py dcnl from plotly figure factory import create distplot dcnl add histogram data dcnl hist1 x 0 8 1 2 0 2 0 6 1 6 dcnl 0 9 0 07 1 95 0 9 0 2 dcnl 0 5 0 3 0 4 0 37 0 6 dcnl hist2 x 0 8 1 5 1 5 0 6 0 59 dcnl 1 0 0 8 1 7 0 5 0 8 dcnl 0 3 1 2 0 56 0 3 2 2 dcnl group data together dcnl hist data hist1 x hist2 x dcnl group labels 2012 2013 dcnl add text dcnl rug text 1 a1 b1 c1 d1 e1 dcnl f1 g1 h1 i1 j1 dcnl k1 l1 m1 n1 o1 dcnl rug text 2 a2 b2 c2 d2 e2 dcnl f2 g2 h2 i2 j2 dcnl k2 l2 m2 n2 o2 dcnl group text together dcnl rug text all rug text 1 rug text 2 dcnl create distplot dcnl fig create distplot dcnl hist data group labels rug text rug text all bin size 2 dcnl add title dcnl fig layout update title dist plot dcnl plot dcnl url py plot fig filename distplot with rug text validate false dcnl example 3 plot with normal curve and hide rug plot dcnl import plotly plotly as py dcnl from plotly figure factory import create distplot dcnl import numpy as np dcnl x1 np random randn 190 dcnl x2 np random randn 200 +1 dcnl x3 np random randn 200 1 dcnl x4 np random randn 210 +2 dcnl hist data x1 x2 x3 x4 dcnl group labels 2012 2013 2014 2015 dcnl fig create distplot dcnl hist data group labels curve type normal dcnl show rug false bin size 4 dcnl url py plot fig filename hist and normal curve validate false dcnl example 4 distplot with pandas dcnl import plotly plotly as py dcnl from plotly figure factory import create distplot dcnl import numpy as np dcnl import pandas as pd dcnl df pd dataframe 2012 np random randn 200 dcnl 2013 np random randn 200 +1 dcnl py iplot create distplot dfc for c in df columns df columns dcnl filename examples distplot with pandas dcnl validate false
returns figure for facet grid dcnl param pd dataframe df the dataframe of columns for the facet grid dcnl param str x the name of the dataframe column for the x axis data dcnl param str y the name of the dataframe column for the y axis data dcnl param str facet row the name of the dataframe column that is used to dcnl facet the grid into row panels dcnl param str facet col the name of the dataframe column that is used to dcnl facet the grid into column panels dcnl param str color name the name of your dataframe column that will dcnl function as the colormap variable dcnl param str|list|dict colormap the param that determines how the dcnl color name column colors the data if the dataframe contains numeric dcnl data then a dictionary of colors will group the data categorically dcnl while a plotly colorscale name or a custom colorscale will treat it dcnl numerically to learn more about colors and types of colormap run dcnl help plotly colors dcnl param bool color is cat determines whether a numerical column for the dcnl colormap will be treated as categorical true or sequential false dcnl default false dcnl param str|dict facet row labels set to either name or a dictionary dcnl of all the unique values in the faceting row mapped to some text to dcnl show up in the label annotations if none labeling works like usual dcnl param str|dict facet col labels set to either name or a dictionary dcnl of all the values in the faceting row mapped to some text to show up dcnl in the label annotations if none labeling works like usual dcnl param int height the height of the facet grid figure dcnl param int width the width of the facet grid figure dcnl param str trace type decides the type of plot to appear in the dcnl facet grid the options are scatter scattergl histogram dcnl bar and box dcnl default scatter dcnl param str scales determines if axes have fixed ranges or not valid dcnl settings are fixed all axes fixed free x x axis free only dcnl free y y axis free only or free both axes free dcnl param float dtick x determines the distance between each tick on the dcnl xaxis default is none which means dtick x is set automatically dcnl param float dtick y determines the distance between each tick on the dcnl yaxis default is none which means dtick y is set automatically dcnl param bool show boxes draws grey boxes behind the facet titles dcnl param bool ggplot2 draws the facet grid in the style of ggplot2 see dcnl http ggplot2 tidyverse org reference facet grid html for reference dcnl default false dcnl param int binsize groups all data into bins of a given length dcnl param dict kwargs a dictionary of scatterplot arguments dcnl examples 1 one way faceting dcnl import plotly plotly as py dcnl import plotly figure factory as ff dcnl import pandas as pd dcnl mpg pd read table https raw githubusercontent com plotly datasets master mpg 2017 txt dcnl fig ff create facet grid dcnl mpg dcnl x displ dcnl y cty dcnl facet col cyl dcnl py iplot fig filename facet grid mpg one way facet dcnl example 2 two way faceting dcnl import plotly plotly as py dcnl import plotly figure factory as ff dcnl import pandas as pd dcnl mpg pd read table https raw githubusercontent com plotly datasets master mpg 2017 txt dcnl fig ff create facet grid dcnl mpg dcnl x displ dcnl y cty dcnl facet row drv dcnl facet col cyl dcnl py iplot fig filename facet grid mpg two way facet dcnl example 3 categorical coloring dcnl import plotly plotly as py dcnl import plotly figure factory as ff dcnl import pandas as pd dcnl mpg pd read table https raw githubusercontent com plotly datasets master mpg 2017 txt dcnl fig ff create facet grid dcnl mtcars dcnl x mpg dcnl y wt dcnl facet col cyl dcnl color name cyl dcnl color is cat true dcnl py iplot fig filename facet grid mpg default colors dcnl example 4 sequential coloring dcnl import plotly plotly as py dcnl import plotly figure factory as ff dcnl import pandas as pd dcnl tips pd read csv https raw githubusercontent com plotly datasets master tips csv dcnl fig ff create facet grid dcnl tips dcnl x total bill dcnl y tip dcnl facet row sex dcnl facet col smoker dcnl color name size dcnl colormap viridis dcnl py iplot fig filename facet grid tips sequential colors dcnl example 5 custom labels dcnl import plotly plotly as py dcnl import plotly figure factory as ff dcnl import pandas as pd dcnl mtcars pd read csv https raw githubusercontent com plotly datasets master mtcars csv dcnl fig ff create facet grid dcnl mtcars dcnl x wt dcnl y mpg dcnl facet col cyl dcnl facet col labels 4 alpha 6 beta 8 sqrty x dcnl py iplot fig filename facet grid mtcars custom labels dcnl example 6 other trace type dcnl import plotly plotly as py dcnl import plotly figure factory as ff dcnl import pandas as pd dcnl mtcars pd read csv https raw githubusercontent com plotly datasets master mtcars csv dcnl fig ff create facet grid dcnl mtcars dcnl x wt dcnl facet col cyl dcnl trace type histogram dcnl py iplot fig filename facet grid mtcars other trace type
makes a list of colors into a colorscaleacceptable form dcnl for documentation regarding to the form of the output see dcnl https plot ly python reference mesh3dcolorscale
returns figure for a 2d density plot dcnl param list|array x xaxis data for plot generation dcnl param list|array y yaxis data for plot generation dcnl param str|tuple|list colorscale either a plotly scale name an rgb dcnl or hex color a color tuple or a list or tuple of colors an rgb dcnl color is of the form rgb x y z where x y z belong to the dcnl interval 0 255 and a color tuple is a tuple of the form dcnl a b c where a b and c belong to 0 1 if colormap is a dcnl list it must contain the valid color types aforementioned as its dcnl members dcnl param int ncontours the number of 2d contours to draw on the plot dcnl param str hist color the color of the plotted histograms dcnl param str point color the color of the scatter points dcnl param str point size the color of the scatter points dcnl param str title set the title for the plot dcnl param float height the height of the chart dcnl param float width the width of the chart dcnl example 1 simple 2d density plot dcnl import plotly plotly as py dcnl from plotly figure factory create 2d density dcnl import numpy as np dcnl make data points dcnl t np linspace 1 1 2 2000 dcnl x t 3 + 0 3 np random randn 2000 dcnl y t 6 + 0 3 np random randn 2000 dcnl create a figure dcnl fig create 2d density x y dcnl plot the data dcnl py iplot fig filename simple2ddensity dcnl example 2 using parameters dcnl import plotly plotly as py dcnl from plotly figure factory create 2d density dcnl import numpy as np dcnl make data points dcnl t np linspace 1 1 2 2000 dcnl x t 3 + 0 3 np random randn 2000 dcnl y t 6 + 0 3 np random randn 2000 dcnl create custom colorscale dcnl colorscale 7a4579 d56073 rgb 236 158 105 dcnl 1 1 0 2 0 98 0 98 0 98 dcnl create a figure dcnl fig create 2d density dcnl x y colorscale colorscale dcnl hist color rgb 255 237 222 point size 3 dcnl plot the data dcnl py iplot fig filename useparameters
ohlc and candlestick specific validations dcnl specifically this checks that the high value is the greatest value and dcnl the low value is the lowest value in each unit dcnl see figurefactory create ohlc or figurefactory create candlestick dcnl for params dcnl raises plotlyerror if the high value is not the greatest value in dcnl each unit dcnl raises plotlyerror if the low value is not the lowest value in each dcnl unit dcnl raises plotlyerror if direction is not increasing or decreasing
makes increasing ohlc sticks dcnl make increasing ohlc and make decreasing ohlc separate the dcnl increasing trace from the decreasing trace so kwargs such as dcnl color can be passed separately to increasing or decreasing traces dcnl when direction is set to increasing or decreasing in dcnl figurefactory create candlestick dcnl param list open opening values dcnl param list high high values dcnl param list low low values dcnl param list close closing values dcnl param list dates list of datetime objects default none dcnl param kwargs kwargs to be passed to increasing trace via dcnl plotly graph objs scatter dcnl rtype trace ohlc incr data scatter trace of all increasing ohlc dcnl sticks
makes decreasing ohlc sticks dcnl param list open opening values dcnl param list high high values dcnl param list low low values dcnl param list close closing values dcnl param list dates list of datetime objects default none dcnl param kwargs kwargs to be passed to increasing trace via dcnl plotly graph objs scatter dcnl rtype trace ohlc decr data scatter trace of all decreasing ohlc dcnl sticks
beta function that creates an ohlc chart dcnl param list open opening values dcnl param list high high values dcnl param list low low values dcnl param list close closing dcnl param list dates list of datetime objects default none dcnl param string direction direction can be increasing decreasing dcnl or both when the direction is increasing the returned figure dcnl consists of all units where the close value is greater than the dcnl corresponding open value and when the direction is decreasing dcnl the returned figure consists of all units where the close value is dcnl less than or equal to the corresponding open value when the dcnl direction is both both increasing and decreasing units are dcnl returned default both dcnl param kwargs kwargs passed through plotly graph objs scatter dcnl these kwargs describe other attributes about the ohlc scatter trace dcnl such as the color or the legend name for more information on valid dcnl kwargs call help plotly graph objs scatter dcnl rtype dict returns a representation of an ohlc chart figure dcnl example 1 simple ohlc chart from a pandas dataframe dcnl import plotly plotly as py dcnl from plotly figure factory import create ohlc dcnl from datetime import datetime dcnl import pandas io data as web dcnl df web datareader aapl yahoo datetime 2008 8 15 dcnl datetime 2008 10 15 dcnl fig create ohlc df open df high df low df close dates df index dcnl py plot fig filename finance aaplohlc dcnl example 2 add text and annotations to the ohlc chart dcnl import plotly plotly as py dcnl from plotly figure factory import create ohlc dcnl from datetime import datetime dcnl import pandas io data as web dcnl df web datareader aapl yahoo datetime 2008 8 15 dcnl datetime 2008 10 15 dcnl fig create ohlc df open df high df low df close dates df index dcnl update the fig options here https plot ly python reference layout dcnl fig layout update dcnl title the great recession dcnl yaxis title aapl stock dcnl shapes dcnl x0 20080915 x1 20080915 type line dcnl y0 0 y1 1 xref x yref paper dcnl line color rgb 40 40 40 width 0 5 dcnl annotations dcnl text the fall of lehman brothers dcnl x 20080915 y 1 02 dcnl xref x yref paper dcnl showarrow false xanchor left dcnl py plot fig filename finance aaplrecessionohlc validate false dcnl example 3 customize the ohlc colors dcnl import plotly plotly as py dcnl from plotly figure factory import create ohlc dcnl from plotly graph objs import line marker dcnl from datetime import datetime dcnl import pandas io data as web dcnl df web datareader aapl yahoo datetime 2008 1 1 dcnl datetime 2009 4 1 dcnl make increasing ohlc sticks and customize their color and name dcnl fig increasing create ohlc df open df high df low df close dcnl dates df index direction increasing dcnl name aapl dcnl line line color rgb 150 200 250 dcnl make decreasing ohlc sticks and customize their color and name dcnl fig decreasing create ohlc df open df high df low df close dcnl dates df index direction decreasing dcnl line line color rgb 128 128 128 dcnl initialize the figure dcnl fig fig increasing dcnl add decreasing data with extend dcnl fig data extend fig decreasing data dcnl py iplot fig filename finance aaplohlccolors validate false dcnl example 4 ohlc chart with datetime objects dcnl import plotly plotly as py dcnl from plotly figure factory import create ohlc dcnl from datetime import datetime dcnl add data dcnl open data 33 0 33 3 33 5 33 0 34 1 dcnl high data 33 1 33 3 33 6 33 2 34 8 dcnl low data 32 7 32 7 32 8 32 6 32 8 dcnl close data 33 0 32 9 33 3 33 1 33 1 dcnl dates datetime year 2013 month 10 day 10 dcnl datetime year 2013 month 11 day 10 dcnl datetime year 2013 month 12 day 10 dcnl datetime year 2014 month 1 day 10 dcnl datetime year 2014 month 2 day 10 dcnl create ohlc dcnl fig create ohlc open data high data low data close data dates dates dcnl py iplot fig filename finance simpleohlc validate false
returns data for a quiver plot dcnl param list|ndarray x x coordinates of the arrow locations dcnl param list|ndarray y y coordinates of the arrow locations dcnl param list|ndarray u x components of the arrow vectors dcnl param list|ndarray v y components of the arrow vectors dcnl param float in 0 1 scale scales size of the arrows ideally to dcnl avoid overlap default 1 dcnl param float in 0 1 arrow scale value multiplied to length of barb dcnl to get length of arrowhead default 3 dcnl param angle in radians angle angle of arrowhead default pi 9 dcnl param kwargs kwargs passed through plotly graph objs scatter dcnl for more information on valid kwargs call dcnl help plotly graph objs scatter dcnl rtype dict returns a representation of quiver figure dcnl example 1 trivial quiver dcnl import plotly plotly as py dcnl from plotly figure factory import create quiver dcnl import math dcnl 1 arrow from 0 0 to 1 1 dcnl fig create quiver x 0 y 0 u 1 v 1 scale 1 dcnl py plot fig filename quiver dcnl example 2 quiver plot using meshgrid dcnl import plotly plotly as py dcnl from plotly figure factory import create quiver dcnl import numpy as np dcnl import math dcnl add data dcnl x y np meshgrid np arange 0 2 2 np arange 0 2 2 dcnl u np cos x y dcnl v np sin x y dcnl create quiver dcnl fig create quiver x y u v dcnl plot dcnl py plot fig filename quiver dcnl example 3 styling the quiver plot dcnl import plotly plotly as py dcnl from plotly figure factory import create quiver dcnl import numpy as np dcnl import math dcnl add data dcnl x y np meshgrid np arange np pi math pi 5 dcnl np arange math pi math pi 5 dcnl u np cos x y dcnl v np sin x y dcnl create quiver dcnl fig create quiver x y u v scale 2 arrow scale 3 angle math pi 6 dcnl name wind velocity line line width 1 dcnl add title to layout dcnl fig layout update title quiver plot dcnl plot dcnl py plot fig filename quiver
beta function that returns a dendrogram plotly figure object dcnl param ndarray x matrix of observations as array of arrays dcnl param str orientation top right bottom or left dcnl param list labels list of axis category labels observation labels dcnl param list colorscale optional colorscale for dendrogram tree dcnl param function distfun function to compute the pairwise distance from dcnl the observations dcnl param function linkagefun function to compute the linkage matrix from dcnl the pairwise distances dcnl clusters dcnl example 1 simple bottom oriented dendrogram dcnl import plotly plotly as py dcnl from plotly figure factory import create dendrogram dcnl import numpy as np dcnl x np random rand 10 10 dcnl dendro create dendrogram x dcnl plot url py plot dendro filename simpledendrogram dcnl example 2 dendrogram to put on the left of the heatmap dcnl import plotly plotly as py dcnl from plotly figure factory import create dendrogram dcnl import numpy as np dcnl x np random rand 5 5 dcnl names jack oxana john chelsea mark dcnl dendro create dendrogram x orientation right labels names dcnl dendro layout update width 700 height 500 dcnl py iplot dendro filename verticaldendrogram dcnl example 3 dendrogram with pandas dcnl import plotly plotly as py dcnl from plotly figure factory import create dendrogram dcnl import numpy as np dcnl import pandas as pd dcnl index a b c d e f g h i j dcnl df pd dataframe abs np random randn 10 10 index index dcnl fig create dendrogram df labels index dcnl url py plot fig filename pandasdendrogram
validates the inputted dataframe or list
refer to create gantt for docstring
refer to figurefactory create gantt for docstring
refer to figurefactory create gantt for docstring
returns figure for a gantt chart dcnl param array|list df input data for gantt chart must be either a dcnl a dataframe or a list if dataframe the columns must include dcnl task start and finish other columns can be included and dcnl used for indexing if a list its elements must be dictionaries dcnl with the same required column headers task start and dcnl finish dcnl param str|list|dict|tuple colors either a plotly scale name an dcnl rgb or hex color a color tuple or a list of colors an rgb color dcnl is of the form rgb x y z where x y z belong to the interval dcnl 0 255 and a color tuple is a tuple of the form a b c where dcnl a b and c belong to 0 1 if colors is a list it must dcnl contain the valid color types aforementioned as its members dcnl if a dictionary all values of the indexing column must be keys in dcnl colors dcnl param str|float index col the column header if df is a data dcnl frame that will function as the indexing column if df is a list dcnl index col must be one of the keys in all the items of df dcnl param bool show colorbar determines if colorbar will be visible dcnl only applies if values in the index column are numeric dcnl param bool reverse colors reverses the order of selected colors dcnl param str title the title of the chart dcnl param float bar width the width of the horizontal bars in the plot dcnl param bool showgrid x show hide the xaxis grid dcnl param bool showgrid y show hide the yaxis grid dcnl param float height the height of the chart dcnl param float width the width of the chart dcnl example 1 simple gantt chart dcnl import plotly plotly as py dcnl from plotly figure factory import create gantt dcnl make data for chart dcnl df dict task job a start 20090101 finish 20090230 dcnl dict task job b start 20090305 finish 20090415 dcnl dict task job c start 20090220 finish 20090530 dcnl create a figure dcnl fig create gantt df dcnl plot the data dcnl py iplot fig filename simple gantt chart world readable true dcnl example 2 index by column with numerical entries dcnl import plotly plotly as py dcnl from plotly figure factory import create gantt dcnl make data for chart dcnl df dict task job a start 20090101 dcnl finish 20090230 complete 10 dcnl dict task job b start 20090305 dcnl finish 20090415 complete 60 dcnl dict task job c start 20090220 dcnl finish 20090530 complete 95 dcnl create a figure with plotly colorscale dcnl fig create gantt df colors blues index col complete dcnl show colorbar true bar width 0 5 dcnl showgrid x true showgrid y true dcnl plot the data dcnl py iplot fig filename numerical entries world readable true dcnl example 3 index by column with string entries dcnl import plotly plotly as py dcnl from plotly figure factory import create gantt dcnl make data for chart dcnl df dict task job a start 20090101 dcnl finish 20090230 resource apple dcnl dict task job b start 20090305 dcnl finish 20090415 resource grape dcnl dict task job c start 20090220 dcnl finish 20090530 resource banana dcnl create a figure with plotly colorscale dcnl fig create gantt df colors rgb 200 50 25 1 0 1 6c4774 dcnl index col resource reverse colors true dcnl show colorbar true dcnl plot the data dcnl py iplot fig filename string entries world readable true dcnl example 4 use a dictionary for colors dcnl import plotly plotly as py dcnl from plotly figure factory import create gantt dcnl make data for chart dcnl df dict task job a start 20090101 dcnl finish 20090230 resource apple dcnl dict task job b start 20090305 dcnl finish 20090415 resource grape dcnl dict task job c start 20090220 dcnl finish 20090530 resource banana dcnl make a dictionary of colors dcnl colors apple rgb 255 0 0 dcnl grape rgb 170 14 200 dcnl banana 1 1 0 2 dcnl create a figure with plotly colorscale dcnl fig create gantt df colors colors index col resource dcnl show colorbar true dcnl plot the data dcnl py iplot fig filename dictioanry colors world readable true dcnl example 5 use a pandas dataframe dcnl import plotly plotly as py dcnl from plotly figure factory import create gantt dcnl import pandas as pd dcnl make data as a dataframe dcnl df pd dataframe run 20100101 20110202 10 dcnl fast 20110101 20120605 55 dcnl eat 20120105 20130705 94 dcnl columns task start finish complete dcnl create a figure with plotly colorscale dcnl fig create gantt df colors blues index col complete dcnl show colorbar true bar width 0 5 dcnl showgrid x true showgrid y true dcnl plot the data dcnl py iplot fig filename data with dataframe world readable true
tablespecific validations dcnl check that font colors is supplied correctly 1 3 or len text dcnl colors dcnl raises plotlyerror if font colors is supplied incorretly dcnl see figurefactory create table for params
beta function that creates data tables dcnl param pandas dataframe | listlist text data for table dcnl param str|listlist colorscale colorscale for table where the dcnl color at value 0 is the header color 5 is the first table color dcnl and 1 is the second table color set 5 and 1 to avoid the striped dcnl table effect default 0 66b2ff 5 d9d9d9 dcnl 1 ffffff dcnl param list font colors color for fonts in table can be a single dcnl color three colors or a color for each row in the table dcnl default 000000 black text for the entire table dcnl param int height constant constant multiplied by of rows to dcnl create table height default 30 dcnl param bool index create headercolored index column index from dcnl pandas dataframe or list0 for each list in text default false dcnl param string index title title for index column default dcnl param kwargs kwargs passed through plotly graph objs heatmap dcnl these kwargs describe other attributes about the annotated heatmap dcnl trace such as the colorscale for more information on valid kwargs dcnl call help plotly graph objs heatmap dcnl example 1 simple plotly table dcnl import plotly plotly as py dcnl from plotly figure factory import create table dcnl text country year population dcnl us 2000 282200000 dcnl canada 2000 27790000 dcnl us 2010 309000000 dcnl canada 2010 34000000 dcnl table create table text dcnl py iplot table dcnl example 2 table with custom coloring dcnl import plotly plotly as py dcnl from plotly figure factory import create table dcnl text country year population dcnl us 2000 282200000 dcnl canada 2000 27790000 dcnl us 2010 309000000 dcnl canada 2010 34000000 dcnl table create table text dcnl colorscale 0 000000 dcnl 5 80beff dcnl 1 cce5ff dcnl font colors ffffff 000000 dcnl 000000 dcnl py iplot table dcnl example 3 simple plotly table with pandas dcnl import plotly plotly as py dcnl from plotly figure factory import create table dcnl import pandas as pd dcnl df pd read csv http www stat ubc ca ~jenny notocto stat545a examples gapminder data gapminderdatafiveyear txt sep dcnl df p df0 25 dcnl table simple create table df p dcnl py iplot table simple
makes boxplot trace for increasing candlesticks dcnl make increasing candle and make decreasing candle separate the dcnl increasing traces from the decreasing traces so kwargs such as dcnl color can be passed separately to increasing or decreasing traces dcnl when direction is set to increasing or decreasing in dcnl figurefactory create candlestick dcnl param list open opening values dcnl param list high high values dcnl param list low low values dcnl param list close closing values dcnl param list dates list of datetime objects default none dcnl param kwargs kwargs to be passed to increasing trace via dcnl plotly graph objs scatter dcnl rtype list candle incr data list of the box trace for dcnl increasing candlesticks
makes boxplot trace for decreasing candlesticks dcnl param list open opening values dcnl param list high high values dcnl param list low low values dcnl param list close closing values dcnl param list dates list of datetime objects default none dcnl param kwargs kwargs to be passed to decreasing trace via dcnl plotly graph objs scatter dcnl rtype list candle decr data list of the box trace for dcnl decreasing candlesticks
beta function that creates a candlestick chart dcnl param list open opening values dcnl param list high high values dcnl param list low low values dcnl param list close closing values dcnl param list dates list of datetime objects default none dcnl param string direction direction can be increasing decreasing dcnl or both when the direction is increasing the returned figure dcnl consists of all candlesticks where the close value is greater than dcnl the corresponding open value and when the direction is dcnl decreasing the returned figure consists of all candlesticks dcnl where the close value is less than or equal to the corresponding dcnl open value when the direction is both both increasing and dcnl decreasing candlesticks are returned default both dcnl param kwargs kwargs passed through plotly graph objs scatter dcnl these kwargs describe other attributes about the ohlc scatter trace dcnl such as the color or the legend name for more information on valid dcnl kwargs call help plotly graph objs scatter dcnl rtype dict returns a representation of candlestick chart figure dcnl example 1 simple candlestick chart from a pandas dataframe dcnl import plotly plotly as py dcnl from plotly figure factory import create candlestick dcnl from datetime import datetime dcnl import pandas io data as web dcnl df web datareader aapl yahoo datetime 2007 10 1 datetime 2009 4 1 dcnl fig create candlestick df open df high df low df close dates df index dcnl py plot fig filename finance aaplcandlestick validate false dcnl example 2 add text and annotations to the candlestick chart dcnl fig create candlestick df open df high df low df close dates df index dcnl update the fig all options here https plot ly python reference layout dcnl fig layout update dcnl title the great recession dcnl yaxis title aapl stock dcnl shapes dcnl x0 20071201 x1 20071201 dcnl y0 0 y1 1 xref x yref paper dcnl line color rgb 30 30 30 width 1 dcnl annotations dcnl x 20071201 y 0 05 xref x yref paper dcnl showarrow false xanchor left dcnl text official start of the recession dcnl py plot fig filename finance aaplrecessioncandlestick validate false dcnl example 3 customize the candlestick colors dcnl import plotly plotly as py dcnl from plotly figure factory import create candlestick dcnl from plotly graph objs import line marker dcnl from datetime import datetime dcnl import pandas io data as web dcnl df web datareader aapl yahoo datetime 2008 1 1 datetime 2009 4 1 dcnl make increasing candlesticks and customize their color and name dcnl fig increasing create candlestick df open df high df low df close dates df index dcnl direction increasing name aapl dcnl marker marker color rgb 150 200 250 dcnl line line color rgb 150 200 250 dcnl make decreasing candlesticks and customize their color and name dcnl fig decreasing create candlestick df open df high df low df close dates df index dcnl direction decreasing dcnl marker marker color rgb 128 128 128 dcnl line line color rgb 128 128 128 dcnl initialize the figure dcnl fig fig increasing dcnl add decreasing data with extend dcnl fig data extend fig decreasing data dcnl py iplot fig filename finance aaplcandlestickcustom validate false dcnl example 4 candlestick chart with datetime objects dcnl import plotly plotly as py dcnl from plotly figure factory import create candlestick dcnl from datetime import datetime dcnl add data dcnl open data 33 0 33 3 33 5 33 0 34 1 dcnl high data 33 1 33 3 33 6 33 2 34 8 dcnl low data 32 7 32 7 32 8 32 6 32 8 dcnl close data 33 0 32 9 33 3 33 1 33 1 dcnl dates datetime year 2013 month 10 day 10 dcnl datetime year 2013 month 11 day 10 dcnl datetime year 2013 month 12 day 10 dcnl datetime year 2014 month 1 day 10 dcnl datetime year 2014 month 2 day 10 dcnl create ohlc dcnl fig create candlestick open data high data dcnl low data close data dates dates dcnl py iplot fig filename finance simplecandlestick validate false
sign in overrides the default plot options dcnl conflicting options aren t raised until plot or iplot is called dcnl through plot option logic
tls set config overrides the default plot options dcnl conflicting options are actually raised when the options are saved dcnl because we push out default arguments for folks and we don t want to dcnl require users to specify both world readable and secret and we don t dcnl want to raise an error if they specified only one of these options dcnl and didn t know that a default option was being saved for them
if the user wrote their own options in the config file dcnl then we ll raise the error when the call plot or iplot through dcnl plot option logic
test that call signature arguments applied through plot option logic dcnl overwrite options supplied through py sign in which overwrite options dcnl set through tls set config
takes color s and a function and applies the function on the color s dcnl in particular this function identifies whether the given color object dcnl is an iterable or not and applies the given colorparsing function to dcnl the color or iterable of colors if given an iterable it will only be dcnl able to work with it if all items in the iterable are of the same type dcnl rgb string hex string or tuple
validates color s and returns an error for invalid color s dcnl param str|tuple|list colors either a plotly scale name an rgb or hex dcnl color a color tuple or a list tuple of colors
converts color s to the specified color type dcnl takes a single color or an iterable of colors as well as a list of scale dcnl values and outputs a 2pair of the list of color s converted all to an dcnl rgb or tuple color type aswell as the scale as the second element if dcnl colors is a plotly scale name then scale will be forced to the scale dcnl from the respective colorscale and the colors in that colorscale will also dcnl be coverted to the selected colortype if colors is none then there is an dcnl option to return portion of the default plotly colors dcnl param str|tuple|list colors either a plotly scale name an rgb or hex dcnl color a color tuple or a list tuple of colors dcnl param list scale see docs for validate scale values dcnl rtype tuple colors list scale if scale is none in the function call dcnl then scale will remain none in the returned tuple
converts a colors in a dictioanry of colors to the specified color type dcnl param dict colors dict a dictioanry whose values are single colors
validates scale values from a colorscale dcnl param list scale a strictly increasing list of floats that begins dcnl with 0 and ends with 1 its usage derives from a colorscale which is dcnl a list of twolists a list with two elements of the form dcnl value color which are used to determine how interpolation weighting dcnl works between the colors in the colorscale therefore scale is just dcnl the extraction of these values from the twolists in order
makes a colorscale from a list of colors and a scale dcnl takes a list of colors and scales and constructs a colorscale based dcnl on the colors in sequential order if scale is left empty a linear dcnl interpolated colorscale will be generated if scale is a specificed dcnl list it must be the same legnth as colors and must contain all floats dcnl for documentation regarding to the form of the output see dcnl https plot ly python reference mesh3dcolorscale dcnl param list colors a list of single colors
returns the color at a given distance between two colors dcnl this function takes two color tuples where each element is between 0 dcnl and 1 along with a value 0 < intermed < 1 and returns a color that is dcnl intermedpercent from lowcolor to highcolor
return a tuple where each element gets divided by 255 dcnl takes a list of color tuple s where each element is between 0 and dcnl 255 returns the same tuples where each tuple element is normalized to dcnl a value between 0 and 1
multiplies each element of a triplet by 255 dcnl each coordinate of the color tuple is rounded to the nearest float and dcnl then is turned into an integer if a number is of the form x 5 then dcnl if x is odd the number rounds up to x+1 otherwise it rounds down dcnl to just x this is the way rounding works in python 3 and in current dcnl statistical analysis to avoid rounding bias dcnl param list rgb components grabs the three r g and b values to be dcnl returned as computed in the function
splits a low and high color into a list of n colors colors in it dcnl accepts two color tuples and returns a list of n colors colors dcnl which form the intermediate colors between lowcolor and highcolor dcnl from linearly interpolating through rgb space
takes tuple a b c and returns an rgb color rgb a b c
takes rgb color s rgb a b c and returns tuple s a b c dcnl this function takes either an rgb a b c color or a list of dcnl such colors and returns the color tuples in tuple s a b c
calculates rgb values from a hex color code dcnl param string value hex color string dcnl rtype tuple r value g value b value tuple of rgb values
extracts the colors from colorscale as a list
extracts the interpolation scale values from colorscale as a list
converts the colors in a colorscale to rgb colors dcnl a colorscale is an array of arrays each with a numeric value as the dcnl first item and a color as the second this function specifically is dcnl converting a colorscale with tuple colors each coordinate between 0 dcnl and 1 into a colorscale with the colors transformed into rgb colors
this function will return a script that will download an image of a plotly dcnl plot dcnl keyword arguments dcnl caller plot iplot specifies which function made the call for the dcnl download script if iplot then an extra condition is added into the dcnl download script to ensure that download prompts aren t initiated on dcnl page reloads
initialize plotly js in the browser if it hasn t been loaded into the dom dcnl yet this is an idempotent method and can and should be called from any dcnl offline methods that require plotly js to be loaded into the notebook dom dcnl keyword arguments dcnl connected default false if true the plotly js library will be loaded dcnl from an online cdn if false the plotly js library will be loaded locally dcnl from the plotly python package dcnl use connected true if you want your notebooks to have smaller file sizes dcnl in the case where connected false the entirety of the plotly js library dcnl will be loaded into the notebook which will result in a filesize increase dcnl of a couple megabytes additionally because the library will be downloaded dcnl from the web you and your viewers must be connected to the internet to be dcnl able to view charts within this notebook dcnl use connected false if you want you and your collaborators to be able to dcnl create and view these charts regardless of the availability of an internet dcnl connection this is the default option since it is the most predictable dcnl note that under this setting the library will be included inline inside dcnl your notebook resulting in much larger notebook sizes compared to the case dcnl where connected true
draw plotly graphs inside an ipython or jupyter notebook without dcnl connecting to an external server dcnl to save the chart to plotly cloud or plotly enterprise use dcnl plotly plotly iplot dcnl to embed an image of the chart use plotly image ishow dcnl figure or data a plotly graph objs figure or plotly graph objs data or dcnl dict or list that describes a plotly graph dcnl see https plot ly python for examples of dcnl graph descriptions dcnl keyword arguments dcnl show link default true display a link in the bottomright corner of dcnl of the chart that will export the chart to dcnl plotly cloud or plotly enterprise dcnl link text default export to plot ly the text of export link dcnl validate default true validate that all of the keys in the figure dcnl are valid omit if your version of plotly js dcnl has become outdated with your version of dcnl graph reference json or if you need to include dcnl extra unnecessary keys in your figure dcnl image default none | png | jpeg | svg | webp this parameter sets dcnl the format of the image to be downloaded if we choose to download an dcnl image this parameter has a default value of none indicating that no dcnl image should be downloaded please note for higher resolution images dcnl and more export options consider making requests to our image servers dcnl type help py image for more details dcnl filename default plot sets the name of the file your image dcnl will be saved to the extension should not be included dcnl image height default 600 specifies the height of the image in px dcnl image width default 800 specifies the width of the image in px dcnl config default none plot view options dictionary keyword arguments dcnl show link and link text set the associated options in this dcnl dictionary if it doesn t contain them already dcnl example dcnl from plotly offline import init notebook mode iplot dcnl init notebook mode dcnl iplot x 1 2 3 y 5 2 7 dcnl we can also download an image of the plot by setting the image to the dcnl format you want e g image png dcnl iplot x 1 2 3 y 5 2 7 image png
create a plotly graph locally as an html document or string dcnl example dcnl from plotly offline import plot dcnl import plotly graph objs as go dcnl plot go scatter x 1 2 3 y 3 2 6 filename mygraph html dcnl we can also download an image of the plot by setting the image parameter dcnl to the image format we want dcnl plot go scatter x 1 2 3 y 3 2 6 filename mygraph html dcnl image jpeg dcnl more examples below dcnl figure or data a plotly graph objs figure or plotly graph objs data or dcnl dict or list that describes a plotly graph dcnl see https plot ly python for examples of dcnl graph descriptions dcnl keyword arguments dcnl show link default true display a link in the bottomright corner of dcnl of the chart that will export the chart to plotly cloud or dcnl plotly enterprise dcnl link text default export to plot ly the text of export link dcnl validate default true validate that all of the keys in the figure dcnl are valid omit if your version of plotly js has become outdated dcnl with your version of graph reference json or if you need to include dcnl extra unnecessary keys in your figure dcnl output type file | div default file if file then dcnl the graph is saved as a standalone html file and plot dcnl returns none dcnl if div then plot returns a string that just contains the dcnl html <div that contains the graph and the script to generate the dcnl graph dcnl use file if you want to save and view a single graph at a time dcnl in a standalone html file dcnl use div if you are embedding these graphs in an html file with dcnl other graphs or html markup like a html report or an website dcnl include plotlyjs default true if true include the plotly js dcnl source code in the output file or string dcnl set as false if your html file already contains a copy of the plotly js dcnl library dcnl filename default tempplot html the local filename to save the dcnl outputted chart to if the filename already exists it will be dcnl overwritten this argument only applies if output type is file dcnl auto open default true if true open the saved file in a dcnl web browser after saving dcnl this argument only applies if output type is file dcnl image default none | png | jpeg | svg | webp this parameter sets dcnl the format of the image to be downloaded if we choose to download an dcnl image this parameter has a default value of none indicating that no dcnl image should be downloaded please note for higher resolution images dcnl and more export options consider making requests to our image servers dcnl type help py image for more details dcnl image filename default plot image sets the name of the file your dcnl image will be saved to the extension should not be included dcnl image height default 600 specifies the height of the image in px dcnl image width default 800 specifies the width of the image in px dcnl config default none plot view options dictionary keyword arguments dcnl show link and link text set the associated options in this dcnl dictionary if it doesn t contain them already
convert a matplotlib figure to a plotly graph stored locally as html dcnl for more information on converting matplotlib visualizations to plotly dcnl graphs call help plotly tools mpl to plotly dcnl for more information on creating plotly charts locally as an html document dcnl or string call help plotly offline plot dcnl mpl fig a matplotlib figure object to convert to a plotly graph dcnl keyword arguments dcnl resize default false allow plotly to choose the figure size dcnl strip style default false allow plotly to choose style options dcnl verbose default false print message dcnl show link default true display a link in the bottomright corner of dcnl of the chart that will export the chart to plotly cloud or dcnl plotly enterprise dcnl link text default export to plot ly the text of export link dcnl validate default true validate that all of the keys in the figure dcnl are valid omit if your version of plotly js has become outdated dcnl with your version of graph reference json or if you need to include dcnl extra unnecessary keys in your figure dcnl output type file | div default file if file then dcnl the graph is saved as a standalone html file and plot dcnl returns none dcnl if div then plot returns a string that just contains the dcnl html <div that contains the graph and the script to generate the dcnl graph dcnl use file if you want to save and view a single graph at a time dcnl in a standalone html file dcnl use div if you are embedding these graphs in an html file with dcnl other graphs or html markup like a html report or an website dcnl include plotlyjs default true if true include the plotly js dcnl source code in the output file or string dcnl set as false if your html file already contains a copy of the plotly js dcnl library dcnl filename default tempplot html the local filename to save the dcnl outputted chart to if the filename already exists it will be dcnl overwritten this argument only applies if output type is file dcnl auto open default true if true open the saved file in a dcnl web browser after saving dcnl this argument only applies if output type is file dcnl image default none | png | jpeg | svg | webp this parameter sets dcnl the format of the image to be downloaded if we choose to download an dcnl image this parameter has a default value of none indicating that no dcnl image should be downloaded dcnl image filename default plot image sets the name of the file your dcnl image will be saved to the extension should not be included dcnl image height default 600 specifies the height of the image in px dcnl image width default 800 specifies the width of the image in px dcnl example dcnl from plotly offline import init notebook mode plot mpl dcnl import matplotlib pyplot as plt dcnl init notebook mode dcnl fig plt figure dcnl x 10 15 20 25 30 dcnl y 100 250 200 150 300 dcnl plt plot x y o dcnl plot mpl fig dcnl if you want to to download an image of the figure as well dcnl plot mpl fig image png
convert a matplotlib figure to a plotly graph and plot inside an ipython dcnl notebook without connecting to an external server dcnl to save the chart to plotly cloud or plotly enterprise use dcnl plotly plotly plot mpl dcnl for more information on converting matplotlib visualizations to plotly dcnl graphs call help plotly tools mpl to plotly dcnl for more information on plotting plotly charts offline in an ipython dcnl notebook call help plotly offline iplot dcnl mpl fig a matplotlib figure to convert to a plotly graph dcnl keyword arguments dcnl resize default false allow plotly to choose the figure size dcnl strip style default false allow plotly to choose style options dcnl verbose default false print message dcnl show link default true display a link in the bottomright corner of dcnl of the chart that will export the chart to dcnl plotly cloud or plotly enterprise dcnl link text default export to plot ly the text of export link dcnl validate default true validate that all of the keys in the figure dcnl are valid omit if your version of plotly js dcnl has become outdated with your version of dcnl graph reference json or if you need to include dcnl extra unnecessary keys in your figure dcnl image default none | png | jpeg | svg | webp this parameter sets dcnl the format of the image to be downloaded if we choose to download an dcnl image this parameter has a default value of none indicating that no dcnl image should be downloaded dcnl image filename default plot image sets the name of the file your dcnl image will be saved to the extension should not be included dcnl image height default 600 specifies the height of the image in px dcnl image width default 800 specifies the width of the image in px dcnl example dcnl from plotly offline import init notebook mode iplot mpl dcnl import matplotlib pyplot as plt dcnl fig plt figure dcnl x 10 15 20 25 30 dcnl y 100 250 200 150 300 dcnl plt plot x y o dcnl init notebook mode dcnl iplot mpl fig dcnl and if you want to download an image of the figure as well dcnl iplot mpl fig image jpeg
convert mpl plots to locally hosted html documents dcnl this function should be used with the inline matplotlib backend dcnl that ships with ipython that can be enabled with pylab inline dcnl or matplotlib inline this works by adding an html formatter dcnl for figure objects the existing svg png formatters will remain dcnl enabled dcnl idea taken from mpld3 display enable notebook dcnl example dcnl from plotly offline import enable mpl offline dcnl import matplotlib pyplot as plt dcnl enable mpl offline dcnl fig plt figure dcnl x 10 15 20 25 30 dcnl y 100 250 200 150 300 dcnl plt plot x y o dcnl fig
set set session credentials and config not saved to file dcnl if unspecified credentials and config are searched for in plotly dir dcnl param str username the username you d use to sign in to plotly dcnl param str api key the api key associated with above username dcnl param list|optional stream ids stream tokens for above credentials dcnl param str|optional proxy username the un associated with with your proxy dcnl param str|optional proxy password the pw associated with your proxy un dcnl param str|optional plotly domain dcnl param str|optional plotly streaming domain dcnl param str|optional plotly api domain dcnl param bool|optional plotly ssl verification dcnl param bool|optional plotly proxy authorization dcnl param bool|optional world readable
update the session plot options dcnl param str|optional filename what the file will be named in plotly dcnl param str|optional fileopt overwrite append new or extend dcnl param bool|optional world readable make public or private dcnl param dict|optional sharing public private secret dcnl param bool|optional auto open for plot open in new browser tab dcnl param bool|optional validate error locally if data doesn t pass
returns a copy of the user supplied plot options dcnl use update plot options to change
returns either module config or file config
returns the credentials that will be sent to plotly
given some plot options as part of a plot call decide on final options dcnl precedence dcnl 1 start with default plot options dcnl 2 update each key with ~ plotly config options tls get config dcnl 3 update each key with session plot options set by py sign in dcnl 4 update each key with plot iplot call signature options
create a unique url for this plot in plotly and open in ipython dcnl plot options keyword agruments dcnl filename string the name that will be associated with this figure dcnl fileopt new | overwrite | extend | append dcnl new create a new unique url for this plot dcnl overwrite overwrite the file associated with filename with this dcnl extend add additional numbers data to existing traces dcnl append add additional traces to existing data lists dcnl sharing public | private | secret toggle who can view this graph dcnl public anyone can view this graph it will appear in your profile dcnl and can appear in search engines you do not need to be dcnl logged in to plotly to view this chart dcnl private only you can view this plot it will not appear in the dcnl plotly feed your profile or search engines you must be dcnl logged in to plotly to view this graph you can privately dcnl share this graph with other plotly users in your online dcnl plotly account and they will need to be logged in to dcnl view this plot dcnl secret anyone with this secret link can view this chart it will dcnl not appear in the plotly feed your profile or search dcnl engines if it is embedded inside a webpage or an ipython dcnl notebook anybody who is viewing that page will be able to dcnl view the graph you do not need to be logged in to view dcnl this plot dcnl world readable default true deprecated use sharing dcnl make this figure private public
create a unique url for this plot in plotly and optionally open url dcnl plot options keyword agruments dcnl filename string the name that will be associated with this figure dcnl fileopt new | overwrite | extend | append new creates a dcnl new create a new unique url for this plot dcnl overwrite overwrite the file associated with filename with this dcnl extend add additional numbers data to existing traces dcnl append add additional traces to existing data lists dcnl auto open default true toggle browser options dcnl true open this plot in a new browser tab dcnl false do not open plot in the browser but do return the unique url dcnl sharing public | private | secret toggle who can view this dcnl graph dcnl public anyone can view this graph it will appear in your profile dcnl and can appear in search engines you do not need to be dcnl logged in to plotly to view this chart dcnl private only you can view this plot it will not appear in the dcnl plotly feed your profile or search engines you must be dcnl logged in to plotly to view this graph you can privately dcnl share this graph with other plotly users in your online dcnl plotly account and they will need to be logged in to dcnl view this plot dcnl secret anyone with this secret link can view this chart it will dcnl not appear in the plotly feed your profile or search dcnl engines if it is embedded inside a webpage or an ipython dcnl notebook anybody who is viewing that page will be able to dcnl view the graph you do not need to be logged in to view dcnl this plot dcnl world readable default true deprecated use sharing dcnl make this figure private public
replot a matplotlib figure with plotly in ipython dcnl this function dcnl 1 converts the mpl figure into json run help plolty tools mpl to plotly dcnl 2 makes a request to plotly to save this figure in your account dcnl 3 displays the image in your ipython output cell dcnl positional agruments dcnl fig a figure object from matplotlib dcnl keyword arguments dcnl resize default true allow plotly to choose the figure size dcnl strip style default false allow plotly to choose style options dcnl update default none update the resulting figure with an update dcnl dictionarylike object resembling a plotly figure object dcnl additional keyword arguments dcnl plot options run help plotly plotly iplot
replot a matplotlib figure with plotly dcnl this function dcnl 1 converts the mpl figure into json run help plolty tools mpl to plotly dcnl 2 makes a request to plotly to save this figure in your account dcnl 3 opens your figure in a browser tab or returns the unique figure url dcnl positional agruments dcnl fig a figure object from matplotlib dcnl keyword arguments dcnl resize default true allow plotly to choose the figure size dcnl strip style default false allow plotly to choose style options dcnl update default none update the resulting figure with an update dcnl dictionarylike object resembling a plotly figure object dcnl additional keyword arguments dcnl plot options run help plotly plotly plot
swap objkey1 with objkey2
swap x and y data and references
returns a json figure representation for the specified file dcnl plotly uniquely identifies figures with a file owner file id pair dcnl since each file is given a corresponding unique url you may also simply dcnl pass a valid plotly url as the first argument dcnl examples dcnl fig get figure https plot ly ~chris 1638 dcnl fig get figure chris 1638 dcnl note if you re using a file owner string as the first argument you must dcnl specify a file id keyword argument else if you re using a url string dcnl as the first argument you must not specify a file id keyword argument dcnl or file id must be set to python s none value dcnl positional arguments dcnl file owner or url string a valid plotly username or a valid plotly url dcnl keyword arguments dcnl file id default none an int or string that can be converted to int dcnl if you re using a url don t fill this in dcnl raw default false if true return unicode json string verbatim dcnl by default plotly will return a figure object run help plotly dcnl graph objs figure this representation decodes the keys and values from dcnl unicode if possible removes information irrelevant to the figure dcnl representation and converts the json dictionary objects to plotly dcnl graph objects
return the grid id from the nonnone input argument dcnl raise an error if more than one argument was supplied
check that share key is enabled and update url to include the secret key
returns the specified grid as a grid instance or in json dict form dcnl param str grid url the web url which locates a plotly grid dcnl param bool raw if false will output a grid instance of the json grid dcnl being retrieved if true raw json will be returned
beta function that creates plots with animations via frames dcnl creates an animated plot using frames alongside data and layout dcnl this beta endpoint is subject to deprecation in the future in relation dcnl to plotly plotly plot foldercreation and overwriting are not supported dcnl but creating a plot with or without animations via frames is supported dcnl param str filename if set to none an automaticallygenerated plot dcnl name will be created does not support folder creation meaning that dcnl a folder of the form folder name will not create a the folder and dcnl place the plot in it dcnl param str sharing see plotly plotly plot doc string dcnl param bool auto open if true opens plot in the browser if false dcnl returns the url for the plot instead dcnl example 1 simple animation dcnl import plotly plotly as py dcnl from plotly grid objs import grid column dcnl column 1 column 0 5 x dcnl column 2 column 0 5 y dcnl column 3 column 1 5 x2 dcnl column 4 column 1 5 y2 dcnl grid grid column 1 column 2 column 3 column 4 dcnl py grid ops upload grid ping pong grid auto open false dcnl create figure dcnl figure dcnl data dcnl xsrc grid get column reference x dcnl ysrc grid get column reference y dcnl mode markers dcnl layout title ping pong animation dcnl xaxis range 0 2 autorange false dcnl yaxis range 0 2 autorange false dcnl updatemenus dcnl buttons dcnl args none dcnl label u play dcnl method u animate dcnl pad r 10 t 87 dcnl showactive false dcnl type buttons dcnl frames dcnl data dcnl xsrc grid get column reference x2 dcnl ysrc grid get column reference y2 dcnl mode markers dcnl data dcnl xsrc grid get column reference x dcnl ysrc grid get column reference y dcnl mode markers dcnl py create animations figure ping pong dcnl example 2 growing circles animation dcnl import plotly plotly as py dcnl from plotly grid objs import grid column dcnl column 1 column 0 9 1 1 x dcnl column 2 column 1 0 1 0 y dcnl column 3 column 0 8 1 2 x2 dcnl column 4 column 1 2 0 8 y2 dcnl column 5 column 0 7 1 3 x3 dcnl column 6 column 0 7 1 3 y3 dcnl column 7 column 0 6 1 4 x4 dcnl column 8 column 1 5 0 5 y4 dcnl column 9 column 0 4 1 6 x5 dcnl column 10 column 1 2 0 8 y5 dcnl grid grid column 1 column 2 column 3 column 4 column 5 dcnl column 6 column 7 column 8 column 9 column 10 dcnl py grid ops upload grid growing circles grid auto open false dcnl create figure dcnl figure dcnl data dcnl xsrc grid get column reference x dcnl ysrc grid get column reference y dcnl mode markers dcnl marker color 48186a size 10 dcnl layout title growing circles dcnl xaxis range 0 2 autorange false dcnl yaxis range 0 2 autorange false dcnl updatemenus dcnl buttons dcnl args none dcnl label u play dcnl method u animate dcnl pad r 10 t 87 dcnl showactive false dcnl type buttons dcnl frames dcnl data dcnl xsrc grid get column reference x2 dcnl ysrc grid get column reference y2 dcnl mode markers dcnl marker color 3b528b size 25 dcnl data dcnl xsrc grid get column reference x3 dcnl ysrc grid get column reference y3 dcnl mode markers dcnl marker color 26828e size 50 dcnl data dcnl xsrc grid get column reference x4 dcnl ysrc grid get column reference y4 dcnl mode markers dcnl marker color 5ec962 size 80 dcnl data dcnl xsrc grid get column reference x5 dcnl ysrc grid get column reference y5 dcnl mode markers dcnl marker color d8e219 size 100 dcnl py create animations figure growing circles
create a unique url for this animated plot in plotly and open in ipython dcnl this function is based off plotly plotly iplot see plotly plotly dcnl create animations doc string for param descriptions
returns a help string for a graph object dcnl param str object name an object name from graph reference dcnl param tuplestr path the path within a figure object dcnl param parent object names an iterable of names of this object s parents dcnl param str|none attribute an attribute of <object name given <path dcnl return str a printable string to show to users
see get help
see get help
get general help information or information on a specific attribute dcnl see get help dcnl param str|unicode attribute the attribute we ll get info for
used mostly by the to string function on graph objects to pretty print dcnl limit the number of characters of output but keep the representation dcnl pretty dcnl param val the repr val result is what gets curtailed dcnl param int max chars max number of chars which may be returned dcnl param bool add delim used if a value is not the last in an iterable dcnl return str
temporary function see https github com plotly pythonapi issues 290 dcnl param str|unicode key the attribute we re sorting on dcnl return bool str|unicode the naturallysortable tuple
convert matplotlib color code to hex color code
convert a manytoone mapping to a onetoone mapping
get an svg dash array for the given matplotlib linestyle dcnl parameters dcnl obj matplotlib object dcnl the matplotlib line or path object which must have a get linestyle dcnl method which returns a valid matplotlib line code dcnl i integer optional dcnl returns dcnl dasharray string dcnl the html svg dasharray code associated with the object
construct the vertices and svg codes for the path dcnl parameters dcnl path matplotlib path object dcnl transform matplotlib transform optional dcnl if specified the path will be transformed before computing the output dcnl returns dcnl vertices array dcnl the shape m 2 array of vertices of the path note that some path dcnl codes require multiple vertices so the length of these vertices may dcnl be longer than the list of path codes dcnl path codes list dcnl a length n list of singlecharacter path codes n < m each code is dcnl a single character in l m s c z see the standard svg dcnl path specification for a description of these
get the style dictionary for matplotlib path objects
get the style dictionary for matplotlib line objects
get the style dictionary for matplotlib marker objects
return the text style dict for a text instance
return the property dictionary for a matplotlib axis instance
returns an iterator over all childen and nested children using dcnl obj s get children method dcnl if skipcontainers is true only childless objects are returned
convert a matplotlib image to a base64 png representation dcnl parameters dcnl image matplotlib image object dcnl the image to be converted dcnl returns dcnl image base64 string dcnl the utf8encoded base64 string representation of the png image
convert a matplotlib figure to a vincent object
convert a matplotlib figure to vega dictionary dcnl if notebook true then return an object which will display in a notebook dcnl otherwise return an html string
initialize the ipython notebook display elements dcnl this function borrows heavily from the excellent vincent package dcnl http github com wrobstory vincent
check if two bars belong in the same collection bar chart dcnl positional arguments dcnl old bar a previously sorted bar dictionary dcnl new bar a new bar dictionary that needs to be sorted
convert mpl line symbol to plotly line symbol and return symbol
convert mpl marker symbol to plotly symbol and return symbol
change a hex color to an rgb tuple dcnl param str|unicode value the hex string we want to convert dcnl return int int int the red green blue inttuple dcnl example dcnl ffffff 255 255 255
merge hex color with an alpha opacity to get an rgba tuple dcnl param str|unicode color a hex color string dcnl param float|int opacity a value 0 1 for the a in rgba dcnl return int int int float the rgba color and alpha tuple
convert mpl vertical alignment word to equivalent html word dcnl text alignment specifiers from mpl differ very slightly from those used dcnl in html see the va map for more details dcnl positional arguments dcnl mpl va vertical mpl text alignment spec
map x dimension of current plot to plotly s domain space dcnl the bbox used to locate an axes object in mpl differs from the dcnl method used to locate axes in plotly the mpl version locates each dcnl axes in the figure so that axes in a singleplot figure might have dcnl the bounds 0 125 0 125 0 775 0 775 x0 y0 width height dcnl in mpl s figure coordinates however the axes all share one space in dcnl plotly such that the domain will always be 0 0 1 1 dcnl x0 y0 x1 y1 to convert between the two the mpl figure bounds dcnl need to be mapped to a 0 1 domain for x and y the margins set dcnl upon opening a new figure will appropriately match the mpl margins dcnl optionally setting margins 0 and simply copying the domains from dcnl mpl to plotly would place axes appropriately however dcnl this would throw off axis and title labeling dcnl positional arguments dcnl mpl plot bounds the x0 y0 width height params for current ax dcnl mpl max x bounds overall x0 x1 bounds for all axes dcnl these are all specified in mpl figure coordinates
map y dimension of current plot to plotly s domain space dcnl the bbox used to locate an axes object in mpl differs from the dcnl method used to locate axes in plotly the mpl version locates each dcnl axes in the figure so that axes in a singleplot figure might have dcnl the bounds 0 125 0 125 0 775 0 775 x0 y0 width height dcnl in mpl s figure coordinates however the axes all share one space in dcnl plotly such that the domain will always be 0 0 1 1 dcnl x0 y0 x1 y1 to convert between the two the mpl figure bounds dcnl need to be mapped to a 0 1 domain for x and y the margins set dcnl upon opening a new figure will appropriately match the mpl margins dcnl optionally setting margins 0 and simply copying the domains from dcnl mpl to plotly would place axes appropriately however dcnl this would throw off axis and title labeling dcnl positional arguments dcnl mpl plot bounds the x0 y0 width height params for current ax dcnl mpl max y bounds overall y0 y1 bounds for all axes dcnl these are all specified in mpl figure coordinates
convert mpl display coordinates to plotly paper coordinates dcnl plotly references object positions with an x y coordinate pair in either dcnl data or paper coordinates which reference actual data in a plot or dcnl the entire plotly axes space where the bottomleft of the bottomleft dcnl plot has the location x y 0 0 and the topright of the topright dcnl plot has the location x y 1 1 display coordinates in mpl reference dcnl objects with an x y pair in pixel coordinates where the bottomleft dcnl corner is at the location x y 0 0 and the topright corner is at dcnl the location x y figwidth dpi figheight dpi here figwidth and dcnl figheight are in inches and dpi are the dots per inch resolution
return the entire axes space for figure dcnl an axes object in mpl is specified by its relation to the figure where dcnl 0 0 corresponds to the bottomleft part of the figure and 1 1 dcnl corresponds to the topright margins exist in matplotlib because axes dcnl objects normally don t go to the edges of the figure dcnl in plotly the axes area where all subplots go is always specified with dcnl the domain 0 1 for both x and y this function finds the smallest box dcnl specified by two points that all of the mpl axes objects fit into this dcnl box is then used to map mpl axes domains to plotly axes domains
find minimum x value from four x y vertices
find maximum x value from four x y vertices
find minimum y value from four x y vertices
find maximum y value from four x y vertices
return some spine parameters for the spine spine key
a test to decide whether a path is a bar from a vertical bar chart
make an intermediate bar dictionary dcnl this creates a bar dictionary which aids in the comparison of new bars to dcnl old bars from other bar chart patch collections this is not the dcnl dictionary that needs to get passed to plotly as a data dictionary that dcnl happens in plotlyrenderer in that class s draw bar method in other dcnl words this dictionary describes a single bar whereas plotly will dcnl require a set of bars to be passed in a data dictionary
prepare axis obj belonging to axes obj dcnl positional arguments dcnl ax the mpl axes instance dcnl index the index of the axis in props dcnl ax type x or y for now dcnl props an mplexporter poperties dictionary
convert matplotlib dates to isoformattedlike time strings dcnl plotly s accepted format yyyymmdd hh mm ss e g 20010101 00 00 00 dcnl info on mpl dates http matplotlib org api dates api html
return module or none absolute import is required dcnl param str name dotseparated module path e g scipy stats dcnl raise importerror only when exc msg is defined dcnl return module|none if import succeeds the module will be returned
convenience function to check current settings against defaults dcnl example dcnl if plotly domain get config defaults plotly domain dcnl do something
ensure that filesystem is setup filled out in a valid way dcnl if the config or credential files aren t filled out then write them dcnl to the disk
set the keywordvalue pairs in ~ plotly credentials dcnl param str username the username you d use to sign in to plotly dcnl param str api key the api key associated with above username dcnl param list stream ids stream tokens for above credentials dcnl param str proxy username the un associated with with your proxy dcnl param str proxy password the pw associated with your proxy un
return specified args from ~ plotly credentials as dict dcnl returns all if no arguments are specified dcnl example dcnl get credentials file username
set the keywordvalue pairs in ~ plotly config dcnl param str plotly domain ex https plot ly dcnl param str plotly streaming domain ex stream plot ly dcnl param str plotly api domain ex https api plot ly dcnl param bool plotly ssl verification true verify false don t verify dcnl param bool plotly proxy authorization true use plotly proxy auth creds dcnl param bool world readable true public false private
return specified args from ~ plotly config as tuple dcnl returns all if no arguments are specified dcnl example dcnl get config file plotly domain
returns html code to embed figure on a webpage as an <iframe dcnl plotly uniquely identifies figures with a file owner file id pair dcnl since each file is given a corresponding unique url you may also simply dcnl pass a valid plotly url as the first argument dcnl note if you re using a file owner string as the first argument you must dcnl specify a file id keyword argument else if you re using a url string dcnl as the first argument you must not specify a file id keyword argument dcnl or file id must be set to python s none value dcnl positional arguments dcnl file owner or url string a valid plotly username or a valid plotly url dcnl keyword arguments dcnl file id default none an int or string that can be converted to int dcnl if you re using a url don t fill this in dcnl width default 100 an int or string corresp to width of the figure dcnl height default 525 same as width but corresp to the height of the dcnl figure
embeds existing plotly figure in ipython notebook dcnl plotly uniquely identifies figures with a file owner file id pair dcnl since each file is given a corresponding unique url you may also simply dcnl pass a valid plotly url as the first argument dcnl note if you re using a file owner string as the first argument you must dcnl specify a file id keyword argument else if you re using a url string dcnl as the first argument you must not specify a file id keyword argument dcnl or file id must be set to python s none value dcnl positional arguments dcnl file owner or url string a valid plotly username or a valid plotly url dcnl keyword arguments dcnl file id default none an int or string that can be converted to int dcnl if you re using a url don t fill this in dcnl width default 100 an int or string corresp to width of the figure dcnl height default 525 same as width but corresp to the height of the dcnl figure
convert a matplotlib figure to plotly dictionary and send dcnl all available information about matplotlib visualizations are stored dcnl within a matplotlib figure figure object you can create a plot in python dcnl using matplotlib store the figure object and then pass this object to dcnl the fig to plotly function in the background mplexporter is used to dcnl crawl through the mpl figure object for appropriate information this dcnl information is then systematically sent to the plotlyrenderer which dcnl creates the json structure used to make plotly visualizations finally dcnl these dictionaries are sent to plotly and your browser should open up a dcnl new tab for viewing optionally if you re working in ipython you can dcnl set notebook true and the plotlyrenderer will call plotly iplot instead dcnl of plotly plot to have the graph appear directly in the ipython notebook dcnl note this function gives the user access to a simple oneline way to dcnl render an mpl figure in plotly if you need to trouble shoot you can do dcnl this step manually by not running this fuction and entereing the following dcnl from mplexporter import exporter dcnl from mplexporter renderers import plotlyrenderer dcnl create an mpl figure and store it under a varialble fig dcnl renderer plotlyrenderer dcnl exporter exporter renderer dcnl exporter run fig dcnl you can then inspect the json structures by accessing these dcnl renderer layout a plotly layout dictionary dcnl renderer data a list of plotly data dictionaries dcnl positional arguments dcnl fig a matplotlib figure object dcnl username a valid plotly username dcnl api key a valid api key for the above username dcnl notebook an option for use with an ipython notebook dcnl don t have a username api key try looking here dcnl plotly domain plot dcnl forgot your api key try signing in and looking here dcnl plotly domain python gettingstarted
return a dictionary instance with the subplots set in layout dcnl example 1 dcnl stack two subplots vertically dcnl fig tools get subplots rows 2 dcnl fig data + scatter x 1 2 3 y 2 1 2 xaxis x1 yaxis y1 dcnl fig data + scatter x 1 2 3 y 2 1 2 xaxis x2 yaxis y2 dcnl example 2 dcnl print out string showing the subplot grid you ve put in the layout dcnl fig tools get subplots rows 3 columns 2 print grid true dcnl keywords arguments with constant defaults dcnl rows kwarg int greater than 0 default 1 dcnl number of rows evenly spaced vertically on the figure dcnl columns kwarg int greater than 0 default 1 dcnl number of columns evenly spaced horizontally on the figure dcnl horizontal spacing kwarg float in 0 1 default 0 1 dcnl space between subplot columns applied to all columns dcnl vertical spacing kwarg float in 0 1 default 0 05 dcnl space between subplot rows applied to all rows dcnl print grid kwarg true | false default false dcnl if true prints a tabdelimited string representation dcnl of your plot grid dcnl keyword arguments with variable defaults dcnl horizontal spacing kwarg float in 0 1 default 0 2 columns dcnl space between subplot columns dcnl vertical spacing kwarg float in 0 1 default 0 3 rows dcnl space between subplot rows
return an instance of plotly graph objs figure dcnl with the subplots domain set in layout dcnl example 1 dcnl stack two subplots vertically dcnl fig tools make subplots rows 2 dcnl this is the format of your plot grid dcnl 1 1 x1 y1 dcnl 2 1 x2 y2 dcnl fig data + scatter x 1 2 3 y 2 1 2 dcnl fig data + scatter x 1 2 3 y 2 1 2 xaxis x2 yaxis y2 dcnl or see figure append trace dcnl example 2 dcnl subplots with shared x axes dcnl fig tools make subplots rows 2 shared xaxes true dcnl this is the format of your plot grid dcnl 1 1 x1 y1 dcnl 2 1 x1 y2 dcnl fig data + scatter x 1 2 3 y 2 1 2 dcnl fig data + scatter x 1 2 3 y 2 1 2 yaxis y2 dcnl example 3 dcnl irregular subplot layout more examples below under specs dcnl fig tools make subplots rows 2 cols 2 dcnl specs dcnl colspan 2 none dcnl this is the format of your plot grid dcnl 1 1 x1 y1 1 2 x2 y2 dcnl 2 1 x3 y3 dcnl fig data + scatter x 1 2 3 y 2 1 2 dcnl fig data + scatter x 1 2 3 y 2 1 2 xaxis x2 yaxis y2 dcnl fig data + scatter x 1 2 3 y 2 1 2 xaxis x3 yaxis y3 dcnl example 4 dcnl insets dcnl fig tools make subplots insets cell 1 1 l 0 7 b 0 3 dcnl this is the format of your plot grid dcnl 1 1 x1 y1 dcnl with insets dcnl x2 y2 over 1 1 x1 y1 dcnl fig data + scatter x 1 2 3 y 2 1 2 dcnl fig data + scatter x 1 2 3 y 2 1 2 xaxis x2 yaxis y2 dcnl example 5 dcnl include subplot titles dcnl fig tools make subplots rows 2 subplot titles plot 1 plot 2 dcnl this is the format of your plot grid dcnl 1 1 x1 y1 dcnl 2 1 x2 y2 dcnl fig data + scatter x 1 2 3 y 2 1 2 dcnl fig data + scatter x 1 2 3 y 2 1 2 xaxis x2 yaxis y2 dcnl example 6 dcnl include subplot title on one plot but not all dcnl fig tools make subplots insets cell 1 1 l 0 7 b 0 3 dcnl subplot titles inset dcnl this is the format of your plot grid dcnl 1 1 x1 y1 dcnl with insets dcnl x2 y2 over 1 1 x1 y1 dcnl fig data + scatter x 1 2 3 y 2 1 2 dcnl fig data + scatter x 1 2 3 y 2 1 2 xaxis x2 yaxis y2 dcnl keywords arguments with constant defaults dcnl rows kwarg int greater than 0 default 1 dcnl number of rows in the subplot grid dcnl cols kwarg int greater than 0 default 1 dcnl number of columns in the subplot grid dcnl shared xaxes kwarg boolean or list default false dcnl assign shared x axes dcnl if true subplots in the same grid column have one common dcnl shared xaxis at the bottom of the gird dcnl to assign shared x axes per subplot grid cell see specs dcnl send list or list of lists one list per shared x axis dcnl of cell index tuples dcnl shared yaxes kwarg boolean or list default false dcnl assign shared y axes dcnl if true subplots in the same grid row have one common dcnl shared yaxis on the lefthand side of the gird dcnl to assign shared y axes per subplot grid cell see specs dcnl send list or list of lists one list per shared y axis dcnl of cell index tuples dcnl start cell kwarg bottomleft or topleft default topleft dcnl choose the starting cell in the subplot grid used to set the dcnl domains of the subplots dcnl print grid kwarg boolean default true dcnl if true prints a tabdelimited string representation of dcnl your plot grid dcnl keyword arguments with variable defaults dcnl horizontal spacing kwarg float in 0 1 default 0 2 cols dcnl space between subplot columns dcnl applies to all columns use specs subplotdependents spacing dcnl vertical spacing kwarg float in 0 1 default 0 3 rows dcnl space between subplot rows dcnl applies to all rows use specs subplotdependents spacing dcnl subplot titles kwarg list of strings default empty list dcnl title of each subplot dcnl can be included in the list if no subplot title is desired in dcnl that space so that the titles are properly indexed dcnl specs kwarg list of lists of dictionaries dcnl subplot specifications dcnl ex1 specs colspan 2 none dcnl ex2 specs rowspan 2 none dcnl indices of the outer list correspond to subplot grid rows dcnl starting from the bottom the number of rows in specs dcnl must be equal to rows dcnl indices of the inner lists correspond to subplot grid columns dcnl starting from the left the number of columns in specs dcnl must be equal to cols dcnl each item in the specs list corresponds to one subplot dcnl in a subplot grid n b the subplot grid has exactly rows dcnl times cols cells dcnl use none for blank a subplot cell or to move pass a col row span dcnl note that specs00 has the specs of the start cell subplot dcnl each item in specs is a dictionary dcnl the available keys are dcnl is 3d boolean default false flag for 3d scenes dcnl colspan int default 1 number of subplot columns dcnl for this subplot to span dcnl rowspan int default 1 number of subplot rows dcnl for this subplot to span dcnl l float default 0 0 padding left of cell dcnl r float default 0 0 padding right of cell dcnl t float default 0 0 padding right of cell dcnl b float default 0 0 padding bottom of cell dcnl use horizontal spacing and vertical spacing to adjust dcnl the spacing in between the subplots dcnl insets kwarg list of dictionaries dcnl inset specifications dcnl each item in insets is a dictionary dcnl the available keys are dcnl cell tuple default 1 1 row col index of the dcnl subplot cell to overlay inset axes onto dcnl is 3d boolean default false flag for 3d scenes dcnl l float default 0 0 padding left of inset dcnl in fraction of cell width dcnl w float or to end default to end inset width dcnl in fraction of cell width to end to cell right edge dcnl b float default 0 0 padding bottom of inset dcnl in fraction of cell height dcnl h float or to end default to end inset height dcnl in fraction of cell height to end to cell top edge
returns a new graph object that won t raise dcnl careful this will silently strip out invalid pieces of the object
validate a dictionary list or graph object as obj type dcnl this will not alter the obj referenced in the call signature it will dcnl raise an error if the obj reference could not be instantiated as a dcnl valid obj type graph object
replaces dcnl with <br for all strings in a collection
load graph reference json aka plotschema dcnl return dict the graph reference
single function to handle turning object names into class names dcnl graph reference has names like error y which we ll turn into errory dcnl param str string a string that we ll turn into a class name string dcnl return str
not all objects have classes autogenerated
returns all attribute information given the context of parents dcnl the response has the form dcnl some path dcnl some other path dcnl additional attributes dcnl there may be any number of paths mapping to attribute dicts there will be dcnl one attribute dict under additional attributes which will usually be dcnl empty dcnl param str|unicode object name the object name whose attributes we want dcnl param liststr|unicode parent object names names of parent objects dcnl return dict
return a location within a figure from a path existing in graph reference dcnl users don t need to know about graph reference so yielding information dcnl about paths there would only be confusing also the implementation and dcnl structure there may change but figure structure won t dcnl param tuplestr attribute container path an object should exist here dcnl return tuplestr a tuple of object names dcnl example dcnl in traces pie attributes marker dcnl out figure data pie marker
private more easily memoized version of get role
values have types associated with them based on graph reference dcnl data type values are always kept dcnl style values are kept if they re sequences but not strings dcnl param str object name the name of the object containing attribute dcnl param str attribute the attribute we want the role of dcnl param value if the value is an array the return can be different dcnl param parent object names an iterable of obj names from graph reference dcnl returns str this will be data style or info
check if a sub path is valid given an iterable of parent paths dcnl param tuplestr path the path that may be a sub path dcnl param listtuple parent paths the known parent paths dcnl return bool dcnl examples dcnl a b c is a valid subpath of a dcnl a d is not a valid subpath of b dcnl a is not a valid subpath of a b dcnl anything is a valid subpath of
create a reorganization of graph reference which organizes by object name dcnl each object can have many different definitions in the graph reference dcnl these possibilities get narrowed down when we have contextual information dcnl about parent objects for instance marker in scatter has a different dcnl definition than marker in pie however we need marker scatter and pie dcnl to exist on their own as well dcnl each value has the form dcnl meta paths dcnl attribute paths dcnl additional attributes dcnl meta paths describes the topmost path where this object is defined dcnl attribute paths describes all the locations where attributes exist dcnl additional attributes can be used to hardcode patch the plot schema dcnl return dict
things like layout figure and data need to be included
very few arrays but this dict is the complement of objects
adds information on our eventual data array
we eventually make classes out of the objects in graph reference dcnl return dict a mapping of class names to object names
returns an internal sequence dictionary update
returns the requests tuple auth for a given url from netrc
tries to guess the filename of the given object
take an object and test to see if it can be represented as a dcnl dictionary unless it can not be represented as such return an dcnl ordereddict e g dcnl from key val list key val dcnl ordereddict key val dcnl from key val list string dcnl valueerror need more than 1 value to unpack dcnl from key val list key val dcnl ordereddict key val
take an object and test to see if it can be represented as a dcnl dictionary if it can be return a list of tuples e g dcnl to key val list key val dcnl key val dcnl to key val list key val dcnl key val dcnl to key val list string dcnl valueerror cannot encode objects that are not 2tuples
parse lists as described by rfc 2068 section 2 dcnl in particular parse commaseparated lists where the elements of dcnl the list may include quotedstrings a quotedstring could dcnl contain a comma a nonquoted string could have quotes in the dcnl middle quotes are removed automatically after parsing dcnl it basically works like func parse set header just that items dcnl may appear multiple times and case sensitivity is preserved dcnl the return value is a standard class list dcnl parse list header token quoted value dcnl token quoted value dcnl to create a header from the class list again use the dcnl func dump header function dcnl param value a string with a list header dcnl return class list
parse lists of key value pairs as described by rfc 2068 section 2 and dcnl convert them into a python dict dcnl d parse dict header foo is a fish bar as well dcnl type d is dict dcnl true dcnl sorted d items dcnl bar as well foo is a fish dcnl if there is no value for a key it will be none dcnl parse dict header key without value dcnl key without value none dcnl to create a header from the class dict again use the dcnl func dump header function dcnl param value a string with a dict header dcnl return class dict
unquotes a header value reversal of func quote header value dcnl this does not use the real unquoting but what browsers are actually dcnl using for quoting dcnl param value the header value to unquote
returns a key value dictionary from a cookiejar dcnl param cj cookiejar object to extract cookies from
returns a cookiejar from a key value dictionary dcnl param cj cookiejar to insert cookies into dcnl param cookie dict dict of key values to insert into cookiejar
returns encodings from given content string dcnl param content bytestring to extract encodings from
returns encodings from given http header dict dcnl param headers dictionary to extract encoding from
stream decodes a iterator
iterate over slices of a string
returns the requested content back in unicode dcnl param r response object to get unicode content from dcnl tried dcnl 1 charset from contenttype dcnl 2 every encodings from <meta charset xxx dcnl 3 fall back and replace all unicode characters
stream decodes an iterator over compressed data dcnl param iterator an iterator over compressed data dcnl param mode gzip or deflate dcnl return an iterator over decompressed data
unescape any percentescape sequences in a uri that are unreserved dcnl characters this leaves all reserved illegal and nonascii bytes encoded
requote the given uri dcnl this function passes the given uri through an unquote quote cycle to dcnl ensure that it is fully and consistently quoted
return a dict of environment proxies
return a string representing the default user agent
return a dict of parsed link headers proxies dcnl i e link <http front jpeg rel front type image jpeg <http back jpeg rel back type image jpeg
given a url that may or may not have a scheme prepend the given scheme dcnl does not replace a present scheme with the one provided as an argument
extract the cookies from the response into a cookiejar dcnl param jar cookielib cookiejar not necessarily a requestscookiejar dcnl param request our own requests request object dcnl param response urllib3 httpresponse object
produce an appropriate cookie header string to be sent with request or none
unsets a cookie by name by default over all domains and paths dcnl wraps cookiejar clear is o n
make a cookie from underspecified parameters dcnl by default the pair of name and value will be set for the domain dcnl and sent on every request this is sometimes called a supercookie
convert a morsel object into a cookie containing the one k v pair
returns a cookiejar from a key value dictionary dcnl param cookie dict dict of key values to insert into cookiejar
add documentation to a function
import module returning the module after the last dot
add an item to six moves
remove item from six moves
return an iterator over the keys of a dictionary
return an iterator over the values of a dictionary
return an iterator over the key value pairs of a dictionary
create a base class with a metaclass
verify that cert in decoded format as returned by dcnl sslsocket getpeercert matches the hostname rfc 2818 rules dcnl are mostly followed but ip addresses are not accepted for hostname dcnl certificateerror is raised on failure on success the function dcnl returns nothing
helper for quickly adding a streamhandler to the logger useful for dcnl debugging dcnl returns the handler after adding it
given a string and an iterable of delimiters split on the first found dcnl delimiter return two split parts and the matched delimiter dcnl if not found then the first part is the full input string dcnl example dcnl split first foo bar baz dcnl foo bar baz dcnl split first foo bar baz 123 dcnl foo bar baz none dcnl scales linearly with number of delims not ideal for large number of delims
given a url return a parsed class url namedtuple besteffort is dcnl performed to parse incomplete urls fields not provided will be none dcnl partly backwardscompatible with mod urlparse dcnl example dcnl parse url http google com mail dcnl url scheme http host google com port none path dcnl parse url google com 80 dcnl url scheme none host google com port 80 path none dcnl parse url foo bar dcnl url scheme none host none port none path foo query bar
deprecated use func parse url instead
shortcuts for generating request headers dcnl param keep alive dcnl if true adds connection keepalive header dcnl param accept encoding dcnl can be a boolean list or string dcnl true translates to gzip deflate dcnl list will get joined by comma dcnl string will be used as provided dcnl param user agent dcnl string representing the useragent you want such as dcnl pythonurllib3 0 6 dcnl param basic auth dcnl colonseparated username password string for authorization basic dcnl auth header dcnl example dcnl make headers keep alive true user agent batman 1 0 dcnl connection keepalive useragent batman 1 0 dcnl make headers accept encoding true dcnl acceptencoding gzip deflate
returns true if the connection is dropped and should be closed dcnl param conn dcnl class httplib httpconnection object dcnl note for platforms like appengine this will always return false to dcnl let the platform handle connection recycling transparently for us
our embarassinglysimple replacement for mimetools choose boundary
iterate over fields dcnl supports list of k v tuples and dicts
encode a dictionary of fields using the multipart formdata mime format dcnl param fields dcnl dictionary of fields or list of key value or key value mime type dcnl field tuples the key is treated as the field name and the value as dcnl the body of the formdata bytes if the value is a tuple of two dcnl elements then the first element is treated as the filename of the dcnl formdata section and a suitable mime type is guessed based on the dcnl filename if the value is a tuple of three elements then the third dcnl element is treated as an explicit mime type of the formdata section dcnl field names and filenames must be unicode dcnl param boundary dcnl if not specified then a random boundary will be generated using dcnl func mimetools choose boundary
given a url return an class connectionpool instance of its host dcnl this is a shortcut for not having to parse out the scheme host and port dcnl of the url before creating an class connectionpool instance dcnl param url dcnl absolute url string that must include the scheme port is optional dcnl param kw dcnl passes additional parameters to the constructor of the appropriate dcnl class connectionpool useful for specifying things like dcnl timeout maxsize headers etc dcnl example dcnl conn connection from url http google com dcnl r conn request get
returns a basic auth string
dispatches a hook dictionary on a given piece of data
merges kwarg dictionaries dcnl if a local key in the dictionary is set to none it will be removed
returns a class session for contextmanagement
constructs and sends a class request <request dcnl returns class response <response object dcnl param method method for the new class request object dcnl param url url for the new class request object dcnl param params optional dictionary or bytes to be sent in the query string for the class request dcnl param data optional dictionary bytes or filelike object to send in the body of the class request dcnl param headers optional dictionary of http headers to send with the class request dcnl param cookies optional dict or cookiejar object to send with the class request dcnl param files optional dictionary of name filelikeobjects or name filename fileobj for multipart encoding upload dcnl param auth optional auth tuple to enable basic digest custom http auth dcnl param timeout optional float describing the timeout of the request dcnl param allow redirects optional boolean set to true if post put delete redirect following is allowed dcnl param proxies optional dictionary mapping protocol to the url of the proxy dcnl param verify optional if true the ssl cert will be verified a ca bundle path can also be provided dcnl param stream optional if false the response content will be immediately downloaded dcnl param cert optional if string path to ssl client cert file pem if tuple cert key pair dcnl usage dcnl import requests dcnl req requests request get http httpbin org get dcnl <response 200
sends a get request returns class response object dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes
sends a options request returns class response object dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes
sends a head request returns class response object dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes
sends a post request returns class response object dcnl param url url for the new class request object dcnl param data optional dictionary bytes or filelike object to send in the body of the class request dcnl param kwargs optional arguments that request takes
sends a put request returns class response object dcnl param url url for the new class request object dcnl param data optional dictionary bytes or filelike object to send in the body of the class request dcnl param kwargs optional arguments that request takes
sends a patch request returns class response object dcnl param url url for the new class request object dcnl param data optional dictionary bytes or filelike object to send in the body of the class request dcnl param kwargs optional arguments that request takes
sends a delete request returns class response object dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes
return the preferred certificate bundle
convert a list of items to an alfred xml feedback message
popup a dialog to request some piece of information dcnl the main use for this function is to request information that you don t dcnl want showing up in alfred s command history
display a message dialog
lookup a location which can be a zip city address etc
get a forecast for a location dcnl the location must be lat lng e g 38 5 85 234
output a string
get an the location and units to use
tell the current conditions and forecast for a location
tell something
do something
get the current conditions and a 4day forecast for a location dcnl the location may be latitude longitude 39 452 18 234 a us zip code dcnl or a state city path like oh fairborn or ny new york
return autocomplete values for a query
configure cache storage and patch requests library to transparently cache responses dcnl param cache name for sqlite backend cache file will start with this prefix dcnl e g cache sqlite dcnl for mongodb it s used as database name dcnl param backend cache backend e g sqlite mongodb memory dcnl see ref persistence dcnl param expire after number of minutes after cache will be expired dcnl or none default to ignore expiration dcnl type expire after int float or none dcnl param allowable codes limit caching only for response with this codes default 200 dcnl type allowable codes tuple dcnl param allowable methods cache only requests of this methods default get dcnl type allowable methods tuple dcnl param monkey patch patch requests request send if true default otherwise dcnl cache will not work until calling func redo patch dcnl or using func enabled context manager dcnl kwarg backend options options for chosen backend see corresponding dcnl ref sqlite <backends sqlite and ref mongo <backends mongo backends api documentation
returns true if cache has url false otherwise
context manager for temporary disabling cache dcnl with requests cache disabled dcnl request get http httpbin org ip dcnl request get http httpbin org get
context manager for temporary enabling cache dcnl with requests cache enabled dcnl request get http httpbin org ip dcnl request get http httpbin org get
clear cache
undo requests monkey patch
redo requests monkey patch
returns internal cache object
deletes all cache for url
try to pick an available ca certificate bundle provided by the os
returns an internal sequence dictionary update
returns the requests tuple auth for a given url from netrc
tries to guess the filename of the given object
take an object and test to see if it can be represented as a dcnl dictionary unless it can not be represented as such return an dcnl ordereddict e g dcnl from key val list key val dcnl ordereddict key val dcnl from key val list string dcnl valueerror need more than 1 value to unpack dcnl from key val list key val dcnl ordereddict key val
take an object and test to see if it can be represented as a dcnl dictionary if it can be return a list of tuples e g dcnl to key val list key val dcnl key val dcnl to key val list key val dcnl key val dcnl to key val list string dcnl valueerror cannot encode objects that are not 2tuples
parse lists as described by rfc 2068 section 2 dcnl in particular parse commaseparated lists where the elements of dcnl the list may include quotedstrings a quotedstring could dcnl contain a comma a nonquoted string could have quotes in the dcnl middle quotes are removed automatically after parsing dcnl it basically works like func parse set header just that items dcnl may appear multiple times and case sensitivity is preserved dcnl the return value is a standard class list dcnl parse list header token quoted value dcnl token quoted value dcnl to create a header from the class list again use the dcnl func dump header function dcnl param value a string with a list header dcnl return class list
parse lists of key value pairs as described by rfc 2068 section 2 and dcnl convert them into a python dict dcnl d parse dict header foo is a fish bar as well dcnl type d is dict dcnl true dcnl sorted d items dcnl bar as well foo is a fish dcnl if there is no value for a key it will be none dcnl parse dict header key without value dcnl key without value none dcnl to create a header from the class dict again use the dcnl func dump header function dcnl param value a string with a dict header dcnl return class dict
unquotes a header value reversal of func quote header value dcnl this does not use the real unquoting but what browsers are actually dcnl using for quoting dcnl param value the header value to unquote
returns an http header value string from a dictionary dcnl example expansion dcnl text xdvi q 8 mxb 100000 mxt 5 0 text xc dcnl accept text xdvi q 8 mxb 100000 mxt 5 0 text xc dcnl text xdvi q 8 mxb 100000 mxt 5 0 text xc dcnl accept text xdvi q 8 mxb 100000 mxt 5 0 text xc
returns a key value dictionary from a cookiejar dcnl param cj cookiejar object to extract cookies from
returns a cookiejar from a key value dictionary dcnl param cj cookiejar to insert cookies into dcnl param cookie dict dict of key values to insert into cookiejar
returns encodings from given content string dcnl param content bytestring to extract encodings from
returns encodings from given http header dict dcnl param headers dictionary to extract encoding from
stream decodes a iterator
iterate over slices of a string
returns the requested content back in unicode dcnl param r response object to get unicode content from dcnl tried dcnl 1 charset from contenttype dcnl 2 every encodings from <meta charset xxx dcnl 3 fall back and replace all unicode characters
stream decodes an iterator over compressed data dcnl param iterator an iterator over compressed data dcnl param mode gzip or deflate dcnl return an iterator over decompressed data
unescape any percentescape sequences in a uri that are unreserved dcnl characters this leaves all reserved illegal and nonascii bytes encoded
requote the given uri dcnl this function passes the given uri through an unquote quote cycle to dcnl ensure that it is fully and consistently quoted
return a dict of environment proxies
return a string representing the default user agent
return a dict of parsed link headers proxies dcnl i e link <http front jpeg rel front type image jpeg <http back jpeg rel back type image jpeg
extract the cookies from the response into a cookiejar dcnl param jar cookielib cookiejar not necessarily a requestscookiejar dcnl param request our own requests request object dcnl param response urllib3 httpresponse object
produce an appropriate cookie header string to be sent with request or none
unsets a cookie by name by default over all domains and paths dcnl wraps cookiejar clear is o n
make a cookie from underspecified parameters dcnl by default the pair of name and value will be set for the domain dcnl and sent on every request this is sometimes called a supercookie
convert a morsel object into a cookie containing the one k v pair
returns a cookiejar from a key value dictionary dcnl param cookie dict dict of key values to insert into cookiejar
decorator which filters params to remove nonoauth parameters dcnl assumes the decorated method takes a params dict or list of tuples as its dcnl first argument
removes all non oauth parameters from a dict or a list of params
escape a unicode string in an oauthcompatible fashion dcnl per section 3 6 of the spec dcnl section 3 6 http tools ietf org html rfc5849 section3 6
encode a sequence of twoelement tuples or dictionary into a url query string dcnl operates using an oauthsafe escape method in contrast to urllib urlencode
a unicodesafe version of urllib2 parse keqv list
a unicodesafe version of urllib2 parse http list
parse an oauth authorization header into a list of 2tuples
prepare the authorization header dcnl per section 3 5 1 of the spec dcnl protocol parameters can be transmitted using the http authorization dcnl header field as defined by rfc2617 with the authscheme name set to dcnl oauth case insensitive dcnl for example dcnl authorization oauth realm example dcnl oauth consumer key 0685bd9184jfhq22 dcnl oauth token ad180jjd733klru7 dcnl oauth signature method hmacsha1 dcnl oauth signature wojio9a2w5mfwdgidvzbtsmk 2fpy 3d dcnl oauth timestamp 137131200 dcnl oauth nonce 4572616e48616d6d65724c61686176 dcnl oauth version 1 0 dcnl section 3 5 1 http tools ietf org html rfc5849 section3 5 1 dcnl rfc2617 http tools ietf org html rfc2617
append oauth params to an existing set of parameters dcnl both params and oauth params is must be lists of 2tuples dcnl per section 3 5 2 and 3 5 3 of the spec dcnl section 3 5 2 http tools ietf org html rfc5849 section3 5 2 dcnl 3 5 3 http tools ietf org html rfc5849 section3 5 3
prepare the formencoded body dcnl per section 3 5 2 of the spec dcnl section 3 5 2 http tools ietf org html rfc5849 section3 5 2
prepare the request uri query dcnl per section 3 5 3 of the spec dcnl section 3 5 3 http tools ietf org html rfc5849 section3 5 3
extract hostname and port from uri dcnl will use default port for http and https if none is present in the uri
escape a string in an oauthcompatible fashion dcnl todo verify whether this can in fact be used for oauth 2
prepare the authorization grant request uri dcnl the client constructs the request uri by adding the following dcnl parameters to the query component of the authorization endpoint uri dcnl using the application xwwwformurlencoded format as defined by dcnl w3c rechtml40119991224 dcnl response type dcnl required value must be set to code dcnl client id dcnl required the client identifier as described in section 2 2 dcnl redirect uri dcnl optional as described in section 3 1 2 dcnl scope dcnl optional the scope of the access request as described by dcnl section 3 3 dcnl state dcnl recommended an opaque value used by the client to maintain dcnl state between the request and callback the authorization dcnl server includes this value when redirecting the useragent back dcnl to the client the parameter should be used for preventing dcnl crosssite request forgery as described in section 10 12 dcnl get authorize response type code client id s6bhdrkqt3 state xyz dcnl redirect uri https 3a 2f 2fclient 2eexample 2ecom 2fcb http 1 1 dcnl host server example com dcnl w3c rechtml40119991224 http tools ietf org html draftietfoauthv228 refw3c rechtml40119991224 dcnl section 2 2 http tools ietf org html draftietfoauthv228 section2 2 dcnl section 3 1 2 http tools ietf org html draftietfoauthv228 section3 1 2 dcnl section 3 3 http tools ietf org html draftietfoauthv228 section3 3 dcnl section 10 12 http tools ietf org html draftietfoauthv228 section10 12
prepare the access token request dcnl the client makes a request to the token endpoint by adding the dcnl following parameters using the application xwwwformurlencoded dcnl format in the http request entitybody dcnl grant type dcnl required value must be set to authorization code dcnl code dcnl required the authorization code received from the dcnl authorization server dcnl redirect uri dcnl required if the redirect uri parameter was included in the dcnl authorization request as described in section 4 1 1 and their dcnl values must be identical dcnl grant type authorization code code splxlobezqqybys6wxsbia dcnl redirect uri https 3a 2f 2fclient 2eexample 2ecom 2fcb dcnl section 4 1 1 http tools ietf org html draftietfoauthv228 section4 1 1
parse authorization grant response uri into a dict dcnl if the resource owner grants the access request the authorization dcnl server issues an authorization code and delivers it to the client by dcnl adding the following parameters to the query component of the dcnl redirection uri using the application xwwwformurlencoded format dcnl code dcnl required the authorization code generated by the dcnl authorization server the authorization code must expire dcnl shortly after it is issued to mitigate the risk of leaks a dcnl maximum authorization code lifetime of 10 minutes is dcnl recommended the client must not use the authorization code dcnl more than once if an authorization code is used more than dcnl once the authorization server must deny the request and should dcnl revoke when possible all tokens previously issued based on dcnl that authorization code the authorization code is bound to dcnl the client identifier and redirection uri dcnl state dcnl required if the state parameter was present in the client dcnl authorization request the exact value received from the dcnl client dcnl for example the authorization server redirects the useragent by dcnl sending the following http response dcnl http 1 1 302 found dcnl location https client example com cb code splxlobezqqybys6wxsbia dcnl state xyz
parse the implicit token response uri into a dict dcnl if the resource owner grants the access request the authorization dcnl server issues an access token and delivers it to the client by adding dcnl the following parameters to the fragment component of the redirection dcnl uri using the application xwwwformurlencoded format dcnl access token dcnl required the access token issued by the authorization server dcnl token type dcnl required the type of the token issued as described in dcnl section 7 1 value is case insensitive dcnl expires in dcnl recommended the lifetime in seconds of the access token for dcnl example the value 3600 denotes that the access token will dcnl expire in one hour from the time the response was generated dcnl if omitted the authorization server should provide the dcnl expiration time via other means or document the default value dcnl scope dcnl optional if identical to the scope requested by the client dcnl otherwise required the scope of the access token as described dcnl by section 3 3 dcnl state dcnl required if the state parameter was present in the client dcnl authorization request the exact value received from the dcnl client dcnl http 1 1 302 found dcnl location http example com cb access token 2yotnfzfejr1zcsicmwpaa dcnl state xyz token type example expires in 3600
parse the json token response body into a dict dcnl the authorization server issues an access token and optional refresh dcnl token and constructs the response by adding the following parameters dcnl to the entity body of the http response with a 200 ok status code dcnl access token dcnl required the access token issued by the authorization server dcnl token type dcnl required the type of the token issued as described in dcnl section 7 1 value is case insensitive dcnl expires in dcnl recommended the lifetime in seconds of the access token for dcnl example the value 3600 denotes that the access token will dcnl expire in one hour from the time the response was generated dcnl if omitted the authorization server should provide the dcnl expiration time via other means or document the default value dcnl refresh token dcnl optional the refresh token which can be used to obtain new dcnl access tokens using the same authorization grant as described dcnl in section 6 dcnl scope dcnl optional if identical to the scope requested by the client dcnl otherwise required the scope of the access token as described dcnl by section 3 3 dcnl the parameters are included in the entity body of the http response dcnl using the application json media type as defined by rfc4627 the dcnl parameters are serialized into a json structure by adding each dcnl parameter at the highest structure level parameter names and string dcnl values are included as json strings numerical values are included dcnl as json numbers the order of parameters does not matter and can dcnl vary dcnl for example dcnl http 1 1 200 ok dcnl contenttype application json charset utf8 dcnl cachecontrol nostore dcnl pragma nocache dcnl access token 2yotnfzfejr1zcsicmwpaa dcnl token type example dcnl expires in 3600 dcnl refresh token tgzv3jokf0xg5qx2tlkwia dcnl example parameter example value dcnl section 7 1 http tools ietf org html draftietfoauthv228 section7 1 dcnl section 6 http tools ietf org html draftietfoauthv228 section6 dcnl section 3 3 http tools ietf org html draftietfoauthv228 section3 3 dcnl rfc4627 http tools ietf org html rfc4627
ensures token precence token type expiration and scope in params
add an mac access authentication signature to headers dcnl unlike oauth 1 this hmac signature does not require inclusion of the request dcnl payload body neither does it use a combination of client secret and dcnl token secret but rather a mac key provided together with the access token dcnl currently two algorithms are supported hmacsha1 and hmacsha256 dcnl extension algorithms are not supported dcnl example mac authorization header linebreaks added for clarity dcnl authorization mac id h480djs93hd8 dcnl nonce 1336363200 dj83hs9s dcnl mac bhcqxtvyfj5cma9ukkpfx1zeoxm dcnl mac access authentication http tools ietf org html draftietfoauthv2httpmac01 dcnl extension algorithms http tools ietf org html draftietfoauthv2httpmac01 section7 1 dcnl param uri request uri dcnl param headers request headers as a dictionary dcnl param http method http request method dcnl param key mac given provided by token endpoint dcnl param algorithm hmac algorithm provided by token endpoint dcnl return headers dictionary with the authorization field added
add a bearer token to the request uri dcnl not recommended use only if client can t use authorization header or body dcnl http www example com path access token h480djs93hd8 dcnl bearer token http tools ietf org html draftietfoauthv2bearer18
add a bearer token to the request uri dcnl recommended method of passing bearer tokens dcnl authorization bearer h480djs93hd8 dcnl bearer token http tools ietf org html draftietfoauthv2bearer18
add a bearer token to the request body dcnl access token h480djs93hd8 dcnl bearer token http tools ietf org html draftietfoauthv2bearer18
ensures that all parameters in a list of 2element tuples are encoded to dcnl bytestrings using utf8
ensures that all parameters in a list of 2element tuples are decoded to dcnl unicode using utf8
decode a query string in xwwwformurlencoded format into a sequence dcnl of twoelement tuples dcnl unlike urlparse parse qsl strict parsing true urldecode will enforce dcnl correct formatting of the query string by validation if validation fails dcnl a valueerror will be raised urllib parse qsl will only raise errors if dcnl any of namevalue pairs omits the equals sign
extract parameters and return them as a list of 2tuples dcnl will successfully extract parameters from urlencoded query strings dcnl dicts or lists of 2tuples empty strings dicts lists will return an dcnl empty list of parameters any other input will result in a return dcnl value of none
generate pseudorandom nonce that is unlikely to repeat dcnl per section 3 3 of the oauth 1 rfc 5849 spec dcnl per section 3 2 1 of the mac access authentication spec dcnl a random 64bit number is appended to the epoch timestamp for both dcnl randomness and to decrease the likelihood of collisions dcnl section 3 2 1 http tools ietf org html draftietfoauthv2httpmac01 section3 2 1 dcnl section 3 3 http tools ietf org html rfc5849 section3 3
get seconds since epoch utc dcnl per section 3 3 of the oauth 1 rfc 5849 spec dcnl per section 3 2 1 of the mac access authentication spec dcnl section 3 2 1 http tools ietf org html draftietfoauthv2httpmac01 section3 2 1 dcnl section 3 3 http tools ietf org html rfc5849 section3 3
generates a nonguessable oauth token dcnl oauth 1 and 2 does not specify the format of tokens except that they dcnl should be strings of random characters tokens should not be guessable dcnl and entropy when generating the random characters is important which is dcnl why systemrandom is used instead of the default random choice method
extend a query with a list of twotuples
add a list of twotuples to the uri query components
nearconstant time string comparison dcnl used in order to avoid timing attacks on sensitive information such dcnl as secret keys during request verification rootlabs dcnl rootlabs http rdist root org 2010 01 07 timingindependentarraycomparison
add documentation to a function
import module returning the module after the last dot
add an item to six moves
remove item from six moves
return an iterator over the keys of a dictionary
return an iterator over the values of a dictionary
return an iterator over the key value pairs of a dictionary
create a base class with a metaclass
verify that cert in decoded format as returned by dcnl sslsocket getpeercert matches the hostname rfc 2818 rules dcnl are mostly followed but ip addresses are not accepted for hostname dcnl certificateerror is raised on failure on success the function dcnl returns nothing
helper for quickly adding a streamhandler to the logger useful for dcnl debugging dcnl returns the handler after adding it
given a string and an iterable of delimiters split on the first found dcnl delimiter return two split parts and the matched delimiter dcnl if not found then the first part is the full input string dcnl example dcnl split first foo bar baz dcnl foo bar baz dcnl split first foo bar baz 123 dcnl foo bar baz none dcnl scales linearly with number of delims not ideal for large number of delims
given a url return a parsed class url namedtuple besteffort is dcnl performed to parse incomplete urls fields not provided will be none dcnl partly backwardscompatible with mod urlparse dcnl example dcnl parse url http google com mail dcnl url scheme http host google com port none path dcnl prase url google com 80 dcnl url scheme none host google com port 80 path none dcnl prase url foo bar dcnl url scheme none host none port none path foo query bar
deprecated use func parse url instead
shortcuts for generating request headers dcnl param keep alive dcnl if true adds connection keepalive header dcnl param accept encoding dcnl can be a boolean list or string dcnl true translates to gzip deflate dcnl list will get joined by comma dcnl string will be used as provided dcnl param user agent dcnl string representing the useragent you want such as dcnl pythonurllib3 0 6 dcnl param basic auth dcnl colonseparated username password string for authorization basic dcnl auth header dcnl example dcnl make headers keep alive true user agent batman 1 0 dcnl connection keepalive useragent batman 1 0 dcnl make headers accept encoding true dcnl acceptencoding gzip deflate
returns true if the connection is dropped and should be closed dcnl param conn dcnl class httplib httpconnection object dcnl note for platforms like appengine this will always return false to dcnl let the platform handle connection recycling transparently for us
our embarassinglysimple replacement for mimetools choose boundary
iterate over fields dcnl supports list of k v tuples and dicts
encode a dictionary of fields using the multipart formdata mime format dcnl param fields dcnl dictionary of fields or list of key value field tuples the key is dcnl treated as the field name and the value as the body of the formdata dcnl bytes if the value is a tuple of two elements then the first element dcnl is treated as the filename of the formdata section dcnl field names and filenames must be unicode dcnl param boundary dcnl if not specified then a random boundary will be generated using dcnl func mimetools choose boundary
given a url return an class connectionpool instance of its host dcnl this is a shortcut for not having to parse out the scheme host and port dcnl of the url before creating an class connectionpool instance dcnl param url dcnl absolute url string that must include the scheme port is optional dcnl param kw dcnl passes additional parameters to the constructor of the appropriate dcnl class connectionpool useful for specifying things like dcnl timeout maxsize headers etc dcnl example dcnl conn connection from url http google com dcnl r conn request get
returns a basic auth string
extracts the gssapi authentication token from the appropriate header
dispatches a hook dictionary on a given piece of data
merges kwarg dictionaries dcnl if a local key in the dictionary is set to none it will be removed
returns a class session for contextmanagement
new implementation of safe mode we catch all exceptions at the api level dcnl and then return a blank response object with the error field filled this decorator dcnl wraps request in api py
constructs and sends a class request <request dcnl returns class response <response object dcnl param method method for the new class request object dcnl param url url for the new class request object dcnl param params optional dictionary or bytes to be sent in the query string for the class request dcnl param data optional dictionary or bytes to send in the body of the class request dcnl param headers optional dictionary of http headers to send with the class request dcnl param cookies optional dict or cookiejar object to send with the class request dcnl param files optional dictionary of name filelikeobjects or name filename fileobj for multipart encoding upload dcnl param auth optional auth tuple to enable basic digest custom http auth dcnl param timeout optional float describing the timeout of the request dcnl param allow redirects optional boolean set to true if post put delete redirect following is allowed dcnl param proxies optional dictionary mapping protocol to the url of the proxy dcnl param return response optional if false an unsent request object will returned dcnl param session optional a class session object to be used for the request dcnl param config optional a configuration dictionary see request defaults for allowed keys and their default values dcnl param verify optional if true the ssl cert will be verified a ca bundle path can also be provided dcnl param prefetch optional if true the response content will be immediately downloaded dcnl param cert optional if string path to ssl client cert file pem if tuple cert key pair
sends a get request returns class response object dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes
sends a options request returns class response object dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes
sends a head request returns class response object dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes
sends a post request returns class response object dcnl param url url for the new class request object dcnl param data optional dictionary or bytes to send in the body of the class request dcnl param kwargs optional arguments that request takes
sends a put request returns class response object dcnl param url url for the new class request object dcnl param data optional dictionary or bytes to send in the body of the class request dcnl param kwargs optional arguments that request takes
sends a patch request returns class response object dcnl param url url for the new class request object dcnl param data optional dictionary or bytes to send in the body of the class request dcnl param kwargs optional arguments that request takes
sends a delete request returns class response object dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes
copy treebuilders from the given module into this module
alias one attribute name to another for backward compatibility
displays initial options
gets a list if compatible workflows
displays all alleyoop compatible workflows
displays all available updates
resets the cache
automatically log the current function details
downloads all available updates
returns a list of instances with a given name
url filename or string stream dcnl this function lets you define parsers that take any input source dcnl url pathname to local or network file or actual data as a string dcnl and deal with it in a uniform manner returned object is guaranteed dcnl to have all the basic stdio read methods read readline readlines dcnl just close the object when you re done with it dcnl if the etag argument is supplied it will be used as the value of an dcnl ifnonematch request header dcnl if the modified argument is supplied it can be a tuple of 9 integers dcnl as returned by gmtime in the standard python time module or a date dcnl string in any format supported by feedparser regardless it must dcnl be in gmt greenwich mean time it will be reformatted into an dcnl rfc 1123compliant date and used as the value of an ifmodifiedsince dcnl request header dcnl if the agent argument is supplied it will be used as the value of a dcnl useragent request header dcnl if the referrer argument is supplied it will be used as the value of a dcnl referersic request header dcnl if handlers is supplied it is a list of handlers used to build a dcnl urllib2 opener dcnl if request headers is supplied it is a dictionary of http request headers dcnl that will override the values generated by feedparser
convert a url to idn notation
register a date handler function takes string returns 9tuple date in gmt
parse a variety of iso8601compatible formats like 20040105
parse a string according to the onblog 8bit date format
parse a string according to the nate 8bit date format
parse a string according to a greek 8bit date format
parse a string according to a hungarian 8bit date format
parse rfc 822 dates and times with one minor dcnl difference years may be 4digit or 2digit dcnl http tools ietf org html rfc822 section5
parse date format similar to rfc 822 but dcnl the comma after the dayname is optional and dcnl month day are inverted
parse asctimestyle dates
parse a date in yyyy mm dd hh mm ss ttt format
parses a variety of date formats into a 9tuple in gmt
detect and convert the character encoding to utf8 dcnl http headers is a dictionary dcnl data is a raw string not unicode
strips and replaces the doctype returns rss version stripped data dcnl rss version may be rss091n or none dcnl stripped data is the same xml document with a replaced doctype
parse a feed from a url file stream or string dcnl request headers if given is a dict from http header name to value to add dcnl to the request this overrides internally generated values
returns an internal sequence dictionary update
returns the requests tuple auth for a given url from netrc
tries to guess the filename of the given object
take an object and test to see if it can be represented as a dcnl dictionary unless it can not be represented as such return an dcnl ordereddict e g dcnl from key val list key val dcnl ordereddict key val dcnl from key val list string dcnl valueerror need more than 1 value to unpack dcnl from key val list key val dcnl ordereddict key val
take an object and test to see if it can be represented as a dcnl dictionary if it can be return a list of tuples e g dcnl to key val list key val dcnl key val dcnl to key val list key val dcnl key val dcnl to key val list string dcnl valueerror cannot encode objects that are not 2tuples
parse lists as described by rfc 2068 section 2 dcnl in particular parse commaseparated lists where the elements of dcnl the list may include quotedstrings a quotedstring could dcnl contain a comma a nonquoted string could have quotes in the dcnl middle quotes are removed automatically after parsing dcnl it basically works like func parse set header just that items dcnl may appear multiple times and case sensitivity is preserved dcnl the return value is a standard class list dcnl parse list header token quoted value dcnl token quoted value dcnl to create a header from the class list again use the dcnl func dump header function dcnl param value a string with a list header dcnl return class list
parse lists of key value pairs as described by rfc 2068 section 2 and dcnl convert them into a python dict dcnl d parse dict header foo is a fish bar as well dcnl type d is dict dcnl true dcnl sorted d items dcnl bar as well foo is a fish dcnl if there is no value for a key it will be none dcnl parse dict header key without value dcnl key without value none dcnl to create a header from the class dict again use the dcnl func dump header function dcnl param value a string with a dict header dcnl return class dict
unquotes a header value reversal of func quote header value dcnl this does not use the real unquoting but what browsers are actually dcnl using for quoting dcnl param value the header value to unquote
returns a key value dictionary from a cookiejar dcnl param cj cookiejar object to extract cookies from
returns a cookiejar from a key value dictionary dcnl param cj cookiejar to insert cookies into dcnl param cookie dict dict of key values to insert into cookiejar
returns encodings from given content string dcnl param content bytestring to extract encodings from
returns encodings from given http header dict dcnl param headers dictionary to extract encoding from
stream decodes a iterator
iterate over slices of a string
returns the requested content back in unicode dcnl param r response object to get unicode content from dcnl tried dcnl 1 charset from contenttype dcnl 2 fall back and replace all unicode characters
unescape any percentescape sequences in a uri that are unreserved dcnl characters this leaves all reserved illegal and nonascii bytes encoded
requote the given uri dcnl this function passes the given uri through an unquote quote cycle to dcnl ensure that it is fully and consistently quoted
this function allows you to check if on ip belongs to a network subnet dcnl example returns true if ip 192 168 1 1 and net 192 168 1 0 24 dcnl returns false if ip 192 168 1 1 and net 192 168 100 0 24
converts mask from xx format to xxx xxx xxx xxx dcnl example if mask is 24 function returns 255 255 255 0
very simple check of the cidr format in no proxy variable
returns whether we should bypass proxies or not
return a dict of environment proxies
select a proxy for the url if applicable dcnl param url the url being for the request dcnl param proxies a dictionary of schemes or schemes and hosts to proxy urls
return a string representing the default user agent
return a dict of parsed link headers proxies dcnl i e link <http front jpeg rel front type image jpeg <http back jpeg rel back type image jpeg
given a url that may or may not have a scheme prepend the given scheme dcnl does not replace a present scheme with the one provided as an argument
given a url with authentication components extract them into a tuple of dcnl username password
given a string object regardless of type returns a representation of that dcnl string in the native string type encoding and decoding where necessary dcnl this assumes ascii unless told otherwise
given a url remove the fragment and the authentication part
extract the cookies from the response into a cookiejar dcnl param jar cookielib cookiejar not necessarily a requestscookiejar dcnl param request our own requests request object dcnl param response urllib3 httpresponse object
produce an appropriate cookie header string to be sent with request or none
unsets a cookie by name by default over all domains and paths dcnl wraps cookiejar clear is o n
make a cookie from underspecified parameters dcnl by default the pair of name and value will be set for the domain dcnl and sent on every request this is sometimes called a supercookie
convert a morsel object into a cookie containing the one k v pair
returns a cookiejar from a key value dictionary dcnl param cookie dict dict of key values to insert into cookiejar dcnl param cookiejar optional a cookiejar to add the cookies to dcnl param overwrite optional if false will not replace cookies dcnl already in the jar with new ones
add cookies to cookiejar and returns a merged cookiejar dcnl param cookiejar cookiejar object to add the cookies to dcnl param cookies dictionary or cookiejar object to be added
return a string describing the probable encoding of a file or dcnl list of strings dcnl param lines the lines to get the encoding of dcnl type lines iterable of bytes dcnl param name name of file or collection of lines dcnl type name str
handles command line arguments and gets things started dcnl param argv list of arguments as if specified on the commandline dcnl if none sys argv1 is used instead dcnl type argv list of str
add documentation to a function
import module returning the module after the last dot
add an item to six moves
remove item from six moves
return an iterator over the keys of a dictionary
return an iterator over the values of a dictionary
return an iterator over the key value pairs of a dictionary
create a base class with a metaclass
matching according to rfc 6125 section 6 4 3 dcnl http tools ietf org html rfc6125 section6 4 3
verify that cert in decoded format as returned by dcnl sslsocket getpeercert matches the hostname rfc 2818 and rfc 6125 dcnl rules are followed but ip addresses are not accepted for hostname dcnl certificateerror is raised on failure on success the function dcnl returns nothing
helper for quickly adding a streamhandler to the logger useful for dcnl debugging dcnl returns the handler after adding it
helper for quickly disabling all urllib3 warnings
guess the contenttype of a file dcnl param filename dcnl the filename to guess the contenttype of using mod mimetypes dcnl param default dcnl if no contenttype can be guessed default to default
helper function to format and quote a single header parameter dcnl particularly useful for header parameters which might contain dcnl nonascii values like file names this follows rfc 2231 as dcnl suggested by rfc 2388 section 4 4 dcnl param name dcnl the name of the parameter a string expected to be ascii only dcnl param value dcnl the value of the parameter provided as a unicode string
our embarassinglysimple replacement for mimetools choose boundary
iterate over fields dcnl supports list of k v tuples and dicts and lists of dcnl class ~urllib3 fields requestfield
deprecated 1 6 dcnl iterate over fields dcnl the addition of class ~urllib3 fields requestfield makes this function dcnl obsolete instead use func iter field objects which returns dcnl class ~urllib3 fields requestfield objects dcnl supports list of k v tuples and dicts
encode a dictionary of fields using the multipart formdata mime format dcnl param fields dcnl dictionary of fields or list of key class ~urllib3 fields requestfield dcnl param boundary dcnl if not specified then a random boundary will be generated using dcnl func mimetools choose boundary
checks whether a given filelike object is closed dcnl param obj dcnl the filelike object to check
asserts whether all headers have been successfully parsed dcnl extracts encountered errors from the result of parsing headers dcnl only works on python 3 dcnl param headers headers to verify dcnl type headers httplib httpmessage dcnl raises urllib3 exceptions headerparsingerror dcnl if parsing errors are found
checks wether a the request of a response has been a headrequest dcnl handles the quirks of appengine dcnl param conn dcnl type conn class httplib httpresponse
retrieve the current time this function is mocked out in unit testing
compare two digests of equal length in constant time dcnl the digests must be of type str bytes dcnl returns true if the digests match and false otherwise
checks if given fingerprint matches the supplied certificate dcnl param cert dcnl certificate as bytes object dcnl param fingerprint dcnl fingerprint as string of hexdigits can be interspersed by colons
resolves the argument to a numeric constant which can be passed to dcnl the wrap socket function method from the ssl module dcnl defaults to data ssl cert none dcnl if given a string it is assumed to be the name of the constant in the dcnl mod ssl module or its abbrevation dcnl so you can specify required instead of cert required dcnl if it s neither none nor a string we assume it is already the numeric dcnl constant which can directly be passed to wrap socket
like resolve cert reqs
all arguments have the same meaning as ssl wrap socket dcnl by default this function does a lot of the same work that dcnl ssl create default context does on python 3 4+ it dcnl disables sslv2 sslv3 and compression dcnl sets a restricted set of server ciphers dcnl if you wish to enable sslv3 you can do dcnl from urllib3 util import ssl dcnl context ssl create urllib3 context dcnl context options ~ssl op no sslv3 dcnl you can do the same to enable compression substituting compression dcnl for sslv3 in the last line above dcnl param ssl version dcnl the desired protocol version to use this will default to dcnl protocol sslv23 which will negotiate the highest protocol that both dcnl the server and your installation of openssl support dcnl param cert reqs dcnl whether to require the certificate verification this defaults to dcnl ssl cert required dcnl param options dcnl specific openssl options these default to ssl op no sslv2 dcnl ssl op no sslv3 ssl op no compression dcnl param ciphers dcnl which cipher suites to allow the server to select dcnl returns dcnl constructed sslcontext object with specified options dcnl rtype sslcontext
all arguments except for server hostname ssl context and ca cert dir have dcnl the same meaning as they do when using func ssl wrap socket dcnl param server hostname dcnl when sni is supported the expected hostname of the certificate dcnl param ssl context dcnl a premade class sslcontext object if none is provided one will dcnl be created using func create urllib3 context dcnl param ciphers dcnl a string of ciphers we wish the client to support this is not dcnl supported on python 2 6 as the ssl module does not support it dcnl param ca cert dir dcnl a directory containing ca certificates in multiple separate files as dcnl supported by openssl s capath flag or the capath argument to dcnl sslcontext load verify locations
returns true if the connection is dropped and should be closed dcnl param conn dcnl class httplib httpconnection object dcnl note for platforms like appengine this will always return false to dcnl let the platform handle connection recycling transparently for us
connect to address and return the socket object dcnl convenience function connect to address a 2tuple host dcnl port and return the socket object passing the optional dcnl timeout parameter will set the timeout on the socket instance dcnl before attempting to connect if no timeout is supplied the dcnl global default timeout setting returned by func getdefaulttimeout dcnl is used if source address is set it must be a tuple of host port dcnl for the socket to bind as a source address before making the connection dcnl an host of or port 0 tells the os to use the default
given a string and an iterable of delimiters split on the first found dcnl delimiter return two split parts and the matched delimiter dcnl if not found then the first part is the full input string dcnl example dcnl split first foo bar baz dcnl foo bar baz dcnl split first foo bar baz 123 dcnl foo bar baz none dcnl scales linearly with number of delims not ideal for large number of delims
given a url return a parsed class url namedtuple besteffort is dcnl performed to parse incomplete urls fields not provided will be none dcnl partly backwardscompatible with mod urlparse dcnl example dcnl parse url http google com mail dcnl url scheme http host google com port none path mail dcnl parse url google com 80 dcnl url scheme none host google com port 80 path none dcnl parse url foo bar dcnl url scheme none host none port none path foo query bar
deprecated use func parse url instead
shortcuts for generating request headers dcnl param keep alive dcnl if true adds connection keepalive header dcnl param accept encoding dcnl can be a boolean list or string dcnl true translates to gzip deflate dcnl list will get joined by comma dcnl string will be used as provided dcnl param user agent dcnl string representing the useragent you want such as dcnl pythonurllib3 0 6 dcnl param basic auth dcnl colonseparated username password string for authorization basic dcnl auth header dcnl param proxy basic auth dcnl colonseparated username password string for proxyauthorization basic dcnl auth header dcnl param disable cache dcnl if true adds cachecontrol nocache header dcnl example dcnl make headers keep alive true user agent batman 1 0 dcnl connection keepalive useragent batman 1 0 dcnl make headers accept encoding true dcnl acceptencoding gzip deflate
given a url return an class connectionpool instance of its host dcnl this is a shortcut for not having to parse out the scheme host and port dcnl of the url before creating an class connectionpool instance dcnl param url dcnl absolute url string that must include the scheme port is optional dcnl param kw dcnl passes additional parameters to the constructor of the appropriate dcnl class connectionpool useful for specifying things like dcnl timeout maxsize headers etc dcnl example dcnl conn connection from url http google com dcnl r conn request get
monkeypatch urllib3 with pyopensslbacked sslsupport
undo monkeypatching by func inject into urllib3
returns a basic auth string
dispatches a hook dictionary on a given piece of data
determines appropriate setting for a given request taking into account the dcnl explicit setting on that request and the setting in the session if a dcnl setting is a dictionary they will be merged together using dict class
properly merges both requests and session hooks dcnl this is necessary because when request hooks response the dcnl merge breaks session hooks entirely
returns a class session for contextmanagement
constructs and sends a class request <request dcnl param method method for the new class request object dcnl param url url for the new class request object dcnl param params optional dictionary or bytes to be sent in the query string for the class request dcnl param data optional dictionary bytes or filelike object to send in the body of the class request dcnl param json optional json data to send in the body of the class request dcnl param headers optional dictionary of http headers to send with the class request dcnl param cookies optional dict or cookiejar object to send with the class request dcnl param files optional dictionary of name filelikeobjects or name filename fileobj for multipart encoding upload dcnl param auth optional auth tuple to enable basic digest custom http auth dcnl param timeout optional how long to wait for the server to send data dcnl before giving up as a float or a ref connect timeout read dcnl timeout <timeouts tuple dcnl type timeout float or tuple dcnl param allow redirects optional boolean set to true if post put delete redirect following is allowed dcnl type allow redirects bool dcnl param proxies optional dictionary mapping protocol to the url of the proxy dcnl param verify optional whether the ssl cert will be verified a ca bundle path can also be provided defaults to true dcnl param stream optional if false the response content will be immediately downloaded dcnl param cert optional if string path to ssl client cert file pem if tuple cert key pair dcnl return class response <response object dcnl rtype requests response dcnl usage dcnl import requests dcnl req requests request get http httpbin org get dcnl <response 200
sends a get request dcnl param url url for the new class request object dcnl param params optional dictionary or bytes to be sent in the query string for the class request dcnl param kwargs optional arguments that request takes dcnl return class response <response object dcnl rtype requests response
sends a options request dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes dcnl return class response <response object dcnl rtype requests response
sends a head request dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes dcnl return class response <response object dcnl rtype requests response
sends a post request dcnl param url url for the new class request object dcnl param data optional dictionary bytes or filelike object to send in the body of the class request dcnl param json optional json data to send in the body of the class request dcnl param kwargs optional arguments that request takes dcnl return class response <response object dcnl rtype requests response
sends a put request dcnl param url url for the new class request object dcnl param data optional dictionary bytes or filelike object to send in the body of the class request dcnl param kwargs optional arguments that request takes dcnl return class response <response object dcnl rtype requests response
sends a patch request dcnl param url url for the new class request object dcnl param data optional dictionary bytes or filelike object to send in the body of the class request dcnl param kwargs optional arguments that request takes dcnl return class response <response object dcnl rtype requests response
sends a delete request dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes dcnl return class response <response object dcnl rtype requests response
add documentation to a function
import module returning the module after the last dot
add an item to six moves
remove item from six moves
create a base class with a metaclass
class decorator for creating a class with a metaclass
a decorator that defines unicode and str methods under python 2 dcnl under python 3 it does nothing dcnl to support python 2 and 3 with a single code base define a str method dcnl returning text and apply this decorator to the class
accepts a filename and returns the detected filetype return dcnl value is the mimetype if mime true otherwise a human readable dcnl name dcnl magic from file testdata test pdf mime true dcnl application pdf
accepts a binary string and returns the detected filetype return dcnl value is the mimetype if mime true otherwise a human readable dcnl name dcnl magic from buffer open testdata test pdf read 1024 dcnl pdf document version 1 2
parse url and the result is tuple of dcnl hostname port resource path and the flag of secure mode dcnl url url string
try to retrieve proxy host and port from environment dcnl if not provided in options dcnl result is proxy host proxy port proxy auth dcnl proxy auth is tuple of username and password dcnl of proxy authentication information dcnl hostname websocket server name dcnl is secure is the connection secure wss dcnl looks for https proxy in env dcnl before falling back to http proxy dcnl options http proxy host http proxy host name dcnl http proxy port http proxy port dcnl http no proxy host names which doesn t use proxy dcnl http proxy auth http proxy auth information dcnl tuple of username and password dcnl default is none
set the global timeout setting to connect dcnl timeout default socket timeout time this value is second
return the global timeout setting second to connect
connect to url and return websocket object dcnl connect to url and return the websocket object dcnl passing optional timeout parameter will set the timeout on the socket dcnl if no timeout is supplied dcnl the global default timeout setting returned by getdefauttimeout is used dcnl you can customize using options dcnl if you set header list object you can set your own custom header dcnl conn create connection ws echo websocket org dcnl header useragent myprogram dcnl xcustom header dcnl timeout socket timeout time this value is integer dcnl if you set none for this value dcnl it means use default timeout value dcnl class class to instantiate when creating the connection it has to implement dcnl settimeout and connect it s init should be compatible with dcnl websocket init i e accept all of it s kwargs dcnl options header custom http header list or dict dcnl cookie cookie value dcnl origin custom origin url dcnl host custom host header string dcnl http proxy host http proxy host name dcnl http proxy port http proxy port if not set set to 80 dcnl http no proxy host names which doesn t use proxy dcnl http proxy auth http proxy auth information dcnl tuple of username and password dcnl default is none dcnl enable multithread enable lock for multithread dcnl sockopt socket options dcnl sslopt ssl option dcnl subprotocols array of available sub protocols dcnl default is none dcnl skip utf8 validation skip utf8 validation dcnl socket preinitialized stream socket
turn on off the tracability dcnl tracable boolean value if set true tracability is enabled
validate utf8 byte string dcnl utfbytes utf byte string to check dcnl return value if valid utf8 string return true otherwise return false
copy treebuilders from the given module into this module
alias one attribute name to another for backward compatibility
scan a yaml stream and produce scanning tokens
parse a yaml stream and produce parsing events
parse the first yaml document in a stream dcnl and produce the corresponding representation tree
parse all yaml documents in a stream dcnl and produce corresponding representation trees
parse the first yaml document in a stream dcnl and produce the corresponding python object
parse all yaml documents in a stream dcnl and produce corresponding python objects
parse the first yaml document in a stream dcnl and produce the corresponding python object dcnl resolve only basic yaml tags
parse all yaml documents in a stream dcnl and produce corresponding python objects dcnl resolve only basic yaml tags
emit yaml parsing events into a stream dcnl if stream is none return the produced string instead
serialize a sequence of representation trees into a yaml stream dcnl if stream is none return the produced string instead
serialize a representation tree into a yaml stream dcnl if stream is none return the produced string instead
serialize a sequence of python objects into a yaml stream dcnl if stream is none return the produced string instead
serialize a python object into a yaml stream dcnl if stream is none return the produced string instead
serialize a sequence of python objects into a yaml stream dcnl produce only basic yaml tags dcnl if stream is none return the produced string instead
serialize a python object into a yaml stream dcnl produce only basic yaml tags dcnl if stream is none return the produced string instead
add an implicit scalar detector dcnl if an implicit scalar value matches the given regexp dcnl the corresponding tag is assigned to the scalar dcnl first is a sequence of possible initial characters or none
add a path based resolver for the given tag dcnl a path is a list of keys that forms a path dcnl to a node in the representation tree dcnl keys can be string values integers or none
add a constructor for the given tag dcnl constructor is a function that accepts a loader instance dcnl and a node object and produces the corresponding python object
add a multiconstructor for the given tag prefix dcnl multiconstructor is called for a node if its tag starts with tag prefix dcnl multiconstructor accepts a loader instance a tag suffix dcnl and a node object and produces the corresponding python object
add a representer for the given type dcnl representer is a function accepting a dumper instance dcnl and an instance of the given data type dcnl and producing the corresponding representation node
add a representer for the given type dcnl multirepresenter is a function accepting a dumper instance dcnl and an instance of the given data type or subtype dcnl and producing the corresponding representation node
returns the ordering of the elements of x the list dcnl xj for j in order x is a sorted version of x dcnl missing values in x are indicated by none if noneislast is true dcnl then missing values are ordered to be at the end dcnl otherwise they are ordered at the beginning
returns the ranking of the elements of x the position of the first dcnl element in the original vector is rank0 in the sorted vector dcnl missing values are indicated by none calls the order function dcnl ties are not averaged by default choices are dcnl first average min max random average
fuzzy search for query in list of strings dictionaries tulpes or lists dcnl args dcnl query search string dcnl elements list of strings dictionaries tulpes or lists dcnl key function to access string element in dictionaries tulpes or lists dcnl rank rank the elements in the return list by quality of match currently not supported dcnl seq minimum sequence of characters to match dcnl returns dcnl a ranked list of elements that matches the query dcnl fuzzy matching with rankning based on quality of match with two criteria dcnl a sequence of characters e g for query nor nor is better then nxoxr dcnl b earlier matches are better e g for query nor nor is better then xnor
installs cache for all requests requests by monkeypatching session dcnl parameters are the same as in class cachedsession additional parameters dcnl param session factory session factory it should inherit class cachedsession default
restores requests session and disables cache
context manager for temporary disabling globally installed cache dcnl warning not threadsafe dcnl with requests cache disabled dcnl requests get http httpbin org ip dcnl requests get http httpbin org get
returns internal cache object from globally installed cachedsession
clears globally installed cache
returns an internal sequence dictionary update
returns the requests tuple auth for a given url from netrc
tries to guess the filename of the given object
take an object and test to see if it can be represented as a dcnl dictionary unless it can not be represented as such return an dcnl ordereddict e g dcnl from key val list key val dcnl ordereddict key val dcnl from key val list string dcnl valueerror need more than 1 value to unpack dcnl from key val list key val dcnl ordereddict key val
take an object and test to see if it can be represented as a dcnl dictionary if it can be return a list of tuples e g dcnl to key val list key val dcnl key val dcnl to key val list key val dcnl key val dcnl to key val list string dcnl valueerror cannot encode objects that are not 2tuples
parse lists as described by rfc 2068 section 2 dcnl in particular parse commaseparated lists where the elements of dcnl the list may include quotedstrings a quotedstring could dcnl contain a comma a nonquoted string could have quotes in the dcnl middle quotes are removed automatically after parsing dcnl it basically works like func parse set header just that items dcnl may appear multiple times and case sensitivity is preserved dcnl the return value is a standard class list dcnl parse list header token quoted value dcnl token quoted value dcnl to create a header from the class list again use the dcnl func dump header function dcnl param value a string with a list header dcnl return class list
parse lists of key value pairs as described by rfc 2068 section 2 and dcnl convert them into a python dict dcnl d parse dict header foo is a fish bar as well dcnl type d is dict dcnl true dcnl sorted d items dcnl bar as well foo is a fish dcnl if there is no value for a key it will be none dcnl parse dict header key without value dcnl key without value none dcnl to create a header from the class dict again use the dcnl func dump header function dcnl param value a string with a dict header dcnl return class dict
unquotes a header value reversal of func quote header value dcnl this does not use the real unquoting but what browsers are actually dcnl using for quoting dcnl param value the header value to unquote
returns a key value dictionary from a cookiejar dcnl param cj cookiejar object to extract cookies from
returns a cookiejar from a key value dictionary dcnl param cj cookiejar to insert cookies into dcnl param cookie dict dict of key values to insert into cookiejar
returns encodings from given content string dcnl param content bytestring to extract encodings from
returns encodings from given http header dict dcnl param headers dictionary to extract encoding from
stream decodes a iterator
iterate over slices of a string
returns the requested content back in unicode dcnl param r response object to get unicode content from dcnl tried dcnl 1 charset from contenttype dcnl 2 every encodings from <meta charset xxx dcnl 3 fall back and replace all unicode characters
unescape any percentescape sequences in a uri that are unreserved dcnl characters this leaves all reserved illegal and nonascii bytes encoded
requote the given uri dcnl this function passes the given uri through an unquote quote cycle to dcnl ensure that it is fully and consistently quoted
return a dict of environment proxies
return a string representing the default user agent
return a dict of parsed link headers proxies dcnl i e link <http front jpeg rel front type image jpeg <http back jpeg rel back type image jpeg
given a url that may or may not have a scheme prepend the given scheme dcnl does not replace a present scheme with the one provided as an argument
given a url with authentication components extract them into a tuple of dcnl username password
extract the cookies from the response into a cookiejar dcnl param jar cookielib cookiejar not necessarily a requestscookiejar dcnl param request our own requests request object dcnl param response urllib3 httpresponse object
produce an appropriate cookie header string to be sent with request or none
unsets a cookie by name by default over all domains and paths dcnl wraps cookiejar clear is o n
make a cookie from underspecified parameters dcnl by default the pair of name and value will be set for the domain dcnl and sent on every request this is sometimes called a supercookie
convert a morsel object into a cookie containing the one k v pair
returns a cookiejar from a key value dictionary dcnl param cookie dict dict of key values to insert into cookiejar
add documentation to a function
import module returning the module after the last dot
add an item to six moves
remove item from six moves
return an iterator over the keys of a dictionary
return an iterator over the values of a dictionary
return an iterator over the key value pairs of a dictionary
create a base class with a metaclass
verify that cert in decoded format as returned by dcnl sslsocket getpeercert matches the hostname rfc 2818 rules dcnl are mostly followed but ip addresses are not accepted for hostname dcnl certificateerror is raised on failure on success the function dcnl returns nothing
helper for quickly adding a streamhandler to the logger useful for dcnl debugging dcnl returns the handler after adding it
given a string and an iterable of delimiters split on the first found dcnl delimiter return two split parts and the matched delimiter dcnl if not found then the first part is the full input string dcnl example dcnl split first foo bar baz dcnl foo bar baz dcnl split first foo bar baz 123 dcnl foo bar baz none dcnl scales linearly with number of delims not ideal for large number of delims
given a url return a parsed class url namedtuple besteffort is dcnl performed to parse incomplete urls fields not provided will be none dcnl partly backwardscompatible with mod urlparse dcnl example dcnl parse url http google com mail dcnl url scheme http host google com port none path dcnl parse url google com 80 dcnl url scheme none host google com port 80 path none dcnl parse url foo bar dcnl url scheme none host none port none path foo query bar
deprecated use func parse url instead
shortcuts for generating request headers dcnl param keep alive dcnl if true adds connection keepalive header dcnl param accept encoding dcnl can be a boolean list or string dcnl true translates to gzip deflate dcnl list will get joined by comma dcnl string will be used as provided dcnl param user agent dcnl string representing the useragent you want such as dcnl pythonurllib3 0 6 dcnl param basic auth dcnl colonseparated username password string for authorization basic dcnl auth header dcnl example dcnl make headers keep alive true user agent batman 1 0 dcnl connection keepalive useragent batman 1 0 dcnl make headers accept encoding true dcnl acceptencoding gzip deflate
returns true if the connection is dropped and should be closed dcnl param conn dcnl class httplib httpconnection object dcnl note for platforms like appengine this will always return false to dcnl let the platform handle connection recycling transparently for us
resolves the argument to a numeric constant which can be passed to dcnl the wrap socket function method from the ssl module dcnl defaults to data ssl cert none dcnl if given a string it is assumed to be the name of the constant in the dcnl mod ssl module or its abbrevation dcnl so you can specify required instead of cert required dcnl if it s neither none nor a string we assume it is already the numeric dcnl constant which can directly be passed to wrap socket
like resolve cert reqs
checks if given fingerprint matches the supplied certificate dcnl param cert dcnl certificate as bytes object dcnl param fingerprint dcnl fingerprint as string of hexdigits can be interspersed by colons
our embarassinglysimple replacement for mimetools choose boundary
iterate over fields dcnl supports list of k v tuples and dicts
encode a dictionary of fields using the multipart formdata mime format dcnl param fields dcnl dictionary of fields or list of key value or key value mime type dcnl field tuples the key is treated as the field name and the value as dcnl the body of the formdata bytes if the value is a tuple of two dcnl elements then the first element is treated as the filename of the dcnl formdata section and a suitable mime type is guessed based on the dcnl filename if the value is a tuple of three elements then the third dcnl element is treated as an explicit mime type of the formdata section dcnl field names and filenames must be unicode dcnl param boundary dcnl if not specified then a random boundary will be generated using dcnl func mimetools choose boundary
given a url return an class connectionpool instance of its host dcnl this is a shortcut for not having to parse out the scheme host and port dcnl of the url before creating an class connectionpool instance dcnl param url dcnl absolute url string that must include the scheme port is optional dcnl param kw dcnl passes additional parameters to the constructor of the appropriate dcnl class connectionpool useful for specifying things like dcnl timeout maxsize headers etc dcnl example dcnl conn connection from url http google com dcnl r conn request get
monkeypatch urllib3 with pyopensslbacked sslsupport
undo monkeypatching by func inject into urllib3
returns a basic auth string
dispatches a hook dictionary on a given piece of data
merges kwarg dictionaries dcnl if a local key in the dictionary is set to none it will be removed
returns a class session for contextmanagement
constructs and sends a class request <request dcnl returns class response <response object dcnl param method method for the new class request object dcnl param url url for the new class request object dcnl param params optional dictionary or bytes to be sent in the query string for the class request dcnl param data optional dictionary bytes or filelike object to send in the body of the class request dcnl param headers optional dictionary of http headers to send with the class request dcnl param cookies optional dict or cookiejar object to send with the class request dcnl param files optional dictionary of name filelikeobjects or name filename fileobj for multipart encoding upload dcnl param auth optional auth tuple to enable basic digest custom http auth dcnl param timeout optional float describing the timeout of the request dcnl param allow redirects optional boolean set to true if post put delete redirect following is allowed dcnl param proxies optional dictionary mapping protocol to the url of the proxy dcnl param verify optional if true the ssl cert will be verified a ca bundle path can also be provided dcnl param stream optional if false the response content will be immediately downloaded dcnl param cert optional if string path to ssl client cert file pem if tuple cert key pair dcnl usage dcnl import requests dcnl req requests request get http httpbin org get dcnl <response 200
sends a get request returns class response object dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes
sends a options request returns class response object dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes
sends a head request returns class response object dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes
sends a post request returns class response object dcnl param url url for the new class request object dcnl param data optional dictionary bytes or filelike object to send in the body of the class request dcnl param kwargs optional arguments that request takes
sends a put request returns class response object dcnl param url url for the new class request object dcnl param data optional dictionary bytes or filelike object to send in the body of the class request dcnl param kwargs optional arguments that request takes
sends a patch request returns class response object dcnl param url url for the new class request object dcnl param data optional dictionary bytes or filelike object to send in the body of the class request dcnl param kwargs optional arguments that request takes
sends a delete request returns class response object dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes
return the preferred certificate bundle
copy treebuilders from the given module into this module
alias one attribute name to another for backward compatibility
add documentation to a function
import module returning the module after the last dot
add an item to six moves
remove item from six moves
return an iterator over the keys of a dictionary
return an iterator over the values of a dictionary
return an iterator over the key value pairs of a dictionary
return an iterator over the key values pairs of a dictionary
create a base class with a metaclass
raises notbinaryplistexception invalidplistexception
creates the default settings file if it doesn t exists
creates an empty database
update the sqlite database with all clips from kippt
reads all clips from kippt
performs a search with the given keywords in the database returns the found clips dcnl as alfred items xml
everything dispatches from this function
returns an internal sequence dictionary update
returns the requests tuple auth for a given url from netrc
tries to guess the filename of the given object
take an object and test to see if it can be represented as a dcnl dictionary unless it can not be represented as such return an dcnl ordereddict e g dcnl from key val list key val dcnl ordereddict key val dcnl from key val list string dcnl valueerror need more than 1 value to unpack dcnl from key val list key val dcnl ordereddict key val
take an object and test to see if it can be represented as a dcnl dictionary if it can be return a list of tuples e g dcnl to key val list key val dcnl key val dcnl to key val list key val dcnl key val dcnl to key val list string dcnl valueerror cannot encode objects that are not 2tuples
parse lists as described by rfc 2068 section 2 dcnl in particular parse commaseparated lists where the elements of dcnl the list may include quotedstrings a quotedstring could dcnl contain a comma a nonquoted string could have quotes in the dcnl middle quotes are removed automatically after parsing dcnl it basically works like func parse set header just that items dcnl may appear multiple times and case sensitivity is preserved dcnl the return value is a standard class list dcnl parse list header token quoted value dcnl token quoted value dcnl to create a header from the class list again use the dcnl func dump header function dcnl param value a string with a list header dcnl return class list
parse lists of key value pairs as described by rfc 2068 section 2 and dcnl convert them into a python dict dcnl d parse dict header foo is a fish bar as well dcnl type d is dict dcnl true dcnl sorted d items dcnl bar as well foo is a fish dcnl if there is no value for a key it will be none dcnl parse dict header key without value dcnl key without value none dcnl to create a header from the class dict again use the dcnl func dump header function dcnl param value a string with a dict header dcnl return class dict
unquotes a header value reversal of func quote header value dcnl this does not use the real unquoting but what browsers are actually dcnl using for quoting dcnl param value the header value to unquote
returns a key value dictionary from a cookiejar dcnl param cj cookiejar object to extract cookies from
returns a cookiejar from a key value dictionary dcnl param cj cookiejar to insert cookies into dcnl param cookie dict dict of key values to insert into cookiejar
returns encodings from given content string dcnl param content bytestring to extract encodings from
returns encodings from given http header dict dcnl param headers dictionary to extract encoding from
stream decodes a iterator
iterate over slices of a string
returns the requested content back in unicode dcnl param r response object to get unicode content from dcnl tried dcnl 1 charset from contenttype dcnl 2 every encodings from <meta charset xxx dcnl 3 fall back and replace all unicode characters
unescape any percentescape sequences in a uri that are unreserved dcnl characters this leaves all reserved illegal and nonascii bytes encoded
requote the given uri dcnl this function passes the given uri through an unquote quote cycle to dcnl ensure that it is fully and consistently quoted
return a dict of environment proxies
return a string representing the default user agent
return a dict of parsed link headers proxies dcnl i e link <http front jpeg rel front type image jpeg <http back jpeg rel back type image jpeg
given a url that may or may not have a scheme prepend the given scheme dcnl does not replace a present scheme with the one provided as an argument
given a url with authentication components extract them into a tuple of dcnl username password
extract the cookies from the response into a cookiejar dcnl param jar cookielib cookiejar not necessarily a requestscookiejar dcnl param request our own requests request object dcnl param response urllib3 httpresponse object
produce an appropriate cookie header string to be sent with request or none
unsets a cookie by name by default over all domains and paths dcnl wraps cookiejar clear is o n
make a cookie from underspecified parameters dcnl by default the pair of name and value will be set for the domain dcnl and sent on every request this is sometimes called a supercookie
convert a morsel object into a cookie containing the one k v pair
returns a cookiejar from a key value dictionary dcnl param cookie dict dict of key values to insert into cookiejar
add documentation to a function
import module returning the module after the last dot
add an item to six moves
remove item from six moves
return an iterator over the keys of a dictionary
return an iterator over the values of a dictionary
return an iterator over the key value pairs of a dictionary
create a base class with a metaclass
verify that cert in decoded format as returned by dcnl sslsocket getpeercert matches the hostname rfc 2818 rules dcnl are mostly followed but ip addresses are not accepted for hostname dcnl certificateerror is raised on failure on success the function dcnl returns nothing
helper for quickly adding a streamhandler to the logger useful for dcnl debugging dcnl returns the handler after adding it
given a string and an iterable of delimiters split on the first found dcnl delimiter return two split parts and the matched delimiter dcnl if not found then the first part is the full input string dcnl example dcnl split first foo bar baz dcnl foo bar baz dcnl split first foo bar baz 123 dcnl foo bar baz none dcnl scales linearly with number of delims not ideal for large number of delims
given a url return a parsed class url namedtuple besteffort is dcnl performed to parse incomplete urls fields not provided will be none dcnl partly backwardscompatible with mod urlparse dcnl example dcnl parse url http google com mail dcnl url scheme http host google com port none path dcnl parse url google com 80 dcnl url scheme none host google com port 80 path none dcnl parse url foo bar dcnl url scheme none host none port none path foo query bar
deprecated use func parse url instead
shortcuts for generating request headers dcnl param keep alive dcnl if true adds connection keepalive header dcnl param accept encoding dcnl can be a boolean list or string dcnl true translates to gzip deflate dcnl list will get joined by comma dcnl string will be used as provided dcnl param user agent dcnl string representing the useragent you want such as dcnl pythonurllib3 0 6 dcnl param basic auth dcnl colonseparated username password string for authorization basic dcnl auth header dcnl example dcnl make headers keep alive true user agent batman 1 0 dcnl connection keepalive useragent batman 1 0 dcnl make headers accept encoding true dcnl acceptencoding gzip deflate
returns true if the connection is dropped and should be closed dcnl param conn dcnl class httplib httpconnection object dcnl note for platforms like appengine this will always return false to dcnl let the platform handle connection recycling transparently for us
resolves the argument to a numeric constant which can be passed to dcnl the wrap socket function method from the ssl module dcnl defaults to data ssl cert none dcnl if given a string it is assumed to be the name of the constant in the dcnl mod ssl module or its abbrevation dcnl so you can specify required instead of cert required dcnl if it s neither none nor a string we assume it is already the numeric dcnl constant which can directly be passed to wrap socket
like resolve cert reqs
checks if given fingerprint matches the supplied certificate dcnl param cert dcnl certificate as bytes object dcnl param fingerprint dcnl fingerprint as string of hexdigits can be interspersed by colons
checks whether a given filelike object is closed dcnl param obj dcnl the filelike object to check
our embarassinglysimple replacement for mimetools choose boundary
iterate over fields dcnl supports list of k v tuples and dicts
encode a dictionary of fields using the multipart formdata mime format dcnl param fields dcnl dictionary of fields or list of key value or key value mime type dcnl field tuples the key is treated as the field name and the value as dcnl the body of the formdata bytes if the value is a tuple of two dcnl elements then the first element is treated as the filename of the dcnl formdata section and a suitable mime type is guessed based on the dcnl filename if the value is a tuple of three elements then the third dcnl element is treated as an explicit mime type of the formdata section dcnl field names and filenames must be unicode dcnl param boundary dcnl if not specified then a random boundary will be generated using dcnl func mimetools choose boundary
given a url return an class connectionpool instance of its host dcnl this is a shortcut for not having to parse out the scheme host and port dcnl of the url before creating an class connectionpool instance dcnl param url dcnl absolute url string that must include the scheme port is optional dcnl param kw dcnl passes additional parameters to the constructor of the appropriate dcnl class connectionpool useful for specifying things like dcnl timeout maxsize headers etc dcnl example dcnl conn connection from url http google com dcnl r conn request get
monkeypatch urllib3 with pyopensslbacked sslsupport
undo monkeypatching by func inject into urllib3
returns a basic auth string
dispatches a hook dictionary on a given piece of data
determines appropriate setting for a given request taking into account the dcnl explicit setting on that request and the setting in the session if a dcnl setting is a dictionary they will be merged together using dict class
returns a class session for contextmanagement
constructs and sends a class request <request dcnl returns class response <response object dcnl param method method for the new class request object dcnl param url url for the new class request object dcnl param params optional dictionary or bytes to be sent in the query string for the class request dcnl param data optional dictionary bytes or filelike object to send in the body of the class request dcnl param headers optional dictionary of http headers to send with the class request dcnl param cookies optional dict or cookiejar object to send with the class request dcnl param files optional dictionary of name filelikeobjects or name filename fileobj for multipart encoding upload dcnl param auth optional auth tuple to enable basic digest custom http auth dcnl param timeout optional float describing the timeout of the request dcnl param allow redirects optional boolean set to true if post put delete redirect following is allowed dcnl param proxies optional dictionary mapping protocol to the url of the proxy dcnl param verify optional if true the ssl cert will be verified a ca bundle path can also be provided dcnl param stream optional if false the response content will be immediately downloaded dcnl param cert optional if string path to ssl client cert file pem if tuple cert key pair dcnl usage dcnl import requests dcnl req requests request get http httpbin org get dcnl <response 200
sends a get request returns class response object dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes
sends a options request returns class response object dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes
sends a head request returns class response object dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes
sends a post request returns class response object dcnl param url url for the new class request object dcnl param data optional dictionary bytes or filelike object to send in the body of the class request dcnl param kwargs optional arguments that request takes
sends a put request returns class response object dcnl param url url for the new class request object dcnl param data optional dictionary bytes or filelike object to send in the body of the class request dcnl param kwargs optional arguments that request takes
sends a patch request returns class response object dcnl param url url for the new class request object dcnl param data optional dictionary bytes or filelike object to send in the body of the class request dcnl param kwargs optional arguments that request takes
sends a delete request returns class response object dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes
return the preferred certificate bundle
returns an internal sequence dictionary update
returns the requests tuple auth for a given url from netrc
tries to guess the filename of the given object
take an object and test to see if it can be represented as a dcnl dictionary unless it can not be represented as such return an dcnl ordereddict e g dcnl from key val list key val dcnl ordereddict key val dcnl from key val list string dcnl valueerror need more than 1 value to unpack dcnl from key val list key val dcnl ordereddict key val
take an object and test to see if it can be represented as a dcnl dictionary if it can be return a list of tuples e g dcnl to key val list key val dcnl key val dcnl to key val list key val dcnl key val dcnl to key val list string dcnl valueerror cannot encode objects that are not 2tuples
parse lists as described by rfc 2068 section 2 dcnl in particular parse commaseparated lists where the elements of dcnl the list may include quotedstrings a quotedstring could dcnl contain a comma a nonquoted string could have quotes in the dcnl middle quotes are removed automatically after parsing dcnl it basically works like func parse set header just that items dcnl may appear multiple times and case sensitivity is preserved dcnl the return value is a standard class list dcnl parse list header token quoted value dcnl token quoted value dcnl to create a header from the class list again use the dcnl func dump header function dcnl param value a string with a list header dcnl return class list
parse lists of key value pairs as described by rfc 2068 section 2 and dcnl convert them into a python dict dcnl d parse dict header foo is a fish bar as well dcnl type d is dict dcnl true dcnl sorted d items dcnl bar as well foo is a fish dcnl if there is no value for a key it will be none dcnl parse dict header key without value dcnl key without value none dcnl to create a header from the class dict again use the dcnl func dump header function dcnl param value a string with a dict header dcnl return class dict
unquotes a header value reversal of func quote header value dcnl this does not use the real unquoting but what browsers are actually dcnl using for quoting dcnl param value the header value to unquote
returns a key value dictionary from a cookiejar dcnl param cj cookiejar object to extract cookies from
returns a cookiejar from a key value dictionary dcnl param cj cookiejar to insert cookies into dcnl param cookie dict dict of key values to insert into cookiejar
returns encodings from given content string dcnl param content bytestring to extract encodings from
returns encodings from given http header dict dcnl param headers dictionary to extract encoding from
stream decodes a iterator
iterate over slices of a string
returns the requested content back in unicode dcnl param r response object to get unicode content from dcnl tried dcnl 1 charset from contenttype dcnl 2 every encodings from <meta charset xxx dcnl 3 fall back and replace all unicode characters
stream decodes an iterator over compressed data dcnl param iterator an iterator over compressed data dcnl param mode gzip or deflate dcnl return an iterator over decompressed data
unescape any percentescape sequences in a uri that are unreserved dcnl characters this leaves all reserved illegal and nonascii bytes encoded
requote the given uri dcnl this function passes the given uri through an unquote quote cycle to dcnl ensure that it is fully and consistently quoted
return a dict of environment proxies
return a string representing the default user agent
return a dict of parsed link headers proxies dcnl i e link <http front jpeg rel front type image jpeg <http back jpeg rel back type image jpeg
given a url that may or may not have a scheme prepend the given scheme dcnl does not replace a present scheme with the one provided as an argument
given a url with authentication components extract them into a tuple of dcnl username password
extract the cookies from the response into a cookiejar dcnl param jar cookielib cookiejar not necessarily a requestscookiejar dcnl param request our own requests request object dcnl param response urllib3 httpresponse object
produce an appropriate cookie header string to be sent with request or none
unsets a cookie by name by default over all domains and paths dcnl wraps cookiejar clear is o n
make a cookie from underspecified parameters dcnl by default the pair of name and value will be set for the domain dcnl and sent on every request this is sometimes called a supercookie
convert a morsel object into a cookie containing the one k v pair
returns a cookiejar from a key value dictionary dcnl param cookie dict dict of key values to insert into cookiejar
add documentation to a function
import module returning the module after the last dot
add an item to six moves
remove item from six moves
return an iterator over the keys of a dictionary
return an iterator over the values of a dictionary
return an iterator over the key value pairs of a dictionary
create a base class with a metaclass
verify that cert in decoded format as returned by dcnl sslsocket getpeercert matches the hostname rfc 2818 rules dcnl are mostly followed but ip addresses are not accepted for hostname dcnl certificateerror is raised on failure on success the function dcnl returns nothing
helper for quickly adding a streamhandler to the logger useful for dcnl debugging dcnl returns the handler after adding it
given a string and an iterable of delimiters split on the first found dcnl delimiter return two split parts and the matched delimiter dcnl if not found then the first part is the full input string dcnl example dcnl split first foo bar baz dcnl foo bar baz dcnl split first foo bar baz 123 dcnl foo bar baz none dcnl scales linearly with number of delims not ideal for large number of delims
given a url return a parsed class url namedtuple besteffort is dcnl performed to parse incomplete urls fields not provided will be none dcnl partly backwardscompatible with mod urlparse dcnl example dcnl parse url http google com mail dcnl url scheme http host google com port none path dcnl parse url google com 80 dcnl url scheme none host google com port 80 path none dcnl parse url foo bar dcnl url scheme none host none port none path foo query bar
deprecated use func parse url instead
shortcuts for generating request headers dcnl param keep alive dcnl if true adds connection keepalive header dcnl param accept encoding dcnl can be a boolean list or string dcnl true translates to gzip deflate dcnl list will get joined by comma dcnl string will be used as provided dcnl param user agent dcnl string representing the useragent you want such as dcnl pythonurllib3 0 6 dcnl param basic auth dcnl colonseparated username password string for authorization basic dcnl auth header dcnl example dcnl make headers keep alive true user agent batman 1 0 dcnl connection keepalive useragent batman 1 0 dcnl make headers accept encoding true dcnl acceptencoding gzip deflate
returns true if the connection is dropped and should be closed dcnl param conn dcnl class httplib httpconnection object dcnl note for platforms like appengine this will always return false to dcnl let the platform handle connection recycling transparently for us
resolves the argument to a numeric constant which can be passed to dcnl the wrap socket function method from the ssl module dcnl defaults to data ssl cert none dcnl if given a string it is assumed to be the name of the constant in the dcnl mod ssl module or its abbrevation dcnl so you can specify required instead of cert required dcnl if it s neither none nor a string we assume it is already the numeric dcnl constant which can directly be passed to wrap socket
like resolve cert reqs
checks if given fingerprint matches the supplied certificate dcnl param cert dcnl certificate as bytes object dcnl param fingerprint dcnl fingerprint as string of hexdigits can be interspersed by colons
our embarassinglysimple replacement for mimetools choose boundary
iterate over fields dcnl supports list of k v tuples and dicts
encode a dictionary of fields using the multipart formdata mime format dcnl param fields dcnl dictionary of fields or list of key value or key value mime type dcnl field tuples the key is treated as the field name and the value as dcnl the body of the formdata bytes if the value is a tuple of two dcnl elements then the first element is treated as the filename of the dcnl formdata section and a suitable mime type is guessed based on the dcnl filename if the value is a tuple of three elements then the third dcnl element is treated as an explicit mime type of the formdata section dcnl field names and filenames must be unicode dcnl param boundary dcnl if not specified then a random boundary will be generated using dcnl func mimetools choose boundary
given a url return an class connectionpool instance of its host dcnl this is a shortcut for not having to parse out the scheme host and port dcnl of the url before creating an class connectionpool instance dcnl param url dcnl absolute url string that must include the scheme port is optional dcnl param kw dcnl passes additional parameters to the constructor of the appropriate dcnl class connectionpool useful for specifying things like dcnl timeout maxsize headers etc dcnl example dcnl conn connection from url http google com dcnl r conn request get
monkeypatch urllib3 with pyopensslbacked sslsupport
undo monkeypatching by func inject into urllib3
returns a basic auth string
dispatches a hook dictionary on a given piece of data
merges kwarg dictionaries dcnl if a local key in the dictionary is set to none it will be removed
returns a class session for contextmanagement
constructs and sends a class request <request dcnl returns class response <response object dcnl param method method for the new class request object dcnl param url url for the new class request object dcnl param params optional dictionary or bytes to be sent in the query string for the class request dcnl param data optional dictionary bytes or filelike object to send in the body of the class request dcnl param headers optional dictionary of http headers to send with the class request dcnl param cookies optional dict or cookiejar object to send with the class request dcnl param files optional dictionary of name filelikeobjects or name filename fileobj for multipart encoding upload dcnl param auth optional auth tuple to enable basic digest custom http auth dcnl param timeout optional float describing the timeout of the request dcnl param allow redirects optional boolean set to true if post put delete redirect following is allowed dcnl param proxies optional dictionary mapping protocol to the url of the proxy dcnl param verify optional if true the ssl cert will be verified a ca bundle path can also be provided dcnl param stream optional if false the response content will be immediately downloaded dcnl param cert optional if string path to ssl client cert file pem if tuple cert key pair dcnl usage dcnl import requests dcnl req requests request get http httpbin org get dcnl <response 200
sends a get request returns class response object dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes
sends a options request returns class response object dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes
sends a head request returns class response object dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes
sends a post request returns class response object dcnl param url url for the new class request object dcnl param data optional dictionary bytes or filelike object to send in the body of the class request dcnl param kwargs optional arguments that request takes
sends a put request returns class response object dcnl param url url for the new class request object dcnl param data optional dictionary bytes or filelike object to send in the body of the class request dcnl param kwargs optional arguments that request takes
sends a patch request returns class response object dcnl param url url for the new class request object dcnl param data optional dictionary bytes or filelike object to send in the body of the class request dcnl param kwargs optional arguments that request takes
sends a delete request returns class response object dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes
return the preferred certificate bundle
convenience function to search a string for keywords
convenience function to search a string for keywords case dcnl insensitive version
transform a keyword tree into a dfa using powerset construction
configure cache storage and patch requests library to transparently cache responses dcnl param cache name for sqlite backend cache file will start with this prefix dcnl e g cache sqlite dcnl for mongodb it s used as database name dcnl param backend cache backend e g sqlite mongodb memory dcnl see ref persistence dcnl param expire after number of minutes after cache will be expired dcnl or none default to ignore expiration dcnl type expire after int float or none dcnl param allowable codes limit caching only for response with this codes default 200 dcnl type allowable codes tuple dcnl param allowable methods cache only requests of this methods default get dcnl type allowable methods tuple dcnl param monkey patch patch requests request send if true default otherwise dcnl cache will not work until calling func redo patch dcnl or using func enabled context manager dcnl kwarg backend options options for chosen backend see corresponding dcnl ref sqlite <backends sqlite and ref mongo <backends mongo backends api documentation
returns true if cache has url false otherwise
context manager for temporary disabling cache dcnl with requests cache disabled dcnl request get http httpbin org ip dcnl request get http httpbin org get
context manager for temporary enabling cache dcnl with requests cache enabled dcnl request get http httpbin org ip dcnl request get http httpbin org get
clear cache
undo requests monkey patch
redo requests monkey patch
returns internal cache object
deletes all cache for url
try to pick an available ca certificate bundle provided by the os
returns an internal sequence dictionary update
returns the requests tuple auth for a given url from netrc
tries to guess the filename of the given object
take an object and test to see if it can be represented as a dcnl dictionary unless it can not be represented as such return an dcnl ordereddict e g dcnl from key val list key val dcnl ordereddict key val dcnl from key val list string dcnl valueerror need more than 1 value to unpack dcnl from key val list key val dcnl ordereddict key val
take an object and test to see if it can be represented as a dcnl dictionary if it can be return a list of tuples e g dcnl to key val list key val dcnl key val dcnl to key val list key val dcnl key val dcnl to key val list string dcnl valueerror cannot encode objects that are not 2tuples
parse lists as described by rfc 2068 section 2 dcnl in particular parse commaseparated lists where the elements of dcnl the list may include quotedstrings a quotedstring could dcnl contain a comma a nonquoted string could have quotes in the dcnl middle quotes are removed automatically after parsing dcnl it basically works like func parse set header just that items dcnl may appear multiple times and case sensitivity is preserved dcnl the return value is a standard class list dcnl parse list header token quoted value dcnl token quoted value dcnl to create a header from the class list again use the dcnl func dump header function dcnl param value a string with a list header dcnl return class list
parse lists of key value pairs as described by rfc 2068 section 2 and dcnl convert them into a python dict dcnl d parse dict header foo is a fish bar as well dcnl type d is dict dcnl true dcnl sorted d items dcnl bar as well foo is a fish dcnl if there is no value for a key it will be none dcnl parse dict header key without value dcnl key without value none dcnl to create a header from the class dict again use the dcnl func dump header function dcnl param value a string with a dict header dcnl return class dict
unquotes a header value reversal of func quote header value dcnl this does not use the real unquoting but what browsers are actually dcnl using for quoting dcnl param value the header value to unquote
returns an http header value string from a dictionary dcnl example expansion dcnl text xdvi q 8 mxb 100000 mxt 5 0 text xc dcnl accept text xdvi q 8 mxb 100000 mxt 5 0 text xc dcnl text xdvi q 8 mxb 100000 mxt 5 0 text xc dcnl accept text xdvi q 8 mxb 100000 mxt 5 0 text xc
returns a key value dictionary from a cookiejar dcnl param cj cookiejar object to extract cookies from
returns a cookiejar from a key value dictionary dcnl param cj cookiejar to insert cookies into dcnl param cookie dict dict of key values to insert into cookiejar
returns encodings from given content string dcnl param content bytestring to extract encodings from
returns encodings from given http header dict dcnl param headers dictionary to extract encoding from
stream decodes a iterator
iterate over slices of a string
returns the requested content back in unicode dcnl param r response object to get unicode content from dcnl tried dcnl 1 charset from contenttype dcnl 2 every encodings from <meta charset xxx dcnl 3 fall back and replace all unicode characters
stream decodes an iterator over compressed data dcnl param iterator an iterator over compressed data dcnl param mode gzip or deflate dcnl return an iterator over decompressed data
unescape any percentescape sequences in a uri that are unreserved dcnl characters this leaves all reserved illegal and nonascii bytes encoded
requote the given uri dcnl this function passes the given uri through an unquote quote cycle to dcnl ensure that it is fully and consistently quoted
return a dict of environment proxies
return a string representing the default user agent
return a dict of parsed link headers proxies dcnl i e link <http front jpeg rel front type image jpeg <http back jpeg rel back type image jpeg
extract the cookies from the response into a cookiejar dcnl param jar cookielib cookiejar not necessarily a requestscookiejar dcnl param request our own requests request object dcnl param response urllib3 httpresponse object
produce an appropriate cookie header string to be sent with request or none
unsets a cookie by name by default over all domains and paths dcnl wraps cookiejar clear is o n
make a cookie from underspecified parameters dcnl by default the pair of name and value will be set for the domain dcnl and sent on every request this is sometimes called a supercookie
convert a morsel object into a cookie containing the one k v pair
returns a cookiejar from a key value dictionary dcnl param cookie dict dict of key values to insert into cookiejar
string construction dcnl per section 3 4 1 1 of the spec dcnl for example the http request dcnl post request b5 3d 253d a3 a c 40 a2 r 20b http 1 1 dcnl host example com dcnl contenttype application xwwwformurlencoded dcnl authorization oauth realm example dcnl oauth consumer key 9djdj82h48djs9d2 dcnl oauth token kkk9d7dh3k39sjv7 dcnl oauth signature method hmacsha1 dcnl oauth timestamp 137131201 dcnl oauth nonce 7d8f3e4a dcnl oauth signature byt5cmsgcbgudfhobymefcx6bsw 3d dcnl c2 a3 2+q dcnl is represented by the following signature base string line breaks dcnl are for display purposes only dcnl post http 3a 2f 2fexample com 2frequest a2 3dr 2520b 26a3 3d2 2520q dcnl 26a3 3da 26b5 3d 253d 25253d 26c 2540 3d 26c2 3d 26oauth consumer dcnl key 3d9djdj82h48djs9d2 26oauth nonce 3d7d8f3e4a 26oauth signature m dcnl ethod 3dhmacsha1 26oauth timestamp 3d137131201 26oauth token 3dkkk dcnl 9d7dh3k39sjv7 dcnl section 3 4 1 1 http tools ietf org html rfc5849 section3 4 1 1
base string uri dcnl per section 3 4 1 2 of the spec dcnl for example the http request dcnl get r 20v x id 123 http 1 1 dcnl host example com 80 dcnl is represented by the base string uri http example com r 20v x dcnl in another example the https request dcnl get q 1 http 1 1 dcnl host www example net 8080 dcnl is represented by the base string uri https www example net 8080 dcnl section 3 4 1 2 http tools ietf org html rfc5849 section3 4 1 2
parameter sources dcnl parameters starting with oauth will be unescaped dcnl body parameters must be supplied as a dict a list of 2tuples or a dcnl formencoded query string dcnl headers must be supplied as a dict dcnl per section 3 4 1 3 1 of the spec dcnl for example the http request dcnl post request b5 3d 253d a3 a c 40 a2 r 20b http 1 1 dcnl host example com dcnl contenttype application xwwwformurlencoded dcnl authorization oauth realm example dcnl oauth consumer key 9djdj82h48djs9d2 dcnl oauth token kkk9d7dh3k39sjv7 dcnl oauth signature method hmacsha1 dcnl oauth timestamp 137131201 dcnl oauth nonce 7d8f3e4a dcnl oauth signature djosjkdkjsd8743243 2fjdk33kly 3d dcnl c2 a3 2+q dcnl contains the following fully decoded parameters used in the dcnl signature base sting dcnl | name | value | dcnl | b5 | 3d | dcnl | a3 | a | dcnl | c | | dcnl | a2 | r b | dcnl | oauth consumer key | 9djdj82h48djs9d2 | dcnl | oauth token | kkk9d7dh3k39sjv7 | dcnl | oauth signature method | hmacsha1 | dcnl | oauth timestamp | 137131201 | dcnl | oauth nonce | 7d8f3e4a | dcnl | c2 | | dcnl | a3 | 2 q | dcnl note that the value of b5 is 3d and not both c and dcnl c2 have empty values while the encoding rules specified in this dcnl specification for the purpose of constructing the signature base dcnl string exclude the use of a + character ascii code 43 to dcnl represent an encoded space character ascii code 32 this practice dcnl is widely used in application xwwwformurlencoded encoded values dcnl and must be properly decoded as demonstrated by one of the a3 dcnl parameter instances the a3 parameter is used twice in this dcnl request dcnl section 3 4 1 3 1 http tools ietf org html rfc5849 section3 4 1 3 1
parameters normalization dcnl per section 3 4 1 3 2 of the spec dcnl for example the list of parameters from the previous section would dcnl be normalized as follows dcnl encoded dcnl | name | value | dcnl | b5 | 3d 253d | dcnl | a3 | a | dcnl | c 40 | | dcnl | a2 | r 20b | dcnl | oauth consumer key | 9djdj82h48djs9d2 | dcnl | oauth token | kkk9d7dh3k39sjv7 | dcnl | oauth signature method | hmacsha1 | dcnl | oauth timestamp | 137131201 | dcnl | oauth nonce | 7d8f3e4a | dcnl | c2 | | dcnl | a3 | 2 20q | dcnl sorted dcnl | name | value | dcnl | a2 | r 20b | dcnl | a3 | 2 20q | dcnl | a3 | a | dcnl | b5 | 3d 253d | dcnl | c 40 | | dcnl | c2 | | dcnl | oauth consumer key | 9djdj82h48djs9d2 | dcnl | oauth nonce | 7d8f3e4a | dcnl | oauth signature method | hmacsha1 | dcnl | oauth timestamp | 137131201 | dcnl | oauth token | kkk9d7dh3k39sjv7 | dcnl concatenated pairs dcnl | name value | dcnl | a2 r 20b | dcnl | a3 2 20q | dcnl | a3 a | dcnl | b5 3d 253d | dcnl | c 40 | dcnl | c2 | dcnl | oauth consumer key 9djdj82h48djs9d2 | dcnl | oauth nonce 7d8f3e4a | dcnl | oauth signature method hmacsha1 | dcnl | oauth timestamp 137131201 | dcnl | oauth token kkk9d7dh3k39sjv7 | dcnl and concatenated together into a single string line breaks are for dcnl display purposes only dcnl a2 r 20b a3 2 20q a3 a b5 3d 253d c 40 c2 oauth consumer key 9dj dcnl dj82h48djs9d2 oauth nonce 7d8f3e4a oauth signature method hmacsha1 dcnl oauth timestamp 137131201 oauth token kkk9d7dh3k39sjv7 dcnl section 3 4 1 3 2 http tools ietf org html rfc5849 section3 4 1 3 2
hmacsha1 dcnl the hmacsha1 signature method uses the hmacsha1 signature dcnl algorithm as defined in rfc2104 dcnl digest hmacsha1 key text dcnl per section 3 4 2 of the spec dcnl rfc2104 http tools ietf org html rfc2104 dcnl section 3 4 2 http tools ietf org html rfc5849 section3 4 2
rsasha1 dcnl per section 3 4 3 of the spec dcnl the rsasha1 signature method uses the rsassapkcs1v1 5 signature dcnl algorithm as defined in rfc3447 section 8 2 also known as dcnl pkcs 1 using sha1 as the hash function for emsapkcs1v1 5 to dcnl use this method the client must have established client credentials dcnl with the server that included its rsa public key in a manner that is dcnl beyond the scope of this specification dcnl note this method requires the pythonrsa library dcnl section 3 4 3 http tools ietf org html rfc5849 section3 4 3 dcnl rfc3447 section 8 2 http tools ietf org html rfc3447 section8 2
sign a request using plaintext dcnl per section 3 4 4 of the spec dcnl the plaintext method does not employ a signature algorithm it dcnl must be used with a transportlayer mechanism such as tls or ssl or dcnl sent over a secure channel with equivalent protections it does not dcnl utilize the signature base string or the oauth timestamp and dcnl oauth nonce parameters dcnl section 3 4 4 http tools ietf org html rfc5849 section3 4 4
verify a hmacsha1 signature dcnl per section 3 4 of the spec dcnl section 3 4 http tools ietf org html rfc5849 section3 4
verify a rsassapkcs 1 v1 5 base64 encoded signature dcnl per section 3 4 3 of the spec dcnl note this method requires the pycrypto library dcnl section 3 4 3 http tools ietf org html rfc5849 section3 4 3
verify a plaintext signature dcnl per section 3 4 of the spec dcnl section 3 4 http tools ietf org html rfc5849 section3 4
decorator which filters params to remove nonoauth parameters dcnl assumes the decorated method takes a params dict or list of tuples as its dcnl first argument
removes all non oauth parameters from a dict or a list of params
escape a unicode string in an oauthcompatible fashion dcnl per section 3 6 of the spec dcnl section 3 6 http tools ietf org html rfc5849 section3 6
encode a sequence of twoelement tuples or dictionary into a url query string dcnl operates using an oauthsafe escape method in contrast to urllib urlencode
a unicodesafe version of urllib2 parse keqv list
a unicodesafe version of urllib2 parse http list
parse an oauth authorization header into a list of 2tuples
prepare the authorization header dcnl per section 3 5 1 of the spec dcnl protocol parameters can be transmitted using the http authorization dcnl header field as defined by rfc2617 with the authscheme name set to dcnl oauth case insensitive dcnl for example dcnl authorization oauth realm example dcnl oauth consumer key 0685bd9184jfhq22 dcnl oauth token ad180jjd733klru7 dcnl oauth signature method hmacsha1 dcnl oauth signature wojio9a2w5mfwdgidvzbtsmk 2fpy 3d dcnl oauth timestamp 137131200 dcnl oauth nonce 4572616e48616d6d65724c61686176 dcnl oauth version 1 0 dcnl section 3 5 1 http tools ietf org html rfc5849 section3 5 1 dcnl rfc2617 http tools ietf org html rfc2617
append oauth params to an existing set of parameters dcnl both params and oauth params is must be lists of 2tuples dcnl per section 3 5 2 and 3 5 3 of the spec dcnl section 3 5 2 http tools ietf org html rfc5849 section3 5 2 dcnl 3 5 3 http tools ietf org html rfc5849 section3 5 3
prepare the formencoded body dcnl per section 3 5 2 of the spec dcnl section 3 5 2 http tools ietf org html rfc5849 section3 5 2
prepare the request uri query dcnl per section 3 5 3 of the spec dcnl section 3 5 3 http tools ietf org html rfc5849 section3 5 3
extract hostname and port from uri dcnl will use default port for http and https if none is present in the uri
escape a string in an oauthcompatible fashion dcnl todo verify whether this can in fact be used for oauth 2
prepare the authorization grant request uri dcnl the client constructs the request uri by adding the following dcnl parameters to the query component of the authorization endpoint uri dcnl using the application xwwwformurlencoded format as defined by dcnl w3c rechtml40119991224 dcnl response type dcnl required value must be set to code dcnl client id dcnl required the client identifier as described in section 2 2 dcnl redirect uri dcnl optional as described in section 3 1 2 dcnl scope dcnl optional the scope of the access request as described by dcnl section 3 3 dcnl state dcnl recommended an opaque value used by the client to maintain dcnl state between the request and callback the authorization dcnl server includes this value when redirecting the useragent back dcnl to the client the parameter should be used for preventing dcnl crosssite request forgery as described in section 10 12 dcnl get authorize response type code client id s6bhdrkqt3 state xyz dcnl redirect uri https 3a 2f 2fclient 2eexample 2ecom 2fcb http 1 1 dcnl host server example com dcnl w3c rechtml40119991224 http tools ietf org html draftietfoauthv228 refw3c rechtml40119991224 dcnl section 2 2 http tools ietf org html draftietfoauthv228 section2 2 dcnl section 3 1 2 http tools ietf org html draftietfoauthv228 section3 1 2 dcnl section 3 3 http tools ietf org html draftietfoauthv228 section3 3 dcnl section 10 12 http tools ietf org html draftietfoauthv228 section10 12
prepare the access token request dcnl the client makes a request to the token endpoint by adding the dcnl following parameters using the application xwwwformurlencoded dcnl format in the http request entitybody dcnl grant type dcnl required value must be set to authorization code dcnl code dcnl required the authorization code received from the dcnl authorization server dcnl redirect uri dcnl required if the redirect uri parameter was included in the dcnl authorization request as described in section 4 1 1 and their dcnl values must be identical dcnl grant type authorization code code splxlobezqqybys6wxsbia dcnl redirect uri https 3a 2f 2fclient 2eexample 2ecom 2fcb dcnl section 4 1 1 http tools ietf org html draftietfoauthv228 section4 1 1
parse authorization grant response uri into a dict dcnl if the resource owner grants the access request the authorization dcnl server issues an authorization code and delivers it to the client by dcnl adding the following parameters to the query component of the dcnl redirection uri using the application xwwwformurlencoded format dcnl code dcnl required the authorization code generated by the dcnl authorization server the authorization code must expire dcnl shortly after it is issued to mitigate the risk of leaks a dcnl maximum authorization code lifetime of 10 minutes is dcnl recommended the client must not use the authorization code dcnl more than once if an authorization code is used more than dcnl once the authorization server must deny the request and should dcnl revoke when possible all tokens previously issued based on dcnl that authorization code the authorization code is bound to dcnl the client identifier and redirection uri dcnl state dcnl required if the state parameter was present in the client dcnl authorization request the exact value received from the dcnl client dcnl for example the authorization server redirects the useragent by dcnl sending the following http response dcnl http 1 1 302 found dcnl location https client example com cb code splxlobezqqybys6wxsbia dcnl state xyz
parse the implicit token response uri into a dict dcnl if the resource owner grants the access request the authorization dcnl server issues an access token and delivers it to the client by adding dcnl the following parameters to the fragment component of the redirection dcnl uri using the application xwwwformurlencoded format dcnl access token dcnl required the access token issued by the authorization server dcnl token type dcnl required the type of the token issued as described in dcnl section 7 1 value is case insensitive dcnl expires in dcnl recommended the lifetime in seconds of the access token for dcnl example the value 3600 denotes that the access token will dcnl expire in one hour from the time the response was generated dcnl if omitted the authorization server should provide the dcnl expiration time via other means or document the default value dcnl scope dcnl optional if identical to the scope requested by the client dcnl otherwise required the scope of the access token as described dcnl by section 3 3 dcnl state dcnl required if the state parameter was present in the client dcnl authorization request the exact value received from the dcnl client dcnl http 1 1 302 found dcnl location http example com cb access token 2yotnfzfejr1zcsicmwpaa dcnl state xyz token type example expires in 3600
parse the json token response body into a dict dcnl the authorization server issues an access token and optional refresh dcnl token and constructs the response by adding the following parameters dcnl to the entity body of the http response with a 200 ok status code dcnl access token dcnl required the access token issued by the authorization server dcnl token type dcnl required the type of the token issued as described in dcnl section 7 1 value is case insensitive dcnl expires in dcnl recommended the lifetime in seconds of the access token for dcnl example the value 3600 denotes that the access token will dcnl expire in one hour from the time the response was generated dcnl if omitted the authorization server should provide the dcnl expiration time via other means or document the default value dcnl refresh token dcnl optional the refresh token which can be used to obtain new dcnl access tokens using the same authorization grant as described dcnl in section 6 dcnl scope dcnl optional if identical to the scope requested by the client dcnl otherwise required the scope of the access token as described dcnl by section 3 3 dcnl the parameters are included in the entity body of the http response dcnl using the application json media type as defined by rfc4627 the dcnl parameters are serialized into a json structure by adding each dcnl parameter at the highest structure level parameter names and string dcnl values are included as json strings numerical values are included dcnl as json numbers the order of parameters does not matter and can dcnl vary dcnl for example dcnl http 1 1 200 ok dcnl contenttype application json charset utf8 dcnl cachecontrol nostore dcnl pragma nocache dcnl access token 2yotnfzfejr1zcsicmwpaa dcnl token type example dcnl expires in 3600 dcnl refresh token tgzv3jokf0xg5qx2tlkwia dcnl example parameter example value dcnl section 7 1 http tools ietf org html draftietfoauthv228 section7 1 dcnl section 6 http tools ietf org html draftietfoauthv228 section6 dcnl section 3 3 http tools ietf org html draftietfoauthv228 section3 3 dcnl rfc4627 http tools ietf org html rfc4627
ensures token precence token type expiration and scope in params
add an mac access authentication signature to headers dcnl unlike oauth 1 this hmac signature does not require inclusion of the request dcnl payload body neither does it use a combination of client secret and dcnl token secret but rather a mac key provided together with the access token dcnl currently two algorithms are supported hmacsha1 and hmacsha256 dcnl extension algorithms are not supported dcnl example mac authorization header linebreaks added for clarity dcnl authorization mac id h480djs93hd8 dcnl nonce 1336363200 dj83hs9s dcnl mac bhcqxtvyfj5cma9ukkpfx1zeoxm dcnl mac access authentication http tools ietf org html draftietfoauthv2httpmac01 dcnl extension algorithms http tools ietf org html draftietfoauthv2httpmac01 section7 1 dcnl param uri request uri dcnl param headers request headers as a dictionary dcnl param http method http request method dcnl param key mac given provided by token endpoint dcnl param algorithm hmac algorithm provided by token endpoint dcnl return headers dictionary with the authorization field added
add a bearer token to the request uri dcnl not recommended use only if client can t use authorization header or body dcnl http www example com path access token h480djs93hd8 dcnl bearer token http tools ietf org html draftietfoauthv2bearer18
add a bearer token to the request uri dcnl recommended method of passing bearer tokens dcnl authorization bearer h480djs93hd8 dcnl bearer token http tools ietf org html draftietfoauthv2bearer18
add a bearer token to the request body dcnl access token h480djs93hd8 dcnl bearer token http tools ietf org html draftietfoauthv2bearer18
ensures that all parameters in a list of 2element tuples are encoded to dcnl bytestrings using utf8
ensures that all parameters in a list of 2element tuples are decoded to dcnl unicode using utf8
decode a query string in xwwwformurlencoded format into a sequence dcnl of twoelement tuples dcnl unlike urlparse parse qsl strict parsing true urldecode will enforce dcnl correct formatting of the query string by validation if validation fails dcnl a valueerror will be raised urllib parse qsl will only raise errors if dcnl any of namevalue pairs omits the equals sign
extract parameters and return them as a list of 2tuples dcnl will successfully extract parameters from urlencoded query strings dcnl dicts or lists of 2tuples empty strings dicts lists will return an dcnl empty list of parameters any other input will result in a return dcnl value of none
generate pseudorandom nonce that is unlikely to repeat dcnl per section 3 3 of the oauth 1 rfc 5849 spec dcnl per section 3 2 1 of the mac access authentication spec dcnl a random 64bit number is appended to the epoch timestamp for both dcnl randomness and to decrease the likelihood of collisions dcnl section 3 2 1 http tools ietf org html draftietfoauthv2httpmac01 section3 2 1 dcnl section 3 3 http tools ietf org html rfc5849 section3 3
get seconds since epoch utc dcnl per section 3 3 of the oauth 1 rfc 5849 spec dcnl per section 3 2 1 of the mac access authentication spec dcnl section 3 2 1 http tools ietf org html draftietfoauthv2httpmac01 section3 2 1 dcnl section 3 3 http tools ietf org html rfc5849 section3 3
generates a nonguessable oauth token dcnl oauth 1 and 2 does not specify the format of tokens except that they dcnl should be strings of random characters tokens should not be guessable dcnl and entropy when generating the random characters is important which is dcnl why systemrandom is used instead of the default random choice method
extend a query with a list of twotuples
add a list of twotuples to the uri query components
nearconstant time string comparison dcnl used in order to avoid timing attacks on sensitive information such dcnl as secret keys during request verification rootlabs dcnl rootlabs http rdist root org 2010 01 07 timingindependentarraycomparison
add documentation to a function
import module returning the module after the last dot
add an item to six moves
remove item from six moves
return an iterator over the keys of a dictionary
return an iterator over the values of a dictionary
return an iterator over the key value pairs of a dictionary
create a base class with a metaclass
verify that cert in decoded format as returned by dcnl sslsocket getpeercert matches the hostname rfc 2818 rules dcnl are mostly followed but ip addresses are not accepted for hostname dcnl certificateerror is raised on failure on success the function dcnl returns nothing
helper for quickly adding a streamhandler to the logger useful for dcnl debugging dcnl returns the handler after adding it
given a string and an iterable of delimiters split on the first found dcnl delimiter return two split parts and the matched delimiter dcnl if not found then the first part is the full input string dcnl example dcnl split first foo bar baz dcnl foo bar baz dcnl split first foo bar baz 123 dcnl foo bar baz none dcnl scales linearly with number of delims not ideal for large number of delims
given a url return a parsed class url namedtuple besteffort is dcnl performed to parse incomplete urls fields not provided will be none dcnl partly backwardscompatible with mod urlparse dcnl example dcnl parse url http google com mail dcnl url scheme http host google com port none path dcnl prase url google com 80 dcnl url scheme none host google com port 80 path none dcnl prase url foo bar dcnl url scheme none host none port none path foo query bar
deprecated use func parse url instead
shortcuts for generating request headers dcnl param keep alive dcnl if true adds connection keepalive header dcnl param accept encoding dcnl can be a boolean list or string dcnl true translates to gzip deflate dcnl list will get joined by comma dcnl string will be used as provided dcnl param user agent dcnl string representing the useragent you want such as dcnl pythonurllib3 0 6 dcnl param basic auth dcnl colonseparated username password string for authorization basic dcnl auth header dcnl example dcnl make headers keep alive true user agent batman 1 0 dcnl connection keepalive useragent batman 1 0 dcnl make headers accept encoding true dcnl acceptencoding gzip deflate
returns true if the connection is dropped and should be closed dcnl param conn dcnl class httplib httpconnection object dcnl note for platforms like appengine this will always return false to dcnl let the platform handle connection recycling transparently for us
our embarassinglysimple replacement for mimetools choose boundary
iterate over fields dcnl supports list of k v tuples and dicts
encode a dictionary of fields using the multipart formdata mime format dcnl param fields dcnl dictionary of fields or list of key value field tuples the key is dcnl treated as the field name and the value as the body of the formdata dcnl bytes if the value is a tuple of two elements then the first element dcnl is treated as the filename of the formdata section dcnl field names and filenames must be unicode dcnl param boundary dcnl if not specified then a random boundary will be generated using dcnl func mimetools choose boundary
given a url return an class connectionpool instance of its host dcnl this is a shortcut for not having to parse out the scheme host and port dcnl of the url before creating an class connectionpool instance dcnl param url dcnl absolute url string that must include the scheme port is optional dcnl param kw dcnl passes additional parameters to the constructor of the appropriate dcnl class connectionpool useful for specifying things like dcnl timeout maxsize headers etc dcnl example dcnl conn connection from url http google com dcnl r conn request get
returns a basic auth string
extracts the gssapi authentication token from the appropriate header
dispatches a hook dictionary on a given piece of data
merges kwarg dictionaries dcnl if a local key in the dictionary is set to none it will be removed
returns a class session for contextmanagement
new implementation of safe mode we catch all exceptions at the api level dcnl and then return a blank response object with the error field filled this decorator dcnl wraps request in api py
constructs and sends a class request <request dcnl returns class response <response object dcnl param method method for the new class request object dcnl param url url for the new class request object dcnl param params optional dictionary or bytes to be sent in the query string for the class request dcnl param data optional dictionary or bytes to send in the body of the class request dcnl param headers optional dictionary of http headers to send with the class request dcnl param cookies optional dict or cookiejar object to send with the class request dcnl param files optional dictionary of name filelikeobjects or name filename fileobj for multipart encoding upload dcnl param auth optional auth tuple to enable basic digest custom http auth dcnl param timeout optional float describing the timeout of the request dcnl param allow redirects optional boolean set to true if post put delete redirect following is allowed dcnl param proxies optional dictionary mapping protocol to the url of the proxy dcnl param return response optional if false an unsent request object will returned dcnl param session optional a class session object to be used for the request dcnl param config optional a configuration dictionary see request defaults for allowed keys and their default values dcnl param verify optional if true the ssl cert will be verified a ca bundle path can also be provided dcnl param prefetch optional if true the response content will be immediately downloaded dcnl param cert optional if string path to ssl client cert file pem if tuple cert key pair
sends a get request returns class response object dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes
sends a options request returns class response object dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes
sends a head request returns class response object dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes
sends a post request returns class response object dcnl param url url for the new class request object dcnl param data optional dictionary or bytes to send in the body of the class request dcnl param kwargs optional arguments that request takes
sends a put request returns class response object dcnl param url url for the new class request object dcnl param data optional dictionary or bytes to send in the body of the class request dcnl param kwargs optional arguments that request takes
sends a patch request returns class response object dcnl param url url for the new class request object dcnl param data optional dictionary or bytes to send in the body of the class request dcnl param kwargs optional arguments that request takes
sends a delete request returns class response object dcnl param url url for the new class request object dcnl param kwargs optional arguments that request takes
copy treebuilders from the given module into this module
alias one attribute name to another for backward compatibility
fields is a sequence of name value elements for regular form fields dcnl files is a sequence of name filename value elements for data to be uploaded as files dcnl return content type body ready for httplib http instance
in the case you don t even have wget
lx echo
lx hash sha1 file dcnl lx hash md5 file dcnl lx hash md4 file dcnl lx hash dcid file dcnl lx hash ed2k file dcnl lx hash infohash xxx torrent dcnl lx hash verifysha1 file hash dcnl lx hash verifymd5 file hash dcnl lx hash verifymd4 file hash dcnl lx hash verifydcid file hash dcnl lx hash verifyed2k file ed2k dcnl lx hash verifybt file xxx torrent
usage lx diagnostics
usage lx decodeurl thunder
usage lx kuai http kuai xunlei com d xxx dcnl note that you can simply use dcnl lx add http kuai xunlei com d xxx dcnl or dcnl lx download http kuai xunlei com d xxx
usage lx extendlinks http kuai xunlei com d http www verycd com topics dcnl parse and print links from pages dcnl lx extendlinks urls dcnl lx extendlinks name urls
usage lx listtorrent size xxx torrent
usage lx gettorrent infohash|taskid
usage lx exportaria2 id|name
usage lx downloadaria2 j 5 id|name
fields is a sequence of name value elements for regular form fields dcnl files is a sequence of name filename value elements for data to be uploaded as files dcnl return content type body ready for httplib http instance
in the case you don t even have wget
usage lx kuai http kuai xunlei com d xxx dcnl note that you can simply use dcnl lx add http kuai xunlei com d xxx dcnl or dcnl lx download http kuai xunlei com d xxx
usage lx decodeurl thunder
usage lx gettorrent infohash|taskid
usage lx extendlinks http kuai xunlei com d http www verycd com topics dcnl parse and print links from pages dcnl lx extendlinks urls dcnl lx extendlinks name urls
lx hash sha1 file dcnl lx hash md5 file dcnl lx hash md4 file dcnl lx hash dcid file dcnl lx hash ed2k file dcnl lx hash infohash xxx torrent dcnl lx hash verifysha1 file hash dcnl lx hash verifymd5 file hash dcnl lx hash verifymd4 file hash dcnl lx hash verifydcid file hash dcnl lx hash verifyed2k file ed2k dcnl lx hash verifybt file xxx torrent
usage lx diagnostics
lx echo
usage lx exportaria2 id|name
usage lx downloadaria2 j 5 id|name
usage lx listtorrent size xxx torrent
example dcnl lx download size 10m dcnl lx download size 1g+ dcnl lx download 0 size 1g
example dcnl lx list sort dcnl lx download 0 sort 01
example dcnl lx download total size 1g dcnl lx download 0 total size 1g dcnl lx list total size 1g
returns the ordering of the elements of x the list dcnl xj for j in order x is a sorted version of x dcnl missing values in x are indicated by none if noneislast is true dcnl then missing values are ordered to be at the end dcnl otherwise they are ordered at the beginning
returns the ranking of the elements of x the position of the first dcnl element in the original vector is rank0 in the sorted vector dcnl missing values are indicated by none calls the order function dcnl ties are not averaged by default choices are dcnl first average min max random average
fuzzy search for query in list of strings dictionaries tulpes or lists dcnl args dcnl query search string dcnl elements list of strings dictionaries tulpes or lists dcnl key function to access string element in dictionaries tulpes or lists dcnl rank rank the elements in the return list by quality of match currently not supported dcnl seq minimum sequence of characters to match dcnl returns dcnl a ranked list of elements that matches the query dcnl fuzzy matching with rankning based on quality of match with two criteria dcnl a sequence of characters e g for query nor nor is better then nxoxr dcnl b earlier matches are better e g for query nor nor is better then xnor
returns a list of bookmark objects after a dcnl title search based on the given arg
get a list of alfred item objects
configure cache storage and patch requests library to transparently cache responses dcnl param cache name for sqlite backend cache file will start with this prefix dcnl e g cache sqlite dcnl for mongodb it s used as database name dcnl param backend cache backend e g sqlite mongodb memory dcnl see ref persistence dcnl param expire after number of minutes after cache will be expired dcnl or none default to ignore expiration dcnl type expire after int float or none dcnl param allowable codes limit caching only for response with this codes default 200 dcnl type allowable codes tuple dcnl param allowable methods cache only requests of this methods default get dcnl type allowable methods tuple dcnl param monkey patch patch requests request send if true default otherwise dcnl cache will not work until calling func redo patch dcnl or using func enabled context manager dcnl kwarg backend options options for chosen backend see corresponding dcnl ref sqlite <backends sqlite and ref mongo <backends mongo backends api documentation
returns true if cache has url false otherwise
