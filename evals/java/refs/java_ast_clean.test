get members by name
query a member field by type
insert the mapped classes into the hibernate
loads the table with the member fields of the class defined
returns the name of the table graph cell
checks if there is a source file for this cell
insert the mapped classes into the hibernate
writes the contents of get layout source to the layout output file
allows for menu preview
draw the screen background sky sea ground
draw all selectable targets
render the scene and flush the open gl pipeline
direct copy from the lwjgl wiki
process game logic here in the main finite state machine
initialises open al
dumps the ac3 d object to a file
loads a 3 d mesh from an ac3 d file
loads the ac3 d model
load a texture
sets up the gl for scene rendering
plays all the audio for each entity terrain
displays information messages
loads the configuration from the config file
saves the configuration to the config file
special keys game functions
ignored events necessary as their abstract
encodes an object into json
decodes a json object
encodes an object into json using the
decodes a json object in a specific type
constructs dice using only a number and a base
the modifier must also be specified
gets the next pseudo random value based on the number base and modifier
gets the current score for this ability
gets the current score for this ability
sets the current score for this ability
add the supplied value to the current score
gets the maximum value for this ability score
sets the maximum value for this ability score
sets the description for this object
method called to read data between xml tags
sets the maximum value for this ability score
method called to read data between xml tags
xpath root builder
test of get registration in period method of class timecheckup
login action the first action for this application
change the name of the xml markup
returns the attributs of the xml markups
returns the elements of the xml markups
delete announcement dto
count total posts send to contest
create new record in category recipe
update category recipe
create new tip
count total feedback by recipe id
delete feedback for recipe
create feedback for site
update table feedback site
count tip post by username
count recipe post by username
this adds a property descriptor for the auto increment sample data feature
this adds a property descriptor for the editable feature
this adds a property descriptor for the desc field size feature
this adds a property descriptor for the name feature
this adds a property descriptor for the pk field name feature
this adds a property descriptor for the desc field type feature
this adds a property descriptor for the desc field name feature
this adds a property descriptor for the name db feature
this adds a property descriptor for the entity feature
this adds a property descriptor for the depends feature
this adds a property descriptor for the entity feature
this adds a property descriptor for the use as filter feature
this adds a property descriptor for the pk field name feature
this adds a property descriptor for the sample data value feature
this adds a property descriptor for the subtitle feature
this adds a property descriptor for the visible form feature
this adds a property descriptor for the visible list feature
this adds a property descriptor for the default value feature
this adds a property descriptor for the documentation feature
this adds a property descriptor for the expanded feature
this adds a property descriptor for the group name feature
this adds a property descriptor for the is pk feature
this adds a property descriptor for the to string feature
this adds a property descriptor for the not null feature
this adds a property descriptor for the size feature
this adds a property descriptor for the type feature
this adds a property descriptor for the is password feature
this adds a property descriptor for the documentation feature
this adds a property descriptor for the is identity feature
this adds a property descriptor for the group id feature
this adds a property descriptor for the menu hierarchy feature
this adds a property descriptor for the row item feature
this adds a property descriptor for the resourse id feature
this adds a property descriptor for the base package feature
this adds a property descriptor for the label feature
this adds a property descriptor for the database feature
this adds a property descriptor for the documentation feature
this adds a property descriptor for the table name feature
this adds a property descriptor for the entity feature
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
validates the pattern constraint of em id basic type em
creates a new adapter for an object of class
creates a new adapter for an object of class
validates the pattern constraint of em uniq id em
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
this just records the information
create a new model
returns the label for the specified feature name
handles activation of the editor or its associated views
returns a diagnostic describing the errors and warnings listed in the resource
this accesses a cached version of the property sheet
initializes the annotations for b http java
makes selections based on the points collect from mark points buttons
converte array de bytes em string hexa
verifica assinatura da sequencia de bytes atrav s da chave p blica
this method initializes this
this method initializes scr empresa
this method initializes tbl produto
this method initializes btn novo
this method initializes this
this method initializes btn salvar
this method initializes btn filtro
this method initializes scr cliente fornecedor
this method initializes tbl cliente fornecedor
this method initializes btn consulta
this method initializes this
this method initializes btn confirmar
this method initializes btn cancelar
this method initializes pss senha
this method initializes this
this method initializes txt usuario
this method initializes scr empresa
this method initializes this
this method initializes tbl empresa
this method initializes this
this method initializes scr transacao
this method initializes tbl transacao
this method initializes this
creates the mildly complex radio buttons that the prefs dialog uses
sets this field editors value ensuring that text changed is called
called every time the text changes i
given a string looks up the corresponding dot method
logs the error in the workbench log using the provided text and the
logs a very common registry error when a required attribute is missing
this routine browses through the users path looking for dot executables
logs a very common registry error when a required child is missing
forwards the process standard error output to the given output stream
forwards the given input stream to the process standard input
forwards the process standard output to the given output stream
start the registry reading process using the supplied plugin id and
kills the process
returns the preference with the given name
sets the given preference to the given value
this method initializes cmb unidade medida
this method initializes grd fabricantes
this method initializes men arquivo
this method initializes mni fabricante
this method initializes pnl botoes
this method initializes menu item produto
stores the image handle reference so that when all the images report an
add a line from the message to our internal cache of the
populate the contents of the simple message with what we found in the
return the name of the server that connected to fakesmtpserver
set the name of the server that connected to fakesmtpserver in
add a mail recipient someone that the mail was send to to
set the email address of the person who sent the message
set the body of the email message minus the headers
this flag is set once the data segment has been completely
retrieve the last message that was sent to the smtp server
get the sender of the email
retrieve the last message that was sent to the smtp server
get the set of strings which indicates the destination of the
get the text of the email message
set the list of all mail headers attached to the message
listen for incoming messages
output the message received to the console
action copy pojo
returns an html select list for the first two colums key value display
returns a list of the argument names in each parameter
returns a list of the argument types in each parameter
gets the sql string for use in a prepared statement
returns an html select list for the first two colums key value display
create a rgb color object based on this hslcolor with a different hue
returns the content of the custom layout
create a rgb color object based on this hslcolor with a different
create a rgb color object based on this hslcolor with a different
create a rgb color object based on this hslcolor with a different shade
create a rgb color object based on this hslcolor with a different tone
create a rgb color object that is the complementary color of this
get the hue value
get the luminance value
get the rgb color object represented by this hdlcolor
get the saturation value
gets the type of question for this tt question result tt
adds an tt option result tt to tt option results tt list
initializes the list of all available option results
increments the frequency
initializes the list of all available option results
returns a short description of the servlet
notification that the web application initialization process is starting
notification that the servlet context is about to be shut down
notification that the web application initialization process is starting
notification that the servlet context is about to be shut down
listist the css style class to be used by the table surrounding
p an code action code to force page navigation to the main page
adds all vertical layouts as tabs in the wizard
adds a lazy loading view
standard setter method used to bind the container component to this bean instance
checks if the specified view exists in the component
checks if the specified view available and active
get the actual view component by the view name
provides name of the currently active view
provides the actual component of the current view
resolves view name by the actual view component instance
extracts the pure name from the view name combined with the parameters
for validating the email entries
for validating the subject
add a hit to the publication
remove hit of type cc from this publication
remove set of hits of type cc from this publication
get a single hit of concept class
check if publication contains given hit
filter a list of publication mappings
get publication id
delegates to certain filter methods that are specified in mapping
filter mappings with low score
take only the best n mappings to each concept class
sets the delete status for the document
gives back the delete status for the document
adds one chemical object to a medline abstract
returns name of this transformer
writes a collection of abstracts to the ondex backend
returns version of this transformer
retrieve accession number
retrieve ambiguous status of accession
retrieve data source of accession
does not require index ondex graph
prints the given route through the graph to the open file
sets the new identifier
gets the current identifier
returns name of this mapping
returns version of this mapping
returns name of parser
adds new accessions to entry
transfering a given ec number into a four position one e
returns version of parser
analyses a ec number given as string for hyphens eg
analyzes ec number as string and returns the next higher term eg
checks whether protein is registered
registers a protein id along with its internal id
gets internal id for a protein id
registers a gene id along with its internal id
gets internal id for a gene id
checks whether chromosome is registered
registers a chromosome id along with its internal id
gets internal id for a chromosome id
sets the ondexgraph and starts the parser
returns the ondexgraph
adds a publication reference to a node
copies a context list from on concept to another concept
returns the next abstract node in the current parsed file
adds a protein to an enzyme
clears the intern sink object cache
adds a link if the pathway is not already set
adds the ec number to the related enzyme
sets a pathway as super pathway
fix wrong annotations in element type from bio pax
reads in translation
adds a description as the concatenation of the comments to a concept
add a possible taxid to a concept
add a possible taxid to a concept
returns a data source either the specified one derived from a mapping
tries to infer the associated data source of an entity
copies a context list from on concept to another concept
get wrapped metadata entity
creates an indentation of size code level code
returns concept class that carries the given key as id or name
moves the cursor forward
resets the cursor to the first path
searches for paths
traces the results back
adds a publication reference to the family entry
adds a database reference to the family entry
returns the part after the keyword
debug output method
stores not to filter elements
checks if a given accession should be filtered
setups the filters
method for order on ortholog
method for order of inparalogs
returns name of this mapping
returns version of this mapping
returns name of this mapping
returns version of this mapping
checks whether there is already one concept with the
all accessions from dra entity will be written to concept
annotaion from dra entity will be written to concept
checks whether there is already one concept with the
all names except the preferred name
if id of this concept not yet set
checks if dra entity object has a key
extract concepts from dra entity instance
set the key of this concept only if not yet set
give the name of the concepts class
set the class of this concept
copies a context list from on concept to another concept
adds special formating for boolean
adds special formating for number
general case using xstream wrapper
adds special case for string
determines the type of attribute data
constructs the local name of a given concept
some sanity checks necessary for pro log
copies the original file to the given destination
propagates decomposition of string to object according to data type
for a given relation returns the source concept observes the reverse
for a given relation returns the target concept observes the reverse
creates the corresponding ondexconcept on the given graph
parses xml file and performs transformation into ondex entities
writes the header notes to the sbml file
gets internal id for a cds id
checks whether cds is registered
registers a cdsid along with its internal id
checks whether gene is registered
checks whether chromosome is registered
registers a chromosome id along with its internal id
gets internal id for a chromosome id
logs an inconsistency event with message code s code
converts the y name into sgd format if necessary
determines the deeper of two given concept classes in terms
concatenates all members of the collection code ss code
checks for valid argument
checks whether code b code holds
traces the results back
logs the information message in code s code
returns a nicely formatted string that describes the code ondexconcept c code
builds a valid go id from an integer
returns name of this mapping
returns version of this mapping
returns name of this mapping
returns version of this mapping
no index ondexgraph is required
the object name in the database which contributed the goa file
the go id
which part of the go three the goid is part of
the type gene transcript protein protein structure complex
the database which made the assignment
removes trailing character and possible last double quote
adds a alternative id to this obo concept
adds a reference e
adds another synonym for this obo concepts
returns name of this parser
sets references parsed from def line for this obo concept
returns version of this parser
calculates the log likelihood of the
recursively clones the whole tree
sets the parent
gets the parent
returns the child at the given position
constructs the hashkey
gets the standard deviation
sets the child at the given position
registers a whole dendrogram with the set
recalculates the leaf set
checks whether a change of likelihood is acceptable or not
gets the number of significant consensus clusters
if this node is a leaf
gets the number of feeds
gets the key
finds the threshold with numerical integration
if this node is the parent of the node that this query
replaces the old child with the new child
gets an unconnected clone of this node
sets the leaves
recursively builds an output graph based on a
computes the values of theta and e for the given node and
returns the name of this filter
returns the version of this filter
returns name of this export
returns version of this export
returns name of this parser
returns a random index of an internal node of the tree
returns version of this parser
returns name of this parser
returns randomly 1 or 0
return the encoding gene for this molecule
adds a molecule to the list of catalysing molecules
sets the encoding gene for this molecule
sets sequence data for this molecule
adds a molecule to the list of incoming molecules
sets the species of this molecule
adds a molecule to the list of inhibiting molecules
adds a subunit to the current list
sets authors line
adds a molecule to the list of outgoing molecules
sets source line
adds a dblink to current list
adds a alternative accession to current list
create a relation type if missing in metadata
adds a synonym to current list
adds a publication to current list
normalizes a line by removing first line identifier
parses a tp value out of a line
parses the type of entry from a line
adds a alternative accession to current list
sets the matrix string
adds a dblink to current list
adds a synonym to current list
parses a gene id from a bs line
adds a publication to current list
parses a binding site accession from a bs line
parse a tf from a fa line
sets the location on the chromosom tag
sets the regulation properties tag
generates a transfac url to the transcription factor
sets the protein sequence for this factor
adds an interacting factor to current list
adds a regulated gene to current list
adds a matrix to current list
returns name of this validator
returns version of this validator
returns name of this validator
returns version of this validator
sets the element id value for this pathway element
gets the element id1 value for this pathway element relation
sets the target id value for this structure alignment
sets the entry id1 value for this link dbrelation
sets the element id1 value for this pathway element relation
sets the entry id2 value for this link dbrelation
set the endpoint address for the specified port name
sets the query nodes value for this structure alignment
sets the components value for this pathway element
sets the target nodes value for this structure alignment
gets the element id2 value for this pathway element relation
sets the element id2 value for this pathway element relation
sets the subtypes value for this pathway element relation
sets the entry id value for this definition
sets the genes id1 value for this ssdbrelation
sets the genes id2 value for this ssdbrelation
gets the sw score value for this ssdbrelation
sets the sw score value for this ssdbrelation
sets the motif id value for this motif result
gets the bit score value for this ssdbrelation
sets the genes id value for this motif result
adds accessions derived from the names of the pathway element to the
sets the bit score value for this ssdbrelation
adds names from the pathway element to the ondexconcept
sets the evalue value for this motif result
sets the identity value for this ssdbrelation
sets the overlap value for this ssdbrelation
gets the start position1 value for this ssdbrelation
sets the start position1 value for this ssdbrelation
gets the end position1 value for this ssdbrelation
sets the end position1 value for this ssdbrelation
gets the start position2 value for this ssdbrelation
sets the start position2 value for this ssdbrelation
gets the end position2 value for this ssdbrelation
constructs file locations and constructs species
sets the end position2 value for this ssdbrelation
returns element of
sets element of
returns graphical x
sets graphical x
gets the best flag 1 to2 value for this ssdbrelation
returns graphical y
set graphical y
sets the best flag 1 to2 value for this ssdbrelation
modifies the concept id
returns of type fk
searches for name in all concept names of all concepts
sets of type fk
gets the best flag 2 to1 value for this ssdbrelation
constructs a regex that matches kgml files
sets the best flag 2 to1 value for this ssdbrelation
sets the definition1 value for this ssdbrelation
sets the definition2 value for this ssdbrelation
gets the length1 value for this ssdbrelation
sets the length1 value for this ssdbrelation
gets the length2 value for this ssdbrelation
sets the length2 value for this ssdbrelation
returns key from type berkeley relation key
returns kegg concept id for associated concept
returns actual accession
returns type of sequence usually aa or na
sets kegg concept id for associated concept
sets type of sequence usually aa or na
sets ambiguity of accession
changes the data source for this accession
adds a concept id to the list of context
checks if a concept id has been written already
returns id of from concept
returns relation primary key
returns type of relation
checks if a kegg internal id has been written already
returns id of to concept
returns mol string
if this concept is context of itself
searches for name in all concept names of all concepts
sets mol string
sets the set of pdb structures
returns parsed pathway concept
simply check for null or empty strings
extracts possible ec number from name and adds it as accession
registers a kgml component parser with the list of delegates
returns name of parser
returns version of parser
cleans cache of meta data
returns the name of this xmlcomponent parser
returns the name of this xml component parser
sets the state of this parser to cancelled
returns the name of this xmlcomponent parser
sets list of attribute attribute names to ignore for import
returns name of xmlcomponent parser
ensures back compatibility with old oxl
wrapper method for validate object o
returns name of this validator
tests if either concept names are ubiquitous
returns version of this validator
moves the cursor forward
searches for paths
creates relations between all pairs in the map
starts the thread and then waits until the reader has
enqueues a new array into the pipe
returns the concepts neighbour on the given relation
logs an event
returns the amount of the internal accession
resets the internal state to the default value
checks a value and sets the internal state
checks a value and sets the internal state
searches for last concept id in whole graph
returns ondexconcept for a given array index
returns ondexrelation for a given array index
returns the number of edges relations in the graph
returns the number of nodes concepts in the graph
returns the name of the producer
get the concept prototype that corresponds to the string
returns the name of the producer
returns name of this parser
returns version of this parser
compare matches according to their score
this returns the coverage in view of the longest sequence
this returns the coverage in view of the shortest sequence
this returns the coverage in view of the query sequence
this returns the coverage in view of the target sequence
creates an index over all names and identifiers of the the metadata of
records a new set of error rates
calculates inital error rates for each dataset
adds the given pair as a new edge
gets the other element
adds all nodes and edges of the given network
checks whether the network contains the given node
initializes the graph index map if necessary
checks whether the network contains the given edge
updates the counts
sample a new theta based on current g
sample intermediate consensus graph g based on p
gets the id of concept class to use for untyped interactions
returns whether to parse contained dna or aa sequences or not
returns the location of the psi mi to ondex mapping file
processes the parsers arguments by making them available as fields
helper method that constructs a fresh reader on the metadata mapping file
writes probabilities to file
returns name of this transformer
returns version of this transformer
returns name of this transformer
returns version of this transformer
returns name of this transformer
parses a properties file
returns version of this transformer
returns name of this transformer
returns version of this transformer
returns name of this transformer
returns name of this transformer
returns version of this transformer
returns version of this transformer
returns name of this transformer
prints to sys out the values in this map
sets the print stream to which the statistics are printed
make sure everything is written out
returns the hex string representation for a colour attribute
configures xml output factory
parses a shape of a concept and returns dot name for it
returns name of this mapping
returns name of this mapping
returns version of this mapping
returns version of this mapping
returns the name of this mapping
returns the version of this mapping
calculates the target subdir for a given concept dirs are grouped in
returns the name of this filter
returns the name of this mapping
returns the version of this filter
creates a concept and indexes it in the concept dictionary
creates a concept and indexes it in the concept dictionary
returns the name of this filter
returns the name of this filter
returns the version of this filter
returns the name of this filter
returns the version of this filter
returns the version of this filter
gets an entry from the matrix
puts an entry into the matrix
generates a unique string for the pair of integers given
returns what kind of matrix representation should be used for the next
sets a matrix entry
helper method for extracting psimi ontology terms from an xref list
returns the name of this filter
returns the name of this filter
retrieves the edge weight for a given relation
returns the version of this filter
returns the version of this filter
determines whether a given dbreference is a psi mi ontology reference
constructs the set of visible relations out of the backtracing matrix
filters the graph and constructs the lists for visible concepts and
formats hyper links in text to html
returns a concepts opposite one on a relation
returns the weight of the given edge
recursive method for backtracing inside the result set of the algorithm
fires an ondex error event
fires an ondex error event
manages access to the species index
retrieval system for translating to ncbi taxid
method for getting concept id for a previously written gene
method for getting concept id for a previously written gene
retrieval system for translating to ncbi taxid
reads accession reference from constructed index
pops up a dialog asking the user to set taverna home
sets the value to be used for this input to a string
sets the directory in which the taverna command line tool can be found
sets the values to be used for this input to a array
adds a code change listener code to thiis class
creates and starts the process logging the time it started
destories stops the process if it has been started
sets the directory in which the taverna dataviewer tool can be found
returns the output of the process run up to this point
check to see if taverna home has bee set successfully
sets a uri to be used as the source of the input values
check to see if data viewer home has bee set successfully
blocking method that logs a process is finished and returns its output
allows the user to identify and load a file based on a uri
sets a file to be used as the source of the input values
looks for a delimiter character that is not in any of the values
check to see if there is a value associated with this input
checks to see if the current state of the loaded parameters require inputs
cleanup default graph if persistant and closes all existing graphs
adds a ondex listener to the list
notify all listeners that have registered with this class
checks contract for two attribute to be equal
checks contract for two accession to be equal
checks contract for two attribute to be equal
checks contract for two names to be equal
propagates events to registered handlers
fetches the required metadata or throws a respective runtime
fetches the required metadata or throws a respective runtime
fetches the required metadata or throws a respective runtime
fetches the required metadata or throws a respective runtime
fetches the required metadata or throws a respective runtime
fetches the required metadata or throws a respective runtime
propagate events to registered listeners
scans a given zip file for file entries and
loads the exporter with the given name
loads the filter with the given name
loads the mapping with the given name
loads the parser with the given name
loads the transformer with the given name
loads the validator with the given name
a shortcut to add plug in programmatically from the plugin bean description
checks if this is a valid argument name for this plugin argument
checks if a value has been assigned for the given argument
counts the number of values for a given argument
extracts the unique value belonging to the given name from the list of
use this method to get the ondex mini main directory
returns the actual validator arguments
removes a validator listener from the list
notify all listeners that have registered with this class
notify all listeners that have registered with this class
downloads a file and passes on the handle
returns whether or not does this parser require this argument
returns whether or not is the parser allowed to be specified multiple
delete all files in the testing environment
checks for valid argument
recursively deletes the given directory and all its contents
return the lower numerical range
returns the upper numerical range
parses argument object from string
download file from given url to the given destination file
parses argument object from string
checks for valid argument
checks for valid argument
parses argument object from string
parses argument object from string
sets whether or not it is a directory
returns whether or not it is preexisting
sets whether or not it is preexisting
parses argument object from string
notify all listeners that have registered with this class
returns the parent ondexgraph meta data which is wrapped in this instance
deletes a value from a primary database for a given key and class
returns the parent ondexgraph which is wrapped in this instance
returns the parent concept which is wrapped in this instance
retrieve the score of a given ondexentity
constructs indecies of dag for later queries
parses the last valid concept id out of the berkeley persistent database
parses the last valid relation id out of the berkeley persistent
moves the unread data in the buffer to the beginning and resets the
throws the caught error or exception if present
returns the caught error or exception
add a concept to this subgraph
add a relation to this subgraph
remove a concept from this subgraph
inserts a key data combination into corresponding database
clones everything from the original graph
remove a relation from this subgraph
remove members of other subgraph from this subgraph
clones a concept from the original graph to the new graph
inserts a key data combination into corresponding database
close all open index handles
only keep a difference of this an other subgraph in this subgraph
close a potentially open index
adds all of the concepts contained in a view to this subgraph
adds all of the relations contained in a view to this subgraph
add relation type restriction valid at any depth in an incoming direction
add relation type restriction valid at any depth in an outgoing direction
add relation type restriction valid at any depth in any direction
will add a specified tag concept to all members of this subgraph
explicitly shutdown the executor
returns the actual lucene ondexgraph as an abstract ondexgraph
depth is set at integer
represents a faster search than individualy searching the graph as
adds a concept class restriction to a depth if no restrictions are in
adds a concept class restriction to a depth if no restrictions are in
adds a relation type restriction to a depth if no restrictions are in
adds a transition step from one state to another
checks for machine definition errors
compute the relative rank of the values according to the comparison method
removes the selected concept from the index nb this is an expensive
is the rank inverted against its natural order
take the absolute of all values before calculating rank
internal method used by the parser
parses a go id
adds a parent to a go term
re initializes the complete index
returns the number of entries
returns the corresponding go term for the given go id
returns the shortest depth of the given go query id
returns the shortest depth of the term
returns the distance in the go database structure between the two given terms
gets the directed distance from first query term to the second query term
sets the namespace
sets the parents
returns the namespace of the term
a recursion method for the distance search
removes the selected relation from the index nb this is an expensive
returns the number of elements yet to be examined
returns the parent of this node
memorises that the given node shall henceforth be considered as
retrieves and removes the head of the queue
returns the information content bitscore for a given go term
calculates a local similarity for two concepts according to their
calculates a global similarity for two sets of concepts
removes the selected relations from the index
returns a negative integer zero or a positive integer as the first argument
notify all listeners that have registered with this class
adds a ondex graph listener to the list
removes a ondex graph listener listener from the list
hierarchical precision function
checks if a java class is registered for jaxb
returns the complete message of this event type
returns the log4j level associated with this event type
hierarchical recall function
sets the log4j level for this event type
takes a given abstract ondexgraph and builds the index around it
hierarchical f score function
propagate event e to the right graph listeners
returns the is preferred
sets the is preferred
returns the id of the specialisation of
sets the id of the specialisation of
returns the from concept integer id
returns the name of the relation type
returns the is antisymmetric
sets the is antisymmetric
returns the is reflexive
sets the is reflexive
returns the is transitiv
sets the is transitiv
returns the element of
sets the element of
returns the is ambiguous
sets the is ambiguous
returns the id of the from concept
returns the name of the from concept
sets the id of the from concept
sets the name of the from concept
returns the id of the to concept
returns the name of the to concept
sets the id of the to concept
sets the name of the to concept
notify all listeners that have registered with this class
deletes the wrapped graph from the web service
decodes a url encoded string
returns or constructs new index for a given graph
fills sub graph of relations with all its corresponding concepts and
fills sub graph with all connecting relations and returns as oxl graph
recursive method for backtracing inside the result set of the algorithm
being overly paranoid here to make sure only key events from the
sets view scaling enabled or disabled
returns whether or not the contents display is currently visible
returns whether or not the options is currently visible
populates the tools menu
shows the contents display frame
shows the options frame
returns current viewer
sets gui for a given ovtk2 layouter
sets viewer to be used for these options
check for selection of an attribute name
return transformation lookup from cache
performs updates of layout parameters
shows a file save dialog with the given filter file extensions
calculates the gradient of energy function at the vertex m
calculates the energy function e
check for selection of an attribute name
return transformation lookup from cache
associated with go button
whether or not there was something drawn
sets the icon storage to the specified code map code
returns the validated values for node minimum diamiter
returns the validated values for node maximum diamiter
adds a column to the values
adds a new row to the data model
sets the pressed header column
highlight a column name
returns object located at specified row and column
method for setting a lsd on a probe
overloading for method for setting values for a probe
gets the ration between the specified treatments for this probe
construct the gui componants
propagate table selection to selection of nodes in the graph
sets editable flag for each cell
inserts a default row at the end of table
adds a new empty row to the table model
checks for selections in concept list
associated with go button
checks for selections in concept list
associated with go button
returns result of transformation
returns result of transformation
calculate the overall x dimension for a number of roots
recursively calculate the x dimension of the whole tree starting at
returns the list of siblings which are leaf nodes of the graph
get the depth of a path starting at node v recursively
reflect the selection of concepts in the viewer as selection of concept
transform the current vertex position into the layout location map
get maximum of all locations of nodes
populates given combo box with list of attribute names for visible
adds all suitable attribute names to the jlist
set layout position of given node
transform into radial positions
returns the component containing the accumulated error messages
annotates the nodes according to specified values
checks for selections in concept class list
associated with go button
checks for selections in data source list
maximum value found
minimum value found
associated with buttons
checks for selections in evidence type list
returns number of relation of this relation type
returns the concept class represented by this ondexmeta concept
returns number of visible relations
returns number of concepts of this concept class
returns number of visible concepts
returns the relation type represented by this ondexmeta relation
returns result of transformation
returns result of transformation
returns concept class or relation type
update all colours from the graph
update the colour of a given edge
update the colour of a given edge with a given colour
returns result of transformation
update all colours from the graph
update the colour of a given edge
update the colour of a given edge with a given colour
sets a new node size used to generate all shapes
returns result of transformation
update all shapes from the graph
updates the current hold meta data
update the shape of a given node with a given shape
makes maximum length texts
extracts the label from a given relation type
update the label of a given edge
update all labels from the graph
returns result of transformation
fills list of concept attribute names
fills list of relation attribute names
performs a re layout of the meta graph
creates a new chart object and replaces the old one
adds a new ondexmeta concept to the graph
checks for selections in attribute name list
returns whether or not an ondexmeta relation is contained in the wrapped
returns whether or not an ondexmeta concept is contained in the wrapped
returns the edge between two ondexmeta concepts if there is one
notify all listeners that have registered interest for notification on
returns the destination of the edge via to concept representing
returns the edge type of an ondexmeta relation
returns the source of the edge via from concept representing
returns whether or not a vertex is the destination of an edge
returns whether or not a vertex is the source of an edge
removes an relation type specified by the ondexmeta relation from the
removes an concept class specified by the ondexmeta concept from the
extracts the label from a given concept class
update the label of a given node
update all labels from the graph
returns result of transformation
prevent changing the graph belonging to this layout
returns node for the graph center
fills attribute selection list
creates new empty properties
shows the color legend frame
registers the attribute values in the sorted set
computes the colour table
creates an rgb int for the given hue
loads the contained config files from jar file
loads the contained config files from jar file
randomize selection of nodes
this hack is required as load from xml closes the input stream
this hack is required as load from xml closes the input stream
helper class constructs a classname for a producer type and id
helper class constructs a classname for a producer type and class name
save this java bean as xml
delete the xml file backing this object
returns associated jmenu item
finds the minimal and maximal value in the dataset
sets all filters to an empty state
calculates the average and standard deviation
adds a concept class filter to the list of filters
the computed standard deviation
removes a concept class filter from the list of filters
adds a relation type filter
creates a panel that holds a pair of swap buttons
creates a swap button
removes the given relation type from the list of filters
configures the data extractor according to the current selections
adds a attribute filter criterium to the list of filters
removes a given attribute filter from the list of filters
sets the variable field
returns the corresponding command line value
sets frame icon from file
adds a filter to the main filter table
returns the name of the current variable
creates a chart
sets the average label to the given value
removes one row from the data table
sets the deviation label to the given value
sets the concept number label to the given value
sets the number of relations label to the given value
adds a filter to the table
return attribute name fullname
extends the size of the underlying data table
return attribute name description
return attribute name unit id
return attribute name specialisation of id
sets a changed concept accession
forces changes in progress to be flushed to attribute
clone relation with having a new relation type
calls all other subroutines for coping informations of relation
copies all context information from old relation to new relation
copies all attribute from old relation to new relation
clone concept with having a new pid
clone concept with having a new data source
clone concept with having a new concept class
updates the graph with the new concept and all tables with it
calls all other subroutines for coping informations of concept
updates the graph with the new concept and all tables with it
copies all context information from old concept to new concept and
returns color for required fields
copies all accessions from old concept to new concept
sets frame icon from file
copies all names from old concept to new concept
adds a given jinternal frame to the desktop and centers it
sets help broker of java help for on click help
make button input panel
copies all attribute from old concept to new concept
sets whether or not to show labels on nodes
returns custom icon to keep track of actual location
returns whether or not node labels are shown
sets whether or not to show labels on edges
returns whether or not edge labels are shown
returns the current set node size
sets the node size
returns the current set edge size
sets the edge size
returns the current set font size
sets the font size
updates check box settings in menu
sets exact size of a component
create a jmenu labelled with text for the given property key
create a jmenu labelled with text for the given property key
create a jmenu item labelled with text for the given property key
create a jmenu item labelled with text for the given property key
lazy initialisation for meta graph visualisation
populates the selecting menu
hides any selection for nodes or edges in the graph
sets frame icon from file
change edge label font
change from picking to transforming mouse mode
sets whether or not to relayout on resize of viewer
shows all relations between the currently visible nodes
scales a given image and returns a new image icon
returns the search box used in this toolbar
returns current mouse mode setting
return selection of concept class restriction
return selection of data source restriction
returns the mode of search
returns text to search for
return selection of tag restriction
if search term should be treated a regular expression
for other tools registering interest
makes the current annotation manager accessible to the rest of the
checks validity of regex
make a thread safe call to clean all popups
processes a smile string and check if it is possible to parse
propagate action event removes null action listeners
concatenate different file name parts
sets selection in table to given item name
other tools lost interest de register
sets selection in table to given item name
open jira connection
submit issue to jira
loads available relation types into combo box
sets selection in table to given item name
get node selection from graph
get node selection from graph for context
returns the current ovtk2 viewer
loads available relation types into combo box
loads available evidence types into combo box
returns the ovtk2 menu in use
sets selection in table to given item name
setup desktop to contain all internal frames
set close button to given tab
setup ui calling subroutines
updates existing unit jcombo boxes
loads available concept classes into combo box
returns an image icon or null if the path was invalid
creates a combo box displaying available attribute names
populates selection box for separator string
get node selection from graph for tag
sets up the menu bar
creates a new menu item
loads available data sources into combo box
make sure that always the fullname is preferred
helper method to extract a usable concept name
helper method to write a html list of a collection
this is very specific code to the value of an evidence attribute
sets up the gui with the list and the ok button
sets viewer to be used for these options
updates the the panel to represent the current order in the
creates a new checkbox
hacked run method
takes a y coordinate and returns the corresponding element index
adds the frame to the register
trigger an update event to construct new windows menu
takes a y coordinate and returns the corresponding border index
we look for an active frame and attach ourselves to that
sets a current running state for a process and thereby disables all menus
starts the feeder thread
returns the current running state for a process if the menu bar is
get the number of invisible concepts and relations
filter files by extension
description of this file filter
adds another ondexconcept to the list
clears this list
resets the menus to normal mode after the process has ended
returns ondexconcept at a given index
adds another evidence type to the list
adds another data source to the list
clears this list
adds another relation type to the list
clears this list
returns data source at a given index
returns evidence type at a given index
clears this list
returns relation type at a given index
adds another object to the list
clears this list
whether or not the list of relation types is empty
adds another concept class to the list
adds given attribute name to internal list
clears this list
returns concept class at a given index
clears this list
returns attribute name at a given index
sets the menubar mode according to a running process
whether or not the list of concept classes is empty
whether or not the list of attributes is empty
scales current viewer by given factor
transfers text to the clipboard in the simplest way
sets the transformer for node labels to be used in node graphics
sets the transformer for edge labels to be used in edge graphics
sets the transformer for node fill colour to be used in node graphics
returning current draw paint selection
sets the draw paint selection to use for the nodes in the graph
returns result of transformation
sets the transformer for edge colour to be used in edge graphics
returning current fill paint selection
update all colours from the graph
sets the fill paint selection to use for the nodes in the graph
update the colour of a given node
returns result of transformation
update the paint of a given node with a given paint
update the alpha value of a given node
update all colours from the graph
writes the graph element and decides the default edge style
determine if the dragged data is a file list
writes a single node and corresponding graphics information
defines the two proprietary data keys required for capturing graphics
necessary name spaces used for graph ml and proprietary extensions
pack all columns in table
returns result of transformation
clears the stroke cache so sizes get re assigned
returning current edge color selection
sets the edge color selection to use for the nodes in the graph
returns result of transformation
update all colours from the graph
returns current shape selection strategy
update the colour of a given edge
sets node aspect ratio transformer
update the colour of a given edge with a given paint
whether or not to show arrows on edges
returns current arrow status
sets node shape selection strategy to use
returns visibility for a given node
returns result of transformation
returns result of transformation
return id of corresponding shape of node
update all labels from the graph
returns visibility for a given edge
update the label of a given edge
extracts the label from a given edge
update all shapes from the graph
sets everything in the ondexgraph visible
resets the shape scheme to configured one
update the shape of a given node with a given shape
sets the edge shape to use
returns current edge shape
sets visibility of a given ondexrelation
update the shape of a given node with a given shape
associated with go button
sets visibility of a given ondexconcept
populates list of selected concepts
checks whether there is a last state
returns current html tags inclusion scheme
saves current visibility setting as last state
sets inclusion of html tags
restores the last visibility state if there is one
returns result of transformation
update the label of a given node
set visibility for entire graph
subclasses override this method for to get the desired behaviour
method to change what interpreters are used in the interpretation controller
add custom method
clear the content
auto add all excluding the ones on the list
get root object by class
adds object to be referrable
auto add all excluding the ones on the list
returns true if the class is part of the defined application tree
add an array of root objects
add one root object
add method under the name method name
add root object with all of its implemetned classes and interfaces
add method that resolves an application component that is required by the
add method to be exposed
clears the entire content of the builder and releases used memory and references
auto converts the arguments for easier access from the scripting environment
processes a request
loads ondex kb graph oxl data file into memory
checks the index and returns the existing concept if present
indexes ondex graph
show standard file chooser
inits the set of windows
sets up the main content
sets up the look and feel
populates the menu and the toolbar
for enabling and disabling certain actions in the menus and toolbar
search a genomic region e
helper method for the public equivalent
semantic motif search for list of genes
sets up the main window contents the desktop and the status bar
registers an action with the menubar and the toolbar
private helper method for add action
displays the frame centrally on the screen
returns the currently active internal editor frame
deregisters a closed window with the main frame
creates a new internal editor frame
parses the semantic motif file
starts the daemon
fires an action event to the listeners
triggered when key is typed
create a name for concepts
returns the next color
get file chooser
sets up the gui
adds an entry to the popup menu
adds an entry to the popup menu
creates a button panel
creates a node from a concept class
returns the root node
creates the tree
fill out user interface
check whether ok button can be unlocked
create a button with given title and action listener
check if the file exists in the file system
center dialog over window
saves the current graph mapping to a file of the users choice
creates the main panel
creates the main panel
saves the current graph mapping to the current file
creates the button panel cancel ok at the bottom of the frame
creates the split panel in the centre
creates the profile panel
activated by ok button
creates text field for queries
sets a new tree on the left side of the split pane
returns whether descriptors are ok
safely destroys the dialog window
singleton treeselection listener for newly loaded trees
creates the namespace dropdown box
show error message
create field for neighbourhood selection
create button with given title and listener
parses a given path descriptor into concept class and relation type arrays
throws exception if current path is syntactically incorrect
alphanumerical comparison based on id
refreshes the lists contents
returns the central concept class of this descriptor
returns the path in string form
creates the button panel at the bottom
creates a panel selectable by a radio button
not yet implemented
radiobutton listener singleton method
not yet implemented
gets the current ondex graph
sets the current ondex graph
closes the ondex graph
gets the current ondex graph file
sets the current ondex graph file
create button with given label and listener
shuts all listener threads on the list items down
stops this file operation
selects a concept class focus creates the list of
runs this file operation
prepares for file processing
returns whether the descriptor is valid
finalizes this task
saves the current ondexgraph the given mapping descriptors to a file
gets the title
initializes the hashtables with a new set of descriptors
colors the textfield according to error state
gets id of path
checks whether the current path statement is syntactically correct
gets the contained descriptor
creates a name for the network
extracts the contents of a input stream into the temp directory
destroys the field and safely shuts down daemons
gets a name for the given concept
shows an error message on the screen
cy node id consisting of the concept class id a hash character
returns the metadata object
performs a given operation and registers it with the action stack
undos a last performed action from the action stack
promt the user for the next input
redos the last undone action from the reversion stack
closes this frame
overrides the dispose method to terminate associated threads before
adds missing file type tags to a file
saves the frames metadata object
saves the framess metadata object
sets the modified flag and visualises it
executes the given java script file
returns a short description of the servlet
called on stop of this plugin
todo document me
a factory calls this method to return an object that was cached
returns the local copy of the token factory
returns the local copy of the java node factory
returns the local node factory
returns the recognizer
sets the java recognizer
checks the state of the context sensitive actions
returns the version of the ide for which this addin was implemented
called when shutting down the ide
gets the supervising controller
updates the enabled status of the specified action within the specified context
returns the version of the addin
initializes the static arraylist of code csproperty option code objects
gets the value on the text being entered
initializes the ui
gets the current global property values
sets the current global property value
initializes the ui
triggers code action check style
gets the current project property value
utility method to determine if the project properties override the global
sets the current project property value
sets the code row editor model code
initializes the ui
gets the text to display
gets the code row editor model code
add a code table cell editor code for a specific row
sets the comma seperated string of values
remove a code table cell editor code for a specific row
gets the code table cell editor code for a specific row
gets the code table cell editor code of a specific row and column
utility method to determine if the file properties override the global
initializes the ui
gets the text to display
sets the display text for the textfield
runs checkstyle on 1 or many files in a code checker thread code
initializes the jbuilder global properties with jb checkstyles defaults
gets the jb checkstyle default value
reads the data from the text area replaces the new line characters
gets the checkstyle default value
gets the jbuilder global property
return the message view message for the filename
writes comma separated string to the text area replacing the with
check if the message view is open for checkstyle
gets the current property value for the supplied source
log error conditions
sets a new value to the supplied destination
ignored for now
ignored for now
triggered when a project is activated
ignored for now
reset to checkstyle defaults
ignored for now
checkstyle error event handler
triggered when a browser is activated
reset to jb checkstyle defaults
initializes the property model
gets the project property value and returns them as a properties object
gets the global property values and returns them as a properties object
reads the property file from disk
special logger for key value pairs so that string concats can be avoided
log error conditions
creates a new instance or attribute branch
adds a new instance branch to the model
clears the drawing area then repaints the query from the model
auto generated axis2 call back method for deploy bundle method
auto generated axis2 error handler
auto generated axis2 error handler
return the label of this node
auto generated axis2 error handler
auto generated setter method
test if choreography objects are persisteted correctly
auto generated setter method
test if non get xxx method return null for non existing identifiers
returns the plugins resource bundle
validate the array for any uri
auto generated setter method
auto generated add method for the array for convenience
forces the loading of imported ontologies if any
this method is called upon plug in activation
determines the type of an entity refered by iri
searches for an opened for editing entity by its file source path
the method is invoked just before save operation
the method is invoked just before save operation
auto generated getter method
the method is invoked just before save operation
auto generated setter method
the method is invoked just before save operation
auto generated getter method
extenders may customize the editability of the properties
this method is called upon plug in activation
auto generated setter method
validates the values for each of the groups controls
returns a code boolean code indicating whether the resource name rep
implementation of initialisable
auto generated getter method
moves the node to a certain location without property change notification
auto generated add method for the array for convenience
auto generated setter method
disconnect this connection from the shapes it is attached to
returns the source endpoint of this connection
returns the target endpoint of this connection
reconnect this connection
reconnect to a different source and or target shape
set the line drawing style of this connection
removes a bendpoint
can execute if all the necessary information has been provided
can execute if all the necessary information has been provided
can execute if all the necessary information has been provided
disconnects a list of connections from their endpoints
reconnects a list of connections with their previous endpoints
return true if reconnecting the connection instance to new source is allowed
return true if reconnecting the connection instance to new target is allowed
set the target endpoint for the connection
reconnect the connection to new source if set new source
set a new source endpoint for this connection
set a new target endpoint for this connection
reconnect the connection to its original source and target endpoints
can execute if all the necessary information has been provided
disconnects a list of connections from their endpoints
can execute if all the necessary information has been provided
this method is taken from fixed connection anchor in logical diagram editor
upon activation attach to the model element as a property change listener
upon deactivation detach from the model element as a property change listener
return the source connection anchor of the given connection
return the target connection anchor of the given connection
return the closest source connection anchor to the requests origin location
return the closest source connection anchor to the requests origin location
return the source connection anchor of the given connection
return the target connection anchor of the given connection
return the closest source connection anchor to the requests origin location
return the closest source connection anchor to the requests origin location
return the closest source connection anchor to the requests origin location
return the source connection anchor of the given connection
return the target connection anchor of the given connection
return the closest source connection anchor to the requests origin location
return the closest source connection anchor to the requests origin location
return the closest source connection anchor to the requests origin location
return the closest source connection anchor to the requests origin location
return the source connection anchor of the given connection
return the target connection anchor of the given connection
return the closest source connection anchor to the requests origin location
return the closest source connection anchor to the requests origin location
the method is invoked just before save operation
returns the palette root
declares an ide specific workbench image
validate the array for qname
auto generated setter method
auto generated add method for the array for convenience
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
validate the array for wsmldocument
auto generated setter method
auto generated add method for the array for convenience
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated getter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
p automatically managed component initialization
p automatically managed component initialization
init method for this filter
fun o de pagina o no banco
fired when the user clicks on the send button
fired when the user types in the name field
reads the manifest from the specified input stream
this placement is determined by the chart legend position attribute
creates a new instance of code task queue code
creates a new instance of code task queue code with the specified name
creates a new instance of code task queue code and adds the
registers the specified listener for receiving event messages
determines whether the task has finished execution
removes the specified listener
sets whether the task has finished execution
determines whether the task has finished its execution successfully
sets whether the execution of the task fails
gets an appropriate error code identifying the failure of the task
sets an error code identifying the failure of the task
creates a new code summary page code with default subtitle and description
gets an appropriate error message when the task fails
gets a detailed error information
creates a new code overview page code with default subtitle and description
sets a a detailed error information
sets the description of this task
determines whether there is a next page in this wizard
determines whether the task has been started
gets the result of the task execution
determines whether there is a previous page in this wizard
sets the result of the task execution
registers the specified code task listener code to be
determines whether the last page is specified
creates a new code progress page code with empty subtitle and description
removes the specified listener
creates a code progress page code with the specified subtitle and empty description
gets the current page
gets the current step in the wizard
creates a new code confirmation page code with default subtitle and description
adds a step that corresponds to one wizard page
registers the specified code action listener code to be
creates a code wizard page code with the specified subtitle and
removes the specified listener
creates a new code user input page code with empty subtitle and description
creates a new instance of code i18n code
creates a code user input page code with
sets a brief description about this page
gets the subtitle for this page
sets the subtitle for this page
gets the type of this page
sets the type of this page
determines the optional buttons that will be shown
constructs a code task event code object
constructs a code generic event code object
gets the code wizard code to which this page belongs to
identifies the event type
creates a new instance of code task list code
sets the code wizard code to which this page belongs to
creates a new instance of code task list code with the specified name
gets the code wizard model code to which this page belongs to
gets the wizards dialog
invoked when the page is going to become current in the wizard
determines whether all of the tasks in the list are done
registers the specified code generic listener code to be
invoked when the page becomes current in the wizard
removes the specified listener
invoked when the user clicks the back button
invoked when the user clicks the next button
invoked when the user clicks the last button
invoked when the user clicks the finish button
invoked when the user clicks the cancel button
gets the back button of the wizards bottom pane
gets the next button of the wizards bottom pane
invoked when the user clicks the close button
gets the last button of the wizards bottom pane
gets the finish button of the wizards bottom pane
invoked when the user clicks the help button of the wizard
gets the cancel button of the wizards bottom pane
gets the help button of the wizards bottom pane
gets the close button of the wizards bottom pane
gets the property prefix
returns the specified components minimum size appropriate for the look and feel
returns the specified components maximum size appropriate for the look and feel
determines whether to display the back button in the bottom pane
determines whether to display the next button in the bottom pane
determines whether the titlebar should be visible
determines whether to display the last button in the bottom pane
determines whether to display the finish button in the bottom pane
determines whether to display the cancel button in the bottom pane
determines whether to display the help button in the bottom pane
gets the icon for the back button in the navigation pane
determines whether to display the close button in the bottom pane
sets the icon for the back button in the navigation pane
gets the icon for the forward button in the navigation pane
determines whether to enable the back button in the bottom pane
sets the subtitle of wizards right pane
sets the icon for the forward button in the navigation pane
determines whether to enable the next button in the bottom pane
gets the icon for the down button in the navigation pane
determines whether to enable the last button in the bottom pane
sets the icon for the down button in the navigation pane
determines whether to enable the finish button in the bottom pane
determines whether to enable the cancel button in the bottom pane
creates a new instance of code navigation pane code
determines whether to enable the help button in the bottom pane
gets the l f object that renders this component
sets the l f object that renders this component
resets the ui property to a value from the current look and feel
creates a new instance of code link button code
gets the current page in this navigation pane
gets the titles background color of this code navigation pane code
creates a modal dialog without a title and with the specified
creates a modal dialog with the specified title and owner code frame code
creates a modal dialog without a title and with the specified
creates a modal dialog with the specified title and owner code dialog code
determines the visited state of this link button
gets the font color that is used for already visited links
gets the font style to be used for a visited links
sets whether the close button should be displayed
gets the font color that is used for unvisited links
gets the font style to be used for a unvisited links
creates a modal dialog without a title and with the specified
creates a modal dialog with the specified title and owner code dialog code
creates a new instance of code navigation page code with empty title
creates a modal dialog without a title and with the specified
gets the font color that is used when the link button is disabled
creates a new double buffered code pixmap pane code with
creates a modal dialog with the specified title and owner code frame code
gets the pixmap that is used for background
gets the font style to be used when the link button is disabled
sets whether the dialog was cancelled
creates a new instance of code component list code
determines whehter the mouse cursor is over the link button
gets the l f object that renders this component
determines whether there is at least one
sets the l f object that renders this component
invoked when the link button is pressed
determines whether there is at least one
resets the ui property to a value from the current look and feel
gets the current number of pages in the history list
removes from the model the last page that was returned by
gets the data model of this list
creates a modal dialog without a title and with the specified
creates a modal dialog with the specified title and owner code frame code
gets the current selection model of this list
gets the index of the first occurence of the given argument testing
gets the selection mode
creates a modal dialog without a title and with the specified
sets the selection mode
creates a modal dialog with the specified title and owner code dialog code
gets the first selected index or 1 if the selection is empty
gets the last selected index or 1 if the selection is empty
gets the l f object that renders this component
determines whether the specified index is selected
sets the l f object that renders this component
resets the ui property to a value from the current look and feel
specifies whether this wizard should be modal
gets the model of this wizard
creates a new instance of code dial code using the specified
gets the current page in the wizard
scrolls the viewport to make the specified component visible
determines whether the component list should be automatically updated
determines whether the component list should be automatically updated
gets the l f object that renders this component
updates the component list ui
sets the l f object that renders this component
resets the ui property to a value from the current look and feel
gets the data model that handles the dials minimum maximum and value properties
gets the pixmap used for drawing the dial knob
sets the pixmap to be used for drawing the dial knob
gets the pixmap used for drawing the dial knob when is disabled
gets the pixmap used for drawing the dial knob
sets the pixmap to be used for drawing the dial knob
gets the pixmap used for drawing
sets the pixmap to be used for drawing
gets the models maximum acceptable value
sets the maximum allowed value of this code dial code
sets the minimum allowed value of this code dial code
gets the current value of the code dial code
sets the current value of the code dial code
determines whether the dial knob is being dragged
sets whether the dial knob is being dragged
gets the mouse handler mode which determines
gets the value that the dial knob will have if
sets the current progress and informs listeners about this change
sets the sub tast name and informs listeners about this change
returns code true code if the type can be serialized and then
returns an instance of
returns an instance of
returns an instance of
returns an instance of
returns an instance of
returns an instance of
returns an instance of
returns an instance of
returns an instance of
returns an instance of
convenience method to define a default set of fields to request
test of get connection method of class com
test of retrieve all method of class com
test of close method of class com
test of get category id method of class com
test of retrieve method of class com
test of main method of class com
test of get description method of class com
test of add method of class com
test of get parent id method of class com
test of remove method of class com
test of get sort order method of class com
test of modify method of class com
test of get date modified method of class com
test of get last modified method of class com
scale the image to the target height and width using a fast algorithm
write the image as a jpeg to the given outputstream
write the image as a jpeg to the given outputstream
write the image as a png to the given outputstream
write the image in the given format to the outputstream
returns met arg0 jsonarray length during unmarshall operation
creates a jsonobject
creates a jsonarray
sets the arg2 value with arg1 name into arg0 jsonobject in building
says if met arg0 object during unmarshall is a jsonarray
sets the arg1 value arg2 index into arg0 jsonarray in building
saves if is not present into context the
saves into context the
converts a string representing a
converts an array into a string representing a
converts an array into a
converts a collection into a string representing a
converts a collection into a
converts passed parameter json string into a json entity
checks if passed id is correct for full mapping simple annotated and xml
p adds an attribute to the container
adds a feature to the group attribute of the property file object
gets the hidden property group attribute of the property file object
adds a feature to the action listener attribute of the
sets the property attribute of the image folder select pane object
adds a feature to the property panes attribute of the property wizard
adds a feature to the tabbed property panes attribute of the
adds a feature to the standard property panes attribute of the
adds a feature to the action listener attribute of the
gets the labeled attribute of the image folder select pane object
sets the property pane attribute of the property wizard object
adds a feature to the action listener attribute of the
sets the property attribute of the file chooser property editor object
gets the labeled attribute of the file chooser property editor object
sets the visible attribute of the property wizard object
adds a feature to the property attribute of the property tab object
sets the tip attribute of the property tab object
gets the tabbed attribute of the property group object
adds a feature to the properties attribute of the property group object
adds a feature to the properties attribute of the property group object
adds a feature to the properties attribute of the property group object
adds a feature to the properties attribute of the property group object
adds a feature to the property attribute of the property group object
adds a feature to the property tab attribute of the property group object
sets the text attribute of the timer label object
sets the string value attribute of the property object
sets the int value attribute of the property object
sets the double value attribute of the property object
sets the icon path attribute of the resource factory object
sets the boolean value attribute of the property object
sets the middle pos attribute of the bar panel object
sets the middle size attribute of the bar panel object
sets the start pos attribute of the bar panel object
sets the msg attribute of the timer frame object
sets the start size attribute of the bar panel object
sets the msg attribute of the timer frame object
sets the end pos attribute of the bar panel object
sets the end size attribute of the bar panel object
sets the date attribute of the jcalendar component object
sets the text attribute of the jlink button object
gets the scrollable block increment attribute of the jpanel view object
gets the scrollable unit increment attribute of the jpanel view object
sets the icon attribute of the jtool button object
sets the calendar attribute of the jcalendar chooser panel object
adds a feature to the mapping attribute of the
gets the table cell renderer component attribute of the
set the selected item
returns the value at the specified index
adds a feature to the all attribute of the collections list model object
sets the enabled attribute of the jdate chooser object
sets the value attribute of the property object
sets the value attribute of the property object
sets the progress attribute of the jprogress window object
sets the status attribute of the jprogress window object
adds a feature to the tray aware attribute of the tray panel object
sets the value attribute of the property object
adds a feature to the node attribute of the tree panel object
gets the type name attribute of the property object
adds a feature to the custom component attribute of the jshade panel
sets the object attribute of the property object
sets the entry info attribute of the tree panel object
sets the shaded attribute of the jshade panel object
gets the shaded attribute of the jshade panel object
sets the choice list attribute of the property object
gets the description attribute of the skin file filter object
sets the tree icons attribute of the tree panel object
gets the tray component attribute of the jshade panel object
adds a feature to the delimiter attribute of the
adds a feature to the maximize action listener attribute of the
gets the description attribute of the property file plugin description
gets the old vector attribute of the property object
gets the short description attribute of the property file plugin description
gets the status attribute of the property file plugin description object
gets the version string attribute of the property file plugin description
adds a feature to the minimize action listener attribute of the
gets the type attribute of the property file meta data object
gets the clazz attribute of the property file meta data object
gets the name attribute of the property file meta data object
gets the new vector attribute of the property object
registers a module as sub module for this module
adds a feature to the property changed listener attribute of the property
adds a feature to the heading action listener attribute of the jshade panel
gets the destroyed attribute of the default service object
registers a module as sub module for this module
gets the default dir attribute of the dexter object
gets the home dir attribute of the dexter object
adds a feature to the property input listener attribute of the property
gets the entry for mouse event attribute of the popup listener object
sets the display type attribute of the property object
gets the status attribute of the default status model object
returns an instance of the contained contact object if a contact equals
adds a feature to the contact model listener attribute of the
gets the property editor attribute of the property object
sets the property editor attribute of the property object
sets the description attribute of the abstract service object
gets the icon attribute of the player entry object
gets the tool tip text attribute of the player entry object
sets the show server info dlg action attribute of the player entry object
gets the icon attribute of the buddy entry object
gets the tool tip text attribute of the buddy entry object
sets the file name attribute of the server list object
adds a feature to the data change listener attribute of the server list
sets the show server info dlg action attribute of the server dlg object
sets the frags attribute of the player object
sets the ping action attribute of the server dlg object
sets the add ip action attribute of the server dlg object
sets the value attribute of the player object
adds a feature to the player attribute of the buddy object
adds a feature to the buddy data change listener attribute of the buddy
gets the map attribute of the server object
gets the row count attribute of the player table model object
adds a feature to the drawing event listener attribute of the drawing
gets the value at attribute of the player table model object
adds a feature to the player attribute of the server object
is called if a plugin or the chatframe want to send a message
gets the players count attribute of the server object
gets the mnemonic attribute of the sketch object
gets the favorite dat attribute of the cs beagle object
gets the tool tip attribute of the sketch object
sends a request object with specified request code
gets the player attribute of the server object
gets the sleep attribute of the cs beagle object
is called if a message was received
gets the rules count attribute of the server object
convert a single char to corresponding nibble
gets the power search at startup attribute of the cs beagle object
gets the name attribute of the encrypt object
gets the rule attribute of the server object
gets the mnemonic attribute of the encrypt object
gets the power search threads attribute of the cs beagle object
gets the tool tip attribute of the encrypt object
gets the popup notification attribute of the cs beagle object
gets the selected server attribute of the server dlg object
is called by sketch frame
gets the event match attribute of the vevent object
is invoked by sketch panel peer
gets the ping exec attribute of the cs beagle object
adds a feature to the change listener attribute of the specification model
sets the duration attribute of the vevent object
gets the recursive attribute of the vevent object
gets the ping parameters attribute of the cs beagle object
gets the row count attribute of the server table model object
gets the public slot free attribute of the server object
gets the all day attribute of the vevent object
gets the reserve slots attribute of the server object
sets the edit action attribute of the jvevent panel object
sets the delete action attribute of the jvevent panel object
adds a feature to the ip attribute of the cs beagle object
sets the dt start attribute of the vevent object
gets the dt end attribute of the vevent object
sets the dt end attribute of the vevent object
adds a feature to the player attribute of the cs beagle object
gets the encoded dt end attribute of the vevent object
gets the encoded dt start attribute of the vevent object
adds a feature to the vevent attribute of the icalendar object
gets the favorite attribute of the server object
sets the v event attribute of the icalendar object
gets the day for date attribute of the icalendar object
gets the day for date attribute of the icalendar object
gets the max players attribute of the server object
adds a feature to the icalendar attribute of the icalendar model object
gets the default calendar attribute of the icalendar model object
sets the default calendar attribute of the icalendar model object
gets the recursive events attribute of the vevent support object
sets the power search action attribute of the server dlg object
sets the midnight attribute of the date factory object
adds a feature to the calendar model listener attribute of the
sets the status text attribute of the chess frame object
gets the selection calendar attribute of the jcalendar panel object
sets the color attribute of the knight object
gets the valid move attribute of the knight object
sets the color attribute of the queen object
gets the valid move attribute of the pawn object
sets the color attribute of the rook object
sets the color attribute of the pawn object
sets the color attribute of the king object
sets the color attribute of the bishop object
gets the piece attribute of the board object
sets the piece attribute of the board object
adds a feature to the selection listener attribute of the jcalendar panel
gets the mnemonic attribute of the chess object
adds a feature to the board event listener attribute of the board object
gets the column attribute of the jchess panel object
gets the row attribute of the jchess panel object
adds a feature to the tree model listener attribute of the
gets the child attribute of the tree model adapter object
is called by chess frame
gets the child count attribute of the tree model adapter object
gets the index of child attribute of the tree model adapter object
is invoked by chess board peer
gets the leaf attribute of the tree model adapter object
adds a feature to the category attribute of the hot list model object
adds a feature to the entry attribute of the hot list model object
adds a feature to the entry attribute of the hot list category object
adds a feature to the entries attribute of the hot list model object
gets the entry attribute of the hot list category object
gets the category attribute of the hot list model object
sets the my player attribute of the chess frame object
gets the url attribute of the yabbifier service object
gets the browser attribute of the yabbifier service object
adds a feature to the hotlist attribute of the hotlist object
adds a feature to the bookmark attribute of the hotlist object
adds a feature to the conversation listener attribute of the
sets the events attribute of the jmonth popup menu object
adds a feature to the email attribute of the hotlist object
adds a feature to the phone attribute of the hotlist object
adds a feature to the mnemonic attribute of the smiley object
returns a title for all chatpanel components
gets the frame attribute of the messenger gui object
gets the frame attribute of the messenger gui object
adds a feature to the property change listener attribute of the
adds a feature to the plugin attribute of the default plugin chain object
sends message to the conversation object and bypasses any further
return a unique key for this conversation
adds a feature to the message receiver attribute of the
sets the description attribute of the abstract messenger plugin object
returns an instance of the used protocol
is called if the user decides to enable disable a plugin for a
adds a feature to the state listener attribute of the
adds a feature to the state listener attribute of the
adds a feature to the tree model listener attribute of the
adds a feature to the state listener attribute of the
adds a feature to the property change listener attribute of the
gets the child attribute of the flat category model object
adds a feature to the jchat panel attribute of the jtabbed chat panel
gets the child count attribute of the flat category model object
gets the index of child attribute of the flat category model object
adds a feature to the conversation start listener attribute of the
gets the leaf attribute of the flat category model object
gets the title attribute of the jtabbed chat panel object
is called if a message was received
is called if a plugin or the chatframe want to send a message
gets the mnemonic attribute of the grabber object
return the name of the plugin
gets the tool tip attribute of the grabber object
gets the contact for mouse event attribute of the popup listener object
is called if a message was received
is called if a plugin or the chatframe want to send a message
gets the engine for mouse event attribute of the popup listener object
gets the message command attribute of the remove from list message object
gets the message command attribute of the personal phone message object
gets the message command attribute of the buddy phone message object
gets the message command attribute of the add to list message object
gets the status attribute of the msn contact object
gets the online attribute of the msn contact object
gets the i d attribute of the msn contact object
gets the default status attribute of the msn engine object
sets the offline attribute of the msn engine object
sets the online attribute of the msn engine object
adds a feature to the contact attribute of the msn conversation object
sets the status attribute of the msn engine object
return a unique key for this conversation
adds a feature to the event attribute of the event browser frame object
sets the nick attribute of the msn engine object
gets the row count attribute of the event table model object
gets the offline icon attribute of the uifactory object
gets the value at attribute of the event table model object
gets the online icon attribute of the uifactory object
adds a feature to the contact attribute of the msn engine object
gets the row count attribute of the action table model object
gets the value at attribute of the action table model object
gets the destroyed attribute of the event browser object
gets the user status panel attribute of the jchat panel object
adds a feature to the control attribute of the jchat panel object
adds a feature to the controls attribute of the jchat panel object
get the label of the device
reads the info already stored in files
reads one of the cp files
check if certain device is mounted or not
get the label of the device
generates an evenly spaced light curve plot
assume no copy for performances sake
ajoute n blocks
efface les blocks
creates a new skosmanager object which is used to manage skos vocabularies
creates a new empty skos vocabulary that has the specified ontology uri
loads the ontology specified by the code uri code
a convenience method that load an ontology from an input source
a convenience method that loads an ontology from a physical uri
return a skosdata factory for this manager
creates a new skosmanager object which is used to manage skos vocabularies
this function is used to return the vector contains the format tab
this function get the height and size of the object
this function get the aligment x and y
this function get is enable the button
select working database must be called after get databases
this function is called to store the vector of the tables names in
this function return the tables of the database
the function get the fields vector for the given table
retrieves the number of rows of the table
retrieves fields with not null constraint
this function is used to get the info and save it
this function is used to retrieve the info specific for the jbutton
get the last sequence number of added component
go to last record in the table
go to first record in the table
increment the sequence number of a component
get the value of the required field
delete the current record in the result set the record is also deleted
undo current row updates
retrieves the last inserted id for auto increment primary key
the function use is to pop up the right click menu
action performed handler for the button
this function get text on the component
this function get the text vertical aligment
this function get the icon on the button
this function get is enable the button
the function is used to get db names
the function takes db names and return table names
this function get text on the component
this function get the text vertical aligment
this function get the icon on the button
this function is used to get the info and save it
this function is used to read the new inforamtion and set it again
this functions is used to fill the vector with strings of the fields
the function returns the fields vector
this function used to set the path of the photo on the label
this function used to get the path of the photo on the label
locate peers on the network until a time limit is reached
locate apps on the network until a time limit is reached
locate peers on the network until a time limit is reached
returns the label
validates input values
returns the error messages
execute the bare action process
initializes the root package name
apply the public field bean to el
tears down this action
initializes the servlet context
handles the error
creates a new
initializes the character set
creates a new
initializes the default time zone
returns the request parameter
sets the request attribute
initializes the default locale
sets the session attribute
initializes the default time zone
sets the servlet context attribute
determines if this application is running on the development server
downloads the data
determines if this request is get method
determines if this request is post method
determines if this request has request parameters
returns the request attribute value as byte
returns the request attribute value as byte
processes the current locale
returns the request attribute value as short
returns the request attribute value as short
processes the current time zone
returns the request attribute value as integer
returns the request attribute value as integer
returns the request attribute value as long
normalizes the value
creates a new action specified by the path
returns the request attribute value as long
returns the request attribute value as float
returns the request attribute value as float
returns the request attribute value as double
creates a new request handlers
returns the request attribute value as double
returns the request attribute value as big decimal
returns the request attribute value as big decimal
returns the request attribute value as string
capitalizes the text according to java beans specification
returns the request attribute value as boolean
returns the request attribute value as date
returns the request attribute value as
entity user user1 entity offset 1 limit 1
show this dialog
show this dialog
called when the yes button is pressed
called when the send button is pressed
moves this frame to the center of the screen
called when the abort button is pressed
called when the no button is pressed
prints out the names of all available algorithms
sets the password which is displayed by default when showing the dialog
reads out the configuration in the view and stores
prints out the help page
prints out program version
returns an algorithm as algorithm class given by its name
displays an error message
displays an error
set the compression level
returns the current compression level does not matter if use zip is set
returns a file list of the files to en decrypt
adds an algorithm name to the alrogithm list
sets the file path by calling
returns the current password which should be used for en decryption
adds a new algorithm
sets the currents paths to the given files
returns the current name of the algorithm which should be used for
returns the current paths
sets the current chosen algorithm name
returns the algorithm which should be used for
returns the current chosen algorithm name
selects the given compression level
returns the currently selected compression level
call to get the directory the decrypted files should be stored in
depending on whether there is a progress running some
stops the currently running algorithm
reads and returns a code table code from the string buffer passed as
reads and returns a code parameter code from the string buffer passed as
reads and returns a code scalar code from the string buffer passed as
an exact representation of this scalar as one would find in the model
an exact representation of this parameter as one would find in the model
destroy an existing grade letter
destroy an existing category
destroy an existing assignment
converts a json string into a java map
returns the launch manager
returns the file corresponding to the specified path from within this
returns the test project
synchronously removes a breakpoint that has been previously set
launches a previously created atf configuration
terminates the process launched by the last call to
this method initializes main window
this method initializes content panel
this method initializes tabbed panel
this method initializes ok
this method initializes south
this method initializes about scroll panel
this method initializes help scroll panel
this method no longer serves any purpose
this method no longer serves any purpose
set the interval at which regex patterns are checked
the idea behind this class is simply to eliminate the need for
set this int to infinity
formats the pattern as a string
this provides a base class for all the unicode character
this should always be cast to a string as in string tokenizer
this asks for the next token and changes the pattern
this asks for the next token and changes the pattern
tells whether there are more tokens in the pattern
determines the of remaining tokens
obtains the match if successful null otherwise
obtains the position backreference number i begins to match or
obtains the number of characters matched by backreference i or
obtains a substring matching the nth set
this returns the part of the string that preceeds the match
this returns the part of the string that follows the ith
this returns the part of the string that follows the match
this returns the string to the right of the ith backreference
this method does extra checking on a matched section of
this finishes the replacement appending the right part of
set to true if you only want to compare two of the
add a new regex to the set of regexs
get the regex at position i in this transformer
set the regex at position i in this transformer
add a new regex by calling regex
add an array of strings which will be converted to
replace all matches in the current string
replace all matching patterns beginning at position start
replace all matching patterns beginning between the positions
replace the first matching pattern in string s
replace the first matching pattern after position start in
replace the first matching pattern that begins between
this gets the next element of a pattern that
call this method if you have a pattern element that
this determines if the remainder of a pattern
this is a to string for the remainder
this can be used to perform a match test from
this can be used to perform a match test from
add a pattern to the singly linked pattern chain
get the size of the working buffer
set the size of the working buffer
set the dont match in quotes flag
find out if the dont match in quotes flag is enabled
set the state of the ignore case flag
change the replace rule of this regex by compiling
change the replace rule of this regex to rp
replace the first occurence of this pattern in string s
replace the first occurence of this pattern in string s
replace the first occurence of this pattern in string s
replace all occurences of this pattern in string s
replace all occurences of this pattern in string s
replace all occurences of this pattern in string s
a clone by any other name would smell as sweet
return a clone of the underlying reg res object
attempt to match a pattern beginning
attempt to match a pattern beginning
search through a string for the first
search through a string for the first
search through a region of a string
set the g flag
get the state of the g flag
get the state of the s flag
get the state of the s flag
only needed for creating your own extensions of
this method implements filename filter allowing one
the version of this package
once this method is called the state of variables
this function returns true if the optimize method has
checks to see if there are only literal and no special
this operation cant really be done
compile a new pattern
this is the method required by file name filter
this pattern matches nothing it is found in patterns
a rule describing how to clone only the current replace rule
add another replace rule to the linked list
this tells how to convert just the current element and none
copy a str pos from sp to this
advance the place where str pos points within the string
compare the possibly escaped character
as match but only matches if the character is escaped
increment the string pointer by each character in
read in an integer
returns the binary string of data that is substituted in for this
returns the class of this register
returns the number of commands that have been added to this table
resets and reinitializes the compiler
returns the line number of the current line that is being processed or
loads one of dasms internal directives
removes the head of a named queue
removes the head of a named stack
determines if a stack has at least one element
checks if there are any available lines
returns the next line in the file
retrieves the current line from the file
string representation of a working file in the format
returns the total size of this file
sets the calculator model that this variable should be sent to
retrieves the contents of this tireal and formats it as a java double
sets this code tireal code s value to the specified value
creates the pages of the multi page editor
the code multi page editor example code implementation of this method
calculates the contents of page 2 when the it is activated
closes all project files on project close
this method no longer serves any purpose
tests to see if this represents an infinite quantity
converts to a pat int to an int
the current size of the string buffer in use by regex writer
the character at location i in the string buffer
this is the equivalent string next element
obtain the text string that was matched against
obtain the source string like object
for optimization it is helpful but not necessary that you define the
for optimization it is helpful but not necessary that you define the
after a successful match this returns the location of the first matching
after a successful match this returns the number of characters in the
this is matched from chars matched after a successful match or 1
this method replaces the first occurence of the regex in the string
this returns the number of backreferences parenthesis in the pattern
contains true if the last match was successful
an older name for matched from
an older name for string matched
this method replaces all occurences of the regex in the string starting
an older name for matched from
an older name for string matched
get a replacer to that works with the current regex
another form of apply it is the same as apply r r
returns the number of regexs in this transformer
modified the behavior of a replace rule by supplying an argument
returns the current possibly escaped character
tell whether we are at end of string
returns true if the current character is escaped preceeded by
get the string that we are processing
changes the rule used to determine a variables value
gets the rule used to determine a variables value
this method evaluates functions in a string replacing them with their
get the current replace rule
clones this object creating a new score with the same values
print this object for debug
start the match with these numbers of sets and legs
returns the string representation for this throw
restarts this match object with the previous selected
adds the throw made by this player to the match
print this object for debug
tells this match that somebody won the set and it should be closed
tells this match that somobody won the leg and it should be closed
sets the players vector loosing the old one
tells this match that the turn must be closed because of a bust
removes a player from the players list
restart the match using the old configuration
undoes the last throw added
adds a player to the players list
restarts the leg
sets the number of legs
returns the match object which contains the whole matchs
gets the number of legs
tells this leg that the turn must be closed because of a bust
sets the number of sets
returns the last turn somebody played
gets the number of sets
this method is called when the view wants to report a throw that
returns the current value for this turn
sets a new value in the extra config table using this key
add the throw to its turns throw list
gets an extra config value from the list
removes the last throw from the list and returns the
get the table with extra configs
removes the last throw from this turn
checks if this turn is empty
return the table of scores
returns true if this turn has already all throws filled
returns the configuration object that the game is using
returns true if this turn has a throw that is a double or
restart the set with this number of legs
restart the set with the previous number of legs
adds the throw to the current leg
closes this set
gets the current state of the game
tells this set that somobody won the leg and it should be closed
tells this set that the turn must be closed because of a bust
helper method that returns the player that should be the next
tell the set to undo the last throw
help method iterates over the scores resetting the points
creates the components and place them in the form
refresh the values for the rows
cleans the form and restarts everything
gets the minimum content height
reacts to undo calling refresh
gets the minimum content width
add a new listener for the controller
starts resumes the application
creates the components and place them in the form
reacts to report calling refresh
called when the pointer is released
initiates the values for the form
removes the listener from the listener list
called when a key is released and focus is on this button
reports a new throw to the controller
reacts to restart calling refresh
paints the button
performs an undo in the game
called when the pointer is released
called when the item has effectively lost the focus
reacts to report throw
implementation for the command listener
reports a throw made by the current player
paints the board
reacts to restart
displays an event with a message for some seconds
sets a new game configuration
displays the board form
displays the scores form
gets the game configuration
displays the options form
gets the available games
return the scores hashtable indexed by player
sets the type of the game to be played
gets the current game key
gets the current game state
sets game over in the controller
helper method for calling fire listeners with a null throw
fires all listeners to the operation eventually using the throw
test method for
test method for
test method for
add a configuration command
get most recently executed alu function code
get state associated with executing most recent instruction
get the most recent instruction
stoppt den countdown
replace driver manager with data source for
replace driver manager with data source for
very preliminary just returns all the features on every request
should add code here to return different das2 feature i implementations
depth of ucsc annotations is usually always known based on captype
method used to set value of
method used to enable or disable automatic heuristic removal
for now assuming any type can be represented as jbrowse json
das2 source i passes filter if any version in the source passes filter
get elapsed time
for now try mapping full type uri
uses a das1 features capability i to get a das1 features response i
das2 type of a feature cannot or at least should not be null
failsafe for when there is no das1 types proxy
das2 source i
das2 source i
any code constructing a parent part hierarchy is
any code constructing a parent part hierarchy is
format the field name for query statements find find all find by id
obtain the dereferenced field name
obtain the field name
set the field name associed with property
set sql type
set output format pattern based on java
this property means that into query command this field
check if this field name will be dereferentiated into
enable disable identity conditions on all find commands
remove bean from db same of sql delete command
delete bean from db using an id
load a bean info associate with bean
set entity name mapped with bean
update bean into db having the possibility of
get entity name mapped with bean
join condition syntax
select bean from db using an primary key value
set an additional identity where conditions used in all find commands
get the db entity associate with bean
reload bean instance from db
create a param list using primary key
test if the bean have a primary key
add a new custom find command
enable disable identity conditions on all find commands
insert beans into db
update bean into db
update bean into db having the possibility of
delete bean from db using an id
delete bean from db
remove all bean from db
select bean from db using an primary key value
write the style tag
write the style tag
dummy processline function
replace host by th e application host
returns the content
process a token
search a token in function params
handles logic to translate variables
returns the single instance
returns the method name
safe javascript function caller
add a css file to be included in application
adds a js file to be include in the application
create the next js instance name
factory method for creating nested messages
adds a js file to be include in the application
adds a template path
set the output file
add a required package to application
returns image path with
write to default path
write all js in the same script tag
write the module footer
performance caution using float objects as map keys is not recommended
set entries to a new array of the given capacity
stack traces are not currently supported
stack traces are not currently supported
the set of keys associated with this dictionary
collection of values associated with this dictionary
enables caching to store computed values
get the resources associated with this class
gets the associated locale
keys associated with this resource
create a string method declaration from a dictionary value pair
a multi line representation of this object
gets the resource associated with this class
returns a resource key given a method name
override this method to examine the serialized response that will be
this method treats arrays in a special way
override this method to examine the serialized version of the request
returns true if the
used to determine whether the specified interface name is implemented by
call this method before attempting to append any tokens
appends a token to the end of the buffer
exception chaining is not currently supported for serialized exceptions
no effect exception chaining is not currently supported for serialized
called when the machinery of this class itself has a problem rather than
adds a child widget to this panel
automatically fires the appropriate keyboard event to all listeners
adds a widget to the panel at the specified position
sets the position of the specified child widget
fires a key down event to all listeners
gets the left position of the specified widget within the panel
fires a key down event to all listeners
gets the top position of the specified widget within the panel
fires a key down event to all listeners
if a keyboard event is currently being handled on this text box calling
gets this widgets parent panel
replaces the contents of the specified cell with a single space
gets the current position of the cursor this also serves as the beginning
determines whether this widget is currently attached to the browsers
adds a child tree item containing the specified text
return number of columns
this method is called when the widget becomes attached to the browsers
adds another item as a child to this one
gets the number of columns in this grid
gets the text currently selected within this text box
this method is called when a widget is attached to the browsers document
gets the child at the specified index
return number of rows
gets the length of the current text selection
this method is called when a widget is detached from the browsers
gets the number of children contained in this item
resizes the grid
removes this widget from its parent widget
resizes the grid to the specified number of columns
gets the index of the specified child item
resizes the grid to the specified number of rows
creates a new empty cell
gets this items parent
checks that a cell is a valid cell in the table
gets whether this items children are displayed
checks that the row index is valid
selects all of the text in the box
sets the cursor position
gets the layout direction of the given child widget
removes this item from its tree
sets the range of text to be selected
removes one of this items children
removes all of this items children
sets the alignment of the text in the text box
selects or deselects this item
sets whether this items children are displayed
sets whether this items children are displayed
sets the user defined object associated with this item
sets the default horizontal alignment to be used for widgets added to this
gets the css text align string associated with this constant
sets the default vertical alignment to be used for widgets added to this
sets the height of the cell associated with the given widget related to
fires a cell clicked event to all listeners
sets the vertical alignment of the given widget within its cell
sets the amount of spacing between this panels cells
fires an error event to all listeners
fires a load event to all listeners
this override checks to ensure
adds a style name to the widget
sets the widget to be wrapped by the composite
gets the objects absolute left position in pixels as measured from the
sets the widget to be wrapped by the composite
gets the objects absolute top position in pixels as measured from the
adds a widget to the end of this collection
determines whether a given widget is contained in this collection
gets the objects offset height in pixels
adds an item to the list box
gets the objects offset width in pixels
gets the widget at the given index
adds an item to the list box
gets the style name associated with the object
gets the index of the specified index
removes all items from the list box
gets the title associated with this object
inserts a widget before the specified index
gets the number of items present in the list box
gets an iterator on this widget collection
gets the text associated with the item at the specified index
determines whether or not this object is visible
removes the widget at the specified index
removes a style name from the widget
removes the specified widget
gets the currently selected item
sets the objects height
gets the value associated with the item at a given index
fires a focus event to all listeners
a helper for widgets that source focus events
sets the objects size in pixels not including decorations such as
gets the number of items that are visible
fires a lost focus event to all listeners
inserts an item into the list box
sets the objects size
inserts an item into the list box
gets the menu that contains this item
sets the objects style name removing all other styles
gets the sub menu associated with this item
determines whether an individual list item is selected
sets the title associated with this object
gets whether this list allows multiple selection
sets the command associated with this item
sets the sub menu associated with this item
sets whether this object is visible
sets the objects width
removes the item at the specified index
adds a set of events to be sunk by this object
sets whether an individual list item is selected
adds a style to the specified cell
sets whether this list allows multiple selections
removes a set of events from this objects event list
sets this objects browser element
gets the td element representing the specified cell
adds a child widget to the panel contained within the html element
sets the currently selected index
adds a widget to this panel
gets the panels child widget
sets the value associated with the item at a given index
gets a style from a specified row
sets the number of items that are visible
sets this panels widget
override this method to specify that an element other than the root element
gets the css vertical align string associated with this constant
inserts a new child widget into the panel
adds a new child widget to the panel
gets the list of children contained in this panel
determines whether or not this cell is visible
fires a popup closed event to all listeners
gets the action associated with this form
gets the encoding used for submitting this form
gets the http method used for submitting this form
gets the forms target
removes a style from the specified cell
sets the action associated with this form
sets the encoding used for submitting this form
sets the http method used for submitting this form
submits the form
gets the name associated with this frame
fires a before tab selected event to all listeners
fires a tab selected event to all listeners
sets the height of the specified cell
hides the popup
popups get an opportunity to preview keyboard events before they are passed
popups get an opportunity to preview keyboard events before they are passed
gets the url of the image
popups get an opportunity to preview keyboard events before they are passed
sets the url of the image to be displayed
gets the result text of the form submission
sets the popups position relative to the browsers client area
fires a change event to all listeners
gets the popups left position relative to the browsers client area
sets whether the form submit will be cancelled
adds a widget to the tab panel
gets the popups top position relative to the browsers client area
gets whether this form submit will be cancelled
adds a widget to the tab panel
sets the style name associated with the specified cell
gets the deck panel within this tab panel
this method must be called whenever a widget is removed
shows the popup
gets the tab bar within this tab panel
gets the filename selected by the user
fires a scroll event to all listeners
adds a child widget to the panel
inserts a widget into the tab panel
sets whether this cell is visible via the display style property
inserts a widget before the specified index
removes the given widget and its associated tab
sets the width of the specified cell
fires a tree item selected event to all listeners
fires a tree item state changed event to all listeners
programmatic equivalent of the user clicking the button
fires a mouse down event to all listeners
fires a mouse enter event to all listeners
gets the column span for the given cell
gets the row span for the given cell
fires a mouse leave event to all listeners
sets the column span for the given cell
sets whether the specified cell will allow word wrapping of its contents
fires a mouse move event to all listeners
sets the row span for the given cell
fires a mouse up event to all listeners
appends a cell to the specified row
gets the number of cells on a given row
gets the index of the currently visible widget
explicitly gets the
gets the number of rows
gets the td element representing the specified cell unsafely meaning
inserts a widget before the specified index
inserts a cell into the flex table
inserts a row into the flex table
shows the widget at the specified index
removes a number of cells from a row in the table
gets the element associated with a cell
ensure that the cell exists
ensure that the row exists
ensures that the specified item is visible by adjusting the panels
convenience methods to get an attribute on a cell
gets the vertical scroll position
gets the horizontal scroll position
sets whether this panel always shows its scroll bars or only when
sets the vertical scroll position
sets the horizontal scroll position
convenience methods to set an attribute on a cell
gets whether this widget is enabled
inserts a widget before the specified index
sets whether this widget is enabled
adds a style to the specified row
fires a click event to all listeners
gets the tr element representing the specified row
cancels this timer
schedules a timer to elapse in the future
schedules a timer that elapses repeatedly
gets a style from a specified row
determines whether or not this row is visible via the display style
removes a style from the specified row
sets the style name associated with the specified row
sets the vertical alignment of the specified row
sets whether this row is visible
given a class return the next superclass that is serializable
ensure the tr element representing the specified row exists for
returns true if we will need get set method pair for a field
perform a set of consistency checks on the service interface
see if a type has any subtypes that are serializable
convenience methods to set an attribute on a row
this method will generate a native jsni accessor method for every field
adds a listener to the current table
identify the custom field serializers that are available
creates a proxy class for the requested class
clears the given row and column
returns true if the type is serializable
check that the types used in the service interface are serializable or have
return true if atleast one of the items in the list is serializable
gets the amount of padding that is added around all cells
generate any fields required by the proxy
gets the amount of spacing that is added around all cells
implements the service def target interface to allow clients to switch which
gets the html contents of the specified cell
gets the row formatter associated with this table
gets the text within the specified cell
gets the widget in the specified cell
determines whether the specified cell exists
returns an iterator containing all the widgets in this table
creates an implementation of
method to process events generated from the browser
this class is an interface
emits the new class
registers a method creator
remove the specified widget from the table
entry point for subclass cleanup code
entry point for subclass setup code
given a type determine what jsni signature to use in the serialize or
removes the specified table listener
gets the associated writer
prints to the current code abstract generator class creator code
prints to the current code abstract generator class creator code
begin emitting a java doc comment
end emitting a java doc comment
sets the width of the tables border
sets the amount of padding to be added around all cells
returns code this code as this is a jsonstring
returns the raw java string value of this item
returns the json formatted value of this string quoted for evaluating in a
returns code this code as this is a jsonnumber
returns the json representation of this number
sets the amount of spacing to be added around all cells
returns code true code if this is the instance representing true
returns code this code as this is a jsonboolean
returns true for the true value and false for the false value
returns the value at the specified index position
returns a non null reference if this jsonvalue is really a jsonnull
returns code this code as this is a jsonarray
sets the html contents of the specified cell
sets the specified index to the given value
returns code this code as this is a jsonobject
create the json encoded string representation of this jsonarray instance
returns keys for which this jsonobject has associations
returns code this code as this is a jsonnull
determines the number of keys on this object
gets the number of nodes in this object
this function delegates to the native method code remove named item code
sets the text within the specified cell
this function delegates to the native method code get document element code
this function delegates to the native method code set named item code in
this function delegates to the native method code get element by id code
this method returns the string representation of this code comment impl code
this method returns the string representation of this
this method returns the string representation of this
this function delegates to the native method
this function delegates to the native method code append data code in
this method gets the index item
this function delegates to the native method code create comment code
this function delegates to the native method code delete data code in
this function delegates to the native method code get data code in
sets the widget within the specified cell
this function delegates to the native method
this function delegates to the native method code get attribute code in
this function delegates to the native method code get length code in
this function delegates to the native method code get attribute node code
this function delegates to the native method code insert data code in
this function delegates to the native method code create element code
this function delegates to the native method
this function delegates to the native method code replace data code in
this function delegates to the native method code get tag name code in
this function delegates to the native method code set data code in
this function delegates to the native method code has attribute code in
this function delegates to the native method code create text node code
this function delegates to the native method code substring data code
this function delegates to the native method code remove attribute code
this function delegates to the native method code set attribute code in
this function delegates to the native method code get name code in
this function delegates to the native method code import node code in
removes any widgets text and html within the cell
this function delegates to the native method code get specified code in
this method returns the string representation of this
this function delegates to the native method code get value code in
this method returns the string representation of this
this method returns the string representation of this code attr code
this method determines equality for domitems
this method returns the string representation of this
this function delegates to the native method code split text code in
this function delegates to the native method code append child code in
this function delegates to the native method code clone node code in
this function delegates to the native method code get target code in
gets the key associated with the cell
this method gets the code of this code domexception code
this function delegates to the native method code set data code in
this function delegates to the native method code get namespace uri code
computes the key to lookup the widget
this function delegates to the native method code get prefix code in
this function delegates to the native method code has attributes code
this function delegates to the native method code has child nodes code
gets the widget associated with the element
this function delegates to the native method code insert before code in
this function delegates to the native method code normalize code in
this function delegates to the native method code remove child code in
this function delegates to the native method code replace child code in
removes the given widget from a cell
this function delegates to the native method code set node value code in
bounds checks that the cell exists at the specified location
checks that the row is within the correct bounds
creates a new cell
gets the tables tbody element
directly ask the underlying dom what the row count is
inserts a new cell into the specified row
inserts a number of cells before the specified cell
inserts a new row into the table
does actual clearing used by clear cell and clean cell
removes the specified cell from the table
removes the specified row from the table
sets the tables cell formatter
sets the tables row formatter
returns the lni url for a known handle
type coercing accessor
zip a directory
effectively validates on any operation where cml is not supplied
extracts the in ch i from a cml file and encodes in rdf
base literals dont have an xsi type
accessor for the metadata package uri
returns the results of any validation performed
accessor for the conversion processing instruction flag
accessor for the metadata extraction processing instruction flag
accessor for the metadata extraction processing instruction flag
accessor for the converted cml
returns the cml mime type
accessor for the extracted metadata
returns the same filename
accessor for the metadata package uri
accessor for conversion processing instruction flag
accessor for conversion processing instruction flag
zip a directory
utility method to extract single values for a given xpath
if the add more chemist link has been clicked stop the submission
upload metadata check finished
writes any unwritten metadata for this package into the package manifest
this required to make sure custom validation gets performed as well as
the metadata page to use is configured into spring via the profile
this component has no reason to block submission
copy the properties of p onto this object
need to make concrete classes because serialization of mocks is too brain
hack required because file uris seem to come out with either one or
end of this page of results 1 indexed self correcting in case of
creates a file handle for an archive file of the identified package
must be called after set results
must be called after set results
make the index collect data from all sources synchronously right now
oai identifiers from dspace oai feed are of format
convenience method to get localized messages in code
returns the string representation of this uuid
private constructor singleton class
calculates the embargo start date and period
not expecting much useful here
maps the peak list
reads the content of file filename into a string
simple implementation steps are currently independent
checks that all variables required are not null
load the specified configuration
process the current configuration
checks that all variables required are not null
checks that all variables required are not null
checks that all variables required are not null
checks that all variables required are not null
checks that all variables required are not null
load the specified configuration
checks that all variables required are not null
checks that all variables required are not null
checks that all variables required are not null
checks that all variables required are not null
write int byte to output stream
write string s to output stream
checks that all variables required are not null
invoked when the components size changes
not supported any more
returns a valid mpeg7 document as string
whether the given file is accepted by this filter
the description of this filter
whether the given file is accepted by this filter
the description of this filter
returns the filled in description
returns string representation of the content
tests if the specified code point2 d code is inside the boundary
tests if the specified code rectangle2 d code
get all persistent dato of this class
tests if the specified coordinates are inside the boundary of
set all persistent data of this class
tests if the specified rectangular area is inside the boundary of
return the bounding box of the path
returns the bounding box of the path
returns a code path iterator code object that iterates along the
returns a code path iterator code object that iterates along the
tests if the interior of this code shape code intersects the
tests if the interior of this code shape code intersects the
ensure the data is not null
if false the entry delete is disabled in the popupmenu
shows basic help for using this panel
set as new entry for a textfield
set as new entry for a textfield
set as new entry for pull down box
returns true if the input string is yes or true
now we have an new document
a dot has changed now a shape resize is necessary
returns the number of ilines in the drawpanel
return the path where the description data begins
use this for set box
use this for set shape
return a list of point
return the path where the description data begins
return a spatial decomostion if available
to paint use the methods draw mouse over draw selected draw component
return the path where the description data begins
return the element that can be added to the root tag mpeg7
invoked by swing to draw components
derived classes can override this to extract data specific to their content type
walks though the child specified in loacation1 and returns the text
converts rectangle to x y width heigh
converts a color to a mpeg7 rgb color string value
set a mouselistenr for mouse events on the icomponents
convert 100 12 0 0 to point 100 12 point 0 0
converts 1 2 3 4 to point 1 2 point 3 4
returns the document containing the shape descriptors or the
return the path where the description data begins
return the element that can be added to the root tag mpeg7
this will be removed somethimes
return the element that can be added to the root tag mpeg7
repaints this component
title of the content
return the path where the description data begins
return the path where the description data begins
return the element that can be added to the root tag mpeg7
add a component to the object list for the drawing panel
title of the content
start with the root tag
get a keyframe from results from the mmdb
walks though the child specified in location1 and returns the text
content file size in byte
walks though the child specified in loacation1 and returns the text
tests if a specified file should be included in a file list
check one single filename like document
tests whether or not the specified abstract pathname should be
walks though the child specified in loacation1 and returns the text
creation date of the content file
same as apove just without comments
creation date of the content file
locate element with use of namespace
simple attribute setting without all the namespace stuff
set a dom attribute with a processing instruction
summary about the content of the media file
summary about the content of the media file
make your own xpath query
converts a color to a mpeg7 rgb color string value
where the description has been created
if true the panel is used to draw multimedia objects and operator
convert 100 12 0 0 to point 100 12 point 0 0
where the description has been created
if true the panel is used to draw mulmiedia objects and operator
set a prived identifier to identify this record
use for serialization
get the prived identifier to identify this record
extract the shape from an image with white background and black shape
extract the descrptor data
who has created this description
add a component to the menuebar without actionlistener and menuentry
summary describing the description purpose and context
summary describing the description purpose and context
meaningful title descripting this desctipion and the content
meaningful title descripting this desctipion and the content
name of the tool softwareaplication used for createing the desctiption
name of the tool softwareaplication used for createing the desctiption
get the framerate of the timepoint
get number of 1 10 seconds for a graphical repr sentation
get the position as number of frames
adds a graph to the corpus for calculation of idf
same as ask string message except adds cancel
calculates and returns the distance between two objects
allows the distance calculations based on visual descriptors
returns all phrases of alle base clusters
returns the phrase with the maximum score
using this method you can boost the ranking of the final clusters
adds a base cluster to the final cluster without checking similarity constraints
for implementing interface comparable
calculates and returns the distance between two objects
calculates the similarity between objects using the similarity function or the stored values
calculates the distance between objects using the distance function for k 0
calculates the similarity between objects using the similarity function for k 0
used for the heuristic for getting the pivots as described in the paper
calculates the distance between objects using the distance function for k 0
this method updates an existing similarity
checks wether a node can be a base cluster
returns the index of the col with minimum similarity to the given row
boolean distance function 1 in case of not equal 0 in case of
calculates and returns the distance between two objects
for debugging lists
returns the maximum distance for this function
calculates the distance between objects using the distance function for k 0
used for the heuristic for getting the pivots as described in the paper
makes base clusters comparable
calculates and returns the distance between two objects
returns the score of the base cluster without multiplication with document count
returns movement of the last step used to check if
adds a document with given id
this parameter makes cluster separation more significant
constant gravitation of points should be related somehow
constant gravitation of points should be related somehow
parameter prevents points from comint too close to each other
tunes the atraction of points the higher this value the
use this method to train a suffix tree for a corpus
normalizes the matrix for all values to 0 1
allows to use the very same suffix tree for another similarity
invoked when an action occurs
invoked when an action occurs
creates and returns a newly created similarity matrix from the given
invoked when an action occurs
normalizes the matrix for all values to 0 1
creates the mpeg 7 descriptor from the annotation
returns the number of children of i parent i
returns whether the specified node is a leaf node
copies the contents from the structured text fields to the
returns the index of child in parent
tells how leaf nodes are determined
sets the root file of the tree
returns the full mpeg 7 description
tests whether or not the specified abstract pathname should be
returns the full size image which is currently previewed
is called when a file is explicitely openend meanwhile not used
allows the iterative loading of image files
set a new image to edit
invoked when a mouse button is pressed on a component and then
invoked when the mouse cursor has been moved onto a component
invoked when the mouse button has been clicked pressed
invoked when a mouse button has been pressed on a component
invoked when a mouse button has been released on a component
gets path to mpeg 7 file
summary of result
creates and returns a parameters object for fdp algorithm
return the token stream
use when embedder is stoppeg eg
creates a string representation from a graph
returns true if the graph contains the same relations and nodes
invoked when a mouse button has been pressed on a component
checks if o is the same node as this object
compares this object with the specified object for order
invoked when a mouse button has been released on a component
eliminates an inverse relation as there is an inverse
inverts the current relation
calculates the maximum common subgraph metric the maximum common
invoked when the mouse wheel is rotated
init used by all constructors
added by mathias lux just an l1 distance function
invoked when a mouse button is pressed on a component and then
euclidean distance between the colors
normalize the percentage as in mpeg 7 part 8 is recommended for
makes some initial operations and calls the main extracting method
makes some initial operations and calls the main extracting method
invoked when an action occurs
initial values c1 2
compares one descriptor to another
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
creates a string representation from the descriptor
sets the descriptor value from a string
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
invoked when the mouse button has been clicked pressed
invoked when a mouse button has been pressed on a component
invoked when a mouse button has been released on a component
invoked when the mouse enters a component
invoked when the mouse exits a component
sets up the fixture for example open a network connection
when an object implementing interface code runnable code is used
loads an image as buffered image
gets the current impact
sets the impact value
adds a strategy to the weighting strategy collection
removes the strategy from the weighting strategies
adds an engine observer to this engine instance
removes an engine observer from this engine instance
resets the usage counter to its initial state
evaluates all weighting strategies for the
gets the weighted relevancy for the specified
resets all strategies state data to their initial
compares one descriptor to another
main similarity method called for each and every document in the index
allows the distance calculations based on visual descriptors
calculates the distance between objects using the distance function for k 0
provides basic search functions
normalizes the matrix for all values to 0 1
comparator for making features sortable
apply a model to the point
less than operater to make the models comparable returns false for error 0
returns the size in bytes of a feature object
build only the gaussian image with 2 initial sigma
clear the scale octave to save memory
reads descriptor from a byte array
get l1 distance between two pixel arrays
visualizes the attention model in a picture
find the appropriate cluster for a given feature
pop the next pixel of the smallest level
reads descriptor from a byte array
my history implementation
set pixel accessible and give back if this was possible
calc wer of a complex number
set the next edge
helper method to prepare the member fields before calculating the msers
explore the next edge of the pixel
explore the next edge of the pixel
extracts the color histogram from the given image
compares one descriptor to another
computes the mean per cluster averaged vector
reads descriptor from a byte array
do one step and return the overall stress squared error
re shuffle all features
computes the mean per cluster averaged vector
squared error in classification
compares one descriptor to another
test serialization of clusters
creates an index with an extensive list of global features
generate a data object with the supplied options
assemble 1st 2nd level options into a single options list
this method initializes this
insert arbitrary staus text
sets the options
set status text to complete message
set status text to complete with error message
add a single option
this method initializes j button
add a single sub option
this method initializes program dialog
this method initializes j button1
this method initializes program content pane
this method initializes j tree
this method initializes clear button
this method initializes j button
redisplays j tree to reflect any changes made to the underlying data object
returns the option possibly modified
return all current names values of options
this method initializes main pane
this method initializes j button1
returns the command line as it should be run
this method initializes option panel
this method initializes this
displays an option in the mainpanel
this method initializes j button
this method initializes program info label
this method initializes j content pane
update the document object when an option is modified
this method initializes program info label
this method initializes j button
update the document object when an option is modified
this method initializes j button
load settings spawn actual window
show the option being selected
this method initializes the back button not yet used
this method initializes this
this method initializes clear button
this method initializes j editor pane
this method initializes j button
this method initializes about dialog
this method initializes j button1
this method initializes about content pane
this method initializes the tool bar
this method initializes j button1
this method initializes about version label
this method initializes about version label
this method initializes j scroll pane2
this method initializes j editor pane
this method initializes j button
show info pane for a particular option
runs the program using all options
this method initializes info pane
show all the options in the tree
get the long information on an option
hide all the options in the tree
close gui and restart from scratch reset
find an option object from data based on the option flag
set the long information on an option
for stopping the thread
return the data object
validate xml document options section basic checking
validate xml document program section basic checking
set an option value right after object creation
this method initializes the wizard button
set the option value for choice type option only
get the option subset xml equivalent is the value of lt subset gt
set the option subset xml equivalent is the value of lt subset gt
this method initializes console panel
this method initializes j scroll pane
return true false
this method initializes console pane
set the parent data object
this method initializes j scroll pane1
see if there is one or more child options
get the child option
this method initializes error pane
set the child option
get the option linking character string
set the option linking character string
this method initializes j button1
set the run button back to run mode
this method initializes j button3
this method initializes j frame
this method initializes j jmenu bar
this method initializes j menu
this method initializes j menu
show binarychooser dialog
spawn a binary chooser
this method initializes j menu
this method initializes j menu item
this method initializes j menu item
change the color of the named tab to red
change the color of the named tab to black
start the hosted program
close this gui instance
this method initializes this
this method initializes j content pane
this method initializes j panel cpd
this method initializes j panel fondo
this method initializes j button aceptar
this method initializes j button cancelar
this method initializes this
this method initializes j content pane
this method initializes this
this method initializes j content pane
this method initializes j scroll pane disponibles
this method initializes j panel botones
this method initializes j button aceptar
this method initializes j button cancelar
this method initializes this
this method initializes j button buscar
this method initializes this
this method initializes j content pane
this method initializes j button aceptar
this method initializes j scroll pane resultado
this method initializes j button cancelar
this method initializes j label id
this method initializes j text field id
this method initializes j label clave
this method initializes j password field clave
this method initializes this
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes j panel comitente
this method initializes j panel fondo
this method initializes this
this method initializes j content pane
this method initializes j panel botones
this method initializes j panel botones
this method initializes j button aceptar
this method initializes j scroll pane ordenes
this method initializes j scroll pane cpd
this method initializes j button cancelar
this method initializes j panel boton menu
this method initializes j jtool bar bar
this method initializes this
this method initializes j button nuevo
this method initializes j button graba
this method initializes j button buscar
this method initializes j button exit
this method initializes this
this method initializes this
this method initializes this
this method initializes j button ordenes
this method initializes j text field comitente
this method initializes j text field id comitente
this method initializes j button buscar
this method initializes this
this method initializes j content pane
this method initializes j panel resultado
this method initializes j panel botones
this method initializes j button aceptar
this method initializes this
this method initializes j button cancelar
this method initializes j jmenu bar
this method initializes j content pane
this method initializes j menu archivo
this method initializes j check box denominacion
this method initializes j menu operatoria
this method initializes j menu listados
this method initializes j menu ayuda
this method initializes j menu item salida
this method initializes j panel botones
this method initializes j menu item back up
this method initializes j check box documento
this method initializes j menu item importar
this method initializes j menu item exportar
agrega un cpd a la base de datos
obtiene un cpd en base a un id
this method initializes j menu item banco
this method initializes j menu item provincia
this method initializes j button buscar
this method initializes j menu item sgr
agrega un comitente a la base de datos
obtiene un comitente en base a un id
this method initializes j menu item cargo
this method initializes j menu item tipo liquidacion
this method initializes j button agregar
this method initializes j menu item orden compra
this method initializes j menu item orden venta
this method initializes j menu item plaza
this method initializes j button modificar
this method initializes j scroll pane seleccionados
this method initializes j menu item activar orden
this method initializes j menu item activar orden
this method initializes j menu item segmento
this method initializes this
this method initializes j button eliminar
this method initializes j jtool bar bar
this method initializes j button nuevo
this method initializes j button graba
this method initializes j button buscar
this method initializes j button delete
this method initializes j button update
this method initializes j button aceptar
this method initializes j text field cantidad
this method initializes j button cancelar
this method initializes j text field total
this method initializes this
this method initializes this
this method initializes this
this method initializes j text field id
this method initializes j button ok
this method initializes j button cancel
this method initializes this
this method initializes this
this method initializes this
feeds an arry of input values to the neurons in the layer
at startup create and show the main frame of the application
load the xml configuration file
start containers defined in xml file
register a factory for later use
instantiate register services defined
to be used in unique resource
bind an rmi service instance to rmi registry
retrieve a message in a properties file according to
load a resource bundle from disk
custom component registration
recursively check in a class implements a given interface
add an instance of component factory i to this container
retrieve a list of registered components for the given key
retrieve a list of all registered components
gives back a component when you stop using it
this should called from your implementation before the event will send
this should called from your implementation until the event has an error
this should called from your implementation before the processing ends
this should called from your implementation before the processing starts
this should called from your implementation before the processing has a
stops the current req res processing until a message will send to the
adds a member to a list of channels
removes a member from the handler
updates the time we display in the text views
returns the bundle name for this open cms package
returns the color
parse the size of the video from the string videoformat
returns the configuration string
returns the crop height
returns the crop left
returns the needed info for communicating back
returns the crop options
returns the album path
returns the crop top
returns the number of resources in this album
returns the crop width
returns the down scale param
returns the filter
returns the number of items per page to be used
returns the frame
returns the height
returns the current albums xml content
returns the image
returns the image path
returns the xml string value for the given path
returns the ori height
checks if the given image need to be down scaled
returns the ori width
checks if we need pagination
returns the quality
returns the render mode
returns the image scaler
returns the show title
returns the needed info for initializing the js image tool
returns the thumbnail resource
saves the modified xml content to vfs
returns the thumbnail path
returns the thumb param
returns the width
returns the zoom level
sets a new size for this thumbnail
tests if the given floats are equals with respect to the given threshold
returns the thumbnail information from the xml content value
sets the zoom with 2 decimal positions
overwrite run bare so it can behave differenctly on client and server side
get a reference to the test ejb local interface br
test that call the test ejb using its local interface and fail
set the test as succeded
a test that cant fail
a test that cant fail using helper classe
test that call the test ejb using its local interface
test that call the test ejb using its local interface
just to show test helper classes support
a very dummy test sum of 2 int
test that call that use an inner class
a test that return a message as string
play the test case
play a test case using a junit
play a test case using a junit
play a test case using a junit
adds a new term to the term list for this document
clears the term list for a new document
sets the category of the document
finds out wether a document is categorized in a particular category
creates a string representation for debugging purposes
test for void customizable stop word provider string
p implementation of
returns when the resource was last modified
p adds the result of super
p append a code hash code code for a code long code
p append a code hash code code for an code int code
p append a code hash code code for a code short code
p append a code hash code code for a code char code
p append a code hash code code for a code byte code
p appends to the code builder code the comparison of
p append a code hash code code for a code float code
p appends to the code builder code the comparison of
p append a code hash code code for a code boolean code
p append a code hash code code for an code object code array
p append a code hash code code for a code long code array
p append a code hash code code for an code int code array
p append a code hash code code for a code short code array
p append a code hash code code for a code char code array
p append a code hash code code for a code byte code array
p append a code hash code code for a code double code array
p append a code hash code code for a code float code array
p append a code hash code code for a code boolean code array
p return the computed code hash code code
allows transformations to be done to word
replaces entity references with spaces
p append a code hash code code for a code double code
a convenience method for
a convenience method for
returns a div element of class recipe and everything about the recipe
checks the password supplied against that stored for a user
returns a div element of class recipe containting everything about the recipe
testing and db generation
if locked none of the modifying operations will redraw the control
currently only height is calculated
adds the listener to the collection of listeners who will be notified
adds the listener to the collection of listeners who will be notified
sets the selection in the receivers text field to an empty selection
deselects the item at the given zero relative index in the receivers
deselects all selected items in the receivers list
gets the editable state
returns the number of items contained in the receivers list
returns the height of the area which would be used to display
returns a code point code whose x coordinate is the start of the
returns the zero relative index of the item which is currently selected
returns a string containing a copy of the contents of the receivers text
returns the height of the receiverss text field
returns the maximum number of characters that the receivers text field
removes the item from the receivers list at the given zero relative
removes the items from the receivers list which are between the given
searches the receivers list starting at the first item until an item is
removes all of the items from the receivers list and clear the contents
selects the item at the given zero relative index in the receivers list
sets the editable state
sets the receivers list to be the given array of items
sets the selection in the receivers text field to the range specified by
sets the contents of the receivers text field to the given string
sets the maximum number of characters that the receivers
sets the number of items that are visible in the drop
currently only height is calculated
this method initializes grp text decorator
this method initializes cmp filler1
this method initializes grp example
this method initializes cb idtop left
this method initializes cb idtop right
this method initializes cb idbottom left
this method initializes cb idbottom right
this method initializes cmp example
this method initializes cb task tag
provider to which this tag task belongs
task which triggers decoration
returns providers facade isolates clients from working with list of providers
provider to which this tag task belongs
this method initializes this
this method initializes sash form
this method initializes cmp navigator root
this method initializes cmp editor root
this method initializes grp example
this method initializes cmp filler2
this method initializes cmp filler1
returns the xml schema for a index structur
returns the xml schema for a package structur
returns the sql statement to create the object structur
returns the xml schema for a packagebody structur
returns the xml schema for a view structur
returns the xml schema for a type structur
returns the xml schema for a procedure structur
returns the xml schema for a tablespace structur
returns the xml schema for a sequence structur
returns the xml schema for a schema structur
returns the xml schema for a datafile structur
returns the sql statement to create the object structur
returns a list of database tables
returns the xml schema for a constraint structur
returns the xml schema for a database structur
returns a list of constraints names
returns the database name
returns a list of schema names
returns the database type
returns a list of database tables
returns the database type
returns the table column data values
returns the table column meta data names
returns the table column meta data values
returns the database type
rename an existing table
returns the sql statement to create the object structur
returns a list of constraints names
returns the table column data values
returns the xml schema for a function structur
insert values into table
returns the sql statement to create the object structur
sets attribute name which value will be compared
sets attribute names which values will be compared
compares two objects for order
retrives a value of an attribute
drop a table
set precision of type
set scale of type
create a table
set type of field
count all child
creates new db object
this is the entry point method
shows the respective svar model panel
initialize and show plot configuration
sets this dialog to a slightly simple version not displaying all
returns the error code in hexadecimal notation
resets the card reader
returns a list with card specific information
returns a list with card specific information
sets the leds status
selects a specific terminal from the terminal list or to activate the
returns a list of all terminals connected to the scard server
returns the state of the currently active reader
process bring to front
prepare hotkey mask
register hotkey with user notification
unregister hotkey with user notification
gets the image
change suggestion dialog visibility
sets the widget factory
sets the keyboard layout manager
sets the translation manager
show about dialog
sets the resource manager
sets the window manager
sets the application properties manager
transform xml to object
extracts element at current take position advances and signals
notify hotkey change listners
inserts the specified element at the tail of this queue waiting for
inserts the specified element at the tail of this queue waiting up to
atomically removes all of the elements from this queue
a convenience method that calls start waits timeout milliseconds and then calls stop
sends the discovery message via broadcast and starts the waiting for answers
stops waiting for answers and processes the already received answers
helper function creates root node
helper function to insert theme into image path
helper function to insert theme into image path
handles list of open node s
handles list of selected node s
this method of the interface takes an event
reset all proxy settings and use jvm or system settings
puts the appopriate value into the jdni environment
provides access to the jdni environment hashtable
the name of this role which is used as a domain key
the name of this group which is used as a domain key
tests for equality
tests for equality
tests for equality
encodes a string into a md5 hash
closes the jdbc connection being used
the class name of the jdbc driver to use
disconnect all domains allowing any
setter for property jdbc config
utility method to better encapsulate close logic error handeling
used to attempt to locate a user within this domain
utility method to better encapsulate close logic error handeling
method called before each testcase
method called after each testcase br
is this resource secured by urisecurity constraints so that
uses authenticator to send a login challenge to the client
utility method to better encapsulate close logic error handeling
is this urisecurity constraint applicable to the
sets a session variable with number of login attempts made
can the user of the specified request access the protected resource
is the user authorized to access the uri pointed to by this request
is the http method allowed to access the resource
is the http method allowed to access the resource
match the uri with the regex patterns
checks for the existance of a valid user principal object in the
retrieve the request uri without the leading string containing the context path
add the specified regular expression to match against uris
if the current servlet reuqest is already an instance of a
setter for property method to check
add a http method to the list of methods
setter for property password varname
setter for property url to check
setter for property token varname
setter for property username varname
destroy method for this filter
used to check access to a theoretical uri
allows clean reuse if servlet container supports it
setter for property login page
setter for property login error page
uses a request dispatcher to forward the user to a preconfigured login page
does the user principal have the correct username group or role
setter for property client digest
getter for property max login attempts
setter for property max login attempts
setter for property c nonce
setter for property realm name
todo implement this using the jakarta commons bean utils
disconnect all domains allowing any
does this credentials object match the username password
setter for property nc
setter for property default domain
does this credentials object match the username and hashed password
setter for property nonce
used via digest driver to set the constraints for uri access
sets the domain manager object which is responsible for
convience method to return development information
returns the name of the domain manager
does this credentials object match the username password
does this credentials object match the username and hashed password
calculates the server side portion of the digest
parses the client authentication header and puts relevant information
calculates the server side portion of the digest
lookup if found instantiate and return user principal object
setter for property match on
is the user a member of this domain
checks the user to see if the user matches the username criteria
checks the user to see if the user matches the domain name criteria
is the user a member of the specified group and in this domain
adds a constraint matcher to be used in verifying user names
adds a constraint matcher to be used in verifying domain names
adds a constraint matcher to be used in verifying role names
adds a constraint matcher to be used in verifying group names
convience method for adding a new constraint matcher to be matched against
note roles have little context outside of groups
note roles have little context outside of groups
setter for property jdbc config
setter for property user password col
setter for property join table
setter for property user username col
setter for property join user col
setter for property group table
setter for property role table
setter for property user table
setter for property join group col
setter for property group name col
setter for property join role col
setter for property role name col
output get detail table method
output get detail table method
method to find the sample attribute for the method invocation
method to find the
calculates a series total
called once by the creating tag
hack ar 2004
set the endpoint address for the specified port name
returns the current capacity of the buffer
appends code s code to the end of this char buffer
appends code sb code to the end of this char buffer
appends code data code to the end of this char buffer
appends a single character to the end of this char buffer
shrinks the capacity of the buffer to the current length if necessary
converts the contents of the buffer into a string buffer
converts the contents of the buffer into a string buffer
reads the next char from the input stream
returns the last read character again
reads all characters up to but not including the given character
skips char in the stream
returns the current line number in the input stream
skips all chars in the input until but excluding the given char
returns the next char in the stream without consuming it
returns the nof line read
decodes unicode escapes
sets the specified csv strategy
obtain the specified parser strategy
returns a short description of the servlet
greedy accepts n and r n
creates the navigator component
this item has been moved from one category to another
adds an item and sorts the list
factory method that allows derived classes to install their own handlers
factory method that allows derived classes to install their own handlers
calls hierarchy navigator
returns the items
factory method that allows derived classes to install their own handlers
returns the visible
returns the hier extension
sets the visible
returns the hierarchy item click handler
sets the dirty to true
simulates an item click for the hierarchy
returns the member extension
called when the user clicks on this item
removes the deleted items from the model
executes mdx and throws an error if something goes wrong
returns the axis selection
returns the slicer selection
sets the axis selection
sets the slicer selection
returns the olap model
returns the axis selection dirty
returns the slicer selection dirty
returns the slicer extension
sets the axis selection dirty
sets the slicer selection dirty
enforce limits of 0 255 for rgb values
validates the selection
removes deleted members from the selections
the collection of members that shall be deleted from the query
sets the hierarchy item click handler
the collection of members that shall be deleted from the query
returns a drill through table model for the drill through
finds the hierarchy item for code hier code
key title measures by dimension name
key title measures by dimension name
returns the set of dimensions that are currently on the
called after parsing column header of the drillthrough soap result
called after parsing each row data of the drillthrough soap result
called before parsing starts
called after parse is done
returns the n hier
returns the all member
returns the all member
returns the default member
returns the dim type
returns the dim unique name
returns the dim unique settings
returns the is dim shared
returns the is dim visible
returns the is read write
returns the is virtual
sets the all member
sets the mdx query
returns the caption as label
sets the default member
sets the dim type
get the mdx for the user to edit
sets the dim unique settings
returns the children cardinality
sets the is dim shared
sets the is dim visible
sets the members
returns the is data member
sets the axis ordinal
returns the axis ordinal
sets the is read write
sets the is virtual
set the mdx entered by the user
returns the is place holder member
sets the ordinal
sets the structure
add level for this hierarchy
returns the parent level
find out whether a member can be expanded
returns the is members gotten
lookup member by unique name
sets the is members gotten
first check whether the member is really drillable
returns the parent unique name
expand a member in a specific position
set the level
drill down is possible if code member code has children
get level number depth of member
swap axes in parsed query
handle hierarchy info tag
returns the unique name of hierarchy
sets the visible properties
return list of members trivial for xmla
handle celldata start of cell loop
get dimension of member
returns true if one of the members is a measure
sets the parent
get hierarchy of member
returns the is calculated
returns the unique settings
set paren and child level
sets the default hier
add hierarchy for this dimension
add a property
retrieve a property
label is the string to be externally displayed
any olap item contains a map of properties
wcf table component calls this method from its constructor
does a drill through retrieves data that makes up the selected cell
returns the custom rollup settings
find out whether a member is in the formulas
returns the hier unique name
returns the key sql column name
returns the name sql column name
create children fun call
returns the ordering property
returns the unique name sql column name
return a members dimension
sets the custom rollup settings
sets the db type
sets the hier
sets the key sql column name
return a fun calls argument of given index
sets the name sql column name
sets the ordering property
returns the child level
implementation of generate url that integrates with jpivot wcf framework
returns the parent level
sets the child level
sets the parent level
returns the p query
returns the query adapter
gets the default dashboard of the project
sets default dashboar for the project
return member for exp object
display member array for debugging purposes
generate an object for a list of members
create fun call
check an expression whether we can handle it expand collapse
returns datasource object from datasource name
returns datasource object from datasource name
sets first name of te user
event for rebuilding the tree table list after
traverses all its child nodes recursively
returns jdbc connection properties of specified analysis
returns jdbc connection properties
deletes user roles from table user roles
sets the parameters to the xml document
checks the particular user already exists or not
returns jdbc datasource
returns feeds datasource object
generates the context url stylesheet parameter
returns feeds datasource map
set provider from result of discover ds
return cloned object instance of simple pojo object
delete the selected datasource object
removes the selected dashboard item from the dashboard and
exports report to output stream in specified type
returns user specific localized string of specified resource id
returns user specific localized string of specified resource id
returns user specific localized string of specified resource id
event is fired when dashboard list is changed
converts given path to the project relative path
true if the current request was redirected to the index page
return temp jasper location to compile jrxml
returns rdbms report datasource mapped for given path
deletes the selected datasource using the
method to render the customize tab or not
check if the dashboard already has the selected analysis
adds the analysis to the active dashboard
remove the selected analysis from the active dashboard
calculate avg distance between pair of points in cluster
get the threshold distance value
set the threshold value
get number of clusters
set the number of clusters
get the level of the policy
set the level of the policy
check if the code contained in the source if security
run a class for a specific user
give the input to a program of specific use
get the output from a program of specific use
initialized on first call or this may do by hibernate
used to identify the name of the file or folder
initialize the jwnl api
puts a document to the directory
sets the specified context as the local context of this object
removes a element from the definitions and also from the directory
sampling uniformity is the sample rate consistent with no dropped
returns an element stored in the directory
sampling uniformity is the sample rate consistent with no dropped
adds a element to the definitions
returns the context global or local which is applicable to this object
create a unique id unique for this document with the specified prefix
returns the distance between p and the nearest point in this trace
sets the view tree parent to this view
sets the name
calculates the distance between the represented traces and the point p
returns true if the is a maximum value specified
calculates the center of gravity of the traces represented by this point
returns true if there is a minimum value specified
return parent of this element in the trace view tree
compairs position within the chronological order of the traces
returns a list of the names of all annotations possible in this item
returns the root of the trace view tree
returns the annotations specified by the name s
compares two tree events and returns 0 if the have
you can set the orientation
return the value of an xml attribute as string
sets the unit used to measure the values of this channel
returns the value as double which is specified as string
returns the ink source which is given by this context
true if this channel is an intermittent channel
returns true if the brush has erasing functionality
test if this brush has a color specified
returns the string representation of the color of this
specify that this channel is an intermittent channel
returns the center of gravity of all points
returns the icon of the item specified
returns the prefix for ids
returns the icon of the ink anno element specified
returns the brush responsible to draw this trace
returns the context which is currently active
sets this channel final
sets a context active
gets the current brush
returns the format which was used to read this trace from the archive
returns the definitions object of this document
return the format which is used to access the trace points
adds a new trace to this document
returns the format which is used to access the trace points
uri of a page providing detailed or additional specifications
uri of a page providing detailed or additional specifications
returns the bounding box of the document taking every trace into account
test if the
returns the key of this element
returns the timspan this document is covering
set the to property
set the from property
returns the index of the specified channel to access to data
adds a trace view element to this trace view container
sets the unique document id of this document
turns the specified datapoint into the object which it acctualy represent
creates a child container of this object which will contain all view
returns the id generated from
removes this view and all its children from the view tree
change the x coordinate to x
change the y coordinate to y
turns the object into a double according to the channel specified by name
removes this view from the view tree
angle between two vectors the value is between pi and pi
calculates the distance between two segments
completely removes this view and all its children from the view tree
sets this trace trace format final
returns the number of elements contained by this object
returns the config class which is populated with the command line options
starts the funktionality of this class
method called to reload the backup
adds all elements of the array to the end of the list
return index of maximal value of list
return maximal value of list
return index of maximal value of list
return maximal value of list
returns the sum of all values
returns the mean of all values in the list
this method initializes this
this method initializes j list
return true if no ink trace view is contained
warns the user using the message sinks
retransforms the points from the source
transforms the source points to the target points with the
returns the index of the point within this trace
sets the value of the channel name to the current point
proceed to the next point
accepts an anonymous class implementing a
set the player whos turn it is to make a move
advance to the next player
get the piece located at the specified coordinates
checks whether or not the specified location has a living piece in it
get the height and width of the board
get the players color
this method checks if values have been changed or not
closes the dialog
returns a string representation of this code line layout code object
closes the dialog
compares this and o
compares this and d
this method initializes filter combo
calls update headers
returns the pgpprovider impl
sets the pgpprovider impl
returns the content type given in the constructor
encrypts a mime body part
checks the signature on a mime part
checks the signature on a body part
returns the encryption utils that created this key
returns the type s mime pgp of this key
returns a key store provider
returns the display information for this key
returns a key store provider
returns a key store provider
returns the encryption status of this mime message
returns the test manager for this class
sets up this test
returns the string representation for this test case
this method must be called if not the first message will be generated
returns the public key alias to be used in this test
returns the encryption key store that were using
sets up this test
creates the keystores
gets the x509 certificate for this key
sets the x509 certificate for this key
sets the certificate chain for this key
gets the private key for this key
returns the string representation for this test case
sets the private key for this key
returns the public key alias to be used in this test
returns the private key alias to be used in this test
returns the encryption utils that created this key
sets up this test
returns the type s mime pgp of this key
returns the display information for this key
sets the display information for this key
returns a key store provider
returns a key store provider
checks the signature on a message
returns the key bundle associated with this encryption key
returns the passphrase for the key bundle
returns the encryption utils that created this key
returns the display information for this key
returns the public key alias to be used in this test
returns the private key alias to be used in this test
sets up this test
creates an empty encryption key manager thats appropriate for this
creates and loads an encryption key manager thats appropriate for this
returns the actual alias
returns a string representation of this alias
rounds off a number for const
calculates the percentage of requests that were answerd in accordance
calculates the percentage of requests that were answerd in accordance
insert a new parameter into the database
delete a detached parameter from the database
updates the state of a detached parameter
insert a new org into the database
delete a detached org from the database
updates the state of a detached org
insert a new parameter into the database
delete a detached parameter from the database
updates the state of a detached parameter
insert a new parameter into the database
delete a detached parameter from the database
updates the state of a detached parameter
return if this controller is controlled by a human or ai
return if this controller is controlled by a human or ai
set the pawn being controlled
get the pawn being controlled
return the requested direction
request a move change
starts the gameloop
restart the pawn in its orignal state
the main loop
remove the element from the game on a reset
return true if the pawn is human controlled
add a tickable element to the list
return the x cell coordinate
register the bonus view
remove a tickable element
return the y cell coordinate
add a new game elements
return the collision radius
remove an element from the game
return true when the maze has been cleared from pills
set the bonus type for the given level
set the current controller
return all registered game elements
return the image to use for the bonus
ponder about what to do
add a new human player
return the image to use for the pacman in its current state
remove a human player
return the image to use for the pacman in its current state
load all the images
return a human controller
return true if the ai is smart chases pacman
return the number of players
called when the pawn hits a wall
fetch a cached result returns null when no cache entry was available
dirty hack to filter duplicate enter cell events caused by left and up
clear the cache for the target object
called when a new cell is completely entered
sets the number of ghosts for the next game played
return a player start point
start a new game
return a ghost foe starting point
touching this game element
print a reporting line
set the pawns speed
print a reporting line using a string
return the x offset within the current cell
create the used view classes
return the y offset within the current ceel
register a view for a class
unregister a view
get the view instance to render the given game elements
the endline method for the inputfilters
the endline method for the outputfilters
configures the given shell in preparation for opening this window in it
start thread and fetch data from the stream
add a resource with a key
fetch a resource with a key
gets the name of the action
sets the name of this action
performs the check
performs the checks sends the check to both input and outputfilters
run methods called by master
standard entry calls perform check and checks on a fatal error
checks wheter a condtionname exists in the parent filtermodule
reads a serialized object from the given file
returns an iterator that contains links to all the objects
adds an object to the data store given the object
removes an object given the id
removes an object given the id
adds the result of a comparison to the map
check whether an object has been compared before
checks if the given object is contained in the datastore
returns the object given the id
adds filteraction to the map
adds a conflct pattern to the specified resource
returns the conflict definition of the specified resource
sets the behavior that triggered is action an accept or a reject
gets the type of action
returns all types declared in a source
get a superimposed condition through its name
get a superimposed method through its name
get a superimposed filter module through its name
this interprets the selectors and attaches a list with concern references that
get a vector with all the alternative superimpositions of filtermodules
get a vector with all the alternative superimpositions of methods perhaps just
get a vector with all the alternative superimpositions of conditions perhaps
method name set
this list contains the concern designated by the classname concernname only
this list contains the concern designated by the classname concernname and
sel expression list
helper method move selector between lists
interprets the selector definition and attaches a vector of concern references
raise exception should not be invoked on this element
raise exception should not be invoked on this element
should be a reference
raise exception should not be invoked on this element
raise exception should not be invoked on this element
inclusion or exclusion
returns true if concern is possible declared in a sourcefile
returns true if concern is possible declared in one of the source files
sets the line this token is found at
sets the position in the line this token is found
gets the position in a line that is this token is found at
does the actual resolving
tries to resolve all concern references
function called by master
tries to resolve all labeled concern references
tries to resolve all filter module references
compares the sigantures methods of two methods to see if they match
consumes a character from the input
going to a new line so increase the column count
make a new special token containing positioning information
needed for char scanner
add a new type to the map
retrieve a type from the map
fetch the data retrieved from the stream
adds a concern object to the repository
start thread and fetch data from the stream
loads the properties from the given filename
stores the properties in the file
stores the properties in the given filename
adds parameters to a concern
adds a filter module object to the repository
adds a method object to the repository
adds the returntype to a method object
adds parameters to a method
adds an input filter to the repository
adds parameters to an input or outputfilter
adds an and object can be present in an filter element
adds an or object can be present in an filter element
adds an not object
adds a filter operator type i
adds a filter comp oper the character separating each filter
adds a matching part
adds a matching type
adds a substitution part
add a new type to the map
retrieve a type from the map
adds a selector object to a matching or substitution part
adds an output filter to the repository
creates a selector definition
creates a new condition binding i
creates a new method binding i
creates a new filter module binding
adds a filtermodule to the current binding
adds an assembly as implementationpart
adds a sourcefile as implementationpart
adds embedded sourcecode as implementationpart
creates a reference to a labeled concern
creates a reference to a labeled concern
creates a reference to a filter module element reference
creates a new reference to a condition will be resolved in rexref
creates a new reference to a method will be resolved in rexref
creates a new reference to an intenal will be resolved in rexref
finishes up the builder misc
relay tb list
relay tb list
the method code suites to args code check if the types
the method code get qequivalent code returns the non primitive
the method code select accessibility manipulator code
the method code call code invoke the method
the method code get value code give the value of the selected field
the method code find methods code create an array
the method code set value code set the selected field to the given
the method code select constructor code search for the first
a simple method which do anything
a simple method which calls do that x
a simple method which do anything
the method code call field asserts code iterate through the definied
logs string to output location in xml format
this method is incomplete
removes any empty xml thats left saving space for final save
append to the given string buffer an escaped version of the given text
append the time and date in iso 8601 format java
append a two digit number
registers required key strokes
gets the code file row data code that corresponds to the file
gets the index of the cursor selected item
sets the line at cursor selected line
gets the file which is currently selected
checks whether the currently selected file is the parent of currently viewed
displays the given directory
returns an initiliazed instance of form component
called to signal the midlet to terminate
the visual design2 constructor
returns an initiliazed instance of form component
returns an initiliazed instance of form certificate component
returns an initiliazed instance of ok command component
returns an initiliazed instance of string item subject component
returns an initiliazed instance of text field iterations component
returns an initiliazed instance of string item issuer component
returns an initiliazed instance of form component
returns an initiliazed instance of choice group component
returns an initiliazed instance of string item not before component
returns an initiliazed instance of dump file command component
returns an initiliazed instance of string item not after component
returns an initiliazed instance of screen command component
returns an initiliazed instance of item command details component
returns an initiliazed instance of text field iterations component
returns an initiliazed instance of back command component
returns an initiliazed instance of choice group component
returns an initiliazed instance of choice group chain component
returns an initiliazed instance of back command1 component
returns an initiliazed instance of string item cert version component
returns an initiliazed instance of string item cert serial component
returns an initiliazed instance of string item cert algorithm component
returns an initiliazed instance of string item cert issuer component
returns an initiliazed instance of string item cert not before component
returns an initiliazed instance of string item cert not after component
returns an initiliazed instance of string item cert subject component
returns an initiliazed instance of string item cert cert alg component
returns an initiliazed instance of string item cert cert signature component
returns an initiliazed instance of string item public key component
returns an initiliazed instance of string item public key alg component
returns an initiliazed instance of form data component
returns an initiliazed instance of string item data component
returns an initiliazed instance of back command2 component
returns an initiliazed instance of reader form component
returns an initiliazed instance of string item reader instructions component
returns an initiliazed instance of item simulate command component
returns an initiliazed instance of item simulate write command component
returns an initiliazed instance of item command read component
returns an initiliazed instance of item command write component
returns an initiliazed instance of back command reader component
returns an initiliazed instance of back command1 component
returns an initiliazed instance of ok command edit component
returns an initiliazed instance of text field component
returns an initiliazed instance of back command writer component
returns an initiliazed instance of writer form component
returns an initiliazed instance of string item1 component
returns an initiliazed instance of cancel command writer component
returns an initiliazed instance of spacer component
returns an initiliazed instance of edit signature uri component
returns an initiliazed instance of ok command component
returns an initiliazed instance of back command component
returns an initiliazed instance of text field signature uri component
returns an initiliazed instance of item command component
returns an initiliazed instance of ok command1 component
returns an initiliazed instance of back command2 component
returns an initiliazed instance of edit chain uri component
returns an initiliazed instance of text field chain uri component
returns an initiliazed instance of choice group certificate component
returns an initiliazed instance of item command show component
returns an initiliazed instance of back command3 component
called to signal the midlet to terminate
apply lyrics to a voice in the score context
a staff group contains no data but in the score context notes which
listen for the start of a line
listen for the ending of a line
generate lilypond commands to start a line
generate lilypond commands to terminate a line
generate a factor that all tuplets will divide into evenly by multiplying
set the start tick of each object found in a bar
add a new articulation
prompt for message and send it
respond to commands including exit
test the clear stack iterator
returns an iterator over the elements of the clear stack
returns the column number that should be sorted by default
this method changes only the currency performance
returns the main jtabbed pane
returns if there is any clipboard content
sets a new clipboard content
closes and saves the current opened member file if there is any and
reloads the status bar by setting the current users name in it
sets a new status in this window an in all its menus
reloads the current status by setting it once again
returns the current available popup menus in the main jtabbed pane
saves the current member file if there is one opened
returns if a image exists
returns the fees
sets new fees
sets a new file name
sets new shipping locations
returns the additional fees
sets new additional fees
returns if there is a shipping location in the shipping locations that is
override to use
updates the version information by a simple properties file
returns true if the update channel supports update information
returns the url where to post the error information to
returns the url that is the main url of this distribution
if some fees are null the currency maybe wrong
override to use
override to use
sets a new tool bar in the header
creates and answers the header panel that consists of
show the dialog when add new place
show the dialog when edit an place
returns the child of this node with maximum frequency
starts the machine from the initial state and reads all characters from reader
appends a new character to this buffer
groups the previously appended characters forming a new word
returns a matcher that matches any character not matched by this matcher
returns a matcher that matches any character matched by both this matcher
returns a matcher that matches any character matched by either this matcher
for use by implementors sets the bit corresponding to each character 0
returns the index of the first matching character in a character sequence
returns the index of the first matching character in a character sequence
returns the index of the last matching character in a character sequence
returns the number of matching characters found in a character sequence
returns a string containing all non matching characters of a character
returns a string containing all matching characters of a character
returns a string copy of the input character sequence with each character
returns a string copy of the input character sequence with each character
returns a substring of the input character sequence that omits all
returns a substring of the input character sequence that omits all
returns a substring of the input character sequence that omits all
returns a string copy of the input character sequence with each group of
collapses groups of matching characters exactly as
adds a parameter to this command
get the series bound color
get the series graph style
gets the 1st number of the password
returns a panel password utilzed in verification of user input panel password
sets the 1st number of the password
sets the param as the panel password
gets the 2nd number of the password
sets the 2nd number of the password
returns web id
gets the 3rd number of the password
sets the param as the web id
sets the 3rd number of the password
gets the 4th number of the password
sets the 4th number of the password
sets the param as the web password
gets the position of where the next entered number should go
returns a emergency phone number
sets the position of where the next entered number should go
sets params as the emergency phone number
compares control panel password objects to see if they are the same
paints this component
gets the selected security zone
gets zone id to activate
sets zone id to activate
sets the selected security zone
add the camera to server and set value of camera password to 0000
gets the current state of the safe home system
remove a camera from the server
pan right a camera which is selected by the id
pan left a camera which is selected by the id
sets the new current state of the safe home state
zoom in a camera which is selected by the id
zoom out a camera which is selected by the id
set the password of a camera
determine if safe home is on not in standby or not in standby
get the password of a camera
determine if safe home is idle
determine if safe home is monitoring
determine if safe home is in emergency mode
determine if safe home is in alarm mode
turn on safe home
turn off safe home
reset safe home activated zone is set to 1
disarm safe home
arm safe home
put safe home in panic mode immediately arms safe home
delays getting updates for the device monitor by 1 second
completes the action of turning off after the password is validated
completes the action of reseting after the password is validated
get the password of camera
set the password of camera
this function is the action listener call back function of three buttons
completes the action of setting away after the password is validated
completes the action of setting stay after the password is validated
completes the action of panic after the password is validated
returns true after every n max 1 invocations
initializes a list box object and adds softkeys
switch into the folder named by folder name
makes current screen active
check if a the indexed columns of a row probably have changed
the target tag and its super tags all should have an id
database path prefix name
click page path
return null if the user is not authorized to edit the fragment
exception thrown when invalid root node is given
set the package name for the entity classes being generated
set the package name for the api classes being generated
set the root directory of the java source files in your project
set the name of the property file which holds configutation data for
set the path for the web
sets the java version of the source files to be generated
public boolean unlearn spell int spell id int level boolean save
returns the use recursion property of this code options code object
ensures that a jsp comments are parsed correctly as preformatted text objects
sets the use recursion property of this code options code object
adds a directory to the list of input directories
converts the directories held by this code options code object into
see the field documentation for check only
see the field documentation for check only
test to make sure important spacing around elements is preserved
compares the given code jsp comment code with this
returns this code jsp directive code all on one line regardless of formatting
compares the given code jsp comment code with this code jsp comment code
by default return null indicating that there is no logical break that
returns true if the code that this code java code code object
ensures consecutive jsp comments are output on different lines
ensures that jsp directives can be formatted correctly
ensures that string utils
called when processing of a new file begins
called when processing of a file ends so messages should not appear to
ensures that string utils
output the filename we are currently working on if we are actually
ensures that string utils
ensures that string utils
ensures that string utils
ensures that string utils
a convenience method to fail the test case if the given input
search backwards through all code iformattable code objects in this
a convenience method to return the hash code of a primitive boolean type
convenience method to get a raw portlet url
convenience method to get a raw portlet url
implementacao do servico
implementacao da interface
sets the id value for this object ref
sets the project id value for this project version data
sets the date order value for this project version data
sets the size value for this attachment data
sets the released value for this project version data
sets the date submitted value for this attachment data
sets the download url value for this attachment data
sets the status value for this project data
sets the type value for this relationship data
set the endpoint address for the specified port name
sets the target id value for this relationship data
sets the field value for this custom field definition data
sets the owner value for this filter data
sets the view state value for this project data
sets the type value for this custom field definition data
sets the access min value for this project data
sets the possible values value for this custom field definition data
sets the filter string value for this filter data
sets the subprojects value for this project data
sets the reporter value for this issue note data
sets the valid regexp value for this custom field definition data
sets the view state value for this issue header data
sets the access level r value for this custom field definition data
sets the access level rw value for this custom field definition data
sets the project value for this issue header data
sets the length min value for this custom field definition data
sets the length max value for this custom field definition data
sets the priority value for this issue header data
sets the advanced value for this custom field definition data
sets the severity value for this issue header data
sets the display report value for this custom field definition data
sets the status value for this issue header data
sets the display update value for this custom field definition data
sets the reporter value for this issue header data
sets the display resolved value for this custom field definition data
sets the handler value for this issue header data
sets the display closed value for this custom field definition data
sets the resolution value for this issue header data
sets the require report value for this custom field definition data
sets the attachments count value for this issue header data
sets the require update value for this custom field definition data
sets the notes count value for this issue header data
sets the require resolved value for this custom field definition data
sets the require closed value for this custom field definition data
montar view state
sets the project value for this issue data
sets the priority value for this issue data
sets the severity value for this issue data
sets the os build value for this issue data
sets the reproducibility value for this issue data
sets the sponsorship total value for this issue data
sets the handler value for this issue data
sets the projection value for this issue data
sets the eta value for this issue data
sets the resolution value for this issue data
sets the fixed in version value for this issue data
sets the steps to reproduce value for this issue data
sets the additional information value for this issue data
sets the attachments value for this issue data
sets the relationships value for this issue data
sets the notes value for this issue data
sets the custom fields value for this issue data
the method retrieves jndi naming context using populated server instance
this method wires all dao classes with local entity manager so the latter
returns a value for a property
the start method is called when the wrapper manager is signaled by the
returns a subcontext based on the current context
generates a id for the file
sends a notofication email to the configured receiver
called when the application is shutting down
sends a notofication email to the specified receiver
called whenever the native wrapper code traps a system control signal
set the current parent of the node
add a child to the current parent set by calling set current parent
restores the previous parent
saves organizations to an xml file
invoked by the page to indicate the researcher name inputted
invoked by the page to indicate the researcher name inputted
invoked by the page to indicate the researcher name inputted
invoked by the page to indicate the researcher name inputted
invoked by the page to indicate the collaboration name inputted
invoked by the page to indicate the researcher name inputted
invoked by the page to indicate the organization name inputted
gets the name of the researcher that was found
invoked by the page to indicate the collaboration name inputted
gets the organization of the researcher that was found
invoked by the page to indicate the organization name inputted
gets the email of the researcher that was found
invoked by the page to indicate the collaboration name inputted
gets the picture link of the researcher that was found
invoked by the page to indicate the organization name inputted
gets the bio statement of the researcher that was found
invoked by the page to indicate the collaboration name inputted
invoked by the page to indicate the organization name inputted
invoked by the page to indicate the researcher being searched for
invoked by the page to indicate the collaboration name inputted
invoked by the page to indicate the organization name inputted
invoked by the page to indicate the collaboration name inputted
invoked by the page to indicate the organization being searched for
invoked by the page to indicate the organization name inputted
gets the name of the collaboration that was found
invoked by the page to indicate the collaboration being searched for
invoked by the page to indicate the organization name inputted
gets the type of the collaboration that was found
invoked by the page to indicate the organization name inputted
gets the contact of the collaboration that was found
a handler that performs an action when the login button is pressed
gets the affiliated of the collaboration that was found
a handler that performs an action when the add type button is pressed
gets the type of the organization that was found
gets the country of the collaboration that was found
gets the contact of the organization that was found
gets the keyword of the collaboration that was found
gets the affiliated of the organization that was found
gets the organization of the researcher that was found
gets the country of the organization that was found
gets the email of the researcher that was found
gets the keyword of the organization that was found
gets the description of the organization that was found
gets the picture link of the researcher that was found
gets the home page of the organization that was found
gets the bio statement of the researcher that was found
gets the contact person of the organization that was found
gets the affiliated researchers of the organization that was found
gets the country of the organization that was found
gets the research keywords of the organization that was found
gets the description of the organization that was found
gets the homepage of the organization that was found
gets the collaborating organizations of the collaboration that was found
gets the years of the collaboration that was found
gets the outcomes of the collaboration that was found
gets the description of the collaboration that was found
adds a unique id to the set of unique ids that already exist
a handler that performs an action when the researcher button is pressed
a handler that performs an action when the organization button is pressed
a handler that performs an action when the collaboration button is pressed
a handler that performs an action when the search button in view researcher
a handler that performs an action when the search button in view collaboration
stores the value on harddisk
returns the field in view mode
returns the field in view mode
code sort code sorts the resultlist before the truncating in
copies a binding set to a entry row for displaying them
code register page code should be called from the init method
initializes the list and retrieves the data
creates and inits an instance of a special page
retrieves the label of a special page config registered in this registry
implement couples one interface baseclass with an implementation for all dependency injected classes
returns the comment that is used for the later created element
icon for service provider
name of service provider appears in right click for remove service
reset the value inputed by the user
return a textual representation of this string
reset the value inputed by the user
it returns a textual representation of this instance
closes servlet and cleans up connection
exec the command on the local system
this function has to be called to initialized the connection to the db
return true if the connection with the db is valid
close the connection with the db
return a textual representatiion of this string
parse a flags type and return the corresponding arg flag
reset the value inputed by the user
return true if a file has been uploaded
it returns a textual representation of this instance
textual representation of this object
it tells you if the current instance of the app metadata supports
it returns the number of untagged parameters present in the data structure
it returns the arg flag that has the id equals to id
it returns the arg param that has the id equals to id
returns a textual representation of this arg flag
utility method to check of the job executed correctly
initialization method that is automatically invoked on startup
initialization method that is automatically invoked on startup
return true if the connection with the db is valid
this function returns the number of running jobs for the specified service
this function returns true if the input string version number
returns a copy of the job id
return if the job is held
return if the job is idle
return if the job is removed
return if the job is completed
sets a handler that will be called on failure
sets a handler that will be called on success
sets a handler that will be called on a specified event
blocks until all the node in the cluster to finish
returns a string that describes the content of this cluster briefly
returns a string that describes the content of this cluster
sends a reschedule signal to make rescheduling process happens
removes a job
removes jobs in a cluster
sets logfile name and monitor interval
submits a job description to the condor and returns a cluster of job
adds queue times line to the submit file
logs uploaded file info
it tells you if the current instance of the app metadata
this function set the private url which is the url used
this function set the pubblic url used to create the service
terminates this thread so tomcat can shut down properly
method to access the tomcat base url from other classes
get the next id
retrieves the restaurant identifier
protected method to set the restaurant identifier
defines the maximum string length used in validation
retrieves a reference to the restaurant service implementation object
determine a unique identifier for a restaurant data object
set the first name
set the username
set the last name
set the password
returns the username validated by the code validate code method through
returns the password validated by the code validate code method through
set the old password
indexed getter for property parameter
retrieves a reference to the locator service implementation object
set the new password
all the ratings that have been validated
set the confirmed new password
get the confirmed new password
returns an ordered list of code restaurant data code objects
determines the highest rated restaurant in the current set removes it
defines the maximum string length used in validation
retrieves a reference to the person restaurant rating service implementation object
retrieves the ratings identifier
retrieves the restaurant history identifier
protected method to set the ratings identifier
protected method to set the restaurant history identifier
retrieves a reference to the restaurant history service implementation object
retrieves the name of the external event which this transition
no guard conditions for this transition
retrieves the unique state name
build the code transition list code of code transition code s available
retrieves the users first name
sets the users first name
retrieves the name of the external event which this transition
retrieves the unique state name
retrieves the users last name
sets the users last name
retrieves the unique state name
build the code transition list code of code transition code s available
retrieves the name of the external event which this transition
retrieves the unique state name
build the code transition list code of code transition code s available
retrieves the name of the external event which this transition
retrieves the name of the external event which this transition
retrieves the unique state name
retrieves the name of the external event which this transition
retrieves the name of the external event which this transition
retrieves the name of the external event which this transition
retrieves the name of the external event which this transition
retrieves the name of the external event which this transition
defines the maximum string length used in validation
defines the maximum string length used in validation
retrieves a reference to the person service implementation object
defines the maximum string length used in validation
defines the maximum string length used in validation
defines the maximum string length used in validation
retrieves a reference to the location service implementation object
defines the maximum string length used in validation
process the next row of the sql query
returns whether the result is the unset error value
process the next row of the sql query
number of rows in the cache
sets the number of rows affected by the sql
process the next row of the sql query
each time through the result set add one to the count of rows
gets the number of rows processed
print the contents of the buffer to the output stream
this method executes a query that could be select insert
if this method is called at any time the transaction will rollback
use this method to bound multiple database operations which need
knows if the current or just executed transaction is marked for rollback
if this method is called at any time the transaction will rollback
knows if the current or just executed transaction is marked for rollback
used to get the thread singleton instance
extends the base class database manager by adding rollback
override the base implementation of this method to add transactional behaviour
executes a sql select insert update or delete statement containing
override the base implementation of this method to add transactional behaviour
create a code database manager code for data access
create a code transactional database manager code for data access
the add method can also be used as follows
parse a string containing multiple statements and add to the list
add another string statement to the query
add the contents of a batch query to this one
add a table to the select statement
get a reference to the where clause
set the where clause
returns a string object representing this batch query
returns the package within which this interface is defined
returns whether the method is part of an interface or not
returns the name of this interface
returns a list of interfaces that this interface i extends i
set whether the method is part of an interface or not
add an interface that this interface i extends i
attempts to establish a connection to the database
add an interface that this interface i extends i
add a list of interfaces that this interface i extends i
releases the jdbc resources
set the comment
returns whether the definition has a comment or not
returns the access control modifier
returns that this class is an interface definition
set the access control modifier
returns a string containing the java source representation of the definition
set whether the method is i abstract i or not
returns whether the type has a package specified or not
returns the types package name
returns the types name
returns true if this data type is equal to another object
set the list of superinterfaces that the interface i extends i
returns true if the receiver represents i public i access
returns true if the receiver represents i protected i access
returns a string object representing this java type
set whether the method is i final i or not
returns true if the receiver represents i package i access
parse out the package and type names from a fully qualified type string
returns true if the receiver represents i private i access
returns true if this access modifier is equal to another object
returns a hash code value for this java access modifier
returns a string object representing this java access modifier
set the access control modifier
set whether the method is i static i or not
opening braces will now appear on a line by themselves
opening braces will now appear at the end of the current line
increment the current indentation level
increment the current indentation level by code count code levels
set whether the method is i synchronized i or not
decrement the current indentation level
decrement the current indentation level by code count code levels
append code obj code to the buffer
append code text code to the buffer
returns whether the method is i native i or not
append code obj code to the buffer
append code text code to the buffer
append code obj code to the buffer
returns the identifiers underlying type object
set whether the field is i transient i or not
append code text code to the buffer
returns a string object representing the identifiers type
set whether the method is i native i or not
returns a string object representing the identifiers type
returns whether the identifier has a package name or not
increment the current indentation level and then append code obj code
returns the identifiers package name
returns the identifiers type name
increment the current indentation level and then append code text code
returns whether the identifier is an array or not
returns whether the field is i volatile i or not
returns the methods identifier
increment the current indentation level and then append code obj code
increment the current indentation level and then append code text code
returns a string object representing this java identifier
decrement the current indentation level and then append code obj code
set how many dimensions the array has assuming the identifier is an array
set whether the field is i volatile i or not
decrement the current indentation level and then append code text code
returns the methods return type package name
decrement the current indentation level and then append code obj code
decrement the current indentation level and then append code text code
append the representation of a tab directly to the buffer
returns the fields identifier
returns the methods return type
append an appropriate number of tabs for the current indent level
append code count code tabs directly to the buffer
append the representation of a newline directly to the buffer
returns the fields package name
append code count code newlines directly to the buffer
returns the methods name
append the representation of a space directly to the buffer
append code count code spaces directly to the buffer
start a code block
returns the fields type
append code obj code to the buffer and start a block
start a code block
end a code block
returns the name of the class that this class i extends i
start a multi line comment block
returns whether the field is an array or not
returns that this class is a class definition
end a multi line comment block
returns how many dimensions the array has assuming the field is an array
append the line contained in code comment text code
set whether fully qualified class names are used in import statements
returns whether the object needs i strictfp i or not
set whether the object needs i strictfp i or not
returns whether the function has parameters or not
set the copyright comment for the source file
returns the java type that represents the object
returns a list of interfaces implemented by the object
add an interface that is implemented by the object
set the fields initializer
add an i import i directive for the source file
add an interface that is implemented by the object
add a formal parameter that is passed to the function
add a list of interfaces that are implemented by the object
add an i import i directive for the source file
returns whether or not this object defines a class or not
returns whether or not this object defines an interface or not
add a list of i import i directives for the source file
add a formal parameter that is passed to the function
returns a list of potential import types for the object
set the class comment for the source file
set the list of interfaces that are implemented by the object
returns whether a getter method should be generated to access the field
add a list of formal parameters that are passed to the function
set the class or interface definition for the class file
returns whether the function has exceptions or not
add a class or instance variable field to the source file
add a list of class or instance variables fields to the source file
add a constructor method definition to the source file
add an exception that is thrown by the function
set whether a getter method should be generated to access the field
gets a code context code based on the code url code specified
add a list of constructor methods to the source file
add an exception that is thrown by the function
returns a reference to the code base services code implementation
get the base services implementation class to use from the property
add a method definition to the source file
create an instance from the code class code
add a list of exceptions that are thrown by the function
gets a code context code based on the code url code specified
add a list of methods to the source file
returns the statements defining the body of the function
gets a code context code
returns whether a setter method should be generated to access the field
set the list of formal parameters that are passed to the function
generate the java source representation of the source file
set the list of exceptions that are thrown by the function
reset the state of the component
reset the cached value of the widget
perform a set of tasks to prepare the source file for generation
gets the bean that we are monitoring
gets whether or not the state of the component has changed
set whether a setter method should be generated to access the field
reset the state of the component
reset the cached value of the widget
gather additional imports from the various parts of the source file
start monitoring the text field
returns a list of potential import types for the function
start monitoring the combo box field
reset the widget values from the cached values
write the copyright comments to the given
reset the widget values from the cached values
gets whether or not the state of the bean has changed
given a container size resolve the left edge of a component
reset the cached value for the given bean
gets the monitor for a given object
given a container size resolve the top edge of a component
get the list of bean monitors
returns the access control modifier for the getter
given a component size figure out the appropriate horizontal offset
adds the specified component with the specified name to the layout
given a component size figure out the appropriate vertical offset
return the constraint that is associated with the given
write the i package i statement to the given
given the size of a component return the smallest size
lays out the container in the specified panel
given a container size resolve the bottom edge of a component
given a container size resolve the right edge of a component
returns the access control modifier for the setter
given the size of a component return the smallest size
this method was created by a smart guide
write the import directives to the given
this method was created by a smart guide
removes the specified component from the layout
populate the resource manager with the required resources for the project
add a component and a corresponding constraint to
listener callback method
this method was created by a smart guide
cause the application to terminate
get the icon that is displayed in the window titlebar
write the java source representation of the field to the
get the title of the application from the resource manager
initialize the japplication
this method was created by a smart guide
initialize the panels
write the class comments to the given
find the top level frame and set its title
add an action to the command manager
write the class or interface definition to the given
returns a string containing the java source representation of the getter
disable an action in the command manager
listener callback from the tabbed panel
enable an action in the command manager
listener callback from the tabbed panel
write the class or instance variable field definitions to the given
command mgr accessor
initialize the panels
gets the menubar for the application
get a named popup menu from the command manager
write the constructor method definitions to the given
resource mgr accessor
answer the string displayed in the window title bar
write the setter and getter method definitions to the given
gets the toolbar for the application
initialize the buttons to be enable disable buttons when the interface comes up
write the method definitions to the given
create an instance of the command manager
initialize the contents of the panel
create an instance of the resource manager
write the end of class string to the given
set the wait cursor
returns a string containing the java source representation of the setter
set the wait cursor
find the top level frame and set its title
listener callback method
overridden to re connect focus listeners to the button if
overridden to hook in our key selection manager that can handle
add a combo box field
returns a list of potential import types for the field
reset attributes for next use
once all attributes are set use this to show the dialog
hide the dialog typically used after processing is complete
set help text html allowed
make sure the component is visible if in a scroll pane
accessor for url base
mutator for url base
reset attributes for next use
set help text using a url html allowed
did the user request a cancellation
set first of two message lines on progress dialog
set second of two message lines on progress dialog
add a combo box field
set the maximum number of steps in the progress
increment the progress bar for x number of tasks
update the progress bar set the value of the displayed percentage
display an error to the user
this method was created by a smart guide
called when the child node is selected
this new value will be applied to fresh text entered and
display an error to the user
this new value will be applied to fresh text entered and
display an confirmation dialog to the user
display an confirmation dialog to the user
display a warning to the user
display a warning to the user
display an informational message to the user
initialize the content panel
create an instance of the resource manager
display an informational message to the user
display an informational message to the user
gets the icon to use in the splash screen
set the integer padding
set the label to use to display the status
update the status string to the one passed in
set the product name to display
set the product version to display
get the string value for the key passed in
set the fraction padding
add a new resource to the pool
add a new resource to the pool
initialize the japplication
initialize the panels
set the content panel for the japplication shell
add a row to the table for each of the given objects
add a row to the table for the given object
remove a row from the table for the given object
add the columns
rebuild columns with new properties and headings
this method uses the decimal format
remove all of the objects from the table
get the object for the given row index
set the objects that represent rows in the table
set the objects that represent rows in the table
add another object to the table
sets the selected object in the table
remove an object from the table
get the index of the object
gets the index of the object
get the objects in the table
add another object row
refresh the data in the table rows
get the object for the given row index
refresh the row data for the given object
rebuild columns with new properties and headings
get the data for an object
remove all rows from the table
refresh all the data in the table rows
returns the selection mode
sets the selection mode
refresh the row data for the given object
gets a copy of all the objects in the table
get the data for an object
jtable uses this method to determine the default renderer
enable and disable sorting
refresh the row data for the given object
indicates if the object table is to display objects in a sorted order
get the selected objects from the table
add a object to the selected object list
sets all items as selected
deselect all items
get the selected objects
add a object to the selected object list
clear out all selections
sets all items as selected
get the formatter class for the column
add a check box to be monitored
add a combo box to be monitored
add a list to be monitored
add a table to be monitored
add a text field to be monitored
add a text area to be monitored
gets whether or not any state has changed
gets whether or not any state has changed
tree will expand tree expansion event event
this method was created by a smart guide
tree will collapse tree expansion event event
this method was created by a smart guide
this method was created in visual age
gets whether or not the state of the component has changed
reset the state of the comparator
add listener for data changing
this method was created by a smart guide
gets whether or not the state of the component has changed
reset the state of the comparator
reset the state of the comparator
reset the state of the comparator
gets whether or not the state of the component has changed
gets whether or not the state of the component has changed
reset the state of the comparator
this method was created by a smart guide
gets the splash screen
gets the renderer for the tree nodes
remove any jnlp files as they are no longer valid
start the web application
create an instance of the command manager
the command manager automatically creates actions for menu items and
initialize the content panel
initialize the windows look feel
display the status string in the splash screen
this method was created in visual age
display an error to the user
display an error to the user
display an error to the user
display an confirmation dialog to the user
provide the readed with the property tree that defines the format of the
display a warning to the user
display information to the user
gets a menu for the given menu name
this method returns the cached menu bar
read raw data records from an input stream convert them to
flush any buffered contents to the stream
write a set of strings representing a record out to the ouput stream
gets the relative location of the divider bar
this method was created in visual age
this method returns the cached tool bar
get the icon for the name given
get the menu bar button created for the given name
this method was created by a smart guide
gets the menu with the given name
returns a string containing the default application home directory
returns a string containing the default sax parser factory class name to use
gets whether or not the action is selected
lookup the property map for the given domain name
sets the button to the selected value
this method was created in visual age
sets the menu item s to the selected value
add a new char property to the main property map
add the ok and cancel buttons to the panel
add a new double property to the main property map
sets the toolbar and menu item s to the selected value
add a new float property to the main property map
add a new int property to the main property map
add a new long property to the main property map
sets up the fixture for example open a network connection
add a new string property to the main property map
logs an error for the given invalid property object
this method was created by a smart guide
writes the data in the property map out to the property file
this method was created by a smart guide
add the panel to our canvas and used the height of the panel
returns the given property attributes as an xml string
returns a well formed valid xml string from the given string
this method was created by a smart guide
add the panel to our canvas with the given height
this method was created in visual age
convert the given list of property objects into an array of double values
convert the given list of property objects into an array of float values
convert the given list of property objects into an array of int values
convert the given list of property objects into an array of long values
add the panel to our canvas with the given height
convert the given list of property objects into an array of string values
make the given domain names property map the current map
add the current property to the current domains property map
returns a string containing the application home directory property key
logs a system error for the given invalid property object
this method was created by a smart guide
returns whether the receivers data type is valid
returns whether the receivers data fields are valid
resize panel on our canvas with the given height
sets up the fixture for example open a network connection
parse and load the properties
resize panel on our canvas with the given height
lookup the property map for the given domain name
add the scroll pane to our canvas with the given height
returns the property value for the given property key as a boolean
returns the startup constants
returns the property manager
returns the property value for the given property key as a boolean
returns the new style property manager which allows access to all of the
adds the given set of properties to the code system code
this method was created by a smart guide
triggers a refresh of the property framework
returns the property value for the given property key as a boolean
get the method that matches the name and paramters passed in
get the value of the bean property
set the value of the bean property
returns the property value for the given property key as a boolean
this method was created by a smart guide
this method was created by a smart guide
look for a node with the specified name
this method was created by a smart guide
this method was created by a smart guide
returns the property value for the given property key as a char
add a max length text area
returns the detail message including the message from the
prints the composite message and the embedded stack trace to
returns the property value for the given property key as a char
prints the composite message and the embedded stack trace to
prints the composite message and the embedded stack trace to
add a max length text area
prints the composite message and the embedded stack trace to
returns the property value for the given property key as a char
this method was created in visual age
retrieve a logging category with name code name code
configure the logging framework
add a max length text area
returns the property value for the given property key as a char
overriden to set the focus on the tree
returns the property value for the given property key as a double
returns the property value for the given property key as a double
if log4j is in the classpath i
if log4j is in the classpath i
retrieve a logging category with name code name code
retrieve a logging category with name code name code
select the node in the tree panel
returns the property value for the given property key as a double
set the wait cursor
returns the property value for the given property key as a double
retrieve a logging category with name code name code
set the split pane divider location
configure the logging framework
log a system level error message
add a text field
retrieve a logging category with name code name code
configure the logging framework
returns the property value for the given property key as a float
set the wait cursor
flush the stream
get the filename used for mapping objects
find the top level frame and set its title
add a text field
create the xml string for the given object
returns the property value for the given property key as a float
bind to a collection of parameters
bind an element to the first element in the query string
bind a primitive integer type
bind a primitive double type
bind a primitive float type
bind a primitive boolean type
return the oql query object
get the filename used for mapping objects
create the xml string for the given object
display the card panel with the given name
update existing object or objects
add a text field
returns the property value for the given property key as a float
create object or objects
specifies if upcoming transactions will perform deep or shallow updates and creates
update existing object or objects
create object or objects
is this object recognized by the current transaction
load the specified instance
returns the property value for the given property key as a float
this method was created in visual age
begin a transaction
add a text field
commit the transaction
rollback the transaction
remove the object
get all objects for the given query string
returns the property value for the given property key as an int
get all objects for the given query object
gets the query object for a given query
add non editable text preceded by a label
validate that a transaction is started
get the database instance
returns the property value for the given property key as an int
close the connection
add non editable text preceded by a label
returns the property value for the given property key as an int
returns the property value for the given property key as an int
retrieves the main current list of objects managed by the receiver
retrieves the list of objects added since the last reset
retrieves the list of objects removed sinces the last reset
returns the property value for the given property key as a long
map the domain to a new record
clears both the added and the removed lists
creates a select statement using the given condition and then executes the statement
read the domain object of the given id
find a collection of domain objects for the given parent object
returns a list containing all domain objects mapped by the receiver
close the top level window
returns the property value for the given property key as a long
returns a list containing all domain objects mapped by the receiver
delete domain objects from the database that match the given condition
returns the property value for the given property key as a long
test for database existence of the given domain object
sets up the fixture for example open a network connection
tears down the fixture for example close a network connection
returns whether or not the given domain object exists in the database
marks the open transaction for rollback
setter for the version
massage the string
returns the property value for the given property key as a long
date formatter specific to the expected db 2 timestamp format
date formatter specific to the expected db 2 timestamp format
provide the caller with unique id values
returns an instance of
reset the identifier generator implementation instance
returns the identifier generator implementation class to use from the property setting
create a new instance of the given code class code
execute the command and return the target to forward to
returns the property value for the given property key as a string
initialize the command object with information from a servlet
put the given helper object into the request
execute the command and return the target to forward to
returns the package name containing the front command classes
sets the child context reference
returns the class name of a
sets the child context to code null code
returns the property value for the given property key as a string
sets the specified key value under the local context
specify that this is an internal transition
allow the state machine to know if this is an external internal transition
determines if the specified value exists in the context set
retrieves all key value pairs from this context set assuming that this
allows subclasses to specify code transition code s
retrieves the value mapped by code a key code
removes all values and removes the child context
retrieves the state name
retrieves the embedded state machine
does nothing defined only to satisfy the abstract superclass
returns the property value for the given property key as a string
returns a view of the current states context
retrieves a code string code list of all possible external events that
returns a reference to a new root code state machine code
get the root transition class name implementation to use from the property
create an instance from the code classname code
retrieves a code string code list of all possible external events that
retrieve a code string code list of events based on transitions with
implements the web logic specific implementation to retrieve a
lookup the specified topic
retrieve a code string code list of events based on transitions with
implements the web logic specific implementation to retrieve a
lookup the specified queue
returns the property directory where property files are stored
this is the clients interface method for event handling
this method was created by a smart guide
commit all messages done in this transaction and releases any locks
rollback any messages done in this transaction and releases any locks
create a bytes message
create a map message
create a message
retrieve the heirarchical state name given the current state
create an object message
create an initialized object message
handle system or development related error situations by scrubbing the
create a stream message
create a text message
handle system or development related error situations by scrubbing the
create a text message
handle system or development related error situations by scrubbing the
initialize the new instance
start or restart a connections delivery of incoming messages
implements the websphere specific implementation to retrieve a
implements the websphere specific implementation to retrieve a
since a provider typically allocates resources outside the jvm
returns a reference to the code topic session code associated with
lookup the specified topic
returns a code session code reference to the code topic session code
returns a reference to a new code message queue facade code
searches for the property with the specified property name within the
returns a reference to a new code message topic facade code
returns a reference to the code topic connection code instance
returns a reference to a new code message topic facade code
get the message queue facade implementation class to use from the property
create a code topic publisher code using the session instance
gets the state monitor for this panel
get the message topic facade implementation class to use from the property
initialize the message queue facade the queue sender and a message
create a code topic subscriber code using the session instance
handle an incoming message
cleanup resources and then exit
unsubscribe the durable subscription named by the code subscription id code
this method sets the given property for a given domain
reset the state of the monitor
initialize the new instance
start or restart a connections delivery of incoming messages
validates the code class code type of code a value code
since a provider typically allocates resources outside the jvm
returns a code string code representation of this domains value
defines the minimun integer value used in validation
defines the maximum string length used in validation
the base class code domain code will verify that any specified
returns a code session code reference to the code queue session code
defines the minimun string length used in validation
the base class code domain code will verify that any specified
returns a reference to the code queue connection code instance
retrieves a code string code representation of this domains
retrieves a code string code representation of this domains
the base class code domain code will verify that any specified
this method was created by a smart guide
defines the minimun integer value used in validation
create a code queue sender code
defines the maximum string length used in validation
the base class code domain code will verify that any specified
this method accepts a filename and then determines if this property builder
searches for the property with the specified property name within the
this method accepts a filename and then determines if this property builder
add a property as a child of this property
retrieve the first child property found with a given name name
this method was created by a smart guide
retrieve the first child property found with a given name
retrieve a the first property with a given name and value
this method is called when the parser encounters a starting element tag
this method is called whenever the parser encounters the end of an element
retrieve the value of the first child property found with a given name
this method is called by the parser if it encounters a recoverable error
this method is called by the parser if it encounters a warning situation
set a reader which has been opened on the data to parse
set the indentation from the left when placing elements
set the handler that will receive callbacks during parsing
returns a reference to a new code xmlstream code implementation
get the xml stream implementation class to use from the property setting
begins parsing of the xml file specified in constructor with callbacks going to
called by sax2 parser at the start of the document
called by sax2 parser whenever non tag characters are encountered
called by sax2 parser when a recoverable parse error is encountered
called by sax2 parser when a non recoverable parse error is encountered
called by sax2 parser when warning situation is encountered
called by sax2 parser when the start of a new element is encountered
called by sax2 parser when the end of an element is encountered
called by sax2 parser when the end of the document is encountered
set the left margin for placing elements
set a reader which has been opened on the data to parse
set the handler that will receive callbacks during parsing
returns true if this panel is being shown in a dialog
parse the data in the stream
this method is called by the parser at the start of a document
this method is called when the parser encounters a starting element tag
this method is called whenever the parser encounters the end of an element
called when parser reaches the end of the document
this method is called by the parser if it encounters a recoverable error
this method is called by the parser if it encounters a warning situation
used to convert the sax specific
returns a reference to a new code xmlstream code implementation
get the xml stream implementation class to use from the property setting
add the field to the monitor
add the field to the monitor
add the field to the monitor
add the field to the monitor
add the field to the monitor
add the field to the monitor
invoked when the ok apply button is pressed on the user interface
invoked when the cancel button is pressed
mutator for right indent
setup the components that you wish to have their state tracked
show this panel as a dialog without resizing
show this panel as a dialog
update the values from the interface back to the domain object
given a string return true if it can be converted to an integer
display an error to the user
display an error to the user
display an confirmation dialog to the user
display a warning to the user
display an informational message to the user
get the height of the panel
position the x and y coordinates for the next row
gets the calculated width of the panel
marked by implementors if properties panel to flag when fields are being
runs a slow worker task in another thread
runs a slow worker task in another thread
leaves class in either the directory pointed to by the
looks for a icompiler
returns enumeration of string where each token
returns all lines in i file i that contain i in i br
returns a new op code sharing the same code attribute and
removes connections from the pool until minimum is reached
checks the constant pool creates a new entry if needed
checks the constant pool creates a new entry if needed
overloaded to set m object value
returns the initial value for this property
returns a string representation of the initial
length in bytes of the op and its data if any
use set method instead unless you are sure
prints entries to standard out in index order as typed values
get one returns the class entry index and get two
loads classes using a browser class finder or the system classloader
get the name if this represents a named type
returns the path to the
adds entry by index
checks the constant pool creates a new entry if needed
checks the constant pool creates a new entry if needed
gets the ijava by doing class
in form com
returns enumeration of integer offsets into the constant pool
in form com
get an ijava guaranteed to be a class reader java
in form com
not supported throws unsupported operation exception use code set throws class code instead
this method does not load the class pointed to by p unless
returns enumeration of integer offsets into the constant pool
set the i i i th component of the argument to v
do any components of this argument act as a jump
re sets the documentation string and if needed gets a
adds to the top of the stack
add the op codes for a superclass init with no arguments
is the opcode listed as the start of an exception handler block
used for max stack calculation called from process stack
set to true if a d
get the last op code added
searches the classpath passed into the constructor
adds an entry for string if not found
adds a string typed entry for the entry pointed to by i
adds the op codes needed for a constructors minimal
call this method on a new class reader if you are building
in the usual case returns the offset of the named type however
gets all entries of type i
throws latch exception on set if name has not been set
create another output file if false
enumeration elements are seperated by commas and will be
enumeration elements are seperated by commas and will be
removes connections from the pool until minimum is reached
marks the connection as available
invokes a method
if boolean is true use object
overloaders remember in the usual case to call code load class proper code
send message to mail host specified in the session object br
call before sending
icm can be null
zero based index
load icircumstance from an object
sets an iexpression as a subexpression of this compound expression
does no evaluation on self will evaluate children
unlinks any loaded repositories and reloads all available repositories
sets properties iff no properties have been set
this method will be added to ipersistence
override to return something other than com
note does not call update on the part
note does not call update on the part
as implemented removes named repository from memory but not from any underlying store
subclasses changing out dictionary sub must override
not yet implemented
not yet implemented
note this implementation does not automatically chk the validity of
for the purpose of this parser treat this as a list of throws
resets the index of the alternate urls enumeration
check avalible nick
add job to quene
compare 2 tickets
set basicposition on map
settings position on map and head pos
the head posbits
geting finalposition afterall steps
getting next position of moving quene
added new instance from gettes valuse from byte
added new instance from values
add existing instance of move step to move quene
find the object that belongs to an id
save character stats in database
remove me from everyehere
remove selceted object from visitable obiects
get all plyers nearto obiect
get all things need to play from database
calculate rewards after deth for pc instane who kill me
method set actual region
update maps after it changes
basic method for spownobiect on map fistime
store client settings after logout or change character or also hard dc
base movable method giving info abou moving to all knowns object
move obiect to new position and send to all knowns players it
this method returns an instance of a daocompetitors implementing the idaocompetitors interface
this method returns an instance of a daotickets implementing the idaotickets interface
this method returns an instance of a daousers implementing the idaousers interface
this method returns an instance of a daoevents implementing the idaoevents interface
this method returns an instance of a daoheats implementing the idaoheats interface
the method is called to get a connection with the hsql database
id competitor getter
id competitor setter
name competitor getter
name competitor setter
surname competitor getter
surname competitor setter
horse competitor getter
horse competitor setter
id user setter
name event setter
password user getter
start date event getter
password user setter
start date event setter
end date event getter
end date event setter
set new clip rectangle
reads a single character from the stream
creates the view and action buttons
test of test get longitude method of class geographic position
test of test to string method of class geographic position
test of test get latitude method of class geographic position
test of test get time method of class geographic position
destroys the application
responds to commands issued on client form
shows the last log file on a chart
adds a mapping
populate values with the values in the part
adds all categories to the given model
adds all types to the given model
adds all models to the given model
clears the drawing area
sets the content of the drawing area to that encoded by the molfile
returns the content of the drawing area as a jme string
returns the content of the drawing area encoded as a v2000 molfile
makes the jmol draw frame visible
hides the jmol draw frame without destroying it
sets the new code jmddocument code that will be used by this code
returns the code jmddocument code in use by this code jmdapplication frame code
returns the code jmddocument code in use by this code jmdeditor pane code
sets the new code jmddocument code that this code jmdeditor pane code
returns the magnification factor being used
returns the code jmdeditor drawing area code currently in
activates the template drawing tool and modifies the appearance of its
returns the source event
returns the drawing area over which this event occurred
returns the position at which this event occurred
returns the token as a string
reads the next token acting as an interator
returns the current token
returns the error messages generated if any after calling the validate method
changes the default locale to a new one
returns the current locale for a state
returns true if current state is a final state
returns true if this state is final i
returns the error messages generated during validation if any
add an item to the menu and add action listener
adds a filetype dot extension to filter against
returns the review of this instance
saving method for a given xml document file pair
returns the id of a comment as an integer representation
removes a comment from the database
adds a review to this model
removes the given review from the model
clears the model
returns the next free id for the given review id author pair
returns the comment specified by the given combination
displays the no agile review source project wizard
checks whether the given review id is stored in the model
checks whether a set contains the search string searching case insensitive
creates a new annotation for a given comment key
what should happen when the check box is clicked
disable the container and all its inhabitants
adds all passed file endings to this entity
returns the begin tag
returns the container so other field editors can set it as their parent
adds a field editor so it will be handled as inside the container
clears all used models
checks whether the file represented by the given abstract multiple wrapper exists
converts a given
returns the review id this wrapper belongs to
adds an element to this wrapper
removes an element from this wrapper
can set the open state of this review comments loaded
returns the wrapped review
switches the perspective to the agile review perspective
adds a review to the node
deletes a review from the node
removes all objects from the root node
refreshes the tree viewer
adds the given review to the viewer
deletes the given review from the viewer
expands all sub nodes of the passed node
collapses all sub nodes of the passed node
used to set a new model
append wildcards to search string
sets the column to be ordered
recreates the replies component
reload current table input
refreshes the reply components and recalculates the scroll bars
resets the comments reloading from model
filter comments based on the viewers filter
sets the levels for the status and priority configuration of a comment
changes the view part ui to
loads all comments of the given document into the database
returns whether the current parent is revertable or not
add reply if and only if the comment detail part is opened
reverts all unsaved changes
returns the current content representation
sets the levels for the status and priority configuration of a comment
fills the contents of a given review object into the review detail view
saves every changes made in the current detail view
returns the current content representation
converts all line breaks either n or r to r n line breaks
changes the background color for this abstract detail
reverts all unsaved changes
returns whether the save button was pressed or not
sets the given variable use one of the static fields of this class
returns the author of the reply
return the replys text
what should be done when pressing ok button
what should be done when pressing cancel button
states whether the review access has a valid source project at the moment
returns the property according to the given key
returns a comment status value defined in the properties according to its id
returns the comment specified by the given tupel
returns a comment priority value defined in the properties according to its id
returns the result of this wizard the name of the created project
returns whether this pages controls currently all contain valid values
returns the log level as an integer
returns an image representing the icon of the key
checks whether the given review id already exists
returns whether this pages controls currently all contain valid values
checks whether all paths are valid
deletes a review and all comments specified by this review
creates a single column of the viewer with given parameters
get the selection adapter of a given column
removes the comments of the given review from the database
fills the comment model with all found files
proves whether the current open editor contains the tags for the given comment
relocates the comment passed to the current selection within the same file
clears the current parser map and deletes all done annotations
editor has been closed remove from parser map
editor has been brought to top add annotations
reset the parser of the editor given by part ref
not yet used
adds the selection filter of the viewer
removes the selection filter from the viewer
sets the focus to the filter text field
selects the given comment in the table
sets the selection to the comment following the last selected one
post a news article to facebook wall and news feed
the new status of the facebook connection
the url to share
the text to display in the link or button
save a game configuration object to xml
load game configuration file
walks the tree in pre order style
constructor for primary key
constructor for primary key
set the value related to the column adresse
set the value related to the column num tel
set the value related to the column cb num
set the value related to the column cb cle
set the value related to the column cb valid mois
set the value related to the column cb valid annee
set the value related to the column commandes
constructor for primary key
set the value related to the column stock
set the value related to the column limite stock
set the value related to the column ingredients pizza
constructor for primary key
set the value related to the column quantite
set the value related to the column commande id
constructor for primary key
constructor for primary key
constructor for primary key
set the value related to the column boissons
set the value related to the column pizzas
constructor for primary key
constructor for primary key
constructor for primary key
return the value associated with the column quantite
set the value related to the column quantite
set the value related to the column pizza id
set the value related to the column ingredient id
constructor for primary key
set the value related to the column boisson id
constructor for primary key
constructor for primary key
set the value related to the column client id
set the value related to the column date commande
set the value related to the column date livraison
set the value related to the column boissons
set the value related to the column menus
set the value related to the column pizzas
constructor for primary key
set the value related to the column menu id
constructor for primary key
calculates center of tt records tt using averaging algorithm
loads evaluation analyzers
adds datas of this component as xml elements to the code container code
listener that updates tabs title
loads a file configurations into tabs
does nothing because of correlations between nodes movement
calculates angle of moving according to previous and current position
sets location of this probabilistic node node to code loc code
used to put member nodes arround leader node using maxinitialdistance
two group node are equal if their node are equal
paints node according to leader or member node
note that it uses integer
used to put member nodes arround leader node using maxinitialdistance
sets nodes that this model should manage their movement
only validates nodes that is located in a disk
model should initiate its nodes and set their initial location by this method
compares each map according to private map number field
paints all related objects to this model
inits the applet creates initial nodes and layouts components on the page
by this method each node can have different radius
paints current transition of node and them himself using parent paint method
paint this node with this color and radius
runs setup btn action
it is a shortcut method to get current transition easier
sets transition using node
switchs enable property of buttons in shower
it used by to update all nodes in the simulation space
runs the application after initialization
runs graphical suimulation using the properties file uiparameters
sets enable property of matrix menu and all of its submenus
updates the view of confguration panel and repainting presentation components
runs evalutor with the edu
a public function to load a properity from a properties edu
runs a dfs on the tree of nodes
pastes coordination of loc location to this object
sets coordination of this location object according to x and y coordination
according to node tt name tt
checks if tt node tt is in range of this node
overrided to set dialog position at center of window
overrided to set frame position at center of window
updates the tt o tt observer when user selects some files
sets default selected files
implemented to pretend singleton behaivour because it may be created by reflection
assumes that the name is integer parsable
pastes coordination of loc location to this object
sets coordination of this location object according to x and y coordination
moves the coordination according to the origin coordination br
paints this node on g graphic pallet
adds a property with name tt key tt and value tt value tt
deligates stop event to the tt bulkd using handler tt
loads first line file edu
subclasses can override this method to change buffer size handling method
if the internal parameterable can handle its ui
initialzes this parameter using tt data parameter tt
set selected object
parses the string value of tt data parameter tt using
parses string tt s tt by extracting only digits
parses string tt s tt by extracting only digits
compares using object name
initilizes this parameter using tt data parameter tt
adds an observer to for the change of current ui component
updates the parameters of embedded parametrable from ui values
adds an observer to the ubservers of masoud uiparameter
adds tt comp tt to this box using defualt settings
adds tt comp tt to this box using tt c2 tt settings
passes the observer tt o tt to the inline parameters
updates tt parameterable tt parameters according to ui parameter values
used first object in tt arg tt array
selects the v parameterable in ui
updates ui components according to tt selected parameterable tt
loads and constructs this object and subobjects from an xml tree
compares according to tt name tt
in fact this method load all information from xml file from passed elements
return the modifiers for the modeled constructor
indicates whether or not the given annotation is present
p gets the default value for the annotation member represented by
return the title of the implementation of this package or null if this
return the name of the vendor or organization that provided this
return the version of the implementation of this package or null if this
return the value of the field in the specified object
return the name of the modeled method
return the title of the specification this package implements or null if
return the name of the vendor or organization that owns and maintains the
deallocates space for a memory block that was previously allocated by a
return the version of the specification this package implements or null
places code value code into first code length code bytes of the
execute prog in a separate platform process the new process uses the
causes the virtual machine to stop running and the program to exit
record in the receiver a walkback from the point where this message was
return true if this package is sealed false otherwise
answers the amount of free memory resources which are available to the
gets the value of the single byte at the given address
return true if this package is sealed with respect to the specified url
return the value of the field in the specified object as an int
sets the given single byte value at the given address
loads and links the library specified by the argument
gets the value of the signed two byte integer stored in platform byte
loads and links the library specified by the argument
answers the total amount of memory resources which is available to or in
return the name of the modeled field
gets the value of the signed four byte integer stored in platform
gets the value of the signed eight byte integer stored in platform byte
causes the virtual machine to stop running and the program to exit
return the number of processors always at least one
return the maximum memory that will be used by the virtual machine or
gets the value of the ieee754 format four byte float stored in platform
posts an interrupt request to the receiver
sets the value of the ieee754 format four byte float stored in platform
calls the code run code method of the runnable object the receiver
answers an url which can be used to access the resource described by
gets the value of the ieee754 format eight byte float stored in platform
set the context class loader for the receiver
sets the value of the ieee754 format eight byte float store in platform
gets the value of the platform pointer at the given address
sets the value of the platform pointer at the given address
starts the new thread of execution
attempt to locate the requested package
sets the assertion status of a class
sets the assertion status of a package
sets the default assertion status of a classloader
clears the default package and class assertion status of a classloader
helper method for the get packages method
read the specified byte buffer
read a byte buffer given a starting position and length
reads a byte array directly
writes from a byte array using the supplied file descriptor
does this event type accept the supplied number of attributes of each
utility for security checks
compare parameter lists for agreement
implementation of the miranda method our test will call
run a test ie a list of threads all run in gc context
determine if two call sites are the same
return whether aos logging has booted
helper routine to produce the current time as a string
stringify this instance
called from controller thread
call this method to dump statistics related to decaying
call this method when one run of the application begins
this is the main loop of the compilation thread
this method reports the basic speedup rate for a compiler
this method reports the basic compilation rate for a compiler
return this instance of this phase
initialize instrumentation by the opt compiler immediately before
this method reports the benefit ratio from one compiler to the other
string representation of fields
this method reports the compile time ratio from one compiler to
this method logs the scheduling of a recompilation
determine if two call sites are the same
convert from a 0
this method logs the beginning of an adaptively selected recompilation
convert a value to a 0
increment the edge represented by the input parameters
this method logs the successful completion of an adaptively
initialization to perform after the transformation is applied
this method logs the abortion of an adaptively selected recompilation
either find the index that is already being used to hold the counts
this method logs the actual compilation time for the given compiled method
how should this choice be displayed
this function defines how the controller handles a
this method logs the event when the controller discovers a method that has
called when the controller is ready to process this event
to be called when the vm is about to exit
called when the controller thread is about to wait on
called when the application wants to recompile all dynamically
called when the controller thread is woken after waiting on
if were going to be gathering a dynamic call graph then we dont
execute the plan
this method logs when the decay organizer runs
increase the size of the counts backing arrays
create the compilation thread and schedule it
create a dynamic call graph organizer of one doesnt already exist
create profiling entities that are independent of whether or not
restore the heap property after increasing a count array entrys value
create the organizer threads and schedule them
this method logs when the organizer thread has reached its
restore the heap property after decreasing a count array entrys value
swap the heap entries at i and j
this method logs that the controller is notified of a
validate that internal fields are consistent
this method logs a controller cost estimate for doing nothing
this method is called when its time to record that a
setup buffer and buffer size
this method is called when its time to record that a
reset in preparation of starting a new sampling window
reset the buffer
this method records a sample containing the cmid compiled method id
reset the buffer to prepare to take more samples
last opportunity to say something
append a decrement of the global counter to the given basic block
this method logs the successful completion of an adaptively
part of reportable interface
given a string find or create the counter associated and return
part of reportable interface
return the value of a particular counter
given a string find or create the counter associated and return
this method must be called before creating any counters for this
set the value of a particular counter
part of reportable interface
tell the data to automatically expand the counters if there is a
for a given string return the number of the counter associated
create a place holder instruction to represent the counted event
used to reset the number of counters for this data
for a given string return the number of the counter associated
return the count for the given relative index
set the count for the given index
part of reportable interface
return the number of counters currently allocated for this data
still under construction
get the value for a given slot
adjust alignment to the next highest value
return the counter manager for this data
set the value for a given slot
create a place holder instruction to represent an increment of a
set the current size of the object excluding header
adjust the size of the object if necessary to accommodate a field
sort a vector counter by decreasing count
update the rvmclass with context info
update a field to set its offset within the object
lay out a given field
print a new line
set the type for this tib
determine the vm specific key for a given option name
set the superclass id set for this type
a non fatal error occurred during the setting of an option
a fatal error occurred during the setting of an option
set the itable array for this type
set the does implement entry of the tib
set the imt of the tib
insert as the first element for convinience
set a virtual method in this tib by offset
set a specialized method in this tib
the number of virtual methods in this tib
does this slot in the tib hold a tib entry
does this slot in the tib hold code
inserts a new entry at the begin of the list
converts tuple to string as
print the current state for debugging
after finishing iteration of one method move to the next
has next method id to iterate
has next element of this method id to iterate
moves the index to the next element update more first because
generate value in the osr map
print the name of the class to which the argument belongs
does the osr map exist for a machine instruction offset
print the name of the class represented by the class descriptor
get bytecode index for a given instruction offset in bytes
close the latch causing future calls to wait or wait and close
wait for the latch to become open
wait for the latch to become open and then close it and return
conditionally acquire a processor lock
get registers reference map for the machine instruction offset
given a mc offset return an iterator over the
do a binary search find the entry for the machine code offset
disassociates this heavy weight lock from the indicated object
set the owner of a lock
update the locks recursion count
get the locks recursion count
set the object that this lock is referring to
get the object that this lock is referring to
dump threads blocked trying to get this lock
dump threads waiting to be notified on this lock
is this lock blocking thread t
is this thread t waiting on this lock
insert an element at a given position in the list
insert at the tail of the list
starting at the position passed swap with parent until heap condition
add all members of the given collection
read a byte
add all members of the given collection after the given element
advise against growing the buckets if they are immortal as it will lead
logically ands this bit set with the specified set of bits
discard all entries in the list
logically ors this bit set with the specified set of bits
logically xors this bit set with the specified set of bits
set inclusion test
check if the intersection of the two sets is empty
return the nth element of the list
copies the values of the bits in the specified set into this set
return the position of the given element
how many bits are set
compares this object against the specified object
remove the nth element of the list
remove the given element from the list
converts the bit vector to a string
get the instruction this node represents
returns the string representation of this node
add an out edge from this node to the given node
add an out edge this node to the given node
returns the register operand associated with this element
change the register operand
returns the register associated with this element
returns the register type associated with this element
determines if the item passed is in the current set
determine the set of variables live on entry to any handler
returns the next element on this list
sets the next element field
returns a string version of this element
create the dependency graph nodes for instructions start to end
are there any more elements
returns the next element if one exists otherwise throws an exception
get the no yieldpoints cond lock for this thread
string i fy the current list
update the data structures to reflect that all live intervals for r2
inspects the passed ptr if it is nonnull it returns its next field
add a affinity of weight w between two registers
return the backing graph holding the preferences
add architecture specific register restrictions for a basic block
returns the string representation of the edge
do two live ranges overlap
add the live interval element i to the map for register r
returns the string representation of the end node used for printing
returns the string representation of the start node used for printing
set up register preferences based on instructions in an ir
can physical register r hold an 8 bit value
remove the live interval element i from the map for register r
update the cost for a particular register
insert the prologue and epilogue
insert an explicit stack overflow check in the prologue em after em
replace all occurences of register r1 in an instruction with register
compute implicit backward dependences from a given register use
register allocation is required
is it forbidden to assign symbolic register symb to physical register r
compute implicit backward dependences from a given register def
we will have to save and restore all non volatile registers around
get the location of a given load or store instruction
insert code into the prologue to save any used non volatile
we will have to save and restore all non volatile registers around
initialize clear the d node field in register for all registers
insert code before a return instruction to restore the nonvolatile
spill the contents of a scratch register to memory before
print the dependence graph to standard out
find or create a node in the graph corresponding to a register
find or create an edge in the graph
insert code into the prologue to save the floating point state
end an interval of scratch ness for a symbolic register
should this register be included in the liveness solution
end an interval of scratch ness for a physical register
restore the contents of a scratch register before instruction s
insert code into the epilogue to restore the floating point state
return a string representation
return a string representation assuming the scratch field of
return a string representation assuming the scratch field of
insert code into the prologue to save all volatile
just a helper method to encapsulate the optional debugging info
insert code before a return instruction to restore the volatile
if register r is currently in use as a scratch register
record that a parameter may or may not escape from a thread
query whether a parameter may escape from a thread
query whether the result of this method may escape from a thread
is analysis of this method in progress
mark that analysis of this method is or is not in progress
prints the results of the fixed point computation
insert the epilogue before a particular return instruction
walk over the currently available scratch registers
perform the transformation
prints the final maps
is a particular instruction a system call
perform the transformation
does a memory operand hold a symbolic register
prints the final live intervals
is a particular register dead immediately before instruction s
given symbolic register r in instruction s do we need to ensure that
returns the live information for a particular block
in instruction s replace all appearances of a symbolic register
insert code as needed so that after instruction s the value of
generate an object which transforms defs uses of synchronized
returns the kill set
returns the first pei kill set i
attempt to rewrite a move instruction to a nop
find a register which can serve as a scratch
returns the gen set
find the first available register which can serve as a scratch
returns the in set
insert copy instructions into a basic block to safely translate out
returns whether this block has a pei with a handler in this method
record the effects of a getfield instruction on the heap array
special treatment for guard registers
record the effects of a putfield instruction on the heap array
does instruction s use the spill location for a given register
initialize some architecture specific state needed for register
assuming instruction s uses the spill location for a given register
record the effects of a getstatic instruction on the heap array
creates allocates the gen and kill sets
does instruction s define the spill location for a given register
is a particular instruction a system call
return a string representation
does instruction s define spill location loc
record the effects of a putstatic instruction on the heap array
creates a string representation of this object
union step of union find for guard registers during un ssa
does instruction s use spill location loc
update the heap array ssa form for an allocation instruction
find step of union find for guard registers during un ssa
returns the instruction
assuming instruction s uses the spill location loc
return a fpr that does not appear in instruction s and is dead
do any of the vertices in this set represent a parameter
add a vertex to this congruence class
remove a vertex from this congruence class
return a representative vertex for this congruence class
make a string representation
record the effects of a aload instruction on the heap array
update the interval representing the allocations of a physical
record the effects of an astore instruction on the heap array
perform some calculations to prepare for ssa construction
does register r appear in instruction s
compute node congruence over the value number graph
record the effects of an arraylength instruction on the heap array
initialize the congruence classes assuming that all nodes
is s a pei with a reachable catch block
given a label return a new congruence class for that label
initialize the work list
return the offset from the frame pointer for the place to store the
record the effects of a label instruction on the heap array
assuming congruence class c has changed find all other classes
insert heap variables needed for array ssa form
record the effects of a bbend instruction on the heap array
does vertex v belong to any congruence class in a vector
return the offset from the frame pointer for the place to store the
does the current state of the algorithm optimistically assume
register that an instruction uses a heap variable of a given
register every instruction that can leave this method with the
should this phase be performed
insert the prologue
register that an instruction writes a heap variable for a given
register every call instruction in this method with the
a string representation of this phase
should we print the ir either before or after this phase
perform the transformation
register every instruction in this method with the
after register allocation go back through the ir and insert
check whether its ok to allocate symbolic register to a physical
if node n dominates all defs of a register r then n does
choose one of the active intervals or the new interval to spill
get the next number to be assigned to a new heap variable
main driver for redundant load elimination
insert a phi function for a symbolic register at the head
record that we need a stack frame for this method
test against another key for equality
create a phi function instruction
return a hash code for this name
redefine should perform so that none of the subphases will occur
returns the name of the phase
are there more elements in the enumeration
get the result operand of the instruction
ensure param passing area of size stackframe header size bytes
check whether if we spilled interval spill we could then assign
get the next instruction in the enumeration
redefine should perform so that none of the subphases will occur
should this phase be performed
return the name of this compiler phase
perform the analysis
allocate the specified number of bytes in the stackframe
return a string representation of this cell
can we eliminate a null check as it has lready been performed
returns the name of the phase
should this phase be executed
return the target of the ith operand of this node
return the type representing this heap object
is the this the exception heap type
we encountered a float int conversion that uses
return a bit vector that represents the basic blocks that define
get the array length reference ignoring instructions that adjust
note that this heap variable is defined in a given basic block
return a string representation of this variable
return as successor on the path from a to b in the dominator
is this heap variable exposed on procedure entry
compare a and b according to their depth in the dominator tree
we encountered a catch block that actually uses its caught
return a string representation of the value graph
schedule me as late as possible
add a node to the value graph for every symbolic register
update the value graph to account for a given move instruction
update the value graph to account for a given pi instruction
update the value graph to account for a given new instruction
update the value graph to account for a given newarray instruction
create an df lattice cell corresponding to an heap variable
update the value graph to account for a given putfield instruction
initialize the lattice variables
update the value graph to account for a given putstatic instruction
put the optimized loops iterator register into the hash set
initialize the work list for the dataflow equation system
update the value graph to account for a given astore instruction
update the value graph to account for a given aload instruction
initialize the interval for each register to null
update the value graph to account for a given unary instruction
check whether the loop that contain such iterator register had
evaluate a dataflow equation with the meet operator
update the value graph to account for a given guarded unary instruction
given an existing call site tree representing a method add a new
given an inline sequence representing an inlined call site find
update the value graph to account for a given null check instruction
is this inline decision a yes
is this inline decision a no
update the value graph to account for a given null check instruction
does this inline site need a guard
return the number methods to inline
returns the string representation of this inline sequence
return the depth of inlining 0 corresponds to no inlining
return the root method of this inline sequence
update the value graph to account for a given binary instruction
does this inline sequence contain a given method
record that if a particular rvmmethod method is ever overridden then
return a hashcode for this object
delete a not overridden dependency
record that if a particular rvmclass ever has a subclass then
delete a no subclass dependency
delete all no subclass dependencies on the argument rvmclass
does this state represent an invokeinterface call
update the value graph to account for a given guarded binary instruction
return the depth of inlining so far
return the call instruction being considered for inlining
obtain the target method from the compilation state
return the controlling compiler options
return whether or not the receiving object is extant
return whether or not the target is precise ie needs no guard
return the root method of the compilation
return the method being compiled
return the real bytecode index associated with this call
return the inlining sequence
return the compiled method
update the value graph to account for a given inline guard instruction
return a string that is the printout of level stackframes in the stacktrace
update the value graph to account for a given if cmp instruction
update the value graph to account for a given phi instruction
estimate the expected cost of the inlining action
update the value graph to account for an ir prologue instruction
redefine hash code for reproducibility
a preorder depth first traversal printing node as visited
returns the string representation of the end node used for printing
returns the string representation of the start node used for printing
returns the next element in the list iterator
traverse edges from target to source
update the value graph to account for a given call instruction
renumber the nodes densely from 0
a postorder depth first traversal adding nodes to the list
any elements left
returns the next element in the list iterator
enumerate the nodes in no particular order
add all elements in bitset b to this bit set
add an object to this bit set
does this set contain a certain object
a preorder depth first traversal adding nodes to the list
this method checks to see if the second parameter has a single
add an edge to the graph
this method checks to see if the second parameter has a single
find or create an value graph vertex corresponding to a
add an edge to the graph
this method keeps track of nodes in the graph that are known to
build a topological sort of this graph
returns the first child of this node
build a reverse topological sort of this graph
returns the next node with the same parent as me
return whether there are any more nodes left to enumerate
adds a child to this node
sets all tree pointers to null
wrapper for next to make the enumeration interface happy
get the out edges of a given node
find or create an value graph vertex corresponding to a
find or create an value graph vertex corresponding to a
find or create an value graph vertex corresponding to a
print to system
link two vertices in the value graph
print to system
bypass move instructions that def an operand return the first def
return the machine level register number corresponding to a given integer
return the machine level register number corresponding to a
return a string representation
enable yieldpoints on this thread
given a forward branch instruction and its target
inline a call instruction
remove osr barrier instructions
debugging support return a printable representation of the machine code
generate hir for ir
verify barrier is clean by checking the number of valid operands
disable yieldpoints on this thread
split each osr point and connect it to the exit point
debugging support return a printable representation of the machine code
return the register used to for local i of type reference type
update this phase to support the measuring of compilation
set the inline oracle
determine possibly by consulting the passed options object
execute a compilation plan by executing each element
do the work represented by this element in the optimization plan
generate to the sys write stream a report of the
report the total time spent executing the plan element
make a register operand that refers to the given local variable number
return an optimization plan that isnt in use
release an optimization plan
helper function for code report stats code
get the local number for a given register
this method is called to initialize the optimization plan support
determine possibly by consulting the passed options object
fail if yieldpoints are disabled on this thread
is the operand a particular bytecode local
report the elapsed time spent in the plan element
called when printing a measure compilation report to enable a phase
return the concrete type of a field or null if none determined
this method is called immediately before perform phase
verify the ir
return a constant operand that is the base address of the jtoc
return the zero based indexed nth gpr that may hold a return value
return the number of symbolic registers doesnt count physical ones
is a particular register subject to allocation
get the framepointer fp
get a temporary that represents the fp register
get a temporary that represents the pr register
return a string version of this object
get the object for locking for synchronized methods
only for use by bc2 ir return
take an element out f the bag
return the first symbolic register in this pool
this method makes sure that nc guard only maps to registers that
release a now unused register
gets a new address register
kill nc guards so we do not use outdated mappings unintendedly later on
gets a new integer register
gets a new float register
gets a new double register
gets a new condition register
gets a new long register
gets a new validation register
get a new register of the same type as the argument register
get a new register of the same type as the argument register operand
create a twin entry required when the same mir gc point
return the instruction with this entry
get a new register of the appropriate type to hold values of type
add a new spill list element for this map element
mir get the other half of the register pair that is
delete a spill list element from this map element
counts and returns the number of references for this map
counts and returns the number of register elements not spills
make a temporary register operand to hold values of the specified type
counts and returns the number of spill for this entry
return a string version of this object
make a temporary register operand that is similar to the argument
make a temporary register operand that can hold the values
make a temporary to hold an address allocating a new register
make a temporary to hold an address allocating a new register
make a temporary to hold an int allocating a new register
make a temporary to hold a boolean allocating a new register
return a new operand that is semantically equivalent to code this code
are two operands semantically equivalent
returns the string representation of this operand
make a temporary to hold a float allocating a new register
returns a copy of the current operand
make a temporary to hold a double allocating a new register
returns if this operand is the same as another operand
make a temporary to hold a long allocating a new register
make a temporary to hold a condition code allocating a new register
make a temporary to hold a guard validation allocating a new register
returns a copy of the current operand
returns if this operand is the same as another operand
returns a copy of the current operand
returns if this operand is the same as another operand
return a new operand that is semantically equivalent to code this code
are two operands semantically equivalent
returns the string representation of this operand
flip the direction of the condition return this mutated to flip value
change the condition when operands are flipped
return a new operand that is semantically equivalent to code this code
return the number of the heap variable corresponding to this
return the type corresponding to the heap variable associated with
is the operand a movable
does this operand correspond to the same heap variable as another
associate this operand with a given instruction
enumerate all the volatile gprs in this set
return a new operand that is semantically equivalent to code this code
does the operand represent a value of the reference data type
does the operand definitely represent code null code
are two operands semantically equivalent
return a new operand that is semantically equivalent to code this code
are two operands semantically equivalent
does the operand represent a value of an int like data type
returns the string representation of this operand
enumerate all the nonvolatile gprs in this set
return a new operand that is semantically equivalent to code this code
are two operands semantically equivalent
returns the string representation of this operand
return a new operand that is semantically equivalent to code this code
are two operands semantically equivalent
returns the string representation of this operand
enumerate all the volatile fprs in this set
does the operand represent a value of the int data type
enumerate all the nonvolatile fprs in this set
used in dependence graph construction
this accessor is only valid when register lists are valid
is the condition code equal
does the operand represent a value of the long data type
returns the string representation of this register
is the condition code not equal
is the condition code less equal
does the operand represent a value of the float data type
is the condition code greater equal
does the operand represent a value of the double data type
is the condition code greater
is the condition code less
does the operand represent a value of the reference data type
is the condition code higher
does the operand represent a value of the address data type
is the condition code lower
does the operand represent a value of an int like data type
does the operand represent a value of an int data type
return a new operand that is semantically equivalent to code this code
return the lower 8 bits as an int of value
is the condition code higher equal
return the lower 16 bits as an int of value
return the upper 16 bits as an int of value
does the operand definitely represent code null code
return the upper 24 bits as an int of value
are two operands semantically equivalent
is the condition code lower equal
returns the string representation of this operand
returns a copy of this branch operand
flip the probability p 1 p
are two operands semantically equivalent
returns the string representation of this operand
is the condition code an unsigned comparision
is the condition code a floating point compare
return the index of the operand in its containing instruction slow
will this floating point compare branch if the results are
convert this integer compare to a floating point cmpl
convert this integer compare to a floating point cmpg
flips the direction of the condition
translate from condition operand used by burs
flips the direction of the condition
returns the string representation of this operand
is the accessed location possibly volatile
return a new operand that is semantically equivalent to code this code
does the operand represent a value of the double data type
convert this floating point compare to the equivalent unsigned
return a new operand that is semantically equivalent to code this code
are two operands semantically equivalent
returns the string representation of this operand
returns the string representation of this operand
return a new operand that is semantically equivalent to code this code
are two operands semantically equivalent
return a new operand that is semantically equivalent to code this code
are two operands semantically equivalent
returns the string representation of this operand
returns the string representation of this operand
does the operand represent a value of the address data type
return a new operand that is semantically equivalent to code this code
return a new operand that is semantically equivalent to code this code
are two operands semantically equivalent
return a new operand that is semantically equivalent to code this code
are two operands semantically equivalent
does the operand represent a value of the float data type
returns the string representation of this operand
are two operands semantically equivalent
returns the string representation of this operand
returns the string representation of this operand
does the operand represent a value of the long data type
returns a copy of this branch operand
return a new operand that is semantically equivalent to code this code
return the lower 32 bits as an int of value
are two operands semantically equivalent
are two operands semantically equivalent
return the upper 32 bits as an int of value
returns the string representation of this operand
returns the string representation of this operand
return a new operand that is semantically equivalent to code this code
are two operands semantically equivalent
returns the string representation of this operand
are two operands semantically equivalent
does the operand represent a null pointer check
does the operand represent an array bounds check
does the operand represent a divide by zero check
does the operand represent a stack overflow check
does the operand represent a check cast
called when it is determined that the thread is stuck in native
does the operand represent a must implement trap
returns a copy of this register operand as a register operand
does the operand represent an array store check
does the operand represent a regeneration trap
returns a copy of this use register operand as another use reg operand
return a new operand that is semantically equivalent to code this code
returns a copy of this def register operand as a use
are two operands semantically equivalent
return a new operand that is semantically equivalent to code this code
returns the string representation of this operand
returns the string representation of this operand
returns a copy of this use register operand as a def
return the numeric value representing the trap code this is
returns a copy of this def register operand as a def
return a new operand that is semantically equivalent to code this code
is the operand a movable
given two longs evaluate the condition on them
are two operands semantically equivalent
returns the string representation of this operand
copy type information from the given operand into this one
get whether this operand represents a method call that never
record whether this operand represents a method call that never
return whether this operand is the off branch of a guarded inline
record that this operand is the off branch of a guarded inline
refine the target information
refine the target information
refine the target information
return a new operand that is semantically equivalent to code this code
are two operands semantically equivalent
returns the string representation of this operand
get the jtoc register
get a temporary that represents the jtoc register as an address
get a temporary that represents the jtoc register as an object
returns the string representation of this basic block
are there more elements in the enumeration
is a certain physical register allocatable
get the next instruction in the enumeration
get the next instruction in the enumeration
are there any more elements in the enumeration
add a new exception type to an extant exception handler block
return yes no maybe values that answer the question is it possible for
return yes no maybe values that answer the question is it guarenteed that
next element in the enumeration
get how many table entires this ehbb needs
returns the set of registers live before the first instruction of
set the set of registers live before the first instruction of
next element in the enumeration
return a string representation of the basic block
returns the number of gc points in this map i
calculates the number of spill entries in this gcirmap
are there any more elements in the enumeration
this method inserts a new entry into the gcirmap
this method removes an entry in the gcirmap that is specified
this method moves an entry in the gcirmap that is specified
next element in the enumeration
this method inserts an entry for a twin instruction immediately after the
is this the gc thread
set this register as having a precise type
return the entry node of the fcfg
how many real instructions does the block contain
return the exit node of the fcfg
return the first basic block with respect to
return the last basic block with respect to
replace fall through in this block by an explicit goto
create a copy of this instruction
should this thread run concurrently with stw gc and ignore handshakes
add an fcfg edge from the given basic block to the exit node
remove a basic block from both the cfg and code ordering
remove a basic block from the fcfg leaving the code ordering unchanged
remove a basic block from the code ordering
insert a block to add not currently in the code ordering after
merge two sets of register flags
return the next instruction with respect to the current
insert a block to add not currently in the code ordering before
currently all flags are inheritable so copy all flags from src
currently all flags are meetable so mask flags together
make bb2 follow bb1 in the code ordering
return the previous instruction with respect to the current
return true if we have any bits set flag true that other
create a break in the code order between bb1 and bb2
get the thread to use for building stack traces
clear the code ordering information for the cfg
get the basic block that contains this instruction
are we in ssa form
set the source position description
are we in ssa form thats broken awaiting re entry
get info scratch short
handle the case of exception handling triggering new exceptions
set info scratch short
sets scratch object of the register operand to parameter
sets scratch object of the register operand to parameter
returns the scratch object of the register operand
modify the register
get the offset into the machine code array in bytes that
print the instructions in this ir to system
should strictfp be adhered to for the given instructions
only for use by
return the first instruction with respect to
return a string representation of this cell
include a single basic block in this set
include all basic blocks in this set
return a set of all the volatile registers
return the instructions operator
this pass performs peephole branch optimizations
this method actually does the work of attempting to
return the last instruction with respect to
is a conditional branch a candidate to be flipped
return the opcode of the instructions operator
flip a conditional branch and remove the trailing goto
return the first basic block with respect to
this is the method that actually does the work of the phase
this method determines if the phase should be run based on the
returns the name of the phase
return the last basic block with respect to
get the number of operands in this instruction
append an instruction to the current basic block
dump this threads identifying information for debugging via
forward with respect to the current code linearization order
get the basic block for this dominator tree node
reorder basic blocks either by trivially moving infrequent blocks
reverse with respect to the current code linearization order
return a string representation of this phase
main driver for the post dominator calculation
returns the number of operands that are defs
this method actually does the work of attempting to
enumerate the basic blocks in the ir in an arbitrary order
is the basic block represented by this structure dominated by another
should the optimisation be performed
returns the number of operands that are pure defs
return a string representation of this phase
forward with respect to the current code linearization order
main driver for the dominator calculation
check to make sure all nodes were reached
make a field reference operand referring to the given field with the
dump this threads identifying information for debugging via
returns the number of operands that are pure uses
reverse with respect to the current code linearization order
do simplistic static splitting to create hot traces
get the first node either entry or exit
print the next nodes either out or in for the passed block
return the candidate test in b or code null code if
return an enumeration of the parameters to the ir
return the cold predecessor to the argument block
returns the number of operands that are uses
returns an enumeration of the next nodes either out or in for the
return the off trace successor of b
simplistic cost estimate since we
returns an enumeration of the prev nodes either in or out for the
is the operand a parameter of the ir
replace all occurances of the first operand with the second
this method inspects the passed block and returns the following
this recursive method performs the path compression
how many bytes of parameters does this method take
is this a countable loop of the form
is a conditional branch a candidate to be flipped
replace any operands that are similar to the first operand
this final step sets the final dominator information
dump this threads identifying information for debugging via
is this an affine loop of the form
recompute the basic block map so can use get basic block int
returns the current dominator for the passed block
flip a conditional branch and remove the trailing goto
returns the parent for the passed block
is this loop a non regular loop
get the basic block with a given number
returns the ancestor for the passed block
replace all occurances of register r with register n
is this value modified by the loop
returns the current semidominator for the passed block
get an enumeration of all the basic blocks whose numbers
returns the size associated with the block
get the child node for this block
does this instruction hold any memory or stack location operands
is this operand related to the iterator of this loop
print the result of the dfs numbering performed in step 1
is this operand related to the phi iterator of this loop
enumerate all leaf operands of an instruction
set the frequency of each basic block to 1
make a type operand that refers to the given type
is this operand related to the carried iterator of this loop
postorder traversal of lst computing loop multiplier and loop exits
do any of the instructions in a basic block define a long
compute the loop multiplier for this loop nest
enumerate all memory operands of an instruction
is the loop iterator monotonic
this method returns the set of blocks that dominates the passed
sets the semidominator for this node
returns the semidomintor for this node
sets the immediate dominator for this node
returns the immediate dominator for this node
sets the parent of this block
returns the parent of this block
enumerate all the root operands of an instruction
densely number all the instructions currently in this ir
removes the passed block from the bucket for this node
return the stride value for monotonic loops
adds the passed block from the bucket for this node
sets the ancestor for the value passed
returns the ancestor for this block
sets the label
returns the label
evaluate the cost of a basic block in number of real instructions
sets the size
sets the child field
is the loop iterator a monotonic increasing value
set the scratch word on all instructions currently in this
returns the child
dump this threads info for debugging
helper method to return the info field associated with a block
enumerate all defs both pure defs and def uses of an instruction
set the basic block enum field
prints a string version of objection
evaluate an equation with the meet operation
return a string representation of the operator
return a string representation
should this phase be performed
returns dominator tree
is a given basic block in an innermost loop
is the loop iterator a monotonic decreasing value
clear set to zero the scratch word on all
initialize the lattice variables dominator sets for
make a type operand that refers to the given type
initialize the work list for the dataflow equation system
make a new df lattice cell key corresponding to a basic block
return the root node of the tree
enumerate all the pure defs ie not including def uses of an instruction
get the first node either entry or exit
insert each instruction in a list before instruction s
clear set to null the scratch object on
return the parent of the vertex corresponding to a basic
does this basic block appear in the loop
return the already calculated dominance frontier for
return the already calculated dominance frontier for
enumerate all the pure uses ie not including def uses of an instruction
clear set to null the scratch object on
does basic block number b dominate all basic blocks in a set
does basic block number master dominate basic block number slave
clears the back edges for the basic block passed
converts the annotated loop to a concise string
does basic block number master dominate basic block number slave
return the number of symbolic registers for this ir
creates domniator tree nodes for the passed block and adds them to the
enumerate all the def uses of an instruction
return the distance from the root of the dominator tree to a given
returns the name of the phase
a compiler phase to construct the loop structure tree lst
build the loop structure tree lst for the given ir
prune the exceptional out edges for each basic block in the ir
this is the method that actually does the work of the phase
does this equation contain an appearance of a given cell
return a string representation of this object
return a string representation of the dataflow solution
return the lattice cell corresponding to an object
enumerate all root uses of an instruction
note that this variable appears on the rhs of an equation
return an enumeration of the equations which use the result of this
note that this variable appears on the lhs of an equation
is the a particular block in this loop
return an enumeration of the equations upon whose results this
partially convert the fcfg into a more traditional
does the instruction represent a simple move the value is unchanged
return an enumeration of basic blocks corresponding to a depth
states whether liveness for handlers is available
solve the set of dataflow equations
implementation for graph interface
enumerate the nodes in the graph
return the solution of the dataflow equation system
add a node to the graph
return a string representation of the system
return an enumeration of basic blocks corresponding to a depth
record whether or not liveness information for handlers is available
the main entrypoint for this pass
is the instruction an intraprocedural branch
get the number of equations in this system
add an equation to the work list
verify that the ir is well formed
add all new equations to the work list
add all equations to the work list
is the instruction a conditional intraprocedural branch
call this method when the contents of a lattice cell
find the cell matching this key
add an equation with one operand on the right hand side
determine the spill location given the frame ptr and spill offset
get address of the first spill location for the given frame ptr
get address of the last spill location for the given frame ptr
add an equation to the system with an arbitrary number of operands on
is this instruction a branch that has that has only two possible
return the df lattice cell corresponding to a key
add all equations which contain a given cell to the work list
get compiler that generated this methods machine code
is the instruction an unconditional intraprocedural branch
get handler to deal with stack unwinding and exception delivery
update the worklist assuming that a particular equation
number the equations in topological order
fetch symbolic reference to a method thats called
is the instruction a direct intraprocedural branch
process a regular block within the loop
find source line number corresponding to one of this methods
is the instruction an indirect intraprocedural branch
simulate a load from a given local variable of an int
get the carried loop iterator
is the instruction a call one kind of interprocedural branch
is the instruction a pure call one kind of interprocedural branch
insert a block to the end of the list
this method searches the machine code maps and determines if
verify that every non physical non parameter symbolic register
determine the stack location given the frame ptr and spill offset
get address of the first spill location for the frame ptr
is the iterator at the end of the vector
is the instruction a conditional call
get the next element from the vector and move the current block along
is the instruction an unconditional call
check whether uses follow definitions and that in ssa form
simulate a load from a given local variable of a float
does the instruction compute some expression
is the instruction a direct call
get the next element from the vector and return without requiring a cast
is the given instruction a check instruction
is the instruction an indirect call
string representation of the object
is the instruction an explicit load of a finite set of values from
process a store instruction
should the instruction be treated as a load from some unknown location s
is the instruction an explicit store of a finite set of values to
simulate a load from a given local variable of a reference
should the instruction be treated as a store to some unknown location s
return the number of non volatile gprs used by this method
eliminate all ae tuples that contain a given operand
return the number of non volatile fprs used by this method
is the instruction a throw of a java exception
set the number of non volatile gprs used by this method
set the number of non volatile fprs used by this method
eliminate all ae tuples that cache any memory location
is the instruction a pei potentially excepting instruction
gather cumulative stats about the space consumed by maps
has the instruction been explictly marked as a a pei potentially excepting instruction
build burs trees for dependence graph code bb code label the trees and
create the mir instruction given by operator from the binary lir operands
unused hashcode method
simulate a load from a given local variable of a long
is the instruction a potential gc point
does this expression represent the result of a load or store
is the instruction a potential thread switch point
does this expression represent the result of a load
is the instruction a compare val val condition
does this expression represent the result of a store
build burs trees for dependence graph dg label the trees and
is the instruction an actual memory allocation instruction
stage 1b do bookkeeping to make it easier to identify
does this expression represent the result of a bounds check
is the instruction a return interprocedural branch
create the mir instruction given by operator from the binary lir operands
is this expression commutative
simulate a load from a given local variable of a double
is the instruction an acquire monitorenter lock
is the instruction a release monitorexit unlock
stage 3 label the trees with their min cost cover
return the number of specialized methods
could the instruction either directly or indirectly
move op into a register operand if it isnt one already
find or create a specialized method in this context
create specialized method in this context
generate code to specialize a method in this context
is the instruction a yield point
the resource class of this reservation
returns a string representation of scheduling info
checks whether this reservation is for all available units of the class
record that this instruction is not a pei
grows the ru map to a given size
compares this object against the specified object
reserves resources for given instruction at given time
checks whether this reservation conflicts with specified reservation
frees resources for given instruction
should we print the dependence graph
returns a string representation of the resource map
set corresponding graph node for instruction
perform instruction scheduling for a method
return corresponding graph node for instruction
burs expansion of a commutative sse2 operation
perform dfs to compute critical path for all instructions
note only for use on mir instructions
sort basic block by scheduled time
are there nodes to process on the stack
remove a node from the ready set
note only for use on mir instructions
reset iteration to initial state
initialize boot image compiler
compile a method with bytecodes
note only for use on mir instructions
given a index in the local area biased local0 has index 1
gets the location of the next return address after the current position
note only for use on mir instructions
cleanup pointers used with method maps to release data structures early
process the effect of the ret instructions on the precedance table
for debugging used with check ref map
return the probability in the range 0
for every handler make a block that starts with the handler pc
given a index in the local area biased local0 has index 1
record the probability in the range 0
for every try start make a block that starts with the try start
invert the probabilty of this branch being taken
mark all the blocks within try range as being try blocks
size of individul maps
show the basic information for a single unusualmap this is for testing use
push a single width operand int float ref
return true if this instruction is the first instruction in a
return whether or not the instruction offset corresponds to an uninterruptible context
return true if this instruction is the last instruction in a
set the stack browser to the innermost logical stack frame of this method
for debugging used with check ref maps
advance the stack browser up one internal stack frame if possible
print this compiled methods portion of a stack trace
mainly intended for assertion checking returns true if the instruction
print the e table
set the lock acquisition offset for synchronized methods
insertion insert new instr immediately after this in the
generate instructions to acquire lock on entry to a method
insertion insert new instr immediately before this in the
return the number of bytes used to encode the compiler specific mapping
push a copy of the given operand onto simulated stack
replacement replace this with new instr
to be called when the vm is about to exit
generate instructions to release lock on exit from a method
removal remove this from the instruction stream
called when all the recording for this map is complete
after code is generated translate the bytecode indices
pop an int operand from the stack
given a index in the local area biased local0 has index 1
validate that that pushing bytes actually written
pop a ref operand from the stack
subroutine to deep copy an unusual map into the jsr info
subroutine to copy a bitmap into the extra unusualmap
pop a ref operand from the stack
emit the code to push an intlike boolean byte char short int value
this routine is used to clean out the method map of structures that
note it is incorrect to use get operand with a constant argument
note it is incorrect to use get clear operand with a constant argument
emit the code to push a float value
pop an int from the stack to be used in a shift
show the basic information for a single map
show the offsets for all the maps
emit the code to push a double value
offset of java local variable off stack pointer
are two instructions similar i
emit the code to push a double value
set the stack browser to the innermost logical stack frame of this method
allow burs a back door into link with next
translate a fp offset into an sp offset
might this instruction be a load from a field that is declared
emit the code to push a long value
get the unique jni on load symbol associated with this library
get the unique jni on unload symbol associated with this library
browse up one frame failing if we fall off the stack
are there more stack frames
called after weve successfully loaded the shared library
browse up one frame eliding native frames
set the dynamic link information
set the current bytecode index called only by the appropriate compiled method code
set the current method called only by the appropriate compiled method code
look up this dynamic library for a symbol
set the current compiled method called only by the appropriate compiled method code
set the inline encoding for opt compiled methods only
tell the operating system to remove the dynamic library from the
the bytecode index associated with the current stack frame
emit the code to push a long value
the method associated with the current stack frame
the compiled method associated with the current stack frame
the class of the method associated with the current stack frame
the class loader of the method associated with the current stack frame
get class name
return the data type of the given operand assuming that the operand is
emit the code to push a reference address value
get method name
initialize a thread specific jni environment
get the compiled method at element
emit the code to poke an address
push a reference onto thread local jnirefs stack
return the data type of the given operand assuming that the operand is
the vm is about to exit
emit the code to poke an int
get a reference from the jnirefs stack
prepare to scan a threads stack and saved registers for object references
remove a reference from the jnirefs stack
emit the code to pop a char value from the expression stack into
assert that the given operand is of the given type or of
put some basic properties about this vm build current execution into the feed
append a code array to the current machine code
define an event type
define an event type
define an event type
emit the code to pop a short value from the expression stack into
string represenation of this local variable
string representation of the local variable table
create an instance of this type of annotation with the values
emit the code to pop a byte value from the expression stack into
return a string representation of the annotation of the form
string representation of the value pair of the form
find the value for an annotation
is this method a bridge method bridge methods are generated in some cases
entry point to factory
is this a varargs method taking a variable number of arguments
emit the code to pop an intlike boolean byte char short int value
get the element type of for this array type
are two members equivalent
get array type corresponding to this array element type
print a debug string to the sys write stream
compute hash code from meth
return the dimensionality of the type
return the innermost element type reference for an array
ordering for sorted annotation members
should all allocation from this method go to a non moving space
emit the code to pop a float value
emit the trap pattern trap llt 1 we use for nullchecks on reg
do this and that definitely refer to the different methods
do this and that definitely refer to the same method
get the native ip for this method
has the method reference already been resolved into a target method
get the native toc for this method
find the rvmmethod that this method reference refers to using
is the method reference to a magic method nb
if using embedded imts get offset of interface method slot in tib
return a string representation of the current basic block set
emit the code to pop a double value
is the method reference to a specialized invoke nb
is the method reference to a magic method nb
should assertions be enabled on this type
find the rvmmethod that this member reference refers to using
find the rvmmethod that this member reference refers to using
find the rvmmethod that this member reference refers to using
is this field a type that must never move
compile a specialized version of a template method
emit the code to push a long value
how many stackslots do value of this type take
does the field hold a reference
does the field hold a reference
emit the code to pop a long value
is this field invisible to the memory management system
make this field a traced field by garbage collection
get the value from the runtime final field
read one object ref from heap using rvm object model gc safe
emit the code to pop a reference address value
how many stackslots do value of this type take
do this and that definitely refer to the different fields
do this and that definitely refer to the same field
find the rvmfield that this field reference refers to using
generate the code for this method
emit the code to peek a float value
get a representation of the bytecodes in the code attribute of this method
assign one object ref from heap using rvm object model gc safe
size of bytecodes for this method
assign one object ref from heap using rvm object model gc safe
initialization is a no op arrays have no clinit method
generate the code for this method
do this and that definitely refer to the different types
emit the code to peek a double value
do this and that definitely refer to the same type
checks if the method is in state for osr specialization now
sets method in state for osr specialization i
package name something like java
restores the original state of the method
force the resolution of the type reference
returns the osr prologue length for adjusting various tables and maps
returns a bytecode stream of osr prologue
emit the code to peek a long value
returns the synthesized bytecode stream with osr prologue
sorting method for comparable
equals method to be consistent with comparable
print this emitter set readably
return the difference between the number of emit methods in this set that
generate a boundscheck instruction for the given operand and index
set the value of the runtime service method flag to the argument
get the modifiers associated with this class
generic type information for class
name of source file from which class was compiled
does this class directly define a final instance field has implications for jmm
class that declared this class or null if this is not an
class that immediately encloses this class or null if this is not an
find description of a field of this class
find description of a field of this class
find description of a method of this class
find the first description of a method of this class
get or create a block at the specified target
find description of public static void main string
set the imt object
get offset of a literal constant in bytes
get or create a block at the specified target
get description of a literal constant
should the methods of this class save incoming registers
get a heap address for the object
return code true code if this instance is zero
return code true code if this instance is the maximum allowable
fabricate an code object reference code instance from an
return an integer that reflects the value of this
return a code long code that reflects the value of this
return a code word code instance that reflects the value of
returns a hash code value for the key
set object representing available holes in the field layout
map an address to an object
identity hash code of an object
mark the entry as requiring an identity hash code
emit the code to load the counter array into the given register
set object representing available holes in the field layout
get image code size in bytes
return the size of the rmap
allocate a scalar object
returns a hash code value for the key
allocate an array object
return true if this
allocate an array object
return true if this
allocate an array object
set the alignment for instances of this class type
return true if this
round a size in bytes up to the next value of min alignment
return true if this
return true if this
increment an edge counter
reset the allocator as if no allocation had occured
return true if this
fill in 1 byte of bootimage
set a byte in the reference bytemap to indicate that there is an
prefetch a cache line architecture independent
fill in 2 bytes of bootimage
fill in 4 bytes of bootimage as numeric
ia32 prefetchnta operation fetches the data into the
fill in 4 8 bytes of bootimage as object reference
fill in 4 8 bytes of bootimage as null object reference
fill in 4 8 bytes of bootimage as null object reference
fill in 8 bytes of bootimage
write contents of this processors modified data cache back to
keep track of how many references were set null because they pointed to
touch a data cache block use to prefetch
touch a data cache block for a store use to prefetch on a
zero all bytes of this 32 byte cache block without forcing a read
zero all bytes of this cache block without forcing a read use to
the icbi instruction invalidates a block containing the byte
loads a reference from the memory location pointed to by the
loads a reference from the memory location pointed to by the
reset all data in this stream to default values
distribute a value across a sequence of tiles
send the data and summary for this stream
end the transmission for this event
loads a byte from the memory location pointed to by the
distribute a value across a sequence of tiles
send the data and summary for this stream
set the stream address and id called by abstract driver
mark final fields as being available as literals
distribute a value across a sequence of tiles
loads a byte from the memory location pointed to by the
send the data and summary for this stream
set the summary value for presentation styles with just one value
set the summary values for presentation styles with two values i
send the summary data for this stream
loads a char from the memory location pointed to by the
copy the values of all static final fields into
loads a char from the memory location pointed to by the
loads a short from the memory location pointed to by the
return the number of pages reserved for use given the pending allocation
calculate the number of pages a collection is required to free to satisfy
prepare for a new collection pass
prepare for a new collection pass
release resources after completing a collection pass
loads a short from the memory location pointed to by the
loads a float from the memory location pointed to by the
unregisters all native methods
loads a float from the memory location pointed to by the
add to list of classes that derive from this one
loads an int from the memory location pointed to by the
loads an int from the memory location pointed to by the
given a method declared by this class update all
loads a long from the memory location pointed to by the
loads a long from the memory location pointed to by the
update the jtoc slot for the given static method to point to
loads a code double code from the memory location pointed to by the
update this classs tib entry for the given method to point to
report a field that is part of our librarys gnu classpaths
loads a code double code from the memory location pointed to by the
update the tib entrys for all classes that inherit the given method
classes used as interfaces get assigned an interface id
loads a word value from the memory location pointed to by the
return the space into which an allocator is allocating
return the allocator instance associated with a space
loads a word value from the memory location pointed to by the
stores the address value in the memory location pointed to by the
stores the address value in the memory location pointed to by the
display a phase for debugging purposes
perform any required write barrier action when installing an object reference
stores the address value in the memory location pointed to by the
emit code to perform an unsigned comparison on 2 address values
stores the code float code value in the memory location pointed to by
flush the local buffers of all deques
stores a code float code in the memory location pointed to by the
report nulling out a pointer
generate code to invoke arbitrary method with arbitrary parameters return value
any plan can override this to provide additional plan specific
stores the code byte code value in the memory location pointed to by
if a finalizable object has moved return the new location
stores the byte value in the memory location pointed to by the
perform any required write barrier action when installing an object reference
generic trace routine
set the thin lock offset for instances of this type
an object is unreachable and is about to be added to the
stores a code double code value in the memory location pointed to
generate call and return sequence to invoke a c function through the
return true if an object is ready to move to the finalizable
force the next collection to be full heap
return the expected reference count
perform a linear scan of all spaces to check for possible leaks
prepare for a new collection pass
prepare for a new collection pass
release resources after completing a collection pass
is there any work outstanding in this trace
push an entity onto the context
return the number of pages available for allocation
stores a short value in the memory location pointed to by the
return the number of pages reserved for collection
push a field access onto the context
a user triggered gc has been initiated
return the number of pages reserved for use given the pending
return the expected reference count
stores a short value in the memory location pointed to by the
add an object to the modified objects buffer and mark the
calculate the number of pages a collection is required to free to satisfy
push an array access onto the context
the minimum number of pages a gc must have available after a collection
is the specified object live
prepare for an atomic store operation
process any remembered set entries
return the number of metadata pages reserved for use given the pending
prepare for an atomic store operation
prepare for an atomic store operation
log a message from within poll
return the number of pages used given the pending
perform garbage collection
this method controls the triggering of a gc
prepare for an atomic store operation
is the specified object reachable
return the expected reference count
this method controls the triggering of an atomic phase of a concurrent
prepare for an atomic store operation
return the allocator instance associated with a space
perform a per mutator collection phase
is the specified object reachable
prepare for an atomic store operation
return the number of pages available for allocation i assuming
calculate the number of pages a collection is required to free to satisfy
is the specified object reachable
prepare for an atomic store operation
return the allocator instance associated with a space
ensure that the referenced object will not move from this point through
ensure that this object will not move for the rest of the gc
prepare for an atomic store operation
attempt an atomic store operation
perform a per collector collection phase
called before the mutator context is used but after the context has been
perform a per mutator collection phase
return the allocator instance associated with a space
return true if code obj code is a live object
attempt an atomic store operation
will this object move from this point on during the current trace
return true if code obj code is a reachable object
is this object guaranteed not to move during the collection
will this object move from this point on during the current trace
print some debugging info
attempt an atomic store operation
return the number of pages reserved for use given the pending
return the allocator instance associated with a space
pass a root to all drivers
calculate the number of pages a collection is required to free to satisfy
gather data for the immortal space
gather data for gcspy for the semispaces the immortal space and the large
return the allocator instance associated with a space
attempt an atomic store operation
debugging info for the semispaces
return the number of pages reserved for use given the pending
perform some concurrent collection work
flush the buffer to the trace
return the number of pages reserved for collection
validate the scheduled sub phases
calculate the number of pages a collection is required to free to satisfy
the number of scheduled sub phases
return the expected reference count
return an individual scheduled sub phase
display a description of this phase for debugging purposes
replace a scheduled phase
attempt an atomic store operation
process any remembered set entries
replace a scheduled phase
replace a placeholder phase
decide which threads will be helpers and let helpers grab their resources
attempt an atomic store operation
trace an edge during gc
trace a node during gc
notify that the collector context is registered and ready to execute
abort concurrent work due to pre empt by stop the world collection
allow concurrent work to continue
attempt an atomic store operation
prepare for a collection
called for live objects in heap
first closure is depth measuring in single thread
only accept non negative values
return the number of pages reserved for use given the pending allocation
calculate the number of pages a collection is required to free to satisfy
only accept non negative values
ensure the value is valid
notify that a new block has been installed
notify that the mutator context is registered and ready to execute
is the specified object live
a new collection increment has completed
a new collection increment has completed
return the space into which an allocator is allocating
trace a reference into the mature space during gc
return true if code obj code is a live object
execute a per collector collection phase
return true if this object is guaranteed not to move during this
called before the mutator context is used but after the context has been
execute a per mutator collection phase
return true if this object is guaranteed not to move during this
return the number of pages available for allocation into the mature
process any remembered set entries
force the next collection to be full heap
flush mutator context in response to a request mutator flush
return the allocator instance associated with a space
flush per mutator remembered sets into the global remset pool
independent of how many pages remain in the page budget a function of
assert that the remsets have been flushed
is the specified object live
return true if this object is guaranteed not to move during this
should we inline a call site
calculate the number of pages a collection is required to free to satisfy
return the number of pages available for allocation into the mature
return the mark state incremented or decremented by one
return the allocator instance associated with a space
is the specified object live
will the object move from now on during the collection
print pre collection statistics
is the specified object live
is the specified object live
return the allocator instance associated with a space
return the expected reference count
return the number of pages available for allocation into the mature
is the specified object live
will this object move from this point on during the current trace
return the number of pages reserved for use given the pending
calculate the number of pages a collection is required to free to satisfy
will this object move from this point on during the current trace
return the allocator instance associated with a space
return the expected reference count
is the specified object live
return the allocator instance associated with a space
return the number of pages reserved for use given the pending
is the specified object live
calculate the number of pages a collection is required to free to satisfy
reset the allocator
given an allocation which starts a new card create a record of
adds a character to the buffer
will this object move from this point on during the current trace
forward data table using the supplied trace
adds a string to the buffer
get an entry for an object
process an object during a linear scan of the heap
gather data for gcspy
process an object during sanity checking validating data
flushes the buffer
gather data for gcspy
nursery can not be empty
nursery can not be empty
only accept non negative values
only accept values between 1 and 100 inclusive
sets the flag so that a thread identifier will be included before
ensure the value is valid
ensure the value is valid
ensure the tile size is positive
trace rate must be positive
ensure the port is valid
ensure that the value is sensible
return the sorting key for the object passed as a parameter
initialize a unit as a sentinel
reset the local buffer throwing away any local entries
get the size of a lump of units
buffer space has been exhausted allocate a new buffer and enqueue
prepare for parallel processing where a specific number
reset the local buffer throwing away any local entries
set the size of lump of units
buffer space has been exhausted allocate a new buffer and enqueue
establish whether a lump of units is free
increment the event counter by code value code
start this counter
start this counter
set the prev pointer in a buffer forming the linked buffer chain
stop this counter
stop this counter
print current mid phase units
the phase has changed from gc to mutator or mutator to gc
get the next lump in the doubly linked free list
increment the event counter
check the number of buffers in the work queue for debugging
print statistics for the most recent phase
push an address on to the stack
increment the event counter by code value code
set the boolean to true for this phase increment the total
start this counter
set the next lump in the doubly linked free list
stop this counter
lock this shared queue
pop an address from the stack
get the previous lump in the doubly linked free list
special process for long double constants
debug routine used to check if the object buffer is sorted correctly in
set the previous lump in the doubly linked free list
release the lock
get the name of this driver type
set the uncoalescable bit associated with this unit
setup summaries part of the code transmit code method
get the name of this driver type
handle a remset address
is the current round of processing complete
clear the uncoalescable bit associated with this unit
reset the remset stream
get the name of this driver type
update the tile statistics
get the lump to the left of the current lump i
register a set of abstract driver instances to be notified about direct references
reset a new subspace
process an edge
reset a new subspace
get the contents of an entry
is an index in the range of this subspace
reset the tile stats for all streams including values used for summaries
get the maximum number of tiles in this space
is address in the range of this subspace
get the block index from an address
update the tile statistics
get the address of start of block from its index
set the contents of an entry
setup summaries part of the code transmit code method
count number of tiles in an address range
handle a root address
get the name of this driver type
calculate the space remaining in a block after this address
reset the roots stream
count number of tiles in an address range
handle a remset address
dump a representation of the subspace
handle a direct reference from the immortal space
indicate the limits of a space
indicate the limits of a space
reset the statistics for all the streams including totals used for summaries
setup the tile names in a subspace
flip the roles of the spaces in preparation for a collection
allocate code size code units
special process for long double constants
gather data for gcspy from the nursery
return true if a cell is on a given treadmill
gather data for gcspy
reduce a lump of units to size freeing any excess
the typical maximum number of objects in each tile
coalesce two or three contiguous lumps of units removing start
update the tile statistics
is the server connected to a gcspy client
is this a discontiguous space request
add a lump of units to the free list
commit pages to the page budget
remove a lump of units from the free list
adjust a page request to include metadata requirements if any
scan an object found at a location
check if this object is an array of primitives
get the lump to the right of the current lump i
adjust a page request to include metadata requirements if any
transmit the data if this event is of interest to the client
scan an object found at a location
notify that several pages are no longer in use
scan an object found at a location
setup summaries part of the code transmit code method
notify that previously unused pages are in use again
handle a direct reference from the immortal space
prepare for a collection
finish up after a collection
gather data for gcspy from the nursery
set space info
setup control info part of the code transmit code method
gather data for gcspy for an older space
adjust the start and cursor fields to point to the next chunk
return the size of the super page
initialise the value of a control
add a control to the tile
set the control
prepare for a collection
release after a collection
get the controls for a tile
release this copy space after a collection
notify that several pages are no longer in use
notify that a new block has been installed
notify that several pages are no longer in use
set the control value in each tile in a region
prepare for a new collection increment
a new collection increment has completed
send all the streams for this space if it has changed
prepare for a new collection increment
return true if this object is live in this gc
is this object live
prepare for a new collection increment
has the object in this space been reached during the current collection
has the object in this space been reached during the current collection
prepare for a new collection increment
a new collection increment has completed
sweep through the large pages releasing all superpages on the
return a block to the global pool
returns if the object in question is currently thought to be reachable
this instance will be age segregated using the sticky mark bits
extend the virtual memory associated with a particular discontiguous
this hook is called by page resources each time a space grows
return a block to the global pool
prepare for a new collection increment
release one or more contiguous chunks associated with a discontiguous
has the object in this space been reached during the current collection
prepare for a new collection increment
this is the treadmill used by the large object space
prepare for a collection
prepare for a collection
a chunk iterator
finish up after a collection
determine the collection kind
a chunk iterator
a chunk iterator
a chunk iterator
return the number of pages allocated since the last collection
gets the specified local variable
return the mark state incremented or decremented by one
notify that a new block has been installed
should the sweep reclaim the cell containing this object
the maximum number collection attempts across threads
report that the the physical allocation has succeeded
log a message
log a thread identifier and a message
report that a physical allocation has failed
does the vm consider this an emergency allocation where the normal
returns if the vm is ready for a garbage collection
given a method name determine if it is a real method or one
create or retrieve the option set used for mmtk options
prepares for using the code compute all roots code method
gets the specified local variable long double
add a reference at the end of the table
update the reference table
computes static roots
reset the mutator iterator
return the next code mutator context code in a
retrieve from the reference table
compute all roots out of the vms boot image if any
trace a reference to an object
tell the native driver the tile name
add an event to the server interpreter
tell the native driver the tile name
set the general info for the server interpreter
start the server running its main loop in a pthread
tell the native driver the tile names
are we connected to a gcspy client
tell the c driver to resize
weak and soft references always clear the referent
start compensation timer so that time spent gathering data is
start a transmission
stop compensation timer so that time spent gathering data is
add a stream to the native driver
indicate that we are at a server safe point e
get the referent from a reference
start transmitting a stream
discover the smallest header size for objects
send a byte
set the referent in a reference
send a short
send an int
clear the contents of the table
end of this stream
start to send a summary
send a summary value
end the summary
the number of entries in the table
send all the control info for the space
mark the line s associated with a given object
the number of entries ready to be finalized
send info for this space
the number of entries ready to be finalized
set the specified local variable
gets a pointer to the address just past the end of the object
return the size required to copy an object
get a block for a parallel sweep
return the alignment requirement for a copy of this object
read nano time high resolution monotonically increasing clock
read a cycle counter high resolution non monotonic clock
convert nanoseconds to milliseconds
convert nanoseconds to seconds
return the alignment offset requirements for a copy of this object
convert milliseconds to nanoseconds
convert seconds to nanoseconds
initialize performance counters
read the current cycle count from the perfctr libraries
read the current event count for the metric being measured by the
return the size used by an object
when an exception occurs registers are saved temporarily
return the next object in the heap under contiguous allocation
return an object reference from knowledge of the low order word
clear all live bits for a block
is the passed object an array
is the passed object a primitive array
tests a bit available for memory manager use in an object
log a message
identify all the object pointers stored as local variables
log a thread identifier and a message
copies characters from the string into the character array
joins an already requested collection
peek at the counter
sets an element of an object array without invoking any write
trigger an asynchronous collection checking for memory
delegated scanning of a object processing each pointer field
the maximum number collection attempts across threads
invoke a specialized scan method
report that the allocation has succeeded
delegated precopying of a objects children processing each pointer field
set the specified local variable
report that a physical allocation has failed
identify all pointers into code pointers associated with a frame
pre copy all potentially movable instances used in the course of
does the vm consider this an emergency alloction where the normal
computes static roots
determine whether a collection cycle has fully completed this is
computes global roots
prepare a mutator for collection
prepare a collector for a collection
computes roots pointed to by threads their associated registers
rendezvous with all other processors returning the rank
compute all roots out of the vms boot image if any
gets the value of bits available for memory manager use in an
ensure all concurrent worker threads are scheduled
create or retrieve the option set used for mmtk options
request each mutator flush remembered sets
possibly yield the current concurrent collector thread
global preparation for a collection
create a new active plan instance using the appropriate vm specific
scan through the list of references
iterate over all references and forward
per collector preparation for a collection
return the number of references objects on the queue
sets the byte available for memory manager use in an object
per collector post collection work
create a new assert instance using the appropriate vm specific
global post collection work
sets the range of addresses associated with a heap
create a new barriers instance using the appropriate vm specific
reset the mutator iterator
demand zero mmaps an area of virtual memory
scan this frame for internal code pointers
protects access to an area of virtual memory
read the byte available for memory manager use in an object
create a new collection instance using the appropriate vm specific
allows access to an area of virtual memory
zero a region of memory
create a new config instance using the appropriate vm specific
zero a range of pages of memory
logs the contents of an address and the surrounding memory to the
create a new lock instance using the appropriate vm specific
sets the bits available for memory manager use in an object
aix specific code
create a new memory instance using the appropriate vm specific
create a new object model instance using the appropriate vm specific
read the bits available for memory manager use in an object
create a new reference processor instance using the appropriate vm specific
create a new finalizable processor instance using the appropriate vm specific
create a new scanning instance using the appropriate vm specific
create a new statistics instance using the appropriate vm specific
create a new strings instance using the appropriate vm specific
return the size required to copy an object
create a new synchronized counter instance using the appropriate
return the alignment requirement for a copy of this object
acquire the appropriate lock depending on whether the context is
create a new util instance using the appropriate vm specific
logs a message and traceback then exits
checks that the given condition is true
checks that the given condition is true
print out the basic information associated with the top frame on
print a stack trace
checks if the virtual machine is running
return the alignment offset requirements for a copy of this object
create a new server interpreter instance using the appropriate vm specific
returns an address guaranteed to be inside the storage assocatied
return a property of type string
return a property of type string with default
return a property of type int
return a property of type string with default
return a property of type boolean
return a property of type boolean with default
returns the number of collections that have occurred
return the size used by an object
release the appropriate lock depending on whether the context is
read the cycle counter
initialize performance counters
print out information associated with a reference
read the current cycle count from the perfctr libraries
read the current event count for the metric being measured by the
dump debugging information for an object
print out the name of a method
get a heap address for the object
object hash code
is this a null reference
type cast to an int truncating on 64 bit platforms
create a string representation of the given int value as an address
type cast to a long zero extending on a 32 bit platform
create a string representation of the given int value as an address
type cast to an offset
the base address of a given cell
type cast to an extent
add two words
add an offset to a word
add an extent to a word
zero the memory in this page
subtract two words
return code true code if this instance is zero
subtract an offset from a word
subtract an extent from a word
return code true code if this instance is the maximum
less than comparison
less than or equal comparison
greater than comparison
fabricate an code object reference code instance from an
load a byte value from this page
greater than or equal comparison
not equal comparison
load a char value from this page
bit wise and of two words
bit wise or of two words
bit wise complement of a word
load an integer value from this page
bit wise exclusive or of two words
left shift a word
return a code word code instance that reflects the value of
logical right shift a word
load a long value from this page
arithmetic right shift a word
add an integer to this code address code and return the sum
add an code offset code to this code address code and
only accept non negative values
only accept non negative values
add an code extent code to this code address code and
get the out of memory status
subtract an integer from this code address code and return
set the out of memory status
get the number of collection attempts
perform the actual read of memory
subtract an code offset code from this code address code and
report a collection attempt
print a new line
clear the collection attempts
mark a mutator as currently active
was the last failure a physical allocation failure
subtract an code extent code from this code address code and
a non fatal error occurred during the setting of an option
a fatal error occurred during the setting of an option
is the given word being watched
compute the difference between two code address code es and
mutator specific handling of uncaught exceptions
return true if this code address code instance is i less
return the mmtk mutator context for this mutator
return true if this code address code instance is i less
compute the thread roots for this mutator
print the thread roots and add them to a stack for processing
a gc safe point for the mutator
policy specific formatting
return true if this code address code instance is i greater
format yield statistics as a string
mark a mutator as no longer active
request a heap dump also invokes a garbage collection
return true if this code address code instance is i greater
take a snapshot of the heap before collection
take a snapshot of the heap after collection
the main collector execution loop
return true if this code address code instance is i equal
print a message that this code path should be impossible and exit
cancel the timeout
mark a mutator as currently active
assert that the given condition is true or print the failure message
return true if this code address code instance is i not equal
wait for a scheduler wake up
store a value into the data field of an object
prefetch a cache line architecture independent
wait for a gc to complete
register an incoming pointer
load and return the value of a data field of an object
scan an object calling the appropriate visitor method
trace an object calling the appropriate visitor method
trace the harness root set
loads a reference from the memory location pointed to by the
iterate over the heap depth first scanning objects until
get the hash code for the given object
loads a reference from the memory location pointed to by the
loads a byte from the memory location pointed to by the
append new instructions
get the index of the current instruction eg as a branch target
set the temporaries required to execute
resolve all the method references in this methods instructions
loads a byte from the memory location pointed to by the
format the p code for this method
resolve this method
get a free temporary from the pool or create a new one
create a new stack frame for the execution of this method
push to the top of the stack
pop off the stack
look at the top element
loads a char from the memory location pointed to by the
loads a char from the memory location pointed to by the
enter a new procedure pushing a new stack frame
exit from a procedure popping the top stack frame
visit an expression and return its type
loads a short from the memory location pointed to by the
visit a node and return its result as a register
get the data count operand from code frame code
loads a short from the memory location pointed to by the
get the reference count operand from code frame code
get the alignment operand from code frame code
get the object on which this instruction operates from the
accessor for the enclosed method
get the field index from the stack frame ie from the location
loads a float from the memory location pointed to by the
does the return instruction return a value
get the return value
format this instruction for printing
loads a float from the memory location pointed to by the
get the object on which this instruction operates from the
the source code line leading to this instruction
the source code column leading to this instruction
the source location of this instruction for error messages
the source location of this instruction for error messages
loads an int from the memory location pointed to by the
loads an int from the memory location pointed to by the
loads a long from the memory location pointed to by the
loads a long from the memory location pointed to by the
define a new field
loads a double from the memory location pointed to by the
given a starting bytecode index find the greatest bc index that
loads a double from the memory location pointed to by the
loads a word value from the memory location pointed to by the
loads a word value from the memory location pointed to by the
return from a method call
perform a method call
push a new stack frame for a given method
save context in the callers stack frame
loads an address value from the memory location pointed to by the
initialize the actual parameters in a method call
get this value as a boolean
declare a variable in a given slot
print a script stack trace
return the variable at the given slot in the current stack frame
get this value as an object
loads an address value from the memory location pointed to by the
return the type of the variable at the given slot
get this value as a boolean
assign a new value to the given slot
gc time processing of the contained object
loads a word value from the memory location pointed to by the
gc support trace this stack frame
debug printing support dump this stack frame and return roots
loads a word value from the memory location pointed to by the
return the saved program counter
save a method code array
stores the address value in the memory location pointed to by the
set the slot for the return value
clear the return value slot
set the return value
convert a return type from a java type to a scripting language value
return the slot of the variable this expression refers to
evaluate the method as an expression
stores the object reference value in the memory location pointed
execute the method as a statement
return the string representation of the most recently formatted ast
stores the address value in the memory location pointed to by the
stores the address value in the memory location pointed to by the
stores the float value in the memory location pointed to by the
stores the float value in the memory location pointed to by the
stores the word value in the memory location pointed to by the
return either the named type or a proxy for the named type
is there a type by the given name
stores the word value in the memory location pointed to by the
return the given source line numbered from 1
stores the byte value in the memory location pointed to by the
stores the byte value in the memory location pointed to by the
stores an int value in memory location pointed to by the
stores an int value in memory location pointed to by the
stores a double value in memory location pointed to by the
type cast to an int truncating on 64 bit platforms
type cast to a long zero extending on a 32 bit platform
stores a double value in memory location pointed to by the
type cast to an offset
type cast to an extent
return code true code if this instance is zero
add two words
stores a double value in memory location pointed to by the
add an offset to a word
add an extent to a word
return code true code if this instance is the maximum
subtract two words
subtract an offset from a word
fabricate an code object reference code instance from an
subtract an extent from a word
stores a double value in memory location pointed to by the
less than comparison
less than or equal comparison
stores a char value in the memory location pointed to by the
greater than comparison
greater than or equal comparison
return an long that reflects the value of this
not equal comparison
stores a char value in the memory location pointed to by the
return a code word code instance that reflects the value of
bit wise and of two words
bit wise or of two words
bit wise complement of a word
add an integer to this code address code and return the sum
bit wise exclusive or of two words
stores a short value in the memory location pointed to by the
left shift a word
update the value of the option echoing the change if the echo options
update the value of the option echoing the change if the echo options
modify the default value of the option
modify the default value of the option
logical right shift a word
update the value of the option echoing the change if the echo options
add an code offset code to this code address code and
modify the default value of the option
stores a short value in the memory location pointed to by the
modify the default value of the option
arithmetic right shift a word
update the value of the option echoing the change if the echo options
return the next option in the linked list
modify the default value of the option
update the value of the option echoing the change if the echo options
add an code extent code to this code address code and
modify the default value of the option
prepare for an atomic store operation
log the option value in plain text
search for a string in the enumeration
log the option value in xml
log the option values in xml
subtract an integer from this code address code and return
a fatal error occurred during the setting of an option
fail if a specified condition is met
a non fatal error occurred during the setting of an option
subtract an code offset code from this code address code and
modify the default value of the option
warn if a specified condition is met
prepare for an atomic store operation
update the value of the option echoing the change if the echo options
modify the default value of the option
subtract an code extent code from this code address code and
prepare for an atomic store operation
compute the difference between two code address code es and
return true if this code address code instance is i less
prepare for an atomic store operation
return true if this code address code instance is i less
prepare for an atomic store operation
return true if this code address code instance is i greater
prepare for an atomic store operation
return true if this code address code instance is i greater
returns the basic block which has the next higher bytecode index
return true if this code address code instance is i equal
prepare for an atomic store operation
return true if this code address code instance is i not equal
prepare for an atomic store operation
attempt an atomic store operation
loads a reference from the memory location pointed to by the
loads a reference from the memory location pointed to by the
attempt an atomic store operation
loads a byte from the memory location pointed to by the
attempt an atomic store operation
loads a byte from the memory location pointed to by the
attempt an atomic store operation
attempt an atomic store operation
loads a char from the memory location pointed to by the
attempt an atomic store operation
loads a char from the memory location pointed to by the
loads a short from the memory location pointed to by the
attempt an atomic store operation
loads a short from the memory location pointed to by the
attempt an atomic store operation
loads a float from the memory location pointed to by the
loads a float from the memory location pointed to by the
loads an int from the memory location pointed to by the
loads an int from the memory location pointed to by the
loads a long from the memory location pointed to by the
loads a long from the memory location pointed to by the
loads a double from the memory location pointed to by the
loads a double from the memory location pointed to by the
loads an address value from the memory location pointed to by the
loads an address value from the memory location pointed to by the
loads a word value from the memory location pointed to by the
loads a word value from the memory location pointed to by the
stores the address value in the memory location pointed to by the
stores the object reference value in the memory location pointed
stores the address value in the memory location pointed to by the
stores the address value in the memory location pointed to by the
stores the float value in the memory location pointed to by the
stores the float value in the memory location pointed to by the
stores the word value in the memory location pointed to by the
stores the word value in the memory location pointed to by the
stores the byte value in the memory location pointed to by the
stores the byte value in the memory location pointed to by the
stores an int value in memory location pointed to by the
stores an int value in memory location pointed to by the
stores a double value in memory location pointed to by the
stores a double value in memory location pointed to by the
stores a double value in memory location pointed to by the
stores a double value in memory location pointed to by the
stores a char value in the memory location pointed to by the
stores a char value in the memory location pointed to by the
stores a short value in the memory location pointed to by the
stores a short value in the memory location pointed to by the
prepare for an atomic store operation
prepare for an atomic store operation
prepare for an atomic store operation
prepare for an atomic store operation
prepare for an atomic store operation
prepare for an atomic store operation
prepare for an atomic store operation
prepare for an atomic store operation
attempt an atomic store operation
attempt an atomic store operation
attempt an atomic store operation
attempt an atomic store operation
attempt an atomic store operation
attempt an atomic store operation
attempt an atomic store operation
returns a string representation of this bble
returns a string representation of state that determines if the bble
dummy stack slot
create the table
this method initializes send button
checks if a document with the given id is already indexed
use this method to test if the index exist
calculated the doc id for the given lito id
deletes the document with the given id if stored in the database
deleted the hole index
adds a new category id to the list
deletes all items which could be reached by the forward button
init the folder tree from the database
show the exception in a message box
sets the lit data value for this synch lit data request
gets the lit data id value for this send lit file request
sets the id value for this synch lit data request
sets the lit data id value for this send lit file request
sets the filename value for this send lit file request
sets the lit time stamp value for this send lit file request
returns the value of field id
sets the value of field filename
sets the value of field id
method has id
sets the value of field father cat
sets the value of field name
computes a new filename bei adding a number if the given name already
copy file to location for files
saves the input stream to file with the given name
job is doing this for you
job is doing this for you
return total amount of workunits to do
increase done work units by one
set job state to job finished or job failed
get description of the job default is a string with the percent
compares two lit data objects by attribute defined in orderby
set the endpoint address for the specified port name
resolve a resource name
sets the name of the used classes recording directory
utility to assist with copying input stream to output stream
the action has been activated
sets a new buffer size
helper merging list2 into list1
insert all the key value pairs from code d code into
determines if the contents of a pattern matcher input instance
very similar to the standard python getattr method
equivalent to the standard python contains method
return the parent of this inferior object
return the account classs unique key
return the indicator whether the account is a liability account
return the accounts description
return the cash flow indicator for investment transactions
return the stock flow indicator for investment transactions
is this a stock account
return the currencys description
return the number of digits after the decimal point
return the decimal point separator character
return the thousands separator character
return the currency prefix
return the currency suffix
initializes the code resource bundle code used to get the
execute the tasks specified when the instance of code worker code
returns the description of this filter
returns the length of the list
returns the code string code that the code collation key code at
removes the code collation key code at the specified index from
execute the tasks specified when the instance of code worker code
sets the view coordinates of the code jscroll pane code s
returns an code action code that copies the selected region of
returns the type of substitution being performed
returns the number of alphabets the code substitution code has
appends the specified code component code to the end of
adds the event listeners the dialog needs to work as expected
returns the code jspinner code s current value
initializes the code text file chooser code s accessory that
returns the code jframe code the code substitution code uses
adds code radio button code to code rb grp code and
gets the ciphertexts coincidence index and sets it as the value of
returns the length of the selection list
returns the value at the specified index
adds a code change listener code to code subst code that
sets the selected item but does not notify any listener about
sets the selected item and notifies the listeners about
returns a code list code of code set code s that contain the
returns the selected item
sets the substitution to injective or not injective
returns the selected code collation key code
returns the instance of code collator code being used
sets the instance of code collator code being used to the one
returns a code set code with the characters that were
returns the code locale code that identifies the language
since the contents of code list code may be changed by
returns a code list model code that may be used to display the
shift the selection in the substitutions currently selected
performs the kasiski test
returns a code jmenu bar code that lets the user access some
returns the characters to be ignored in a code hash set code
returns the user character to be replaced
takes the currently selected code mono alpha subst code and assigns
returns the number being displayed by the code jspinner code
returns the replacement user character
reverses the order of the selected substitution characters in the
returns a code hash map code that uses the characters of the
sets the value of code auto collapse code to that of the
returns the code jframe code used to display the data that results
returns the cipher for which the tools are currently being displayed
returns the cipher alphabet
adds an code action listener code to the combo box
removes an code action listener code from the combo box
returns the plain alphabet
adds an action listener to code ignore btn code
removes an code action listener code from code ignore btn code
returns the kind of state change that took place
returns the index of the alphabet in the code substituion code
adds a code window listener code that warns the user when he
returns the value of code lt cryptanalysis gt code cipher
returns a code set code of code string freq code s with the
returns the code lt cryptanalysis gt code ciphertext
returns a code set code of code collation keys code with the
returns a code set code with the characters of the cipher alphabet
returns a code map code with i character replacement i pairs
returns the value of code lt alpabet rules gt code
returns a code set code with the characters of the plain alphabet
returns the value of code lt alpabet rules gt code
returns a code set code with the characters from the ciphertext
opens a window that displays the list of ignored characters
returns a code language frequencies handler code with all of the
returns a code set code of code string freq code s with the
returns a code set code of code string freq code s with the
returns a code set code of code string freq code s with the
returns a code set code of code string freq code s with the
returns a code set code of code string freq code s with the
returns a code set code of code string freq code s with the
returns the coincidence index calculated using the frequencies of the
returns the code collation key code
sets code str code to code s code
returns the code string code that the code collation key code
sets the frequency to code f code
returns a code string code object representing this
returns the name of the column code col code or code null code
returns the number of rows in the model
adds the code mouse listener code needed to let the user sort the
returns the sequence
returns the sequence in the form of a code string code
returns the length of the sequence in user characters
returns the number of times the sequence appears in the ciphertext
sets code total code to the sum of the frequencies in the list
returns the number of rows in the model
returns a code string code with this code ciphertext manager code s
saves the current cryptanalysis project to its file where it was
sets code locale code to code loc code and
returns the code list code of code string freq code s that contains
sets the value of the member variable code ignore white code to
returns the code set code of code collation key code s that stores
sets the value of the member variable code ignore control code to
returns the code list code of code string freq code s that
returns the character at the specified index in the form of a
returns the code map code that contains the character
returns the code list code of code string freq code s that contains
returns the characters to be ignored in a code hash set code
returns the code list code of code string freq code s that contains
sets the path of the file from which the relative frequencies are
returns the encoding of the file from which the relative frequencies
sets the encoding of the file from which the relative frequencies
returns the absolute path of the instance of
sets the absolute path of the instance of
adds the name of the language in the code locale code
adds the event listeners the dialog needs to add characters to
sets the name of the cryptanalysis project on the title of the
sets the name of the cryptanalysis project on the title of the
if a network contains an on neuron all added hidden and output neurons
deletes all temporary values for this epoch and all values from the
deletes all temporary values for this epoch but keeps all values from
returns the last calculated value of a neuron
creates gneuron wrapper instances for the whole network
the caller has to fire the model change events afterwards
attaches listeners to all neurons and neuron connections that inform the
calculates the fitness of all population elements and selects the best one
selects some population elements to reproduction and possibly generate better elements
reproduction of the selected elements at
mutate some population elements in attempt to increase variability of population
returns the best individual found through the generations
returns the population
register a listener for the generation creation event
unregister a listener for the generation creation event
notify all generation listeners about the creation of a new generation
pointcut where the crossover will occur
creates a random
calculate the fitness of a tour
creates an instance of a tsp model object
this method returns the refined file list but with fully qualified filenames
gets invoked if a card is inserted
gets invoked if a card is removed
install an applet on the smart card
register an applet on the smart card
check whether the card resident applet with the specified
reads the tt applet info tt of a given applet id from
provides credentials to a card service
special ms sql server version to allow the item id
get the next sequence using an oracle thread safe sequence
inclui o usu rio no sistema
sets the icon x position in whole container
sets width of the big version of image icon
sets height of the big version of image icon
sets the icon y position in whole container
sets width of the small version of image icon
sets text is html based or not
signals that potential changes to the component were ended and it can
sets height of the small version of image icon
sets main part of label first string this string is always visible
adds string to label
remove last string from label applies only to non first strings
sets the icon width
sets current focus animation time
sets alpha channel responsible for transparency
sets click animation time
sets the icon height
sets animation element number
sets the area height
sets the area width
sets visibility of shadow generated for icon
sets image type
sets true if the focus animation starting and the icon gain focus false
sets visibility of icon shadow
sets bounds of icon shadow
sets that current state occurs on root actions instead of sub actions
sets shadow image x position inside icon label
sets image bounds
sets small image of the action
sets big image of the action
sets focus time animation value used by focus animator
sets shadow image y position inside icon label
sets click time animation value used by click animator
adds a launch action to action subactions list after that action become a
sets shadow image width inside icon label
sets shadow image height inside icon label
sets the background image
sets visibility of title label contained action title
sets title label x position in whole container
sets main label of whole panel must be set before start is executed
sets title label y position in whole container
sets title label width
sets title label height
sets visibility of description label contained action long description
sets description label width
compute using computor animation input data generate output data and
sets image painting type
sets animation computor
sets color of title label foreground
called when start animator generated new code start time code
sets title label will render text as html or not
called when focus animator generated new code focus time code value
called when click animator generated new code click time code value
sets visibility of main panel background image
close the tee flushes and closes both sides of the tee
description of the method
write a portion of a char array to both sides of the tee
write a character to both sides of the tee
write a string to both sides of the tee
sets a default catalog to use in the dao
description of the method
write a portion of a string to both sides of the tee
get a list of columns in the given schema
gets the current db info attribute of the db console dao object
tell db console to not show a spinner
toggles autocommit mode on the dao
executes the command
description of the method
description of the method
description of the method
description of the method
description of the method
description of the method
show previous queries and offer the user the ability to rerun a query
toggles raw mode on the dao
turn spinner off if dao is in raw mode
tells the dao to to an explicit commit when auto commit is off
description of the method
quits the application
toggles showing the row column
description of the method
executes the command
closes the file output
description of the method
description of the method
sets a default schema to use in the dao
description of the method
description of the method
gets the current database connection url
execute the command
should db console show the spinner most commands can leave this as is
write a character to both sides of the tee
gets the classname of the current database driver
show which database currently connected to
shows the database name url and driver in a form suitable for display
gets the dao
sets the common name for this database
this string will be shown above the list of choices
formats the given time into decimal seconds
sets the url for this database
sets the resource bundle for display strings
gets the input attribute of the input object
gets the url for this database
sets the classname of the driver for this database
sets the dao
gets the classname of the database driver for this database
description of the method
gets the default resource bundle for the choice input here are the valid
adds a known user to the list of users for this database
sets the choices
gets the choices attribute of the choice input object
returns the character at the specified index
returns the length of the sequence could be 0
gets the user count attribute of the db info object
returns that portion of the sequence between the given indices
the string embedded in an ansi color string
gets username and password for the user currently set to use to connect
gets the input attribute of the password input object
reads the next byte of data from the input stream
sets the default choice attribute of the choice input object
gets a list of schemas in the database
gets the default choice attribute of the choice input object
initialize the application
sets the show cancel attribute of the choice input object
gets the show cancel attribute of the choice input object
load the application messages
load the commands from the configuration file
gets the command prompts sets up io and shows the intro
set up the io streams
gets the columns of the tables matching the schema name and table
lists the column attributes for the given schema and table pattern
prints a blank line to the console
prints the given string to the console followed by a line feed
prints the given string to the console
removes count characters from the end of the current line in the display
makes a nifty ascii spinner
gets the connection attribute of the db console object
stops the spinner
sets the echo attribute of the db console object
sets the output stream of the console to the given writer
resets the default output writer to system
sets the in attribute of the db console class
description of the method
description of the method
turns auto commit on or off
resets the default input reader to system
gets the auto commit mode attribute of the db console dao object
sets whether a select should get the raw data from a binary object
gets the raw mode attribute of the db console dao object
executes a data definition command such as alter table etc
returns a string showing the coordinates of the bottom left and top right
returns a string showing just the data from the table
set path to folder which contain templates
fetches the contents of the url string
tab panel should be the width of the window minus some overhead
tab panel should be the width of the window minus some overhead
fetches the contents of the url string
fetches the contents of the url string
changes the visibility of extra widgets tab tags urls
intelli start project kick off demo method
get id method comment
get provider method comment
get name method comment
get id method comment
get event disposition method comment
get event disposition method comment
get provider method comment
put method comment
get address capabilities method comment
get capabilities method comment
get terminal connection capabilities method comment
get transfer controller method comment
this method initializes table list panel
this method initializes datenbank scroll pane
gibt zur ck ob alle server richtig konfiguriert sind
receives data chunks from the
executed on the i event dispatch thread i after the
neues design des programms
neue sprache des programms
returns the new update easy tomcat updater
sets the new update easy tomcat updater
sets the new easy tomcat version
returns the update easy tomcat updater
returns the new updater file name
returns the updater file name
sets the new updater file name
sets the main gui
delete the specified directory including all of its contents and
given a context path get the config file name
given a context path get the config file name
anzeigen des installationsdialogs
returns the server configure check box
gibt die sprachenressource zur ck
setzt den status des tomcat servers
returns the server restart button
returns the server start button
returns the server stop button
this method initializes j panel6
this method initializes connections panel
this method initializes reset button panel
this method initializes reset button
this method initializes j panel7
this method initializes reset button
stoppt tomcat und oder my sql
returns the contentents of the collection as a string a collections with
returns the contentents of the collection as a string a collections with
this method initializes j table
reads the data from the input stream and writes to the output stream
reads the entire contents of stream into a string
uses class loader which loaded streams
this method initializes j scroll pane
convenience method to check for missing resource null stream
this method initializes datenbank scroll pane
returns the configure server
returns the server identifier
returns the server type
returns the version
sets the configure server
adds a filetype dot extension to filter against
gets the complete
gets the destination folder
gets the delete
gets the source zip file
gets the update file delete update dir
gets the state
sets the state
gets the error state
initialize update extractor
sets the error state
initialize update extractor
checks if is use extractor
do proxy configuration
prepare update file
creates the destination folder
checks if is use proxy
sets the use proxy
gets the proxy host
sets the proxy host
check extracted update file
sets the proxy port
gets the proxy user name
sets the proxy user name
gets the proxy user password
sets the proxy user password
checks if is substance design
this method initializes table list panel
gets the updater setting to
returns the ok pressed
this method initializes datenbank scroll pane
sets the ok pressed
creates the xml string
using jaxp in implementation independent manner create a document object
the real workhorse which creates the xml structure
this method uses xerces specific classes prints the xml document to file
returns the description
returns the easytomcat updates
sets the include
sets the exclude
returns the is requested
gets the type
returns the current version
gets the update extractordelete update dir
checks if is use extractor
returns the type
sets the type
returns the new version
sets the use extractor
sets the source zip file
sets the destination folder
gets the delete update dir
gets the value of the easytomcat updates property
sets the value of the easytomcat updates property
create an instance of
create an instance of
returns the allowed old version
create an instance of
create an instance of
create an instance of
sets the is requested
create an instance of
sets the current version
gets the value of the complete property
gets the value of the size property
checks if is can install update
sets the value of the complete property
sets the value of the size property
gets the value of the delete property
checks if is installed
sets the value of the delete property
gets the value of the date property
gets the value of the server identifier property
sets the value of the server identifier property
sets the value of the date property
gets the value of the configure server property
sets the value of the configure server property
gets the value of the server type property
sets the value of the server type property
sets the value of the filename property
gets the value of the new version property
sets the value of the new version property
gets the value of the allowed old version property
sets the value of the allowed old version property
sets the value of the delete update dir property
sets the value of the use extractor property
sets the user list
returns the show only new updates
returns the new show only new updates
gets the tomcat user to
sets the new show only new updates
checks if is new use proxy
this method initializes j panel2
sets the new use proxy
this method initializes j panel7
gets the new proxy host
this method initializes reset button
sets the new proxy host
gets the tomcat user to
gets the new proxy port
adds the active sessions observation
adds the rejected sessions observation
this method initializes j table
sets the new proxy port
adds the expired sessions observation
adds the session counter observation
gets the new proxy user name
adds the total observation
adds the free observation
adds the requests observation
sets the new proxy user name
adds the errors observation
adds the total requests observation
gets the new proxy user password
adds the bytes sent observation
adds the bytes received observation
sets the new proxy user password
sets the tomcat server
sets the text resource
returns the selected role list
sets the tomcat settings panel
sets the add edit user dialog
returns the selected group list
sets the tomcat manager
returns the selected group list model
sets the tomcat overview panel
sets the tomcat server
returns the selected role list model
sets the tomcat users panel
returns the default background color of jlist
returns the group list model
returns the role list model
sets the data
this method initializes j panel6
adds the group
adds the role
removes the role
removes the roles
removes the group
removes the groups
sets the data
gets the tomcat traffic chart panel
returns the create user
sets the create user
gets the tomcat request chart panel
sets the groups
sets the roles
sets the group list
sets the role list
constructs a code string code with all attributes in name value
adds the ssl connector
this method initializes reset button
removes the ssl connector
returns the shutdown port
returns the new shutdown port
sets the shutdown port
returns the referenced element
constructs a code string code with all attributes in name value
returns the new port
sets the new port
returns the original doc base
returns the new protocol
sets the new protocol
returns the new keystore file
returns the new redirect port
sets the new keystore file
sets the new redirect port
constructs a code string code with all attributes in name value
returns the new keystore pass
returns the new scheme
sets the new keystore pass
sets the new scheme
returns the new keystore type
sets the secure
sets the new keystore type
returns the new ssl protocol
sets the new ssl protocol
returns the redirect port
returns the keystore file
returns the keystore pass
returns the secure
returns the keystore type
returns the initial heap size
returns the ssl protocol
returns the max heap size
returns the new client auth
returns the new initial heap size
returns the is new port
returns the new max heap size
sets the new client auth
returns the is new protocol
returns the client auth
returns the is new redirect port
returns the new ssl enabled
returns the is new scheme
sets the new ssl enabled
returns the is new secure
returns the ssl enabled
returns the is new ssl protocol
returns the user manager
returns the is new keystore file
creates the host
returns the is new keystore pass
creates the connector
returns the is new keystore type
creates the context
creates the host
removes the host
removes the connector
removes the context
gets the root context
update the conf tomcat users
removes the host
close the database
save server data
gets the root
sets the s sl keystore to
gets the root path
returns the config dir
checks if is s sl enabled modified
gets the first active ssl connector
gets the first ssl connector
gets the first ssl connector by port
anzeigen des installationsdialogs
returns the up time
gets the export the database to
sets the s ql directory text
gets the s ql directory text
gets the database user to
activate progress bar
gets the my sql add edit user guito
deactivate progress bar
gets the creates the database to
discard work dir
gets the configuration
given a context path get the config file name
sets the user list
sets the user list
switch to online
switch to offline
switch to online
switch to offline
gets the database user
gets the creates the database to
sets the s ql file text
gets the s ql file text
sets the server dir
import existing database
import new database
import skript exclusively
gets the tomcat dir t field
gets the grp
sets the create database dialog
sets the export database dialog
sets the database manager
gets the select tomcat dir
this method initializes connections panel
sets the mysql database panel
this method initializes my sqltraffic chart panel
sets the database manager
sets the mysql settings panel
sets the integrated server
sets the my sqladd edit user dialog
sets the mysql manager
this method initializes my sqltraffic chart panel
sets the import database dialog
sets the database manager
sets the mysql overview panel
sets the my sql users panel
this method initializes reset button
gets the https connector
sets the data
gets the selected service
returns the sql file
sets the sql file
returns the delete existing database
sets the delete existing database
returns the create new database
sets the create new database
sets the database list
returns the import skript execusively
sets the import skript execusively
constructs a code string code with all attributes in name value
sets the aborted connections
returns the sql file dir
sets the sql file dir
sets the bytes received
returns the sql file name
sets the bytes sent
sets the sql file name
sets the connections
constructs a code string code with all attributes in name value
sets the max used connections
sets the opened tables
sets the open files
sets the open streams
sets the open tables
sets the username
sets the threads cached
sets the threads connected
sets the threads created
sets the threads running
gets the old host
creates the user if necessary
gets the config file properties
gibt zur ck ob alle server richtig konfiguriert sind
sets the new port
gets the configuration
gets the port
sets the new port
gets the port
gets the mysql dir t field
gets the port
sets the new port
gets the port
gets the port
sets the new port
sets the new port
gets the port
gets the user name t field
sets the new port
gets the port
checks if is new server configuration
gets the user password t field
gets the select mysql dir
returns the mode
save config file
creates the new working config file
returns the config dir
sets the ssl keystore dialog gui
sets the server version
sets the location
gets the country
sets the country
sets the email
gets the organization
sets the organization
gets the organization unit
sets the organization unit
sets the password
sets the state
sets the alias
gets the lifetime
sets the lifetime
gets the unit
sets the unit
gets the keystore file
sets the keystore file
returns the keystore path
sets the keystore path
sets the location
sets the keystore type
sets the country
sets the organization unit
decrypt the specified bytes with the generated public key
sets the lifetime
sets the unit
gets the ssl keystore dialog guito
gets the ssl keystore dialog guito
gibt an ob das programm schonmal gestartet worden ist
legt fest ob das programm schoneinmal gestartet wurde
returns the owner frame
returns the linked button
setzt den installationsstatus f r datenbank und tomcat
returns the owner frame
gets the exception
constructs a code string code with all attributes in name value
fuegt die validate exception in die collection ein
gets the length
checks if is empty
sets the head text area text
sets the head text area icon
adds the right bottom button
adds the left bottom button
returns the text resource
gets the value of the delete folder property
sets the value of the delete folder property
this method initializes table list panel
this method initializes datenbank scroll pane
this method initializes j panel2
this method initializes reset button
this method initializes j table
this method initializes j scroll pane
sets the user list
adds the requests observation
adds the errors observation
adds the total requests observation
adds the bytes sent observation
adds the bytes received observation
this method initializes reset button
update the conf tomcat users
close the database
save config file
creates the new working config file
design des programms
returns the description
this method initializes table list panel
the creation time of the entry
get the size of this entry
the creation time of the entry
get the absolute file entry name
get the size of this entry
add query to batch
returns a string for inserting into db
escapes the string to be inserted into db
add the list of columns to the current list in the query
dummy function so that it can implement execute update
dummy function so that it can implement execute update
int column references
returns 1 if yes 0 if no or 1 if unsure
this will compare the string to anywhere in the string
moves the cursor down one row from its current position
sets the sequence used for this column if its an auto increment column
sets the foreign primary key
sets the foreign table
releases this code result set code objects database and
same as add where string and pre comparison pred
use this for adding a string that you want to be sql formatted
will recurse through all select querys until union is null
retrieves the value of the designated column in the current row
sql server returns date with time
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
uses default sequence as would be made in oracle create table query
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the first warning reported by calls on this
retrieves the number types and properties of
p gets the value of the designated column in the current row
p gets the value of the designated column in the current row
maps the given code result set code column name to its
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves whether the cursor is on the last row of
moves the cursor to the end of
moves the cursor to the last row in
retrieves the current row number
moves the cursor to the given row number in
moves the cursor a relative number of rows either positive or negative
moves the cursor to the previous row in this
gives a hint as to the direction in which the rows in this
retrieves the fetch direction for this
retrieves the fetch size for this
retrieves the type of this code result set code object
gives a nullable column a null value
updates the designated column with a code boolean code value
updates the designated column with a code byte code value
updates the designated column with a code short code value
updates the designated column with an code int code value
updates the designated column with a code long code value
updates the designated column with a code float code value
updates the designated column with a code double code value
updates the designated column with a code java
updates the designated column with a code string code value
updates the designated column with a code byte code array value
updates the designated column with a code java
updates the designated column with a code java
updates the designated column with an code object code value
updates the designated column with a code null code value
updates the designated column with a code boolean code value
updates the designated column with a code byte code value
updates the designated column with a code short code value
updates the designated column with an code int code value
updates the designated column with a code long code value
updates the designated column with a code float code value
updates the designated column with a code double code value
updates the designated column with a code java
updates the designated column with a code string code value
updates the designated column with a byte array value
updates the designated column with a code java
updates the designated column with a code java
updates the designated column with an code object code value
inserts the contents of the insert row into this
deletes the current row from this code result set code object
cancels the updates made to the current row in this
retrieves the code statement code object that produced this
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
updates the designated column with a code java
updates the designated column with a code java
updates the designated column with a code java
updates the designated column with a code java
updates the designated column with a code java
updates the designated column with a code java
updates the designated column with a code java
initialize the toolbar
converts a chord pro model to a tab style multi line string
creates the pages of the multi page editor
saves the multi page editors document
saves the multi page editors document as another file
calculates the contents of page 2 when the it is activated
spawns the monster for this spawnpoint
adds a player to this map and sends nescessary data
test that a null pointer exception is thrown by the constructor
test that it can construct a template from an empty string
test the opt operator expand method
test the neg operator expand method
test sec x
test the prefix operator expand method
test the suffix operator expand method
test sec x
test the join operator expand method
test the list operator expand method
asserts that given expansion is expanded correctly given a set of parameters
test the code encode code method with an empty string
test the code encode code method for all unreserved characters
test the code encode code method for all ascii characters 0x00 to 0x7f
asserts that given expansion is expanded correctly given a set of parameters
test the code encode code method for some non ascii characters not involving
test the code encode code method for characters involving unicode normalisation
test the code decode code method with an empty string
test the code decode code method for all unreserved characters
test that the constructor sets the name appropriately
test the code decode code method for all ascii characters 0x00 to 0x7f
asserts that given expansion is expanded correctly given a set of parameters
test the code decode code method for some non ascii characters not involving
test that the code is valid name code method work as specified
test the code equals code method for variables with no default value
test the code equals code method for variables with a default value
test the code find code method
test the code equal code method
test the code parse code method for a code null code value
test the code equals code method
test the code parse code method with syntax error
test the code equals code method
test the code find code method
test the code match code method
test the code pattern code method
asserts that the string of matches itself
test the code expand code method using test cases in the specifications
asserts that the pattern is valid and working for a given string
test the code find code method
test the code expand code method using test cases in the specifications
test that the constructor handles an empty string
test the code resolve code method with some int values
test the code equals code method
test the code match code method
test the code equals code method
test the code match code method
test the code resolve code method with some int values
test the code match code method
test the code expand code method using test cases in the specifications
test the code match code method
test the code match code method
test the code match code method
test the code match code method
test the code expand code method using test cases in the specifications
test the code resolve code method with some string values
test the code expand code method using test cases in the specifications
test the code resolve code method with some string values
test the code expand code method using test cases in the specifications
returns the uri handled by this resolver
returns the first uri pattern in the list which matches the underlying uri
test the code resolve code method with some escaped values
generates the token corresponding to the specified expression
returns the first uri pattern in the list which matches the underlying uri
test the code expand code method using test cases in the specifications
returns the variable wrapped by this token
resolves the given uri pattern
test the code resolve code method with some multiple values
test the code expand code method using test cases in the specifications
returns the uri pattern that was used to produce this result
puts the object corresponding to the specified variable name in the results
test the code resolve code method with some multiple values
sets the status of this result
test the code expand code method using test cases in the specifications
test the code expand code method using test cases in the specifications
test the code resolve code method with some multiple values
test the code expand code method using test cases in the specifications
test the code resolve code method with some multiple values
returns the form of this variable
expands the token operator using the specified parameters
test the code resolve code method with some objects values
test the code expand code method when a type is in use
returns the operator part of this token
test the code resolve code method with some objects values
returns the default value for this variable
returns the argument part of this token
test the code resolve code method with some objects values
returns the implementation type of this variable
the default resolver accepts everything and resolves all values to themselves
binds the variables with the specified name to the specified resolver
binds the variables with the specified name to the specified resolver
returns the expanded value of this variable
binds the variables with the specified name to the specified resolver
returns the resolver used for the variable of the specified name or type
returns the resolver used for the variable of the specified name
returns the resolver used for the variable of the specified type
indicates whether this uri pattern matches the specified url
returns the character
returns the regular expression pattern corresponding to this uri pattern
indicates whether the given variable name is bound to a variable resolver
indicates whether the given variable type is bound to a variable resolver
returns the score for this uri pattern
expands the token operator using the specified parameters
compute the regular expression pattern for this uri pattern
compute the score from the specified tokens
scans a single quoted string
collects the rendreres who have the attributes of defined attributes
this method should be called after all renderers are added
the tree instance returned by this method
junit doclet moves marker to this method if there is not match
locates the first child of node with id parent id
locates the first child of node with id parent id
creates a wrapper for the root node
creates a wrapper for a node located at node index
creates the connection with the postgresql driver
get the milliseconds
set the milliseconds for this molst date
returns a java
closes the connection
reads a property from the config file
returns an enumeration of all keys in the properties file
tests a case that should pass
tests a case that should fail
remove the test user from the db
this test fails right now because it creates a patient
this test fails right now because it creates a patient
this test fails right now because it creates a patient
remove the test user from the db
play this sound as a sound effect
initialise the sound effects stored
return the average read length in this sam file
test method for
test method for
get root item for this item
get the top level item of this tree
this function will set certain levels specified to be enabled
set the trial number for logger
set the block number for logger
takes touch pad points where origin is at the top left corner and
if only one up value is taken use 0 for start index
this event is a compound event taken from a compound event
this function updates the gui part of the program
draw the menus
draw the text with shadow
sets the overall volume of this soundset 0 to 1
describes how the samples must be played together in this sound set
adds a stereo sample
uses a soundlevel of 0
get the angle value for the polygon
plays the sample immediately
plays the sample immediately
plays the sample immediately if it is not already playing
plays the sample as soon as no more sound is being played
plays sample after sample0
stops all sounds currently playing
returns the duration of the given sample in seconds
compute the next buffer
check to see if the current zone is different from the last zone
play the end of the selection of a leaf node
this methods is not weighted or every element has the equal weight
reset the sound source so it can adapt to
setup the visual menu
play the number for a trial
uses play stimuli item and select item for simuli
need this method to get the current experiment mode
get the zone index for the current x and y position
get the item in focus under the zone
transform any index number within a set to a float point number
handle the adding of zone index for the spirals
get the radian of the first position
add an int value to the speed queue it is the speed
return the average speed depending on the speed size
if only one up value is taken use 0 for start index
takes touch pad points where origin is at the top left corner and
translate the touch pad points with origin at the top left corner to
translate the screen points with origin at the top left corner to
this one will return the polar coordinates according to the center
these methods are not really used right now
play number only plays number 0 100
must refer to a valid module that sources this class
this is the entry point method
this method initializes this
this method initializes j split pane
stores the flag for whether to just launch the application
gets the preference node for all the installations
gets the node for the installation of a given application
gets the install directory to which the given application
gets the install directory to which the application
gets an installation version node given
gets an installation version node given
gets the flag for whether to just launch the application
gets the path of the first file path extracted
exits the program if in standalone mode otherwise disposes
exports the user preferences from text trix to an xml
imports preferences from an xml file
resets the preferences underneath and including the given
resets preferences starting from the main self extractor
builds the package using the packager xml file
changes the state assuming that the current direction
captures and responds to specific keys pressed
asks user whether the extraction should be cancel and exited
creates an extractor xml file which has need for fewer
gets this object
resolves the entity based on the given public and system ids
paints the component in the center of the panel
prints an error message in response to parser warnings
prints an error message in response to parser errors
creates an packager xml file which has need for more
prints an error message in response to parser fatal errors
sets the welcome message
sets the package name
sets the zip file path
sets the logo file path
sets the output directory path
sets the keybindings to standard shortcuts
sets the command and argument string to run after extraction
sets the readme path for display after extraction
sets the path to a license to display during extraction
gets the package name
gets the zip file path
sets the keybindings to a mesh of standard and emacs shortcuts
gets the logo file path
gets the output directory path
gets the command string for running an application after extraction
gets the readme path for display after extraction
gets the path to the license
converts text displayed in an html enabled field to the same
sets the keybindings to emacs shortcuts for most typical single key
gets the packager object
starts the thread
unzips the file from the stream and closes the stream
extracts the set zip file to the set install location
sets the regions displayed indentation
counts the number of continuous tabs from a given position
indicates that the user has encountered an error in the code
indents a paragraph by a given number of tabs and size per tab
indicates an error during the unzip process
indents the current paragraph no matter where the caret is within it
runs the application using the run string supplied
indents the current paragraph no matter where the caret is within it
sets the reset flag
sets the installation location and also
determines whether the tab is at the start of a given line
sets the non interactive flag
gets the files path
gets the non interactive mode flag
gets the files name
gets the path to the files directory
sets the index of the current state
gets the auto indent selection
sets the file to a path
opens the file chooser sets it up to the appropriate
execute an edit capture the state changes and make the changes
sets the auto indent selection
check whether the file has been created
undoes the last text change
applies the current code undo manager code as well as the tab size
tells whether the pad has any characters in it
gets all the current text
replaces all the text with the given string
converts the pad to a plain text view
converts the pad to an html text view
converts the pad to an rtf tex view if possible
fills an array with the components possible actions
stores the editor kit and document during a state change
restores the editor kit and document from the tables stored settings
sets the number of characters that each tab represents
flags the manager to ignore the next change in style
gets the state of the flag for ignoring the next style change
overridded to return master copy non javadoc
directly use the master copys get image method
set the string variable for the action
override methods to prevent methods replacing the graphics non javadoc
override methods to prevent methods replacing the graphics non javadoc
set the integer value
override methods to prevent methods replacing the graphics non javadoc
override methods to prevent methods replacing the graphics non javadoc
set the boolean value
returns the image buffer to be used
resets the text value of the button
return the string value
uniform calculation which calculates the complexity of the regional tree
uniformity calculation method used to check the maximum complexity of the tree
return the integer value
return the boolean value
set the action
set the target
sets the animation cycle period
return the bottom right x position of the region
sets the caption border
sets the hint of the widget
return the bottom right y position of the region
get the target
returns the neighbors in the tree
set the life of the sprite
a method for converting text color attributes to color values
returns the maximum life cycle of this sprite instance
returns the number of life cycles left in this sprite
enable disable the rotation feature on this widget
method to return the node adjacent to the top
runs audio thread non javadoc
method for reseting board size
method which sets the grid for the rendering panel
method for reseting the board column and rows
set the rotation speed angle for the widget
method to return the node adjacent to the bottom
method used to set the column of the board
method used to set the row of the board
method used to get the node adjacent to the left
return the angle to rotate
method to set the offset
method used to the node adjacent to the right
set the x coordinate
return whether this widget can be rotated
set the y coordinate of the hint
set grid space
sets the hint
reset the still animation image
sets the visibility of the hint
gathers all the widgets in the current region into a result vector
wait for the jpanel to be added to the
returns the length of the hint
add a mouse click image to the image click list
gathers all the widgets within the tree
method used to start rendering
add a mouse over image to the mouse over image list
method checks to see if the current region overlaps with another node
method for starting new thread of this guide
assigns a new rendering panel to the task manager
sets the mouse object
method used to executed the infinite loop non javadoc
add a regular animation image to the mouse over image list
sets the text of the text box
append text to the current text
check to see if the mouse is over the current widget
checks to see if a widget has been clicked non javadoc
returns whether if the current widget text has the mouth over
set the x location of the widget
method which adds a widget to the screen list of widget
set the font color of the text box
method which is used to add hints to the screen
set background color
set the y location of the widget
method used to add the textbox to the screen
method checks to see if the mouse is in the scroll over region
un implemented mouse entered function non javadoc
this method adds a sprite to the spite list
sets the mouse over state to true
sets the visibility of the screen
un implemented mouse exited function non javadoc
set the period of the interval cycle in seconds
performs a tick check and see if the next cycle has been reached
sets the mouse over state to false
method to initate the fade screen change effect
returns the sprites held in this screen
method which returns the widgets held in this screen
un implemented mouse moved event non javadoc
set the pressed state based on the boolean value
method which returns the hints being held in this screen
method which returns the texts being held in this screen
method clears all the widgets in the screen
find proper translations to keep rotated image correctly displayed
method which clears hints
method which clears the texts in the screen
set widget action to be executed
clears all widget objects hints and text
memory optimizing method which constructs a quadrature regional tree
set the actions target
performs memory optimization using a regional grid tree
set the actions string variable
set the actions integer value
removes the hint object from the list of hints
performs memory optimization methods on the screen
set the action boolean
get the x coordinate of the central axis
get the y coordinate of the central axis
set the x coordinate of the central axis
set the y coordinate of the central axis
set the y boundary height of the widget
set the x boundary widget of the widget
execute the widgets action
return this widget
return the current angle of the widget
sets the angle of the widget
this method initializes the menu bar
this method initializes j menu file
this method initializes j menu item evaluate
this method initializes j menu item exit
this method initializes j menu item new
this method initializes j menu item open
this method initializes j menu item save
this method initializes j menu item save as
this method initializes the vertical splitter
repaint using the awt event dispatching thread
uses photo dao
process add transaction
process get items
sets the price of the product
returns the database variable
sets the database variable
boolean representing if the object is in the database
boolean that indicates if object has been written to the db
sets the boolean representing if the object is in the database
change flag to indicate object has been written to the db
returns the date the rental was returned
revenue source refers to the type of income the txln is referring to
sets the date the rental was returned
set revenue source
returns the id of the rental the return is for
sets the id of the rental the return is for
add coupon object to txln
calculate subtotal of txln
creates a new membership by first creating an id and then passing
set revenue source type
creates a new purchase order for the vendor that is passed to it
theres no need for two creates because we dont need
create a payment object
returns the data the repair order was created
sets the date the repair was started
returns the date the repair was completed
sets the date the repair was completed
sets the hours of labor for the repair
returns the date the repair was picked up by the customer
sets the date the customer picked up the repair
used for holding a customer object
validate the e mail address and password passed in
used to hold a membership temporarily
this method will set the amount or dollar discount for the coupon
get is in db
returns the held membership
creates membership interest associations by saving them to the database
returns the held customer object
creates a new repair object by first creating a guid and then calling
create a physical object
creates a new rental return object
saves the repair object to the database
sets the change of the payment
insert a new repair record in the database
sets the type of payment
theres no need for two creates because we dont need
returns the membership id of the owner of the backup
private read of a physical object
sets the membership id of the owner of the backup
set source type
sets the caption associated with a backup photo
sets the amount of the payment
sets the creditcard number
sets the file name of a backup photo
private save method of a product
return the creditcard expiration date
sets the creditcard expiration date
insert a physical object into the database
sets the date of the purchase order
creates a new store object by first creating a guid and then calling
creates a new sale object by first creating a guid and then
sets the vendor
reads a sale object off the database or from cache
sets the order lines
sets the file size of a backup
add orderline to the list
saves the sale to the database
update a database record for a physical object
inserts the sale data into the database
updates the sale data in the database
check to see if a product exists
set the store variable
create a photo set
creates a new interest by first generating a guid and then passing it
sets the product sold
sets the product type
sets the price of the sale
gets the price of the sale
set total price on abstract rs object
get conversion type
set conversion type
returns the times rented of the object
sets the times rented of the object
returns the current rental id
sets the current rental id
sets boolean flat to indicate object has been written to db
returns the database variable
returns the date the rental was picked up
sets the database variable
sets the date the rental was picked up
returns the date the rental is due
sets the name of the store
sets the date the rental is due
sets the description
sets the first line of the stores address
sets the average cost
sets the second line of the stores address
sets the contact name of the vendor
sets the transaction lines for a transaction
adds a single txline to the list of txlns on the object
returns the temporary purchase order for the vendor
sets the temporary purchase order for the vendor
sets the payment object for the transaction
set total price on abstract rs object
theres no need for two creates because we dont need
set photo set object
get print format
set print format
sets employee id of store manager
main method of new tester
create a new instance of a conceptual object
creates a new rental object by first creating a guid and then calling
saves a rental object to the database
inserts a rental object into the database
updates a rental object in the database
returns the length of the backup service
sets the length of the backup service
reads the backup object off the database
sets the cost
returns the late day
insert the conceptual object into the database
private save method that inserts the object into the database
create new conversion order
sets the late days
gets the maximum days for rent
private save method that updates the object database information
sets the maximum days for rent
create conversion type dao based on known id
update the conceptual object information in the database
gets the maximum days it can be late
sets the maximum days it can be late
create print format
returns a boolean if the object exists
calculate subtotal of transaction by adding the subtotal of all txlines
create print format with known id
calculate tax for tx
method for charging members for rental that have never been returned
add subtotal and tax to get total
theres no need for two creates because we dont need
return origional tx object if the tx is a return
returns the number of photos
sets the number of photos
returns the dirty boolean
set origional tx object if the tx is a return
returns the employees social security number
get print format by parameters
sets the employees social secutiry number
this methode will create a new employee object by first creating
sets the interests title
sets the employees date of hire
sets whether the membership has been saved to the database
returns the purchase order
create a transaction based on a previous transaction type return
sets the purchase order
sets the employees salary
sets the product
creates a print order
read a print order
insert a print order object into the database
update a print order object in the database
returns the membership preference to the newsletter
sets the membership preference to the newsletter
return the total of the transaction
creates a new category object
sets the id of the employees assigned store
returns a list of the members interests
create a conversion business object
sets a list of the members interests
insert a conversion object into the db
theres no need for two creates because we dont need
sets the customer of the membership
returns backup experation date
sets experation set
sets the date of the last update
returns the membership if any associated with the customer
sets the membership associated with the customer
replaces the current word token
accumulates a dictionary at the end of the dictionaries list used
indicates if this word is equal to another one
allocates a word if it is not already present in the dictionary
writes the property list key and element pairs in the
adds a word to the list of ignored words
builds the file words database file and the contents file for the on
adds another word to the dictionary
returns a list of words that have the same phonetic code
verifies if the word to analyze is contained in dictionaries
returns a list of word objects that are the suggestions to an
produces a list of suggested word after looking for suggestions in various
method called by j edit to finalize the plugin
resets list of ignored words
loads the index file from disk
this actions doesnt have to remove respected restrictions
may mutate input parameter
onboard debug routine
required because 0
helper method to signal step useful for solver follow up
gets the highest fitness measure
sets vector space
moves all the given figures by x and y
reads the contained figures from storable input
move current selection by dx and dy
reads a string from the input stream
writes a string to the output stream
creates the font from current attributes
gets the handles of the figure
creates the drawing used in this application
this must reflect the capabilities of the drag ssource not your desired
draws this handle
activate a palette of the tool bar by setting all tools
gets the handles for the group figure
gets the attribute with the given name
sets the attribute with the given name
factory method for undo activity
creates the buttons panel
creates the connection figure
creates the color choice for the given attribute
creates the font choice
draws all the contained figures
creates the tools palette
creates the tools
creates the selection tool used in this editor
checks if the created figure is empty
adds a listener for this drawing
moves all the given figures by x and y
forwards draw to its contained figure
connects the figures if the mouse is released over another
returns true if thje enumeration contains the specified figure
inserts a vector of figures and translates them by the
activates the tool for the given view
deactivates the tool
gets the tools drawing
gets the tools editor
sets the attribute with the given name and
shows a help page for the application
handles when the mouse enters or leaves a palette button
initializes the applet and creates its contents
determine if the next input token is a valid number or not
reads an int from the input stream
creates the attributes panel
executes the command
executes the command
creates the color choice for the given attribute
creates the overlay for the given container using a
adds an action listener
remove an action listener
gets the preferred size of the overlay
creates the font choice
creates the buttons panel
gets a the default value for a named attribute
writes a string to the output stream
returns the named attribute or null if a
stores the figure to a storable output
reads the figure from a storable input
creates the tools palette
creates the tools
gets the displaybox including the border
invalidates the figure extended by its border
move current selection by dx and dy
draws the arrow tip in the direction specified by the given two
if the pressed figure is a text holder it can be edited otherwise
gets the handles for the group figure
gets the attribute with the given name
sets the attribute with the given name
handles mouse up events
a text figure understands the font size font style font name
draws the figure in the given graphics
draws the map of the figure
gets the number of columns to be overlaid when the figure is edited
gets the number of rows to be overlaid when the figure is edited
convert an xml style name to a java style name
draws the contents of the drawing view
factory method for undo activity
draws the drawing
factory method which create a new instance of this
disconnects the text figure
bloat the drawing if necessary to contain all objects
creates the color menu
shows an authentication dialog
sends the form to the server
creates the font size menu
adds a string parameter to the form
adds a file parameter to the form
gets the response code from the server
sets the text challenge question
adds a file parameter to the form
gets the response message from the server
writes the form to the specified output stream
gets the response data from the server as a utf 8 encoded string
writes the form to the specified output stream
sets the actions for the action popup menu in the toolbar
replace current app with a different url
creates the fonts menus
creates the color choice for the given attribute
gets the version of the applet
returns the drawing component
creates the tools
workaround to get it work without update button
cancels the applet
creates a new figure by cloning the prototype
shows a help page for the application
shows an authentication dialog
reads a string from the input stream
sets the default tool of the editor
creates the tool palette
gets the preferred size of the overlay
creates an action button with the given image action and text
handles a user selection in the palette
handles when the mouse enters or leaves a palette button
creates the selection tool used in this editor
draws a the figure and decorates it with a border
gets the displaybox including the border
invalidates the figure extended by its border
draws the map of the figure
creates the drawing component
returns the target of this proxy
returns the setter for the property
adds a sub menu to the popup menu
finds a connection end figure
attaches the figure attribute editor handler to the specified drawing editor
override this method to create a tool specific input map which
override this method to create a tool specific action map which
get an image icon from the resource bundle
adds the specified action as a menu item to the supplied menu
adds a separator to the supplied menu
updates the listeners of this action depending on the current view
updates the enabled state of this action depending on the new enabled
trigger the notification of all property change listeners
save the last value from the component and then get the latest value
poll the current state of the jinput device
setup a timer to start polling the jinput devices at a specified time
stop polling if there are no registered listeners
returns whether or not the property has a fixed length
returns the fixed length of the property or code 0 code if the
returns whether or not this spec supports the file alteration discard
returns whether or not this spec supports read only mode
returns whether or not this spec supports a group id
returns whether or not this spec supports the compression of
returns whether or not this spec supports the encryption of
returns whether or not this spec supports unsynchronisation on frame
adds the specified property change listener to receive property change
returns whether or not this implementation supports tag wide
removes the specified property change listener so that it no longer
returns whether or not this implementation supports the include of a tag
subclasses may override this method to return an object where spec
returns whether or not the frame type code frame type code is supported
returns the byte value that is represented by the frame property value
returns the spec independent frame type for the spec dependent frame id
returns the default frame definition for a frame of type
creates a unique frame definition object for the frame
returns whether or not the
returns whether or not this spec and the code object code
returns the object an
really ugly method that subclasses may use to set the tags size without
returns the spec used by this frame
returns the spec dependent lexical id identifying this frame just as you
returns an enumeration of all
returns the property count of this frame
returns whether or not this frame contains a code frame property code
returns the code frame property code of type code type code or
returns the frame property at index code index code
returns whether or not the frames data is supposed to be read only
returns whether or not a group id was set for this frame
returns whether or not the frames data is to be encrypted
returns whether or not the frames data is to be compressed
returns whether or not this frames data is to be unsynchronised
marks this frame to be discardered on tag alteration
tries to set the frames data to be read only
tries to set the frames data to be compressed
tries to set a group id for this frame
returns whether or not the object code object code is equal to this
returns the byte value of the property
returns the frame this property belongs to
sets the code id3v2 frame code this property belongs to
sets the string value for this property to the value
sets the byte value for this property to the value code value code
sets the binary value for this property to the value
adds the frame code frame code to the tag
removes the frame code frame code from the tag
removes the first frame of type code type code in the tag
removes all frames of type code type code in the tag
removes all frames from the tag
recalculates the binary size of the tag
returns the tags size including the padding
returns the preferred size of the tag
returns the tag size excluding the padding
returns the amount of padding being used by the tag
returns the current spec policy
returns the version number of the current spec
returns the revision number of the current spec
returns a string formatted 2
returns whether or not the tag contains a frame of type
returns the total amount of frames in the tag
returns the amount of frames of type code type code in the tag
this method is a convenience for code get id 0 code
returns the frame which is of type code type code and additionally
returns the frame which is of type code type code and additionally
returns the frame which is of type code type code and additionally
returns an iteration over all frames in the tag
returns whether or not the tag is to be considered experimental
returns whether or not a crc32 is included in the binary tag
returns whether or not this tag is restricted in some way
returns the restrictions that affect this tag or code null code if
sets the spec policy which may either be code id3 constants
sets the preferred size of the tag
sets whether or not the tag is to be considered experimental
writes the tag to the
returns key for the given value
if any errors exist return error message
checks whether given graph had edges with negative capacities
removes the minimal element of this binary heap and returns it
return maximum flow size
returns but not removes the minimal element of this binary heap
decreases key of the given element
checks whether graph has loops
if any errors exist return error message
increases key of the given element
if any errors exist return error message
checks whether givaen graph had edges with negative weights
if any errors exist return error message
pushes new command to this buffer
performs this layout
clears this buffer
checks whether there are command for undoing
checks whether there are command for redoing
adds the specified visual state listaner to recive notification about state
removes the specified visual state listaner from this presentation
sets new graph presentation
sets new graph presentation
paints imaginary edge
marks presentations of given edges
selects givet edge presentation
finds and marks element containing given point
selects all item within given rectangle
checkes whether given point lies whithin an already selected item
markes selected vertex
unselects previously selected elements
markes given vertices
unmarks previously marked elements
unmarks previously marked edges
if graph is weighted and weight of some edge contains selected point
unmarks previously marked vertices
if any selected edge end mark contains given point returns this edge
sets new graph presentation to this component
veryfies whether edge end mark was selected
veryfies whether edge start mark was selected
returns new add vertex command
returns new add edge command
returns new edge end editing command
returns new delete command
returns new drag command
returns new drag command
sets a tool to handle events
returns new layout command
returns graph presentation
returns new weight change command
returns new convert to weighted command
returns new convert to unweighted command
returns new convert to undirected command
returns select tool
returns add vertex tool
returns add edge tool
returns dijkstra selection tool
returns max flow selection tool
returns tool factory
returns component editing actions factory
returns component algorythm actions factory
returns whether user has choosen directed or undirected graph
returns component convertion actions factory
returns whether user has choosen directed or undirected graph
adds temrorary component to this component
removes temprorary component from this component
adds new command to this component
performs required actions before another tool is set
sets new state for this tool
performs any additional painting required
adds the specified algorythm error listener to recive notification about state
returns an action for selecting mode
removes the specified algorythm error listener from this presentation
adds button to the list of users
returns an action for adding vertices mode
returns an action for adding edges mode
returns an action for converting graph from unweighted to weighted
returns an action for converting graph from weighted to unweighted
returns an action for converting graph from directed to undirected
returns an action for layout
makes required actions if message is no longer active
return an action for manually discaring highlighting
makes required actions if message is active
returns an action for exit
returns an action for topological sort
returns an action for dijkstra algorythm
returns an action for minimal spanning tree algorythm
returns an action for maximum flow algorythm
returns an action for saving as
adds the specified element state listaner to recive notification about state
removes the specified element state listaner from this presentation
retrieves the center point of this presentation
sets the center point of this presentation
paints this vertex using given graphics
verifies whether this presentation contains given point
verifies whether this presentation lays whithin giver rectangle
adds the specified graph state listaner to recive notification about state
removes the specified graph state listaner from this presentation
pauses all changes firing until resume is not called
resumes firing changes
returns edge start point
paints this graph using given graphics
adds this vertex presentation to graph presentation
removes this vertex presentation from graph presentation
paints this edge using given graphics
adds this edge presentation to graph presentation
removes this edge presentation from graph presentation
checks whether given vertices are connected
validates file according to xml schema
returns preferred graph view size
parses graph from file
returns model graph of this presentation
parses graph presentation from file
checks whether this presentation is weighted
sets weight of this presentation
returns parsed graph
returns parsed graph presentation
returns this presentation weight
saves given graph to xml file
saves given graph presentation to xml file
return upper left point of weight rect
marks this presentation
returns a destination vertex of this edge
returns a vertex opposite to the given one
unmarks this presentation
adds given vertex to graph
verifies whether this presentation contains given point
checkes whether two given vertices are connected with an edge
verifies whether this presentation lays whithin giver rectangle
checkes all contracts of connect
enables subclasses to add vertices to graph
enables subclasses to remove vertices from graph
verifies whether given point is in this prenentation weight rect
checks whether the given vertex is in graph
checks whether the given vertices are in graph
tests special case of
get the component type
get the component key
get the ordinal position of the parameter starting from 0
to create a component monitor instance that sequentially invoke
to get the signature of the method call that caused this error
get the property key
get the expected property type
is this pool currently having something in cache
instantiate the component
get the static type of the component
get the component in this object
get the container in this object
get the number of components registered under a string key
gets the user state of this component
create a new component object with the specified user state
create a new component that utilizes singleton pattern when creating instance
create a new component that utilizes singleton pattern
create a component that instantiates a factory interface
get the string object map of all components with the given type
create a component that instantiates a factory interface
create a component for a constructor with monitoring support
get the key object duplicated
create a component that instantiates the
create a component that instantiates the
decorate this component so that
create a component for a method with monitoring support
get a bean object
create a new component object that
create a new component object that
create a new component object that
create a new component object that
create a new component object that
create a new component object that
create a new component object that
create a new component object that
get the child container
get the parent container
create a new component object that
registers the component to the child container
unregisters components of a provided type from child container
unregisters a component identified by a key
retrieves a component identified by a key
retrieves a component of a provided type
create a new component object that uses a part object
gets the dependency object for a component of
create a new component object that returns the given type
verifies all components in this container
create a new component object that returns the given type
transforms one component object to another
create a new component object that uses dynamic proxy
create a new component object that uses dynamic proxy
create a new component object that uses dynamic proxy
get the component key
to get the source of the exception
create a new component that upon creation
create a new component that upon creation
by default all components depended by this component
get the problematic method
get the total number of parameters
get the parameters
get the properties
get the property type
the component is transformed by
gets the property key
gets the object that has the property
transforms a component by calling singleton
ignore the property identified by a key and use the default mechanism
the component is transformed by
the component is transformed by
make a property identified by a key optional
the component is transformed by
the component is transformed by
get the actual argument type
get the expected type
make sure the properties are optional
the component is transformed by
the component is transformed by
the component is transformed by
make a parameter optional
subclasses may choose to override this method
get the primary resource
get the alternative resource
make sure the parameters are optional
create a component object that will use an alternative creator object
create a component object that will use an alternative creator object
get the public constructor object identified by an array of parameter types
creates an optional component
creates an optional component
create a new component object that will recover errors
monadic bind operation
monadic bind operation
create a component object according to the boolean value returned from this component
get the method identified by a signature
create a staged component
get the key for caching a service
get the public method identified by a signature
create a staged component
create a staged component
gets the factory that creates the servant object who backs this service
get the field object identified by name
monadic sequence operation
get the public field object identified by name
redirects resolution of arguments to properties
redirects resolution of properties to arguments
create a sealed component
get the component for the actual servant
add property setters of an entire class to the filter list
add a single property of a type to the filter list
get the component type
gets the type of the first candidate component
gets the type of the second candidate component
gets the function object
gets the ordinal position of the parameter
get the array object that stores the elements
creates a component that will call a certain method
get the begin index
get the set object storing the component instances
creates a component that will read a certain field
create a new component that repeatedly call this component for
create a component that the create method is put in a
initialize the root web application context
create the yan loader to use
initialize the root web application context
return the yan loader used by this listener
close the root web application context
close the root web application context
this should never even be called since no mapping to this servlet should
to get the servlet context object
to get the resource loader object
this is not guaranteed to be safe
to get the procedure to invoke
initialize this object by instantiating container and life cycle manager
is any life cycle phase defined at all
to get the exception handler of this phase
to get the key of this phase
to add a phase
to remove a phase definition
to determine if a certain phase exists in the life cycle
to get a phase entry
to get all the phase keys
to get all the entries
add a live object into the lifecycle manager
to create a component object that enables life cycle support
to get the managed
pushes a resolution frame to the exception
get the resolution trace
print the resolution trace
print the resultion trace
prints the resolution trace to the standard error output
clear the resolution trace
to register the open phase
to register the close phase
to register the init phase
to register the open phase into a lifecycle object
to register the dispose phase
to register the close phase into a lifecycle object
to register the verify phase
to register the init phase into a lifecycle object
to register the start phase
to register the stop phase
to register the dispose phase into a lifecycle object
to register the open phase as re entrant
to register the verify phase into a lifecycle object
to register the close phase as re entrant
to register the start phase into a lifecycle object
to register the init phase as non reentrant
to register the stop phase into a lifecycle object
to register the dispose phase as non reentrant
to register the verify phase as reentrant
to register the open phase into a lifecycle object
to register the start phase as re entrant
to register the close phase into a lifecycle object
to register the stop phase as re entrant
to register the init phase into a lifecycle object
add a component that instantiates bean post processor
to register the open phase as re entrant
get the name of a bean post processor component
get a bean post processor component
to get the number of bean post processor components stored in the queue
to register the close phase as re entrant
to register the dispose phase into a lifecycle object
to register the init phase as non reentrant
to register the verify phase into a lifecycle object
to register the dispose phase as non reentrant
to register the start phase into a lifecycle object
get the application context object
to register the verify phase as reentrant
report an existence of a disposable bean object
report an existence of a component that instantiates bean post processor
to register the stop phase into a lifecycle object
to register the start phase as re entrant
get all the bean post processor components
get all the destruction aware bean post processor components
to register the stop phase as re entrant
to create a component with the current lifecycle
to get the closer phase
manage an instances life
to set the close phase
to get the disposer phase
get the component object
decorate the autowire mode by filtering out setters defined
to set the dispose phase
subclass override this method to wrap around the delegate target
is the val1 attribute set
is the val2 attribute set
to get the init phase
to set the init phase
to get the open phase
is this registration eagerly instantiated
dynamically register a value
to set the open phase
to get the start phase
to set the start phase
calculate the fully qualified name using the prefix and suffix
loop once by calling the body function and register the result
to get the stop phase
loop once by calling the body function and register the result
to set the stop phase
to get the verify phase
get the class that declares the constructor
evaluate the component without applying life cycle
to set the verify phase
get the binder object
disable key type by throwing exception
disable of by throwing exception
set the factory interface
get the type attribute
get the maximum number of the arguments
is the a property explicitly specified
get the specified autowire mode
when no property names is specified no property values are set
in case the component implements any marker interface or has any specific
get the auto wire mode for properties
get the auto wire mode for parameters
to get the adder method for a given name
get the adder method for adding sub elements anonymously
to get the parameter type for a given adder method
is wildcard used
is this a collection nut
get the evaluator object that evaluates a nut object
get a map of the property descriptors for this type
apply arguments and then properties to the component
get the nut descriptor object for a given sub element
if the nut is a collection nut get the method corresponding
is this tag defined globally
if the nut is a collection nut get the element type of the
get the sequence number starting from 0
get the 1 based column number
get the 1 based line number
get the id of the component within the containing module
get the id of the containing module
get this tags location within the configuration file
get the sequence number in the order of tag evaluation
get the sequence number in the order of tag declaration
to set the sequence number of the tag in the enclosing scope
to set whether the tag is defined globally
the framework calls this method to set the location
the framework calls this method to set the environment
get the class loader used to load the component classes
get a class loader object that uses the current class loader
the framework calls this method to set the tag name
get the environment that the nut object is running in
get the default parameter auto wiring mode
get the default property auto wiring mode
get the default singleton mode
convert an object to a target type
get the dependency trace that caused the cycle
print the dependency trace
print the dependency trace
prints the dependency trace to the standard error output
transforms a component so that the instantiated instance
register a component to be eagerly instantiated using the current tags id
throws a configuration exception with the current tag name and location information
throws a configuration exception with the current tag name and location information
make sure an object is not null
makes sure that a certain attribute is not set yet
makes sure the array only contains one element
to get the parameter binder object that encapsulates the auto wiring strategy
to get the property binder object that encapsulates the auto wiring strategy
to determine if string literal can be converted to the target type
pre initialize eagerly instantiated components
pre initialize eagerly instantiated components
pre initialize eagerly instantiated components
pre initialize eagerly instantiated components
to get the lifecycle manager used by this processor
to get the base directory used by the processor
to get the class loader used to load component classes
to get the resource loader used to load resources
register a property autowiring mode
register a parameter autowiring mode
prepare the test em is serializable em
to find the service object registered using
to register a service object that can be read by customized nuts classes
to unregister a service object
get the set of the keys of the service objects
prepare the test em is xstream serializable em
add an external nut descriptor for the processor to use
prepare the test em verification fails with unsatisfied dependency em
get a nut descriptor registered by put nut
unregister a nut descriptor
prepare the test em creates new instances em
register a variable that can be referenced in the xml file
to get a variable value
checks whether a variable name exists
prepare the test em runtime exception is rethrown em
to remove a registration of a variable
get the set of keys of nut descriptors
create an nuts processor object thats gonna be used to
create an nuts processor object thats gonna be used to
prepare the test em failing verification with cyclic dependency exception em
create a component that instantiates a factory interface
make sure the component will notify the listener when an
get the child container
get the parent container
gets the dependency object for a component of
monadic bind operation
create a staged component
monadic sequence operation
run initliazation for components with java
run start for components with java
run stop for components with java
run dispose for components with java
get the result component object
add an action identified by an action key to the user state
add a starter action
add a stopper action
add an initializer action
add a disposer action
gets the encapsulated constructor object
get the encapsulated field object
get the property names of this bean type
get the property descriptor for a given property
prepare the test em is serializable em
prepare the test em is xstream serializable em
prepare the test em verification fails with unsatisfied dependency em
prepare the test em creates new instances em
prepare the test em runtime exception is rethrown em
prepare the test em failing verification with cyclic dependency exception em
this method construct classsifier
returns the title for the tab in the explorer
returns the tooltip for the tab in the explorer
sets the explorer to use as parent frame
sets the logger to receive informational messages
returns a string describing this attribute evaluator
return the full data set
returns a string describing this attribute evaluator
returns a description of the file type
nastaven viditelnosti ciz ho kl e
nastaven zobrazitelnosti tabulky
not implemented yet
creates and displays the title
reset all aggrgates positions
accessor to the x displacement
accessor to the y displacement
replaces group identifiers of the format code group no code by the
returns the score of the reformulation used by the answer selection
reads a line from the command prompt
translates a german question into english
creates a query string from the interpretation of a question and the
returns the analyzed question
checks if the given answer extraction technique is applied to results
returns the interpretation of the question used to generate this query
sets the analyzed question
sets the score of the query
sets the answer extraction techniques that are applied to results
adds an answer extraction technique that is applied to results retrieved
sets the interpretation of the question used to generate this query
sets a modified question string e
sets the answers determined by the qa engine
return a copy of this code query code object
sets the question interpretation that led to the top answer
returns the question string
returns the question interpretation that led to the top answer if
returns the answer string
returns the supporting document
returns the condensed target
checks if the target is a noun phrase
sets the condensed target
sets the possible target types
marks the target as a noun phrase
sets the term for the verb
looks up a word
compares two predicates by comparing their similarity scores
looks up a word
computes the md5 checksum of a string
writes new entries to the cache
adds a word to the dictionary
waits for the time specified in code timeout code and then interrupts
looks up a word
looks up a word token
sets the verb and or arguments of the predicate
does a fuzzy lookup for a word
does a fuzzy lookup for a token
appends strings to the verb and or arguments of the predicate
returns the maximum number of tokens of a word in the dictionary
returns a new instance of code wikipedia ka code
returns a new instance of code world factbook ka code
tests whether the knowledge annotator is appropriate for a question by
returns the maximum total number of search results
performs the search and passes the results to the static class
extracts the relevant content of a question by resolving the group
returns the maximum number of search results per query
returns a new instance of code wikipedia ka code
returns a new instance of code yahoo km code
returns the name of the knowledge annotator
p sets the query and starts the thread if the knowledge annotator is
p creates code max results total max results perquery code
returns a new instance of code indri km code
returns a new instance of code google km code
returns a new instance of code yahoo km code
returns a new instance of code indri document km code
compares two results by comparing their scores
indicates whether an other result is equal to this one
returns the answer string
p calculates the length of the question interpretation which is defined
returns the normalized score of the result
sets the target of the question
sets the context of the question
drops the context without recalculating the length
p compares this code question interpretation code to another
returns a string representation of the interpretation
returns the id of the document in the search engine cache or
sets the code context ids code field and replaces the context tags by
checks if the answer was judged correct
normalizes and sets the lemma of the term
returns a predicate extracted from a sentence level answer
formats the extracted target and context objects
normalizes and sets the lemmas of the expansions
gets the weight of the term or expansion with the given lemma
returns the supporting sentence of a factoid answer
creates a string representation of the term
checks if a factoid answer is a named entity
checks if a factoid answer was extracted with the given technique
sets the answer string
increments the confidence score by the given value
sets the normalized score of this result
the input properties that must be defined are
sets the id of the document in the search engine cache
judges the answer as correct
overrides default properties with those given
sets named entities extracted from a sentence level answer and their
sets terms extracted from a sentence level answer
sets a predicate extracted from a sentence level answer
reads in properties from this classs properties file and sets class data members
sets the supporting sentence of a factoid answer
convenience method that tokenizes the given question by whitespace creates
adds a named entity type for a factoid answer
creates and populates an instance from a question analysis object
prints the features generated for each example in an input file
returns a copy of this code result code object
retrieve the extra score set by some source
instantiates a rule object from an xml element
tells whether a given instance matches this rule by returning
tells whether a given instance has a feature that matches this rule element
initializes the feature extractor
adds a capturing group that covers the string between the target and
replaces the target tag by a regular expression that matches target tags
replaces context tags by regular expressions that match context tags with
set a property of the target to a given value
retrieve the value of a property
replaces ne tags by regular expressions that match ne tags with at least
check if this dossier already contains a value for some property
optimizes the pattern to improve its runtime performance
cut leading or tailing introductory parts of information given in
compares this object to another code answer pattern code
cut the leading news agency acronym and city from a snippet for instance
prints the current overlap analysis
compares two code answer pattern code objects by comparing the number
filters a single code result code object
the hashcode of an code answer pattern code is the hashcode of its
this method is not used
filters a single code result code object
compares its two arguments for order
compares its two arguments for order
filters a single code result code object
combines normalized scores using comb min
returns the number of correct applications of the pattern
checks if the answer extraction techniques used to extract the first
combines normalized scores using comb med
combines normalized scores using comb max
sets the score of the result to 0 and returns it
returns the number of wrong applications of the pattern
drops a result if the answer string contains only function words and
combines normalized scores using comb sum
drops a result if the answer string contains an interrogative
combines normalized scores using comb anz
drops a result if the answer string contains a single bracket or
calculates a confidence measure for the pattern by applying the formula
delays the main thread until all documents have been fetched
combines normalized scores using comb anz
drops a result if the answer string is an adverb
delays a thread until there are less than max pending pending fetchers
increments the number of correct applications by 1
increments the number of pending fetchers by 1
used by the code web document fetcher code threads to return the
increments the number of wrong applications by 1
increment the value of this term counter by 1
sets the calling filter and the snippet and starts the thread
increment the value of this term counter by code inc code
decrement the value of this term counter by 1
decrement the value of this term counter by code dec code
multiply the value of this term counter times code fact code
find the ne type of a target
cut tailing words like university international corporation
extract acronyms from the targets
get the maximum count out of a set of counters
get the sum of a set of counters
flush the internal buffer
traverse xml document by iteration
traverse xml document by visitor go f
transfer xml to string
transfer string to xml
this method initializes this
this method initializes j split pane
this method initializes this
this method initializes j panel
this method initializes j tabbed pane
this method initializes apdl ui
this method initializes result ui
this method initializes this
this method initializes j button
this method initializes j scroll pane
this method initializes j table
this method initializes j button
this method initializes j button1
this method initializes j button1
this method initializes j scroll pane1
this method initializes this
this method initializes j tabbed pane
this method initializes j button2
this method initializes j list
this method initializes j panel2
this method initializes j image pane
this method initializes j text field
this method initializes j text field1
this method initializes j tabbed pane
this method initializes j text field2
this method initializes j image pane
this method initializes j text field3
this method initializes j text field4
this method initializes j scroll pane2
this method initializes j text field5
this method initializes j text field6
this method initializes j text field7
this method initializes j text field8
this method initializes j text field9
this method initializes j text field10
this method initializes j text field11
this method initializes j text field12
this method initializes j text field13
this method initializes j text field14
this method initializes j text field15
this method initializes j text field16
this method initializes j text field17
this method initializes j button
this method initializes j button1
this method initializes j button2
this method initializes j button3
this function draws our square on screen
checks the current content of columns 1 to 6
inserts a line break if the current position is
inserts a line break if the current position is
counts the number of distinct factors
test for equality up to coefficient
permutes the factors such that a division
creates a deep copy of this expression
tests if two powers have the same base
implements a comparison between powers
the extra flag is used to indicate patterns in parentheses
the extra flag is used to indicate patterns in parentheses
must only be called after set pseudo code
returns a bracket
stores the argument as list of brackets
accept the visitor
operator precedence and associativity
set the list of scripts to be executed by this action
function called by ibis to give us a newly arrived message
function called by ibis to give us a newly arrived message
add given cube to the cache
get a cube from the cache
copy contents of this cube into a given target
number of times this cube has been twisted
function called by ibis to give us a newly arrived message
returns if this cube is solved or not
twist the cube returning the result as a new cube
computes the inverse of a row or column last first etc
checks if consistent
interface receive port connect upcall
verify if a double is a na n
this calculation is based on bisection method
this calculation is based on secant method
reset the n and gn parameters
do the step of fixed point method
check if the method reached the maximum number of iterations
compute the next position
check if is a valid position
verifies if has converged
get the number of iterations
this method returns the largest positive integer satisfying j 1 or if
this method returns the largest positive integer satisfying j 1 or if
this method return x k where k is the largest nonegative integer
this method return x k where k is the largest nonegative integer
calculates the linear interpolation
resolves the referrers returns unknown if not available
returns a name for the robot either the user agent string
get a list of newly instantiated report instances
gets the time of the first request over all log files
gets the time of the last request over all log files
save the current configuration to disk
gets the reports filename
adds a new group of configuration fields settings
gets a group of configuration fields settings
resolves the names of user agents returns unknown if not available
calculates the top level domain from a hostname
get the start date
resets information of all previously identified robots
get the start date formatted as a string
gets the table model adapter
get the end date
add a new log file
get the end date formatted as a string
gets the unresolved hostname ip address always lower case
get a description for the given domain
adds the specified entry to the log file
set the title of the graph
gets the default legend properties
set the labels axis text
gets the default object2 d properties
gets the number of rows
get a suitable graph implementation
sets the hostname ip address which can be code null code
gets the default chart2 d properties
set the numbers axis values
set the labels axis text
gets the value of a specific row and column
gets the default multi colors properties properties
get the graphs buffered image object
set the numbers axis values
gets the resolved hostname always lower case
find a match for the given user agent string
calculate the maximum value of numbers axis
parses the specified log file entry
sets the resolved hostname
gets the entry date time
runs the report generator
sets the entry date time
starts the progam up
shuts the program down
sets the entry date
get a specific string
get a specific character mnemonic
sets the entry time
shows a modal error dialog box with a single ok button
get a specific name value
extract the http protocol version number i
shows a modal error dialog box with yes and no buttons
shows a modal question dialog box with yes and no buttons
gets the originally requested url
extracts a string field converts to an empty string
sets the originally requested url
converts a numerical field to an integer value
gets the resolved url
sets the resolved url
get the filters description
converts a numerical field to an float value
gets the http version
sets the http version
gets the http referrer which might be code null code
get the filters description
get a unique hashcode that identifies this instance used when storing
method get account pending balance
returns the num of transactions
sets the num of transactions
returns the account number
sets the account number
returns the transfer account
sets the transfer account
sets the interval
sets the next apply
sets the trans
returns the payee
returns the status
sets the balance
returns the transaction date
sets the transaction date
returns the account types
returns the all accounts
returns the splits
sets the account types
sets the transactions
sets the splits
sets the all accounts
returns the end balance
returns the reconciled balance
sets the end balance
sets the reconciled balance
returns the pending balance
sets the pending balance
sets the transaction date
sets the splits
returns the all categories
sets the all categories
returns tt true tt if this connection is already connected
creates an inner jar url pointing to the resource with the specified name
creates an url for the specified specification
returns tt true tt if the specified url denotes a directory
returns tt true tt if the specified filename denotes a jar file
converts the specified tt url tt to a tt file tt
looks up the session bean
gets visibility status
set the source
empty method might be used in the future
create a new ctworkbook with all values set to default
return the textual content of the paragraph including text from pictures
returns the text of the paragraph but not of any objects in the
appends a new run to this paragraph
get the document part thats defined as the
returns the paragraph alignment which shall be applied to text in this
returns the policy on headers and footers which
specifies the paragraph alignment which shall be applied to text in this
returns the text vertical alignment which shall be applied to text in
specifies the text vertical alignment which shall be applied to text in
appends a new paragraph to this document
create an empty table with one row and one column as default
specifies the border which shall be displayed above a set of paragraphs
create an empty table with a number of rows and cols specified
specifies the border which shall be displayed above a set of paragraphs
verifies that the document protection tag in settings
verifies that the document protection tag in settings
specifies the border which shall be displayed below a set of paragraphs
verifies that the document protection tag in settings
verifies that the document protection tag in settings
specifies the border which shall be displayed below a set of
specifies the border which shall be displayed on the left side of the
enforce the filling forms protection
enforce the comments protection
specifies the border which shall be displayed on the left side of the
enforce the tracked changes protection
specifies the border which shall be displayed on the right side of the
remove protection enforcement
specifies the border which shall be displayed on the right side of the
specifies the border which shall be displayed between each paragraph in a
specifies the border which shall be displayed between each paragraph in a
specifies that when rendering this document in a paginated
specifies that when rendering this document in a paginated
specifies the spacing that should be added after the last line in this
specifies the spacing that should be added after the last line in this
specifies the spacing that should be added after the last line in this
specifies the spacing that should be added after the last line in this
specifies the spacing that should be added above the first line in this
specifies the spacing that should be added above the first line in this
specifies the spacing that should be added before the first line in this
specifies how the spacing between lines is calculated as stored in the
specifies how the spacing between lines is calculated as stored in the
specifies the indentation which shall be placed between the left text
specifies the indentation which shall be placed between the left text
specifies the indentation which shall be placed between the right text
specifies the indentation which shall be removed from the first line of
specifies the additional indentation which shall be applied to the first
specifies the additional indentation which shall be applied to the first
this element specifies whether a consumer shall break latin text which
this element specifies whether a consumer shall break latin text which
this method provides a style to the paragraph
gets the style of the paragraph
returns a short description of the servlet
returns a short description of the servlet
store the next filter in the pipeline
determine if this filter should be applied to a specific request
store the handler to call when end of stream is reached
this implementation does not read from input so this method does nothing
store a stream to use for output
this method is invoked when end of stream is reached
this returns a web reader for the specified host and port
return the definition this points belongs too
sets the actual bean object
attribute to bind to
autoscale based on actual values
internally used to ceil values
factory to get a plotter i
this method moves the buffer on by one element
this method retrieves the given element from the buffer
lets the user know that the text they entered is
lets the user know that the text they entered is
optionally override in sub classes
adds a new document to the history
displays the previous document in the history list
checks to see if the code htmldocument code contains an
this returns the short information on the server received upon
displays the default text in the status display
returns the index of the server to use
gets the server set in the preferences
adds a new server to the list of servers
removes a server entry from the preferences
gets a property
sets a property
fires a code property change event code to any
returns the short name of the database from which the defintion was
gets the full name of the database from which this definition was
this method initializes this
this method initializes bt logar
this method initializes bt cancelar
this method initializes txt login
this method initializes pf senha
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes j scroll pane
this method initializes this
this method initializes txt matricula
this method initializes btn sair
this method initializes mb principal
this method initializes menu aluno
this method initializes cb pesquisa
this method initializes this
this method initializes txt nome
this method initializes mi cadastro
this method initializes txt descricao
this method initializes mi pesquisa
this method initializes mi sair
this method initializes btn selecionar
this method initializes txt nascimento
this method initializes cb sexo
this method initializes txt rua
this method initializes txt bairro
this method initializes txt cidade
this method initializes txt numero
this method initializes txt zona alvo
this method initializes cb modalidade
this method initializes txt data inicio
this method initializes txt nome
this method initializes j table
this method initializes btn novo
this method initializes txt nascimento
this method initializes btn excluir
this method initializes btn gravar
this method initializes txt cpf
this method initializes txt dia vencimento
this method initializes btn atualizar
this method initializes cb sexo
this method initializes btn pesquisar
this method initializes txt end
this method initializes txt bairro
this method initializes txt cidade
this method initializes txt zona alvo
this method initializes txt data inicio
this method initializes txt dia vencimento
this method initializes btn gravar
this method initializes btn limpar
this method initializes btn excluir
this method initializes btn atualizar
this method initializes btn consultar
this method initializes txt numero
this method initializes txt aluno
this method initializes txt peso
this method initializes txt altura
this method initializes txt braco esq
this method initializes txt braco dir
this method initializes txt torax
this method initializes txt cintura
this method initializes txt quadril
this method initializes txt coxa esq
this method initializes txt coxa dir
this method initializes txt pantu dir
this method initializes txt pantu esq
this method initializes cb modalidade
saves the xml file
returns a lyrics object from a string
returns the value from a given position in the table
returns a connection object to connect with the database
start the player
pause the player
stop the player
returns the length of the song
returns the current position seconds of the player
returns the current position milliseconds of the player
sets the current position of the player seconds
sets the current position of the player milliseconds
returns the current song
returns the number of channels from the audiofile
returns the factor to scale the wave to fit on the x axis
returns the factor to scale the wave to fit on the y axis
returns the increment to draw the wave correctly on the panel
returns the length of the audiofile
add a sentence to the array of sentences
saves the properties
calculates the zoomconstants
this function converts the given song pathname to a wav file
update the song timer
returns the current position
the current position of the song can be set
the previous timeframe will be shown
the next timeframe will be shown
the wave will completely be repainted
the audio info object will be reset and the panel will be cleared
when the pane resizes the wave has to be repainted
the current position can be adjusted with the mouse
this method initializes this
this method initializes j text field
this method initializes j text field2
this method initializes j text field
this method initializes j text area1
this method initializes array
this method initializes j text field
this method initializes j check box
add an element to the indexer if not already present
method applies find some account
resursive procedure used in print method
prints department tree starting with current one
searches for department in loaded structure
recursive function that fetches children of specified department
renames department in database
deletes department from database
inserts a department into database
this method initializes j frame
this method initializes j button
this method initializes j text field
this method initializes j text field1
this method initializes j text pane
this method initializes j button4
initialization of the servlet
sets the service
process the given request generating a response
create an instance of
create an instance of
it attempts to get the password from the private
add an alias password pair to the callback mechanism
method for document listener when something changes in the document
method for document listener when something is inserted into the document
method for document listener when something is removed from the document
central method when something was removed or inserted into a document
method for document listener when something changes in the document
central method when something was removed or inserted into a document
start the fb instances
stop the fb instances
algorithm req in st
start the fb instances
stop the fb instances
algorithm move pist left in java
algorithm move pist right in java
algorithm stop temp in java
algorithm both on state in java
algorithm move pist down in java
algorithm req in st
start the fb instances
algorithm sensor activate in java
stop the fb instances
algorithm move pallet right in java
algorithm stop temp in java
algorithm both on state in java
algorithm move pallet down in java
start the fb instances
stop the fb instances
start the fb instances
algorithm move object left in java
stop the fb instances
algorithm move object right in java
algorithm stop temp in java
start the fb instances
algorithm both on state in java
stop the fb instances
algorithm move object down in java
algorithm initialisation shell in java
algorithm move shell left in java
algorithm move shell right in java
algorithm stop temp in java
algorithm both on state in java
start the fb instances
stop the fb instances
start the fb instances
stop the fb instances
start the fb instances
stop the fb instances
start the fb instances
stop the fb instances
start the fb instances
stop the fb instances
116 algorithm count up in st
127 algorithm count down in st
138 algorithm flash all in ld
145 algorithm chase up in ld
start the fb instances
153 algorithm chase down in ld
stop the fb instances
start the fb instances
stop the fb instances
start the fb instances
stop the fb instances
start the fb instances
stop the fb instances
start the fb instances
stop the fb instances
algorithm alg off in st
start the fb instances
stop the fb instances
start the fb instances
stop the fb instances
algorithm allow right in st
algorithm extend1 in st
algorithm extend0 in st
algorithm block right in st
algorithm wait 1 in st
algorithm allow right in st
algorithm retr0 in st
algorithm block right in st
algorithm allow left in st
algorithm block left in st
algorithm to next0 in st
algorithm to next1 in st
algorithm to mgz1 in st
start the fb instances
algorithm to mgz0 in st
stop the fb instances
algorithm ackled0 in st
algorithm startled1 in st
algorithm startled0 in st
adds an error to the result
algorithm resetled1 in st
algorithm resetled0 in st
algorithm vacuum on in st
algorithm vacuum off in st
returns the java source
removes extra characters at the beginning and end of attribute strings
returns the string to be used to display the tree node
returns the icon to be used for display of this element
gets the parser result
closes a start element
returns a vector of the receivers children
check whether the given jmenu item resides in the given jmenu
internal prints an error message
recursive method for deleting the selected element from the document
store data associated with this library element
retrieve data associated with this library element
returns the document element of the receivers type document with lazy
returns the selected node from the library tree or tt null tt if
sets the dom element represented by this component and updates its
sets the background color tt color
sets the background color tt color 119 190 255 tt for
returns preferred layout size based on components get preferred bounds
returns the default background color tt color
returns the default background color tt color 119 190 255 tt for
sets the selection state
the color for deselected elements of this type
adds the visible parameters of this element if any to the given
add a label at the given location
algorithm count up in st
algorithm count down in st
this method initializes project frame
algorithm flash all in ld
algorithm chase up in ld
start the fb instances
algorithm chase down in ld
this method initializes import text field
this method initializes export text field
this method initializes browse import button
stop the fb instances
this method initializes browse export button
this method initializes import button
this method initializes export button
this method initializes j scroll pane
this method initializes project tree
this method initializes file tree
this method initializes j scroll pane
use binary search algorithm to locate the specified file in the given
this method initializes build button
this method initializes this
this method initializes menu bar
this method initializes exit menu item
this method initializes output pane
this method initializes main split pane
this method initializes xsl combo box
record another answer or throw an exception if the time
return horizonal offset
return vertical offset
get a component from an rdf component description
this method checks for any updates
thi sremoves the filter from the table sorter
this method repopulates the folders combobox
this method populates the locations combobox
this method paint an image onto the backgroud of the panel
this mothod refreshes the table from the download list
this refreshes the combox box with the latest updated series
this method paint an image onto the backgroud of the panel
this gets the download progress of an episode
this sets the size of an episode
this is the lastupdated date of a series
this gets the last checked date
sets the update flag for a series
this sets the last updated date
this sets the last checked date
this gets the last updated date
this returns the tite of the series episode
this returns the location of a series episode
this returns the tite of the series episode
this returns the location of a series episode
sets the update flag for a series
gets the prefixed properties
loads from json
load from json
sets the default prefix
store to json
store to json
gets the process properties
store to json
sets the environment factory
gets the properties
sets the prefix configs to build up a
sets the prefix configs
clears the prefixes the default prefix and set the delimiter to
gets the configured prefix
gets the prefixed properties
sets the default prefix
gets the prefix delimiter
sets the prefixes
sets the prefixes
gets the prefixed key and parse it to an boolean value
gets the prefixed key and parse it to an boolean value
gets the prefixed key and parse it to an byte value
gets the prefixed key and parse it to an byte value
gets the prefix
gets the prefixed key and parse it to an double value
gets the prefixed key and parse it to an double value
gets the prefixed key and parse it to an float value
gets the prefixed key and parse it to an float value
gets the prefixed key and parse it to an int value
gets the prefixed key and parse it to an long value
gets the prefixed key and parse it to an long value
gets the prefix config
gets the prefixed key and parse it to an byte value
gets the prefixed key and parse it to an short value
loads a json file
load a json file by using the given reader
removes the property
sets the configured prefix
sets the default prefix
sets the prefix config
stores a properties file by using the given comments and encoding
store to json
gets the complete properties
attribute config string attribute config name value
attribute config 37 name value
bean bean bean
use to return primitive type or string or json object or json array
use to return primitive type or string or json object or json array
use to return primitive type or string or json object or json array
use to return primitive type or string or json object or json array
same as read in memory parssing
adds a widget
returns the component
sets the option for automatically closing the gui if the optimization
returns the event when the gui is closed
sets the event when the gui is closed
executes the task
force a repaint of the plot
repaints the plot
repaints the diagram
returns the progress value between
returns the number of maximal iterations
returns the current iteration
updates the view
repaints the table
returns the terminate button
bind a value
initialize with a parent
bind a value
returns the current iteration
calls the listeners that listen to the state of this task
bind a constant
adds an item to the given menu which allows to restore the
returns the permutation mode
sets the permutation mode
returns the double type
sets the double type
returns the eta
sets the eta
calculates a random value in the interval
returns the rate of the
sets the rate of the
returns the number of crossover points of the
sets the number of crossover points of the
returns the rate of the
sets the rate of the
returns the number of crossover points of the
sets the number of crossover points of the
returns the nu value of the
returns the type of
sets the nu value of the
sets the type of
returns the number of batched individuals for the evaluation
sets the number of batched individuals for the evaluation
sets the rotation value for the
sets the generations
returns three different
binds the given
calculates the sum of the
sets the final temperature
sets the initial temperature
returns the perturbation
sets the perturbation
calculates the delta value for the non uniform mutation
returns the number of particles
sets the number of particles
randomizes the constants of the term
returns the velocity
sets the velocity
returns the best position
returns the best objectives
sets the best position
update the global leaders
update the personal best of each
returns the tournament value
sets the tournament value
implements the hypervolume calculations as proposed by zitzler e
returns the type of
sets the the type of
binds the given
returns normalized objectives
calculates the fitness of the
returns the second element
returns the number of children
sets the number of children
sets the number of parents
returns the type of crossover rate that is used
sets the type of crossover rate to use
sets the crossover rate
invoke an out message for the
invoke an err message for the
returns the value of an attribute
returns the first child
returns the first child with a specified name
update with current population
returns the strings content
returns the configuration of the
sets the strings content
sets an attribute to a value
return the distance of two
append a new
append an xml
returns the owner
add a new
writes the object information to an output the stream
save the module configurations to a file as filename
save the module configurations to a
save the modules configuration to an
save the module configuration to an
returns the xml representation of the
returns the xml representation of the
calculate the distance between two
adds a module
removes a module
calculate the fitness
executes the specified modules a
returns the total number of
returns the value of the property
sets the value of the property
returns the enclosing actual type of a class
verifies if a class is assignable to a type
sets the value of the property
returns the instance of the
sets the current file
opens the file chooser for loading the current configuration file
opens the file chooser for saving the current configuration file
loads the selected modules from the specified file
saves the current selected modules to the current file
saves the current selected modules to the specified file
removes a module from the panel
returns the divider for the labels
returns the name of a
returns the info of a
returns the tooltip of a
returns the icon of a
returns the name of a
returns the tooltip of a
converts the given
returns the formatted name of the property
returns the instance of the table
returns the instance of the model
formats a text for tooltip inserts break lines
returns the module for the
removes empty categories
sets the state of the
returns the scaling factor for the offset value
sets the scaling factor for the offset value
returns the initial offset value
sets the initial offset value
adds a new
returns a random sat genotype of the constrained problem
binds the specific solver as singleton
binds the specific solver as singleton
sets the right hand side value
checks if this constraint is satisfied for a given model
specifies if the
returns the boolean vector
sets the boolean vector
returns the double vector
sets the double vector
returns the variable of this
returns the phase of this
returns the negated
returns the coefficient
returns the value of the variable or null if this variable is not
returns the literal
sets the variable to a phase
constructs a copy to this term
sets the number of instances
returns the learning strategy
sets the learning strategy
returns the restart strategy
sets the restart strategy
returns the number of learned clauses that are kept
increments the activity of a variable
sets the number of learned clauses that are kept
sets the instance to n vars
sets the value
sets the activity of the specified variable
rescales the activities of the variables
sets the prioritized phase of the specified variable
sets the activity of a variable
returns the activity of a variable
returns the prioritized phase of a variable
the h function
sets the number of bits per double value
sets the zdt function
sets the m value
converts a sublist of boolean values to an integer in 0 1
sets the k value
sets the l value
sets the capacity of this knapsack
sets the m value
set the profit of an item
get the profit of an item
set the weight of an item
get the weight of an item
sets the k value
computes how much the given item exceed the defined capacity of the
computes the profit for the given items for this knapsack
get the integer value in the line
get the double value in the line
returns the costs for one field of a specified dimension
the number of objective functions
adds or removes queen from a field
returns the decoder strategy
sets the decoder strategy
sets the seed of the problem generator
sums the costs of a
counts the number of
converts a binary representation of a double to a double value
set the encoding double or binary
sets the zdt function
validates all settings
randomizes this genotype by a random permutation
initialize this genotype with random values based on the size of the
returns the element value of the index
initialize this genotype with random values based on the number of keys
returns the lower bound for the
returns the upper bound for the
initialize this genotype with
returns the lower bound for the
returns the upper bound for the
initialize this genotype with
initialize this genotype with
returns the feasibility
returns the objective that is assigned to the given value
binds the given
adds the objective with the specified value
call this method if a new iteration started
updates the archive with a single individual
adds the objective with the specified double value
adds the objective with the specified integer value
starts the optimization process
adds all objective with the specified value specified in
increases the iteration value by 1
returns the maximal number of iterations
calculates the euclidean distance of two
returns the wrapped object
returns the objectives
returns the genotype
sets the genotype
sets the phenotype
sets the objectives
indicates whether this
indicates whether this
sets the state of the
sets the list of
sets the capacity of this
set the number of divisions for the
returns the appropriate
returns the most crowded
determines the new bounds for the individuals and returns
sets the type of the random number generator to the specified value
returns the type of the random number generator
select if a specific seed should be used
this method resets the state of this instance using the byte array of
returns the maximal number of parallel threads
sets the maximal number of parallel threads
initialize the print write from a filename
returns the step size of the evaluations
sets the step size of the evaluations
returns the step size of the iterations
sets the step size of the iterations
sets the observation for the number of evaluations
sets the observation for the number of iterations
statistics for the given
sets the printout mode for infeasible individuals
return a string describing this applet
create a color chooser
return the best vertical offset for the given icon
return the best horizontal offset for the given icon
sets the x value of the starting point
updates the end point of the zoom box
sets the x value of the end point
sets the y value of the start point
sets the y value of the end point
draws the zoom in icon
draws the zoom out icon
set this to false to disable drawing of the
true if icons are drawn at the corner of this
return a string describing this applet
return a string describing this applet
exit the application
implements the code action listener code for our timer
implements the code timing event code method from code org
implements the code begin code method from code org
implements the code repeat code method from code org
sets the bounds of the current window
sets the visibility of the current window
sets the window parameter of being on top of other windows
dispose the current window
sets the animation speed
returns the resulting document of the last call to parse
the parse method should call this after parsing
sets wether or not the parser should validate the xml being parsed
returns true if this parser is validating false otherwise
sets wether or not xml schema validation should be done
returns true if this parsers uses xml schema validation
turns namespace processing on off
returns true if namespace processing is on false otherwise
returns the current entity resolver
returns the current error handler
sets an entity resolver for the parser
returns the currently used schmea implementation
change the default schema implementation http www
clones the parser
returns the month day value this object represents
returns a string representation of this object
returns the string representation of this object
returns the xml schema date representation of this time
returns a string representation of this object
returns a string representation of this object
returns the xml schema date representation of this date
returns the value that this object represents
returns a string representation of this object
sets wether or not the parser should validate the xml being parsed
returns true if this parser is validating false otherwise
sets wether or not xml schema validation should be done
returns true if this parsers uses xml schema validation
this sets a dtd reference to use when marshalling objects to xml
this sets a xml schema reference to use when marshalling objects to xml
turns namespace processing on off
adds and object with a key
adds the specified object after the last object of the same key
returns true if namespace processing is on false otherwise
replaces the object associated with the specified key
this is simply an alias for replace
gets an object by key
returns the actual object associated with the key
sets an entity resolver to be used when parsing
returns the object at the specified index
returns tt true tt if the iteration has more elements
gets the current entity resolver or null if none exist
returns the next element in the iteration
removes from the underlying collection the last element returned by the
sets the error handler to use when parsing
returns the current error handler or null if none exist
sets the error handler to use when parsing
sets a filter set that is used when getting children from a parent
this method handles setters of child elements
this sets a dtd reference to use when marshalling objects to xml
this sets a xml schema reference to use when marshalling objects to xml
this method handles attribute setters
receive notification of a recoverable error
receive notification of a non recoverable error
receive notification of a warning
returns the name of the filter
allow the application to resolve external entities
sets the attribue of children to filter on
returns the attribue of children to filter on
sets the value the filter attribute should have to be included
returns the value the filter attribute should have to be included
this should simply create a new instance of the xmlparser implementation and
returns any cauthg dtd reference
returns the next element in the iteration
returns the real resolver
removes from the underlying collection the last element returned by the
makes a new filter in the set
sets a fully qualified name including namespace if any
lookup a named filter
returns the alias for the namespace if any
returns the location of the schema for the namespace
returns the default namespace xmlns as an xmlattribute
returns a fully qualified name including namespace if any
returns the xmlns xsi attribute as an xmlattribute
returns the xsi schema location attribute as an xmlattribute
returns a string representation of all information held by this class
generates a summary section
generates a detail section
generates a detail section alternative 2
sets a child element on this element
adds a child element
returns the current xmlparser implementation
this replaces the standard xmlparser implementation using jaxp apis with a user
creates a new dtdref
returns a list of all direct child elements as xmlelement objects
creates a new dtdref
returns a list of the named child elements
creates a new dtdref
returns the first child element with the name
creates new schema ref
adds a file to generate doc for
creates new schema ref
generates a summary section
generates a detail section for all complex types in the specified iterator
creates a new xmldata filter set that can be set on an xmlunmarshaller
generates detail for a specific complex type
sets an attribute
collects elements in sub groups
internal support method that calls a setter in the real task
internal support method that calls a setter in the real task
returns an iterator of all attributes as xmlattribute objects
returns true if the alternative output is selected
internal support method that calls a getter in the real task
returns the verbose state
sets the directory the documentation should be generated in
returns true if the alternative output is selected
returns the directory the documentation should be generated in
sets the file set of the input schema files to generate from
set to true to list files being generated
returns the current file set
returns the verbose state
executes the task
sets the directory the documentation should be generated in
getter for property barcolor
returna all attributes of the specified name but with different namespace
setter for property barcolor
returns the directory the documentation should be generated in
getter for property bar text color
setter for property bar text color
sets the file set of the input schema files to generate from
getter for property header text color
setter for property header text color
returns the current file set
getter for property xsd file
executes the task
setter for property xsd file
generates a summary section
getter for property doc dir
generates a detail section for all groups in the specified iterator
setter for property doc dir
generates detail for a specific group
finds all xmlns xyz and xmlns attributes
returns true if the minimum required options are set
getter for property alt
setter for property alt
getter for property verbose
returns the options
generates a summary section
generates a detail section for all attribute groups in the specified iterator
generates detail for a specific attribute group
returns the current print writer
returns the value of a specific attribute
returns application specific information for this object
prints a string using the current writer
returns true if there are any app info available
returns the documentation for this object
returns true if there is any documentation available
prints a line plus a line feed using the current writer
writes an annotation node
returns the value of a specific attribute
writes the end of the html document
returns true if there are elements in the set
sets the element value
returns an iterator of xsdelement set
gets a named element reference
returns the elements text value
gets the real attribute this ref references
writes the summary section heading
returns an xsdbase types constant representing the type of this attribute
returns the type as a string
returns the type as a java type
returns the name of the attribute
returns true if this attribute is optional
writes the beginning of a summary section for a type
returns true if this attribute has a default value
returns the default value of this attribute
writes a summary contents comment
do some things we couldnt do before the whole schema was parsed
writes the summary contents for a section entry
this makes sure that if the public type references a public simple type
returns a string representation of this object
returns true if the element has a public type
writes the end of a summary section
returns true if the type is public and an xsd basic type
if has public type returns true this returns the name as a string
writes a heading for the details sections
if has public type returns true this returns the type name
calls the post parse method on all xsdobject objects in the iterator
registers a new named xsdelement
returns true if this element has a private type
writes the start of a detail section
gets the namespace of the object
sets the schema object this object belongs to
returns the schema that this object belongs to
registers a new named xsdcomplex type
validates if the specified type is a primitive schema type
writes the end of a detail section
qualifies a name with the namespace alias used by the schema file
returns all public named complex types as xsdcomplex type objects
this prefixes the name with the namespace alias for the
removes any namespace prefix from the name
registers a new named xsdsimple type
this searches for a child element with the specified name in the specified
writes the start of a detail contents entry
this searches for a child element with the specified name in the specified
returns a registered xsdsimple type
returns all public named simple types
writes the end of a detail contents entry
returns the attributes defined by this attribute group as xsdattribute objects
returns the elements defined by this group
registers a new named xsdgroup
returns the groups defined by this group as string objects
returns the attributegroups defined by this group as string objects
writes a list of attributes as part of a detail
returns all groups as xsdgroup objects
registers a new named xsdattribute group
returns all attribute groups as xsdattrbiute group objects
returns the loaded map
registers a public attribute definition
throws an exception if there were any errors
returns a registered xsdattribute
receive notification of a recoverable error
writes a list of element references as part of a detail
receive notification of a non recoverable error
returns true if the schema requires xml files to be namespace qualified
receive notification of a warning
returns the target namespace
returns the named object if any null otherwise
figures out the installation catalog when run through a jar
adds a zip file to the classpath of this classloader
opens an input stream relative to the installation catalog
returns tt true tt if the iteration has more elements
finds the basic type of this attribute by searching simple type extensions
adds a catalog path to the classpath
returns the next element in the iteration
returns an xsdbase types constant representing the type of this attribute
this takes both a catalog path and paths to zip and jar files
returns the type as a string
removes from the underlying collection the last element returned by the
loads a specific class
returns the basic type
sets min occurs
returns the type as a java type
gets the min occurs value
sets max occurs
returns the max occurs value
finds the specified resource
sets wether or not this element is ordered
returns wether or not this element is ordered
returns true if there are more than one of this element
returns true if this attribute is optional
finds all mathing resources
returns true if this attribute has a default value
returns true if this is a private type
returns the default value of this attribute
returns true if this type extends other types or references groups
returns true if this simple type extends another
if this classpath entry contains the specified file then it returns an internal
returns the extensions as a list of string objects
returns the type this simple type extends if any as a string
returns true if there are elements defined by this complex type
returns an input stream for reading the entry
returns true if there are attributes in the set
returns a list of xsdattribute objects
sets an entity resolver to use
return an url pointing to the entry
sets an entity resolver to use
returns true if there are any attributes defined by this complex type
parses the input stream and returns an xsdschema object
returns true if this complex type have simple content that restricts or extends
if this classpath entry contains the specified file then it returns an internal
this only returns true if extends simple type returns true and the
this method generates a whole interface
returns an input stream for reading the entry
gets the generator options
return an url pointing to the entry
sets the readonly flag
returns the value of the readonly flag
gets the name of the source file we are generating from
closes the output file
sets the package the generated interfaces should belong to
gets the directory we are generating to
returns teh package the generated intefaces should belong to
gets the package the generated interfaces belongs to
sets the package the generated interfaces belongs to
writes a javadoc comment
sets the output directory where the generated files should be put
if true the generator should automatically generate mappings for
sets the automap state
adds an element name object name mapping
returns the output dir
writes a section comment
sets the source schema file to generate from
validates that all required options are set
returns the schema file to generate from
writes the interface end
sets options to use
generates the attribute section
writes default constatns for attributes
writes setters and getters for the attributes
generates the element section
writes an empty line
generates the elements from the references
sets the readonly flag
returns the value of the readonly flag
sets the package the generated interfaces should belong to
writes a default constant
returns teh package the generated intefaces should belong to
if true all non mapped element names are mapped to object names automatically
writes an xom xml object map mapping constant
returns true if automapping is on
returns the value of object name
sets the output directory where the generated files should be put
returns the output dir
executes the task
sets the source schema file to generate from
returns the schema file to generate from
returns the first 60 chars of the passed string
writes an attribute getter
writes a value setter
allow the application to resolve external entities
writes a qualified namespace constant for the factory interface
writes a factory method
converts the name to an object name
this is an internal feature setter that handles exceptions
this should simply create a new instance of the xmlparser implementation and
allow the application to resolve external entities
gets the package of the api to generate
sets the package of the api to generate
gets the schema file to generate from
sets the schema file to generate from
set mappings between element and object names
returns the auto mapping state
set the auto mapping state
returns a string representation of this object
returns a lt doctype
test of main method of class nonvalidating
allow the application to resolve external entities
test of main method of class validating
allow the application to resolve external entities
test of main method of class validating
allow the application to resolve external entities
test of main method of class validating
allow the application to resolve external entities
set to true to list files being generated
given a hash set students fill in combobox appropriately
count number of students in the combobox
should load the combo box with the name of
given an index set the selected student
this method initializes j frame
this method initializes j text area1
this method initializes j editor pane
this method initializes student score
how useful is ontology annotation for integration across phylogenetic studies
how are annotations distributed across anatomy and taxonomy
this method loads in all the ontologies in a specific location
this method connects the shard to the database given the systems
this method creates a node for an instance of the
finds the equivalent tao term for the given zfa term
within bone annotations what is the distribution of skeletal characters
this check if the term has any xrefs to gni
create about dialog with the menu item as parent
reads the software license file into the text area and exposes the dialog
set the endpoint address for the specified port name
creates an obosession by opening and parsing the file
creates a box containing stop watch button
creates the pane for user inputs
set the watcher gui invisible and remove mouse listeners
closes all sockets and stops watching process
closes the transmission sockets
parses the report from transmitter
returns the flag specifying if there is no internet
the thread run function just creates a udp socket and runs the timer
sets the names of the columns
returns the server tcp port
returns the first player the player which started the game
sets the first player name the player which started the game
returns the server udp port
gets the game port of the user
returns the second player the player which joined the game
sets the second player name the player which joined the game
the method parses the given arguments and initializes the fields of the
returns the udp listener an object that manages the alive messages protocol
removes the given client name from the udp list now we will not
gets the transmit waiter socket
this method opens a new timer of the given client
gets the alive sender instance
ends the transmission
this method checks whenever the client is online or not it
returns true of the game is active otherwise returns false
this method prints the borad in the command line
initialize the whole board to be empty
returns true if the game board is full otherwise returns false
returns true if the given cell is one of a row sequence
returns true if the given cell is one of a column
removes a viewer by name if it is exists
returns the color of the player
sets players timer with the object which is listening to this timer
unsets players timer
adds a new watcher into the game
gets the number of the reports
returns the server inet address
returns elapsed time of the current move
this method treats servers public key request the public key for
gets an instance of the encryption class
returns a decrypted input stream for a file
gets the clients alive port
returns an decrypted input stream for a regular
gets the transmit waiter port
gets the game result
gets the winner
sets a winner
gets the current user statistics
sets the current user statistics
sets the top ten users statistics data
gets the transmit waiter instance
gets the number of loses
opens the statistics window and loads the statistics
gets the current time
gets the current date
internal function for info message writing
internal function for error message writing
this method authenticates the given player with the db
updates the gui components which shows the time that left to move
print the info message to the log file
print the error message to the log file
return a string with current date and time for info message
return a string with current date and time for error message
shows a dialog and writes down the message to the log
generates a pair of public private keys
sets a public keyfor the class
gets a public key of the class
encrypts a message with the public key
decrypts the encrypted message with the private key
class representing the timeout event
gets the timer thread
updates the timer text with current time
pauses the timer
resumes the timer
enables the game
restarts the timer and updates the timer text
gets the server public key
updates the timer with a specific time
creates the timer box containing the timer text
disables the game
loads the properties file and returns it
this method treats a statistics request
returns the report status
reset the watcher to null
this method treats a player disconnection
starts the transmission waiter waiting for transmission
stops the transmission and reset the transmission data
pops up a dialog window for the user
prepare the password for transmission
hashes a password
stops the timers
excahnges init data between users their names address and ect
creates an empty report for game
handles the reconnection process
saves a report to a local file
moves to the next player
adds the given player to the game
returns the player of the given color
returns the game id
calls the opponent surrender method of the game
calls the reset connection method of the game
stops the timers and notifies if needed
this method handles the situation that the opponent surrenders
closing the connection sockets
sends the current move to the game viewers
auxillary send to opponent move
sleeps for a certain amount of time
erases the current point
tries to set the time of the source to
a safer way to set the time of the sound source
gets a short helpful comment regarding the use of this
sets the value of this code preference code
a callback for whenever a code preference set code
a callback for whenever
a callback for whenever
a callback for when a
a callback for when the
a callback for when a
a callback for when a
a callback for when the
called whenever the state of the sound source
returns the name of the query language
checks that commit works by br
returns the crs authority factory
converts the given i18n string to an ordinary string using the current locale
returns the last transform that either transformed successfully all coordinates or filled
sets the last transform that either transformed successfully all coordinates or
returns the invalid authority code
converts the character set to a java charset if it can
scans the given directory for
returns the value of the given attribute as a string
returns the value of the given attribute as an upper case string
returns the value of the given attribute as an international string
returns the value of the given attribute as a date
returns the value of the given attribute as a floating point value
adds the given provider to the list of registered providers
returns a description possibly including coordinates of an identified point or points
returns the time after which this datum definition is valid
returns the number of ordinates in the net cdf axis
returns the units as a string
wraps the given net cdf projection into a geo api operation object
generates a list of all supported projections and their parameters in javadoc format
wraps the given net cdf file into a geo api crs object
verifies that the given axis has the expected properties
wraps the given net cdf file into a geo api metadata object
compares the properties found in the
area or region or timeframe in which this object is valid
sets this affine transform to the values of the given matrix
creates a new jndi name for the given scope and character sequence
returns a clone of the
if the event is a request type the method returns the request transported
if the event is a response type the method returns the response transported
returns the code for this exception
returns the client where to write the result response or an
attribtue descriptor being checked against
natural order usually associated with fid or key attribtues
returns the element name for this sorting order as a sql
returns the sort order
returns a single instance after deserialization
retrieve the local name
convert this name to a complete uri
returns the canonical instance on deserialization
returns the canonical instance on deserialization
returns the canonical instance on deserialization
returns the canonical instance on deserialization
creates an exception for an invalid type
creates an exception for an invalid value
prints the given name using the
returns the locale to use for producing messages in the reports
sets the default product name and factory name
adds the given row to the
writes the property value for the given key
adds the coordinate reference systems identified by all codes available from the given
adds an operation to be show on the html page
invoked when the report is making some progress
adds the objects identified by the given codes
returns information about the configuration of the test which has been run
convenience method adding all
creates a new row for the given authority code and identified object
unconditionally throw an exception since this functionality is not supported yet
creates a new row for the given authority code and exception
returns the url to the javadoc of the test method
creates a new row for the given operation and parameters
unconditionally throw an exception since this functionality is not supported yet
adds a new test result
returns a html anchor for the given category
sets the implementation identification
invoked when the existence of a mandatory attribute needs to be verified
unconditionally throw an exception since this functionality is not supported yet
invoked when the existence of a forbidden attribute needs to be checked
writes the list of content before the table of operations
unconditionally throw an exception since this functionality is not supported yet
unconditionally throw an exception since this functionality is not supported yet
returns the current band index
returns the current integer value from iteration
returns the current float value from iteration
returns the current double value from iteration
formats the current position of this iterator in the given buffer
unconditionally throw an exception since this functionality is not supported yet
verify the validity of metadata attributes as documented in the
moves the cursor to the next row and returns
returns the value in the current row at the given column
unconditionally throw an exception since this functionality is not supported yet
returns the value in the given column as a string
sets all ordinate values
string representation for debugging purpose only
returns the value in the given column as an integer or
ensures that the given identifier has a
returns the value in the given column as an integer
validates the given axis
for each interface implemented by the given object invokes the corresponding
returns the value in the given column as a double
validates the given coordinate system
returns the value in the given column as a boolean
validates the given coordinate system
validates the given coordinate system
validates the given coordinate system
returns the authority factory tests backed by the object factories
validates the given coordinate system
validates the given coordinate system
validates the given transformation
validates the given coordinate system
validates the given operation method
validates the given coordinate system
validates the given coordinate system
validates the given formula
performs the validation that are common to all coordinate systems
for each interface implemented by the given object invokes the corresponding
validates the given prime meridian
validates the given ellipsoid
validates the given coordinate reference system
validates the given datum
validates the given datum
validates the given coordinate reference system
validates the given datum
validates the given datum
validates the given datum
validates the given coordinate reference system
validates the given coordinate reference system
validates the given coordinate reference system
validates the given coordinate reference system
validates the given coordinate reference system
validates the given coordinate reference system
for each interface implemented by the given object invokes the corresponding
for each interface implemented by the given object invokes the corresponding
transforms the given coordinates applies the inverse transform and compares with the
logs this message at the given level
for each interface implemented by the given object invokes the corresponding
ensures that iso 19103 or geo api restrictions apply
declares that all given operations are unsupported
returns the tolerance modifier to use for comparing coordinate values
validates the given citation
validates the given responsible party
validates the given contact information
validates the given telephone information
validates the given identifier
validates the given address
validates the given online resource
for each interface implemented by the given object invokes the corresponding
validates the geographic description
validates the bounding polygon
validates the vertical extent
validates the temporal extent
validates the given extent
a dummy factory for testing purpose
invoked by all
more dummy factories as extension of the existing ones
returns the result of
returns the parameters to use for creating the
generates an code input source code from a file name
exit the application
save the created or modified schematron into file
exit the system
two part method the first call should try and get an authentication token
watch the progress of the page
launch a login activity
retrieve the login cookie from the cookie manager and store it in
restore the login cookie from preferences into the cookie manager
connect to whereami json endpoint and request a ui update
connect to ping endpoint and request a get where ami i update
turns on or off drag handling
invoked when the target of the listener has changed its state
sets cut operation flag
returns whether the requested flavor is supported by this
gets the current dot separated key representation
gets the ui dot separated key representation
populates table data list with data from db
get focus component flag either tree or table
set focus component flag either tree or table
returns active row counts
creates export document and write to hard disk
releases application properties resource
sets jdbc driver file path for a given
visits all nodes using deepth first search
p invoked after nodes have been inserted into the tree
this tells the listeners the editor has ended editing
p invoked after nodes have been removed from the tree
called while a drag operation is ongoing when the mouse pointer enters
p invoked after the tree has drastically changed structure from a
called when a drag operation is ongoing while the mouse pointer is still
called whenever the value of the selection changes
this tells the listeners the editor has ended editing
invoked when a component loses the keyboard focus
invoked when a key has been pressed
invoked when a key has been released
called as the cursors hotspot exits a platform dependent drop site
get first column
set first column
get third column
set third column
get fourth column
set fourth column
get fifth column
set fifth column
get sixth column
set sixth column
dot separated key representation
returns true if and only if all the fields are the same
clears change flags
set whether the connection obtained from this data source can be close
checks whether key name has been changed
should we close this connection obtained from this data source
implementation for wrapper interface in order to compile in jdk 6
makes a copy of all fields
implementation for wrapper interface in order to compile in jdk 6
discards and changes for this attribute by restoring old values
returns true if any changes has been made to this attribute
slash separated key representation
returns true if this attribue is marked as delete
returns true if this attribue is a new attribute
sets this attribute as a new
sets attribute inheritance flag
checks whether key name or inherited has been changed
sets attribute inheritance flag
sets new data change time stamp
gets all system data from database
sets this attribute as a new
returns true if and only if all the fields are the same
sets changed flag
commit changes to database
returns a list of all keys from database
gets the lead portion of a dot separated keyname excludes the last keyname
gets attribute by key name attribute name
gets the parent key name
gets the last portion of a dot separated keyname
gets attribute by key name attribute name
convenient method to set full key name from last key name argument
gets the last portion of a dot separated keyname upto specified keyname
gets a list of attributes by key id
starts or restarts the timer
converts to minutes and seconds
converts to seconds
converts to miliiseconds
gets a list of attributes by key name
updates a specified key
gets a list of attributes by code dconfig key code argument
deletes a specified key
retrieves code dconfig key code by id
retrieves code dconfig key code by key name
gets a list of code dconfig key code start with given key token
gets an individual attribute by id
deletes a specified attribute
deletes all attributes for a given dconfig key
p callback method that is called whenever a page is navigated to
p callback method that is called after the component tree has been
writes the specified byte as a character to the
die auswahl nach propsoal anwendung
die kontextinformation nach anwendung
die naeheren information bei selektion eines proposals
beginnt keywort mit char
der text der praefixes
liefert den validator fuer die kontextinformation
liefert code true code wenn parameter destructuring parameter ist
die root node wird als root eingetragen
adds overrides the attribute with the name
appends the given
inserts the given
instanciates a new
sets the text before the first child
sets the namespace of this element by adding a
sets the namespace for elements with
returns the child at position
returns the first child
returns the last child
returns the parent element of this instance or null if none exists
returns the root element that is the one element with no parent
returns the first element for the
returns the text of the first element for the
returns the description
return the description meta data for the pipe described by this
writes the object as an xml output
writes the object as an xml output
reads the object from an xml input
starts a tag
starts a tag
update method updates the object from another entity
update method updates the object from another entity
writes the object as an xml output
reads the object from an xml input
writes the object as an xml output
reads the object from an xml input
returns a list based on its name
provides a summary when the object is displayed in a list
defines the default server
returns actor designed by a network id
returns an encryption key
creates an actor using network id
returns the server address
returns server designed by a name
returns the path to be used in order to store data
replicate the information
allow replication of the information
returns build number
true if the location is the default
returns the path used for code generation
indicates if code is generated
indicates if the specified day is a working day in this location
returns the path used for code generation
writes the object as an xml output
reads the object from an xml input
indicates if code is generated
sets all servers to dirty flag
writes the object as an xml output
reads the object from an xml input
indicates if any of the servers is dirty
starts a tag
update method updates the object from another entity
indicates if the object accepts a filter
returns true if the actor is member of the team
returns lead name
writes the object as an xml output
writes the object as an xml output
reads the object from an xml input
reads the object from an xml input
writes the object as an xml output
reads the object from an xml input
adds files to be opened
returns a summary to be displayed in a list
adds classes used for replication
starts a tag
update method updates the object from another entity
adds classes used for replication
returns a list based on its name
adds prerequisites to the list
returns a list based on its name
returns exception details on the error output stream
adds files to be opened
returns the network identification
returns the alternate network identification
save objects by file
defines the actor as the operator of the system server
save objects by file
save objects by file
provides a summary when the object is displayed in a list
creates a list based on category
writes the object as an xml output
returns the port to be used for the local server
reads the object from an xml input
starts a tag
update method updates the object from another entity
returns the encryption key
returns if the server allows replication
writes the object as an xml output
starts a tag
controls the actor is identified in the recipient
update method updates the object from another entity
indicates if the object accepts a filter
indicates if the object accepts a filter
writes the object as an xml output
returns true if the actor is in the same team as another
indicates the actor has a role
adds prerequisites to the list
true if the holiday schedule is the default
actor set default location
writes the object as an xml output
reads the object from an xml input
writes the object as an xml output
actor set default holiday schedule
reads the object from an xml input
writes the object as an xml output
writes the object as an xml output
reads the object from an xml input
reads the object from an xml input
starts a tag
indicates if the member is available at the instant
update method updates the object from another entity
indicates if the names must be unique in the system or not
writes the object as an xml output
reads the object from an xml input
sets the dirty flag to no
update method updates the object from another entity
writes the object as an xml output
compares two risks for equality
writes the object as an xml output
sends a trace message when the file is saved
sends an error message when the file is not saved
update method updates the object from another entity
provides a summary when the object is displayed in a list
writes the object as an xml output
reads the object from an xml input
adds files to be opened
returns a name
sets entity name
adds classes used for replication
writes the object as an xml output
reads the object from an xml input
saves all objects in file s
returns a list based on its name
compares two events for equality
add the adjustment in hours
compares this object with the specified object for order
writes the object as an xml output
compares two phases for equality
writes the object as an xml output
reads the object from an xml input
starts a tag
update method updates the object from another entity
writes the object as an xml output
reads the object from an xml input
writes the object as an xml output
reads the object from an xml input
starts a tag
update method updates the object from another entity
writes the object as an xml output
starts a tag
update method updates the object from another entity
initializes the project
indicates if the object accepts a filter
writes risks as an xml output
returns true if the actor is involved in the project
returns true if the team is involved in the project
update method updates the object from another entity
provides a summary when the object is displayed in a list
writes the object as an xml output
writes phases as an xml output
writes the object as an xml output
reads the object from an xml input
writes the object as an xml output
writes the object as an xml output
reads the object from an xml input
starts a tag
update method updates the object from another entity
adds prerequisites to the list
provides a summary when the object is displayed in a list
writes the object as an xml output
reads the object from an xml input
starts a tag
update method updates the object from another entity
adds classes used for replication
returns the latest active plan for the project
returns a list based on its name
adds files to be opened
save objects by file
save objects by file
save objects by file
save objects by file
save objects by file
returns the latest forecast for the project and plan
creates a list based on category
writes the object as an xml output
compares this object with the specified object for order
reads the object from an xml input
starts a tag
update method updates the object from another entity
indicates if the object accepts a filter
compares this object with the specified object for order
plan validate forecasts
plan validate trackings
writes the object as an xml output
compares two phases for equality
compares this anonymous to the specified object
initializes the business process
compares two events for equality
writes the object as an xml output
writes the object as an xml output
update method updates the object from another entity
writes the object as an xml output
reads the object from an xml input
writes the object as an xml output
writes the object as an xml output
reads the object from an xml input
rests the task
writes the object as an xml output
reads the object from an xml input
sets forecast name
writes the object as an xml output
reads the object from an xml input
starts a tag
update method updates the object from another entity
returns the application code
provides a summary when the object is displayed in a list
provides a summary prefix when the object is displayed in a list
writes the object as an xml output
reads the object from an xml input
writes the object as an xml output
reads the object from an xml input
provides a summary when the object is displayed in a list
update method updates the object from another entity
provides a summary prefix when the object is displayed in a list
compares this object with the specified object for order
writes the object as an xml output
reads the object from an xml input
sets tracking name
adds classes used for replication
returns a list based on its name
returns the appropriate parser in order to read an element
adds files to be opened
saves all objects in file s
save objects by file
creates a list based on category
returns the number of scheduled hours for the task at the specified date
provides a summary when the object is displayed in a list
starts a tag
update method updates the object from another entity
writes the object as an xml output
starts a tag
update method updates the object from another entity
returns the workload for the task
writes the object as an xml output
compares this object with the specified object for order
writes the object as an xml output
reads the object from an xml input
update method updates the object from another entity
returns the duration type for the workload for the task
compares this object with the specified object for order
writes the object as an xml output
reads the object from an xml input
writes the object as an xml output
reads the object from an xml input
returns the workload in hours for the task
update method updates the object from another entity
adds a duration with a sign
adds a duration with a sign
adds a duration
adds a duration with a sign
returns the last scheduled hours for the task
subtracts a duration
returns duration component in half days
compares this object with the specified object for order
writes the object as an xml output
writes the object as an xml output
adds prerequisites to the list
calculates the maximum between 2 durations
converts the duration to the best approriate unit
calculates a proration based on a percent
calculates a reversed proration based on a percent
converts the duration in hours
writes the object as an xml output
reads the object from an xml input
writes the object as an xml output
adds an element tag value into the current element
reads the object from an xml input
assigns a value based on a duration and a unit
set the server to be dirty after the end of parsing
assigns a new sub entity and a list
interprets a tag
updates the availability from another duration
ends the tag interpretation
starts a tag
adds an element tag value into the current element
interprets a tag
triggered after the end of the tag interpretation
starts a tag
resets the create and update time stamps and actors
adds a string to the string definition
provides a summary when the object is displayed in a list
adds a date into the current element
update method updates the object from another entity
indicates if the class is defined with an application flag
update method updates the object from another entity
provides a summary when the object is displayed in a list
update method security setup
indicates if the object accepts a filter
gets a name used as a method
adds an integer into the current element
update method updates the object from another entity
adds a double into the current element
class control find order number
writes the object as an xml output
reads the object from an xml input
class control assigns order number
class definition validate class codes
update last modified information
update method updates the object from another entity
class control validate after
writes the object as an xml output
reads the object from an xml input
class definition validate class controls
writes the object as an xml output
compares this entity to the specified object
writes the object as an xml output
writes the object as an xml output
reads the object from an xml input
class definition code generation
writes the object as an xml output
writes the object as an xml output
reads the object from an xml input
compares this object with the specified object for order
class definition controls
starts a tag
update method updates the object from another entity
class definition import classes
sets entity name
class definition loop on items
compares this object with the specified object for order
class definition loop on classes
provides a summary when the object is displayed in a list
class definition import class
provides a tip to be displayed in a list
class definition import core classes
class definition add comments
returns the application code
class definition declarations
compares this object with the specified object for order
class definition static values
indicates if the object accepts a filter
writes the object as an xml output
reads the object from an xml input
update method updates the object from another entity
indicates if the entity is visible for a
adds classes used for replication
writes the object as an xml output
returns a list based on its name
adds files to be opened
indicates if the entity matches with the search string
indicates if the package contains panels
saves all objects in file s
writes the object as an xml output
creates a list based on category
indicates if the package contains classes
starts a tag
indicates if the entity can be replicated
writes the object as an xml output
reads the object from an xml input
writes the object as an xml output
reads the object from an xml input
starts a tag
update method updates the object from another entity
writes the object as an xml output
reads the object from an xml input
writes the object as an xml output
writes the object as an xml output
reads the object from an xml input
provides a summary when the object is displayed in a list
update method updates the object from another entity
activates the entity
indicates if the object accepts a filter
transforms a string in a java compliant identifier
provides a summary when the object is displayed in a list
deactivates the entity
core entity defaults
writes the object as an xml output
reads the object from an xml input
update method updates the object from another entity
returns an equality test on the name
compares this object with the specified object for order
returns an inequality test on the object id
writes the object as an xml output
reads the object from an xml input
adds classes used for replication
returns a list based on its name
returns the appropriate parser in order to read an element
adds files to be opened
generates additional java code methods
indicates if the names must be unique in the system or not
saves all objects in file s
save objects by file
creates a list based on category
writes the object as an xml output
reads the object from an xml input
sets entity name
starts a tag
indicates if the actor is available at the instant
update method updates the object from another entity
writes the object as an xml output
starts a tag
reads the object from an xml input
interprets a tag
ends the tag interpretation
returns the root action not the answers
ends the tag interpretation
starts a tag
interprets a tag
returns the session
returns the server
returns a list based on its name
creates the list based on category
returns the xml streams
tells if its a delete transaction
indicates if the action has errors or not
creates the list based on class
tells if its a detail transaction
tells if its a save transaction
tells if its a summary transaction
tells if its a short summary transaction
tells if its an expand transaction
interprets a tag
ends the tag interpretation
indicates if the action is complete
tells if its an update transaction
trace on the console
returns forecast date
tells if its a replicate transaction
tells if its a load transaction
creates an object id
indicates if the action is for the actor
defines if the component can be enabled or not
returns true if the component can be enabled
defines if the component must be saved even if its disabled or not
returns true if the component must be saved even if disabled
indicates if the action is for the team members of actor
enables or disables the component
changes the object id
compares this item to the specified object
indicates if the action comes from the actor
indicates if the action is pending
indicates if the entity is demo data
indicates if the action has been sent or not
returns the object id
provides a summary when the object is displayed in a list
triggers a thread for redisplay of the diagram
returns who last updated the entity
provides a tip to be displayed in a list
enables or disables the component
sets action name
returns content prepared for display
returns a text formatted for html output
manages click on lookup button
resets the availability or the actor or anonymous
enables or disables the component
removes all messages used for display of diagram
sets the title for this frame to the specified string
add an item code and label
add an item code and label with no duplicate
add an item code label and icon file name
add an item code only
returns the diagram image for the referenced period
indicates if the entity can be replicated
returns the code associated to the given label
returns the item associated to the given code
returns the label associated to the given code
returns the icon associated to the given label
returns title to be used for the frame
returns the maximum number of displayed periods
creates the associated objects based on number of columns
returns the icon file name associated to the given label
attachs a lookup panel associated to a column and a class name
returns the code associated to selected item
returns the label associated to selected item
defines the column as a date with a lookup
returns the icon file name associated to selected item
manages selection changes in the table
returns the lookup button
selects the given code in the combobox
returns the number of attached lookup panels
returns the lookup panel at given column
activates or deactivates buttons based on current display
runs the lookup panel at selected column
manages change on search criteria
cleans the table
delete selected row
runs the lookup
clears the search string
associates the main frame to the looup
manages clicks on lookup button
returns the attached lookup button
returns the attached calendar panel
defines the search key
forces calendar dates refresh
hides the attached calendar
cleans the component
indicates if the button defines a menu bar
sets text with date conversion
manages clicks on buttons
returns text with date conversion
indicates if the button defines a menu bar
returns the text with no date conversion
manages click on lookup button
selects the button using current selected category from main frame
assigns a text with date conversion
sets associated panel
gets associated panel
saves the search parameters associated with the button
retrieves the search parameters associated with the button
returns content prepared for storage
returns content prepared for display
defines the filter string
defines the search string
assigns an icon
returns icon name filename
inserts a text into the label
inserts a text into the label
changes state to opened
changes state to closed
executes the thread
runs the lookup thread and wait for its completion
writes the object as an xml output
starts a tag
add the associated menu to the menu bar
interprets a tag
refreshs a menu item based on a button
ends the tag interpretation
manages clicks on the button
starts a tag
manages expand or collapse
interprets a tag
ends the tag interpretation
compares this entity to the specified object
interprets a tag
returns the attached lookup panel
hides the lookup panel
ends the tag interpretation
manages click on lookup button
interprets a tag
ends the tag interpretation
manages buttons and menus
creates an action based on the provided string
compares this object with the specified object for order
deselects any selected item in the tree
manages buttons and menus
manages clicks and selection changes in the calendar
returns the last message attached in the chained list
manages panel content after its populated from xml
reselects the previouly selected item in the tree
manages buttons and menus
displays current month
returns the search string
triggers a thread for redisplay of the calendar
clears the search string
displays next month
defines the search string
displays previous month
sets prefered sizes for all columns
stores a message defined for the calendar
locks or unlocks every search criteria
paints diagram image
removes all messages used for display of calendar
creates the associated objects based on number of columns
returns the filter defined for a specific category
action on a new button when pressed from a data panel
selects and displays a date in the calendar
defines a filter for a specific category
manages clicks on buttons
manages buttons and menus
manages panel content after its populated from xml
assign a name to server name
sets a color for the server name
attachs the latest created label to the new component
sets the focus on search box
converts the item into a string
compares this item to the specified object
returns the search key string
returns the item displayed string
assigns a name to the given column
compares this item to the specified object
assigns an xml tag to the given column
manages actions on the keyboard
manages panel content after its populated from xml
manages buttons and menus
adds buttons to action bar
refreshs extra menu items
manages buttons and menus
manages buttons and menus
assigns a prefered or default size to the given column
manages buttons and menus
creates an action based on the provided string
manages panel content after its populated from xml
manages panel content after its populated from xml
manages buttons and menus
manages buttons and menus
resets the progress bar to its initial state
increases value of progress bar and displays a message
creates an action based on the provided string
manages buttons and menus
defines a width to the given column
returns the human readable description of this filter
manages panel content after its populated from xml
writes a title
starts a tag
starts a tag
starts a tag
writes a title and value in table
interprets a tag
ends the tag interpretation
starts a tag
interprets a tag
ends the tag interpretation
writes a picture and includes it in document
starts a tag
interprets a tag
returns the counter of total elements
ends the tag interpretation
inserts a new row at the end with defaults
interprets a tag
indicates if the panel can be edited
ends the tag interpretation
starts a tag
interprets a tag
generates file footer
ends of the interpretation
starts a tag
returns the operator last update
starts a tag
closes the document
interprets a tag
ends the tag interpretation
returns the operator last revision
displays document in system browser
ends the tag interpretation
returns the operator password
copies a file from the application library
inserts a new row at the end with defaults or not
returns the list of files from the library
returns the number of elements in the internal list
returns operator name
writes in the output stream
indicates if the panel can be deleted
returns the class of the element stored in the internal list
returns operator last revision
returns operator password
returns operator network id
returns the element stored in the internal list
returns operator id
returns the element stored in the internal list
writes the object as an xml output
inserts a new row at the end or after the selected row
tells the server one actor is not authorized
cleans lists when some elements are identical
indicates if the session is authorized
increments the number of requests
compares this entity to the specified object
returns the server
creates a local server
returns the connection
starts a tag
indicates if the panel can be edited
interprets a tag
copies the content of the provided document in the document
ends the tag interpretation
deletes selected row
executes a query toward the server
copies the content of the provided document in the document
runs the parser based on an uri
runs the parser based on a query or string
generates an exception into the error stream
runs the parser based on a buffered reader
runs the parser based on an error stream stored in factory writer xml
manages an exception redirected to the error output stream
interprets a tag defined in the class attributes tag with the
deletes all table rows
opens a new window
executes a query toward the local server
returns the handler that runs the reader
returns a string representation
increases the level
sets the level to zero
indicates if the output contains errors
receives notification of character data inside an element
receives notification of the end of an element
receives notification of the end of the document
receives notification of a recoverable parser error
receives notification of a recoverable parser error
indicates if the server requires a trace
assigns a value at given row and column
removes listeners from extra menu items in order to
indicates role based access is activated on the server
assigns a value at given column and current row
returns the tag associated to the panel
shutdown client socket
highlights the given row and column
replaces labels defined with a tag by the appropriate label
highlights the given column and current row
executes a query and keep the results in the queue
reads preferences from server
attaches a local button to a menu item
writes the object as an xml output
refreshs menus attached to the panel
disconnects the client from the server
activates with appropriate labels the new buttons on the action bar
reads the object from an xml input
indicates is the client is connected to one server
adds a new data panel in the workbench
converts the table content into html
attachs a client to the server
detachs a client from the server
assigns a string value at selected row and column
responses to a window manager event
broadcasts a message to every client connected to the server
cleans the table
wait the initialization phase is finished
defines the column as a boolean
resets all the buttons in the tool bar in a standard mode
wait the initialization phase is finished for the main frame
defines the column as an action
activates three new buttons on the tool bar
defines the column as a date
de selects all the new buttons
defines the column as an integer
writes the object as an xml output
defines the column as a double
infinite loop data is saved using a timer
adds an object to the action bar
defines the column as a percent
attachs to the column a combobox
defines a default value for the column
shows or hides the save and revert buttons
defines the column as a reference in order to highlight the row
hides the save and revert buttons and hides the current data panel
defines the column as read only
de selects the close edit and delete buttons
defines the column as centered
shows or hides the close edit and delete buttons
sorts the table
indicates if the table is hierarchical
creates emails based on pending actions
sends a request to the server and interprets the answer
clears the list of recipient within sent actions
moves the selected row one level up
moves the selected row one level down
interprets the message stream and display messages
moves the selected row up
moves the selected row down
runs the transport
returns the current activated data panel in the workbench
defines if the table can be enabled
indicates if selected category is available
returns the icon used as sort indicator of given column
selects or de select the buttons in the tools bar
saves the properties attached to the buttons in the tools bar
hides navigation buttons
defines the column to be duplicated after an insert ot a new row
retrieves the properties attached to the buttons in the tools bar
forces the table to be not sortable
manages selection changes in the table
returns the list of messages as a long string
manages actions on navigation buttons
changes category reponse to a click on a category button
returns the number of columns in the table
appends the fault values to the output stream
creates a new row at the end with defaults or not
action on a new button when pressed from the tool bar
deletes specified row
action on a new button when pressed from a data panel
deletes all rows in the table
defines a name to given column
defines an xml tag to given column
returns column type
defines type to given column
removes messages loaded in calendar
changes the cursor
defines given column as hightlight
defines given column as read only
defines given column as centered
assigns a combobox to given column
restore database from file
returns value at given row and column
returns highlight indicator at gieven row and column
hides action bar
returns diagram image for the period
returns hierarchical level of given row
assigns a hierarchical level to given row
returns the number of periods defined in the diagram
indicates if the row is hidden in a hierarchical table
removes temporary files
indicates if the cell at given row and column is editable
goes to the product web site
assigns a value at given column and current row
goes to the development home page
assigns a highlight indicator at given row and column
assigns a highlight indicator at given column and current row
shows the license
assigns a hierarchical level at current row
submits bug information to developers
assigns an object id to given row
assigns a server name
assigns an object id to current row
returns the minimum selection index
assigns a server name
returns the maximum selection index
assigns a server name
writes the object as an xml output
converts the message into a string using html tags
compares this entity to the specified object
the session is saved when the application quits
reads the object from an xml input
converts the table content into html
returns direction of sort for given column
returns sort status for given column
assigns a sort status to given column
indicates if the table is sorted
returns the column used for sorting
sorts data in the table
tells the sorting status has been changed
resets sort indicators
defines the table as hierarchical
indicates if the table is hierarchical
adds a hierarchical level to given row
subtracts a hierarchical level to given row
defines if the table can be enabled
moves the given row up in the list
moves the given row down in the list
indicates if the given column is read only
manages mouse clicks
returns hierarchical level based on a delta number
hands over the master evaluator that maintains a list of judge objects
sets the annealing engine attribute of the sastochastic generator object
mutates the current structure s
sets the struct gen thread attribute of the sastochastic generator object
sorts the structures in descending order with respect to the score
sets the name of this dataset
sets the init objects attribute of the structure generator object
sets the random gent attribute of the convergence evolving engine object
toggles the debug variable that determines whether output is generated
sets the iterations attribute of the convergence evolving engine object
gets the annealing engine attribute of the sastochastic generator object
gets the init objects attribute of the structure generator object
returns a structure generator result object with the best structures
sets the max plateau steps attribute of the convergence evolving engine
returns the atom container based on which the structure generation is
returns the name of this dataset
sets the max uphill steps attribute of the convergence evolving engine object
sets a signal for this structure generator to stop
gets the struct gen thread attribute of the sastochastic generator object
sets the convergence stop count attribute of the convergence evolving engine
sets the current dataset number attribute of the seneca dataset collection
sets the start k t attribute of the convergence evolving engine object
sets the current dataset number attribute of the seneca dataset collection
gets the current dataset number attribute of the seneca dataset collection
sets the current temperature attribute of the convergence evolving engine
gets the current dataset attribute of the seneca dataset collection object
sets the cooling rate attribute of the convergence evolving engine object
description of the method
gets the random gent attribute of the convergence evolving engine object
gets the convergence counter attribute of the convergence annealing engine
gets the chief justice attribute of the convergence evolving engine object
sets a renderer2 dmodel which determins the way a molecule is displayed
adds a feature to the change listener attribute of the
description of the method
gets the initial acceptance probability attribute of the
description of the method
gets the frame attribute of the molecule viewer2 d object
randomly breaks a bond and forms another to mutate the structure the
gets the max plateau steps attribute of the convergence evolving engine
sets the lucy file location attribute of the seneca parameters object
gets the renderer2 dmodel which determins the way a molecule is displayed
gets the lucy file location attribute of the seneca parameters object
gets the max uphill steps attribute of the convergence evolving engine object
sets the seneca file location attribute of the seneca parameters object
gets the seneca file location attribute of the seneca parameters object
sets the log file attribute of the seneca parameters object
cool down according to the given evolving schedule
sets the result file attribute of the seneca parameters object
paints the molecule onto the jpanel
gets the server configuration directory attribute of the seneca parameters
sets the mol view dim attribute of the molecule list viewer object
gets the mol view dim attribute of the molecule list viewer object
adds a feature to the structure attribute of the molecule list viewer
adds a feature to the change listener attribute of the seneca dataset
adds a feature to the structure attribute of the molecule list viewer
sets the mol view dim attribute of the molecule list viewer object
description of the method
gets the mol view dim attribute of the molecule list viewer object
adds a feature to the structure attribute of the molecule list viewer
adds a feature to the structure attribute of the molecule list viewer
gets the parameters attribute of the parameters object
gets the titled border attribute of the judge configurator object
description of the method
description of the method
description of the method
description of the method
sets the pick precision attribute of the carbon shift assigner object
opens the content of the sml file
gets the pick precision attribute of the carbon shift assigner object
description of the method
return the number of individual frequencies in the heteroatom shift list
description of the method
adds the nmrsignal n to the spectrum bb dept135 etc
replaces the signal at position pos with the signal sig
adds an nmrsignal to the nmrspectrum
creates an empty signal with correct dimension
sets the status log file attribute of the toscaserver object
set the molecular formula for this dataset by assigning a set of nodes
sets the atom container attribute of the server configuration object
gets the atom container attribute of the server configuration object
returns an nmrsignal at position number in the vector
sets the sructure log file attribute of the toscaserver object
sets the molecular mass attribute of the seneca dataset object
returns the position of an nmrsignal the vector
sets the atom container attribute of the structure generator server object
gets the status log file attribute of the toscaserver object
sets the description attribute of the seneca dataset object
initializes the judges
gets the sructure log file attribute of the toscaserver object
sets the judges attribute of the chief justice object
gets the judges attribute of the chief justice object
sets the current attribute of the seneca dataset object
adds a feature to the judge attribute of the chief justice object
description of the method
description of the method
sets the dataset name attribute of the structure generator server object
sets the set of nodes attribute of the seneca dataset object
returns a vector with signals within the interval defined by
gets the task version attribute of the structure generator server object
here we assign the values for the experimental carbon shifts
sets the scores attribute of the two dspectrum judge object
sets the score attribute of the two dspectrum judge object
gets the molecular formula attribute of the seneca dataset object
sets the cut off attribute of the two dspectrum judge object
gets the cut off attribute of the two dspectrum judge object
sets the multiplicator attribute of the judge object
sets the enabled attribute of the judge object
sets the judge listener attribute of the judge object
sets the ring set required attribute of the judge object
gets the molecular mass attribute of the seneca dataset object
sets the has max score attribute of the judge object
sets the max score attribute of the judge object
returns a reference to the chart displayed in the panel
gets the multiplicator attribute of the judge object
gets the ident message attribute of the structure generator server object
gets the host address attribute of the toscaserver object
gets the ring set required attribute of the judge object
gets the has max score attribute of the judge object
gets the max score attribute of the judge object
gets the judge attribute of the seneca dataset object
description of the method
description of the method
description of the method
adds a feature to the change listener attribute of the seneca dataset
here we need to revamp the handling of
sets the data attribute of the annealing data source object
gets the data attribute of the annealing data source object
add the annealing data for a given host identified by number series
description of the method
updates an entry from a form to the database
starts off a timer
stops a timer
put some demo data in the database
populates the action with some beans for rendering the page
gets all the
the time on which this
is the timer running
populates the action with some beans for rendering the page
notify the deed change listener that this deed has been changed
generates a getter method on a given interface for a given type
generates code for the given interface from the given property
generates a setter method on a given interface for a given type
generates code for the given interface from the given property
facility method to retrieve the java bean convention getters name of a property
computes the name of a property
generates code for the given interface from the given property
generate source code for properties
generates code child elements for the given interface from the given property
facility method to retrieve the java bean convention setters name of a property
getter method for the source code generators holder attribute
getter method for the source code generators holder attribute
setter method for the source code generators holder attribute
extensibility point to add other property generators
setter for the attribute generators
generic accessor resolution method
getter for the attribute help formatter
this method generates a java5 generic getter for a given property
getter for the attribute cli parser
getter method for the id attribute
getter method for the balance attribute
setter for the attribute cli parser
getter method for the name attribute
getter method for the state attribute
this method generates a java5 generic setter for a given property
setter for the attribute definition processor
getter method for the zip code attribute
getter method for the first name attribute
getter for the attribute definition processor
getter method for the country attribute
getter method for the region attribute
setter for the attribute source code generator
getter method for the continent attribute
getter method for the last name attribute
getter for the attribute source code generator
setter method for the continent attribute
getter method for the name attribute
getter method for the account attribute
getter method for the street attribute
getter method for the billing address attribute
getter method for the number attribute
getter method for the floor attribute
setter method for the email addresses attribute
getter method for the is appartment attribute
setter method for the addresses attribute
getter method for the apartment attribute
setter method for the billing address attribute
getter method for the city attribute
setter method for the floor attribute
this method initializes the definition mapping
setter method for the is appartment attribute
getter for the attribute global config
setter for the attribute definitions
this method resolves a value object definition given its definition id
setter method for the apartment attribute
getter for the attribute reason
setter method for the city attribute
this method resolves a value object definition given its interface name
setter for the attribute reason
setter method for the definition by id map attribute
facility method for logging field access security exception
setter for the attribute invalid reason
facility method for logging field access security exception
setter method for the definition by ifmap attribute
this method resolves the type for the given value object id
setter for the attribute properties validator
validates that a given
getter for the attribute default package
getter for the attribute generate class
validates that a given
setter for the attribute message
setter for the attribute validators
getter for the attribute generate java
setter for the attribute definitions
facility method to populate the chain of validables
getter for the attribute global configuration parser
getter for the attribute output class dir
getter for the attribute output src dir
setter for the attribute validation status
setter for the attribute config file
setter for the attribute validators
setter for the attribute default package
adds a validator to the chain
setter for the attribute global configuration parser
setter for the attribute validator
setter for the attribute generate class
setter for the attribute generate java
processes the framework definition files global configuration portion
setter for the attribute output class dir
setter for the attribute output src dir
unmarshalls the given xml file and returns the root element
this is a dummy implementation for testing purposes
getter for the attribute definition resolver
setter for the attribute definition resolver
getter method for the property populators container attribute
setter method for the property populators container attribute
reflectively sets a given property on a given entity
setter for the attribute property map
this method puts the given properties into the proxy
resolves the name of the property under the value object
reflectively sets a given property on a given entity
this method retrieves the value of a given property from the given proxy
populates an entity given a proxy
setter for the attribute definition validator
delegates a setter call
setter for the attribute factory map
delegates a getter call
getter for the attribute config flie
getter for the attribute definition processor
getter for the attribute jaxb context
tells whether or not a given method is a setter or not
getter method for the property populators container attribute
setter for the attribute config flie
setter method for the populators attribute
setter method for the operation handler map attribute
moves forward into the hierarchy property entity and package and delegates the population
setter del atributo entity factory
getter del atributo entity factory
equivalent to code set negated true code but returns this code criterion code
value is not cloned
removes a code criterion code from this conjunction
let concrete comparison types overwrite equality evaluation of values
returns the validator of cache models
sets the ehcache cache manager to use
decorate the given cache if necessary
removes all the entries in the caches specified in the given flushing
check if the given java class implements the component interface
if the receptacle is connected provides a reference to the connected
pre interception code to be placed in this method
pre interception code to be placed in this method
post interception code to be placed in this method
post interception code to be placed in this method
pre interception code to be placed in this method
post interception code to be placed in this method
pre interception code to be placed in this method
post interception code to be placed in this method
pre interception code to be placed in this method
post interception code to be placed in this method
auto generated axis2 error handler
auto generated setter method
validates input parameters to be valid non empty and integers
clears view and model
add the two numbers
multiply the two numbers
divide the two numbers
clear the results
helper method used in edit controller
helper method used in remove controller
for injection of collaborator
for injection of collaborator
for injection of collaborator
removes specified contact
standard struts1 validation of input parameters
at startup create and show the main frame of the application
creates and shows the main frame
create and return the action manager to use
create and return the language manager to use
set the default look and feel
the default tree cell renderer reads the look feel specific attributes
creates and registers listeners with components
creates and registers listeners with components
update the monitor panel
returns the current bookmarks folder depending which tree node is selected
returns the current entry info if the selected node is a bookmarks entry
set the proxy settings into the java system properties using the preferences values
moves the frame into the screen center
this method will be invoked if you close the window or if you
creates and registers listeners with components
builds the dialog
builds the content pane
create and init the gui components
creates and registers listeners with components
build the component
builds the main panel
paint the colored background
builds the main panel
builds the button bar
builds the button bar
this method sets the dialog settings
sets the size
this method sets the dialog settings
sets the size
get the login mode that should be used
search the user specific group list if the user belongs
returns the url that should be used to connect to the portal
returns the company that should be used to login to the portal
returns the mnemonic character
load and add all key images specified by the properties object
add the key image pairs to the internal data structures
builds the main frame
builds and answers the content
add the image to the internal data structures
creates and shows the main frame
gets the image with the actual key identifier
updates all static component texts
create and return the action manager to use
create and return the language manager to use
check whether username exists
update a user information includes username enabled or authorities
remove a user by username
let current user change password
method to increment the human restricted resources requests count
verify that threshold is gt 0
if set to true the
rename a project group
rename an individual project
delete an individual project
add a new project to a project group
user closed the window save out and exit nicely
returns the code document id code property which corresponds to the
returns the code modifier user id code property which corresponds to the
returns the code document title code property which corresponds to the
returns the code document category id code property which corresponds
returns the code document template id code property which corresponds
returns the code dt last update code property which corresponds to the
returns the code dt created code property which corresponds to the
sets the code document id code property which corresponds to the
sets the code modifier user id code property which corresponds to the
sets the code document title code property which corresponds to the
the cite factory method cite that is used to create new
sets the code document category id code property which corresponds to
sets the code dt last update code property which corresponds to
sets the code dt created code property which corresponds to
sets the code document template id code property which corresponds to
not yet implemented
the cite factory method cite that is used to create new
returns the code template title code property which corresponds to the
the cite factory method cite that is used to create new
the code version major code property is currently unused
the code version minor code property is currently unused
returns the code creator user id code property which corresponds to the
returns the code description code property which corresponds to the
sets the code template title code property which corresponds to
returns the code search sub categories code property
the code version major code property is currently unused
generates a new document category id
the code version minor code property is currently unused
sets the code creator user id code property which corresponds to
sets the code description code property which corresponds to
sets the code search sub categories code property
sets the code dt created code property which corresponds to
generates a new document id
returns the code search created between code property
sets the code search created between code property
returns the code search modified between code property
returns the currently logged on user id
sets the code search modified between code property
selects all records in the code document template code table
sets the code dt created begin code property
makes a document xml structure out of a field name field value
sets the code dt created end code property
sets the code dt modified begin code property
returns the dt update history property
returns the inventory code property
returns the amount updated property
returns the notes property
sets the code dt modified end code property
sets the dt update history property
sets the inventory code property
sets the amount updated property
this factory method creates an instance of the related dao object
sets the notes property
returns the current amount property
sets the current amount property
the cite factory method cite used to create
returns the month part of the code dt created begin code property
this factory method creates an instance of the related dao object
this factory method creates an instance of inventory update history vo
not implemented yet
returns the year part of the code dt created begin code property
inserts a new record in the code inventory code table
updates an inventory item
adds an inspection entry for an inventory item
provides a list of inventory items in their last update
retrieves an inventory item
updates an inventory record
returns the month part of the code dt created end code property
retrieves an inventory item along with the last update status of the item
retrieves a list of inventory updates for the specified inventory
returns the year part of the code dt created end code property
returns the parent inventory code property
sets the description property
sets the parent inventory code property
returns the month part of the code dt modified begin code property
deletes all files that were uploaded by calling the
returns the year part of the code dt modified begin code property
retrieves an inventory item and placed it in the specified vo
returns the files property
returns the month parth of the code dt modified begin code property
sets the event name property
sets when the event start
sets when the event finish
factory method to create a new event dao object
sets the committee formation date property
sets the committee dismissal date property
sets the dt attend property value
returns the year part of the code dt modified begin code property
returns the event name property
sets the event name value
returns the dt attend property
returns when event start
returns when event finish
reads the privileges of the currently logged on user to determine whether
returns the committee formation date property
returns true if there are no search criterias set
returns the committee dismissal date property
deletes log entries before and on the specified date to save disk space
creates the default value for begin dates
inserts a new record in the organization table
creates the default value for end dates
factory method to
search an existing organization data
factory method to
returns true when the specified organization exists in the database false otherwise
factory method to
factory method that creates the underlying map object
same as the other but with a default error message
search an existing person data
returns the number of columns in this table
returns true when the specified person exists in the database false otherwise
returns the value for the cell at column index and row index
factory method to create list objects
factory method that is called by get table model to instantiate the
returns the connection object to the database opening a new one
cleans up things when this object is garbage collected
returns a list of groups for a particular user
returns a list of users that belongs to a particular group
factory method to
sets the dt last update property
p gets a hexadecimal string buffer representation of this objects data
p gets a literal string buffer representation of this objects data
utility method for converting literal strings to hexadecimal
gets the page reference specified by the destination
gets the zoom level specifed by the destination
p gets the link annotations highlight mode visual effect taht shouldbe
a destination to be displayed when the annotation is ativated
sets the stroke width of the border style
sets the border style type for this instance
gets the type of annotation that this dictionary describes
utility method converting name object hext notation to ascii
gets the annotation rectangle and defines the location of the annotation on
clears internal font list of items
this method returns a shape that represents the outline of this page
get the mapped value of code value code
get the bounding box that the page can occupy given the user rotation
gets a string summary of the reference objects number and generation number
gets all annotation information associated with this page
gets the media box boundary defined by this page
p gets a hexadecimal string buffer representation of this objects data
p gets a literal string buffer representation of this objects data
gets the art box boundary defined by this page
get the awt color value for for a given colours data
gets the bleed box boundary defined by this page
not applicable to a pattern colour space
gets the trim box boundary defined by this page
concatenates this transform with a translation transformation specified
concatenates this transform with a scaling transformation specified
gets a vector of images where each index represents an image inside
p gets the size value in user space associated with this text sprite
p paints all the character elements in this text sprite to the graphics
tests if the interior of the code text sprite code bounds intersects the
dispose this text sprite object
converts a 4 component cmyk colour to rgb
initiate the indexed colour object
gets the colour for the array of float values
updates the clip every time the tranformation matrix is updated
set the graphics state clipping area
initiate the name tree
initiate the page tree
add the trailer dictionary to the current trailer objects dictionary
gets the applicaiton to be launched or the document to be opened or
specifies whether or not ta new window should be opend
gets a copy of the entries that make up the dictionary
converts this object to a java
p gets the orgional two points that created the prectangle object
return a string description of the object
p converts the cartesian representation of the rectangle into rectangle in
gets the object specified by the reference
utility method for displaying debug info related to pdf object loading
returns the next object found in a content stream
gets a rectangle specified by the key
writes buffered imate to this object
dispose the librarys resources
called when a new glyph is selected
get the generation of this object
called when a key is typed
set the current glyph
utility method for fudging overprinting calculation for screen
get the image that this pdfimage generates
make sure that this object is dereferenced
get the next postscript word
create new canvas or reuse already created
add an image to the cache
get an image from the cache
perform the stroke and record the dirty region
perform the stroke and record the dirty region
get the type of this color space type rgb
push the current graphics state onto the stack
get the type of this color space type rgb
get the type of this color space type cmyk
get the pdfpaint representing the color described by the
get the type of this color space type cmyk
draw an outline using the current stroke and draw paint
create a graphics object only if it is currently null otherwise
fill a path with the paint and record the dirty area
draw an outline
fill an outline using the current fill paint
draw native text
add the path to the current clip
set the clip to be the given shape
get the current affinetransform
concatenate the given transform with the current transform
replace the current transform with the given one
get the initial transform from page space to java space
reset the pdftext format for a new run
set the last shape drawn
perform a carriage return by translating by x and y
get the last shape drawn
get the current transform
set the transform matrix directly
add some text to the page
append a rectangle to the total dirty region of this shape
return the number of pages in this pdffile
get the glyph for a given character code and name
get the shape of this glyph
add commands for this glyph to a page
get a glyph outline by character code
read a name sequence of non pdf delimiting characters from the
get an image producer which can be used to draw the image
read a floating point number from the stream
restore member variables from previously saved instance
get the bounding box of the page before any rotation
get the width of this page after rotation
get the height of this page after rotation
get the command at a given index
add a collection of commands to the page list
getter for property font bbox
setter for property font bbox
stop the rendering of a particular image on this page
get the file structure
get a glyph outline by name
concatenate a transform to the graphics state
set the end cap style
set the current path
notify all images we know about that a command has been added
p open a specific pdf file
build a shader from a dictionary
indicates whether this scroll views content is stretched to fill the viewport
get a rectangle2 d
indicates whether this scroll views content is stretched to fill the viewport
indicates this scroll view whether it should stretch its content height to fill
indicates this scroll view whether it should stretch its content height to fill
fill a path with the paint and record the dirty area
get the image that this pdfimage generates
add some text to the page
render a compound glyf
scrolls the view to the given child
set the line join style
p open a specific pdf file
get a rectangle2 d
p open a specific pdf file
get the type of this color space type rgb
p open a specific pdf file
get a given x coordinate
add a global message listener listens on all messages
remove a listener
remove all listeners
writes itself into a binary file
advances a turn in current loaded game
loads a game from the given directory
return the requested corner terrain layer
creates a new game
returns the terrain
returns the seed
sets the items
displays the help for this map field
reads a sector from file and store it in the cache
returns the platoon list
returns the round number
adds a platoon to the player
advanches in the round
returns the race
returns the race name
returns the race name plural
draw the small icon e
applies itself to the given stats object
returns the name plural
add the item to this platoon
add the item to this platoon
recreates the screen buffer after it became invalidate through member functions
returns whether the platoon posseses the specified item
draw all troops in formation
copies the back buffer into the screen buffer called blt
calculates the resulting stats for this unit taking modifiers due equipment
renders the armies of immortals onto the battlefield of doom
returns the xstart
returns the ystart
set path for template bundle definition file
this method stores a string property
this method stores a char property value
this method stores a int value associated with a given key
this method stores a boolean value associated with a given key
this method returns the string property specified by the key
this method returns the string property specified by the key or a default
this method returns the char resource specified by the key
specify if the type is number type group
this method returns the int property value specified by the key
check if type is string type
this method returns the boolean property value specified by the key
check if type is date type
convert capital in text to and lowercase but the first letter e
compare two byte arrays up to the length of the shortest array
convert sql field naming field name to java field naming field name
find a column from a list of column
java type mapping
full qualified java type mapping
attribute with default initial value
generate the code to set an attribute to the default initial value
constructs an app list table model
capitalize first letter
lower first letter
get column of type auto if any from a bean
return lenght of an array for used by velocity template
sql type mapping
adds required toolbar buttons to the given toolbar
calls the methods which collapses all tree nodes
sets the frame to be visible or not
this method is needed to update the preferences of every component of the
update the constraints for the springlayout of the
updates the constraints for the springlayout of this hi family panel
removes the given hi family panel from the container
adds the given hi family panel to the container
gets the super containing family panel
override this for fun profit
launches a dialog to set node edge colour
gets the top
gets the relevant colour preference
update the constraints for the springlayout of this hi graph panel
gets this panels controlling application
this performs the initialisation for the constructor
gets the relevant colour preference
this method initializes the text pane which
gets the relevant font preference
updates the display parameters for this text pane
gets the preferred font for this node
sets text and ensures view is updated
gets the preferred background colour for this node
override this for fun profit
syncs the node name with the display text
updates the node name when its text pane is edited
erases default text from node when focus is gained
replaces default text on empty nodes when focus is lost
this recursive application of invalidate calls followed by validate
removes a node from this view
gets the number of unsolved nodes in this view
checks whether a given view is the top level view of this graph
adds an unsolved node to the list
add a node to this graph
remove an unsolved node to the list mark it as solved
remove a node from this graph
gets this views superview i
add an edge to this graph
returns true if this view contains no information
connects the given edge as an inedge of the given node and
remove an edge from this graph
disconnects the given edge from the given node by removing it from the
removes this node and all children completely from its graph and view
connects the given edge as an outedge of the given node and
removes the view from the hi graph removing all internal edges and all
disconnects the given edge from the given node by removing it from the
returns true if the given node is contained in the set of
pastes as a new root node obliterating or adding to current graph
given an edge from
creates a copy of this edge with the same name as this edge
given an edge from
gets the view which contains this node
increments the number of hi graph frames belonging to this application
gets the contents of the clipboard
gets the subview of this node
blanks the internal clipboard without touching external data
sets the subview of this node
clears the clipboard if it is not already clear
tests if this node is solved
returns any string found on the system clipboard
adds a specific subgraph to this node
writes a string to the system clipboard
adds a default subgraph to this node if it does not already exist
something new on the clipboard
returns the value of this nodes solved flag
sets the solved satus of this node
tests if this node has a non empty subview
checks that this node is contained in the set of topnodes of its
checks if this node has any children
converts this code font code object to a code string code
loads a new frame with a specified file
sets the code x code property which controls the code x code
returns the value of the code x code property
writes to the string writer
writes to the string writer
writes to the string writer
accept directories and all files with given extension
changes the label text
sets the colour of this component
launch a colour chooser
gets the background colour of this component which is taken directly
launches the dialog to select the chosen font
sets the code y code property which controls the code y code
gets user selection as a font object
returns a correctly typed selected item
returns the value of the code y code property
adds root nodes to the graph table
adds all hi edges to the graph
adds all hi edges to the graph
sets the code width code property which controls the width of a
adds an edge to the table
adds a node to the table
adds an edge to the table
returns the value of the code width code property
adds a node to the table
gets a node with a specific id from the node table
gets the id of a node
gets an edge with a specific id from the table
sets the code height code property which controls the height of
gets the id of an edge
get correct name where applicable
create an xml object from the
create an xml object from a
create an xml object from a given
returns the value of the code height code property
updates elements of the graphs display when preferences change
checks if the object contains character data
sets the objects character data
gets the objects character data removing any escaping which has been performed
sets the objects character data escaping special characters automatically
return value on the top of the stack without popping it
sets a new sub object table for this object
gets the number of sub elements of a type
sets the spring controlling the specified edge
returns a member of the hashs vector entry at a position
returns the value of the specified edge
this method escapes all the special xml characters in the string s
sets the visibility of this nodes subgraph items
this method escapes all the special xml characters in the string s
gets the number of sub elements of a type
sets all to be open or closed
returns a member of the hashs vector entry at a position
returns a member of the hashs vector entry at a position
gets the data in unescaped form i
creates an xml string representing this object and its sub objects
creates the xml string representing this object and its subobjects
gets the node associated with this panel
opens closes an xml element
manages the indent and prints the required number of characters to represent
adds a subgraph to this node
retrieves the top node panel
sets this node to show as being solved or unsolved
prunes the graph from this node downwards placing the contents into
copies the graph from this node downwards to the clipboard
sets up hover colouring
removes hover colouring
removes hover colouring
gets the appropriate foreground colour depending on whether
gets the appropriate background colour depending on whether
updates this nodes view
returns the next random sample within minimum maximum
returns the next random sample
returns the next random sample
downloads file specified by the url to a temporary file in
return a temporary file name
sets the auto save interval variable to the given value
sets the delete auto save file boolean to the given value
returns whether this project exists is valid
returns the internal spreadsheet object
add a row to this table
returns the row header table
returns true if the project is modified since the last save
deletes selected cell in the spreadsheet
returns the changed status of the internal spreadsheet
returns the saved project file
returns the string representation of this cell
sets the contents to the cell to the specified string
clears the cell contents by setting to the empty string
returns true iff the given cell object is equal to this object
returns the index of the given variable name or 1 if not found
returns true if the cell contents represent a number
returns true iff this cell is non empty the contents is not equal
writes project file to the temporary file path
returns the row number from the given row label
returns the name of this project
returns the row number of the last non empty row
if the project is not yet saved prompts the user to save
deletes temporary file if it exists
returns the column number of the last column with data
returns the variable name at the given column
returns the column number of columns that contain data
gets all the column numbers
set the string value at the specified row and column
sets the contents of the given column to the given data vector
sets the contents of the given column to the given cell vector
sets the contents of the given row to the given data vector
sets the status to unchanged and removes any existing asterisk in
returns the table data as a string of tab dlimited values
returns the table data as a string of comma separated values
returns the changed status
clears the contents in the cell at the specified row and column
deletes the entire row at the specified row number
deletes the entire column at the specified column number
closes the file associated with this spreadsheet if any
deletes the cell at the specified row and column
sets the default widths of the table columns
inserts a blank row at the specified row number
inserts a blank column at the specified column number
inserts a blank cell at the specified row and column
returns the column number embedded in the constructed string
returns the column number represented by the given column label
returns the full column label cx variable name for the given column
return the row number represented by the given row label
returns the row number of the last row that contains data
sets the column at the given column number to the given vector of
sets the variables row to the given vector of strings
sets the variable label for the given column to the given string if
returns the row number of the last non empty row
returns the column number of the last non empty column
puts data in the tab delimited string in this spreadsheet
puts data in the tab delimited string in this spreadsheet
puts data in the given vectors of vectors of strings in this
sets the file that saves the data in this spreadsheet
clear the contents in all cells without moving surrouding cells
inserts a blank row at the end of the spreadsheet
inserts a blank row above the selected cell
inserts a blank row below the selected cell
inserts a blank column at the end of the spreadsheet
inserts a blank column to the left of the selected cell
return a string of html code representing the given condition
inserts a blank column to the right of the selected cell
return the comparison condition of the alternative hypothesis given the
inserts a blank cell above the selected cell
inserts a blank cell below the selected cell
adds one row to the end of the row header table
selects all the cells
sets the name of this dialog
sets the name of the help file to the given name
adds the first spreadsheet scrollpane object to this pane
updates elements on the dialog so that they have the most
updates the given combo box with available columns in the parent
adds a tab containing the given component title and icon
removes all the elements in the given mutable list
updates the given list with available columns in the parent
adds a blank spreadsheet to this tabbed pane
updates the given list with all columns in the parent spreadsheet
adds the given spreadsheet object to this tabbed pane
returns the inverse cumulative probability
returns the density of the distribution at x
returns the cumulative probabililty up to x
returns the inverse cumulative probability
returns the density of the distribution at x
returns the cumulative probabililty up to x
returns the cumulative probabililty up to x
returns the inverse cumulative probability
returns the inverse cumulative probability
returns the cumulative probabililty up to x
returns the inverse cumulative probability
returns the density of the distribution at x
returns true iff at least one of the datasheets is modified
returns the cumulative probabililty up to x
returns the density of the distribution at x
returns the cumulative probabililty up to x
returns the inverse cumulative probability
returns the density of the distribution at x
returns the cumulative probabililty up to x
returns the cumulative probabililty up to x
set the modified status of the current datasheet to changed
returns the inverse cumulative probability
returns the standard deviation
sets the title of the selected tab
returns the test statistics for the given sample mean x bar
returns the critical value corresponding to the given confidence
returns the number of data pairs
returns the p value corresponding to x bar in a z distribution
returns the margin of error
returns the critical value corresponding to the given confidence level
returns the degrees of freedom
returns the margin of error
resets the tab titles
returns the critical value corresponding to the given confidence level
returns the linear correlation coefficient
returns the coefficients of the regression equation
returns the title at the selected tab
returns the test statistic t using the linear correlation correlation r
returns the predicted y value given a vector of values of the
returns the slope of the regression equation b1
returns the y intercept of the regression equation b0
returns the average value of the dependent variable
returns the sum of all the x values
returns the total variation sst the sum of squared differences
returns the sum of all the y values
returns the sum of pairwise products between the x and y values
returns the sum of sqaures of the x values
returns the sum of sqaures of the y values
returns the explained variation ssr the sum of squared differences
returns the total variation sum of differences between the y value
returns the unexplained variation the sum of squared differences
returns the explained variation sum of differences between the
returns the unexplained variation sum of differences between the
returns the coefficient of determination r 2 the amount of the variation
returns the adjusted coefficient of determination
returns the critical value for r corresponding to the given significance
returns the standard error of estimate
returns the p value corresponding to the test statistic
returns the test statistics f
returns the test statistics for the given sample mean of
returns the p value of test statistics
returns the critical value corresponding to the given confidence
returns the p value corresponding to d bar in a t distribution
returns the margin of error
returns the critical value corresponding to the given confidence level
returns the lower limit of the confidence interval
returns the sample size
returns the upper limit of the confidence interval
returns the center of the interval
returns the test statistics for the given sample variance s2
returns the critical value corresponding to the given confidence
returns the number of independent variables
returns the p value corresponding to s2 in a chi square distribution
returns the lower limit of the confidence interval
returns the upper limit of the confidence interval
returns a string representing the confidence interval of the variance
returns a string representing the confidence interval of the
returns the test statistic for a test of independence between
returns the degrees of freedom of a contingency table
returns the degree of freedom
returns the critical value corresponding to the given confidence level
returns the critical value corresponding to the given confidence
returns the p value corresponding to the test statistic
returns the p value
returns the grand mean mean of all the treatment sample means
returns the p value in a z distribution
returns ss treatment sum of squares of treatments
returns the test statistics for the given sample mean x bar
returns ms treatment the mean of squares of treatment
returns the p value corresponding to x bar in a t distribution
returns the test statistics
returns ss error the sum of squares of means
returns ms error the mean of squares of errors
returns the degree of freedom 1
returns the degree of freedom 2
returns the total sum of squares ss treatment ss error
returns the critical value corresponding to the given confidence
returns the p value in a f distribution
returns the test statistics f ms treatment ms error
returns the margin of error
returns the critical value corresponding to the given confidence level
returns the numerator degrees of freedom k 1
returns the degrees of freedom
adds the given data to row i and column j
returns the denominator degrees of freedom n k
returns the critical value corresponding to the significance level
returns the p value corresponding to the given test statistic
returns the total degrees of freedom
returns the critical value corresponding to the given significance
checks if the data is valid for two way anova
returns the p value corresponding to the test statistic
returns the right tail critical value f r
returns the left tail critical value f l
returns the row sum a i sum j 1
returns the lower limit of the confidence interval
returns the upper limit of the confidence interval
returns a string representation of the confidence interval for
returns the total variation the sum of squared differences
returns a string representation of the confidence interval for
returns the column sum b j sum i 1
adds the given frequency to the location at row i and column j
returns the frequency at row i and column j
returns the explained variation the sum of squared differences
returns the percent at row i and column j
returns the unexplained variation the sum of squared differences
computes the correction of the mean sum of all observations 2 n
return the sum of the given row
return the sum of the given column
returns the sum of squares for factor a
return the total sum
creates a contingency table object using the cross tabulation data
returns the sample standard deviation
returns the contingency table
returns the sum of squares for factor b
returns the test statistic z g mu sigma where g is the
returns the sum of squares for interaction ab
returns the mean of the distribution of runs
returns the number of data pairs
returns the rank correlation coefficient
returns the standard deviation of the distribution of runs
returns the test statistic z r mu sigma where r is the
returns the critical value for r corresponding to the given significance
returns the mean of the distribution of rank sum
returns the p value corresponding to the test statistic
returns the total sum of squares
returns the p value
returns the standard deviation of the distribution of rank sum
returns the p value
returns the p value
returns sum of squares of error
returns the p value
returns the one tailed critical value
returns the margin of error
returns the test statistics for the given sample proportion p hat
returns the critical value corresponding to the given confidence level
returns the mean of squares of factor a ssa dofa
returns the density of the distribution at x
returns the p value corresponding to p hat in a z distribution
returns the cumulative probabililty up to x
returns the inverse cumulative probability
returns the mean of squares of factor b ssb dofb
returns the mean of squares of interaction ab ssab dofab
returns the mean of squares of error sse dofe
returns the degrees of freedom for factor a a 1
returns the function number corresponding to the given function name
performs a function call on the given computation unit
returns the degrees of freedom for factor b b 1
returns the degrees of freedom for interaction ab
restores the frame associated with this menu item
parses the given expression
prints the string remaining to be scanned
returns the degrees of freedom for the error
returns the total degrees of freedom
returns error message from the scanner
consumes the number at the next scan position
returns the f test statistics for factor a
parses a statement
returns the f test statistics for factor b
consumes the column at the next scan position
returns the f test statistics for interaction ab
parses an expression
returns the p value corresponding to the f test statistic for factor a
consumes the function at the next scan position
parses a term t f f
returns the p value corresponding to the f test statistic for factor b
returns the leaf unit used in this stem and leaf plot
consumes the constant at the next scan position
parses a powered term f p f
returns the p value corresponding to the f test statistic for interaction
reads and returns the next character to be processed without
adds a listener for the close button
consumes the next character by advancing the pointer to
returns the title of the frame
sets the parent frame of this object
restores the frame to normal size and brings it to front
sets the content of the clipboard to the given image
adds a dialog to the history list
consumes the current token by advancing the index to the next position
returns the dialog at the given position
gets the list model
initializes this object
adds the given data vector with the given label to the dataset
add the data values with the corresponding labels
returns the size of the dataset number of categories
attempts to parse a column label and returns the
cancels the timer
adds the given heading and text message to this object
shows the popup menu if the given mouse event should trigger
adds the given message to this object
returns the number of dimensions in this hash key
returns the key value of the given dimension
adds the given message as is to this object
attempts to parse a constant name and returns the
sats the save interval to the given value
adds the given message as a heading to this object
sets the status of this object to changed
returns the frequency of the given key value
sets the status of this object to unchanged
adds the given category to the counter
returns the next string delimited by single quotes
returns the category at the given index
returns the index corresponding to the given category or
returns the number of categories found by this counter
checks if all the frequencies are the same
returns the frequency of the given category
returns the double value at the current scan position
returns the integer value at the current scan position
gets the html source in this log pane and actually writes
clears the text in this log window and reintializes
adds the given string to the error string
replaces the contents of this log window with the given string
restores the status bar to the current status in the given amount of
displays the given string in the status bar
sets the status bar to the given status in the given amount of
clears the status bar
initializes java help help documentation module
enables help for the given menu item
sets the title of the log internal frame
returns the title of the log internal frame
sets the title of the active tab in the datasheet pane
returns the title of the active tab in the datasheet pane
ensures that the application is ready to be disposed and
add the given frame to the list of window frames
removes the given frame from the list of window frames
removes all frames from the list of window frames
returns the active spreadsheet
returns the datasheet tabbed pane
returns the log text pane
return a string of formatted current date and time
displays an error dialog with the given messages
adds the given message to the log text pane
adds the given message as a heading to the log text pane
adds the given heading and text to the log text pane
adds the given edit to the undo manager and udpates the undo redo
clears all edits in the undo manager and updates the undo redo
thread implementation for managing audio renderers looping
start session thread
shutdown procedure when run as an application
useful method for creating new instance of this interceptor and changing
add a sub profile
returns whether this traversal profile is a top level traversal profile
this method purges all the extent information
returns string representation of data in extent manager
simple test that should always succeed
test to show correct fetch profile is generated and executed when
test to show correct fetch profile is generated and executed when
test accessing address and checking extent statistics
load employee and traverse supervisor mentor associations and check
load employee and traverse mentor associations and check extent
load mentor association with same query and program state several times
test accessing the subordinates collection association and checking
access mentor for each element in the subordinates collection and check
builds principal widget button and associates it with the dialog
builds vfs widget button and associates it with the dialog
sets parameter flags for report dialog
registers with specified code tasks code instance a
calling this method overrides any value s set either via constructors or
explicitly set the indentation level
registers with specified code tasks code instance a
explicitly set the number of spaces per level
get the number of spaces per level
explicitly set the number of spaces per tab
registers with specified code tasks code instance a
get the number of spaces per tab
the one true place to set the number of spaces we indent
returns the absolute number of spaces the indent of this buffer is
indent by one level
registers with specified code tasks code instance a
registers with specified code tasks code instance a
registers with specified code tasks code instance a
registers with specified code tasks code instance a
append a string to the existing line
registers with specified code tasks code instance a
registers with specified code tasks code instance a
update the cached string we prepend to each line
returns the code tasks code instance used by the
registers the specified task factory for tasks with the specified name
resets clears the factory registry
add files to source if not imported
returns a list of code task code instances
adds a template as a child template to receiver
check if source file has already been imported
build a file path
returns the last part of a fully qualified class name string for the
sets the template array
sets the targets array
returns a shared instance
returns the minimum number of children allowed by the receiver
sets the method names array
returns the maximum number of children allowed by the receiver
sets the method types array
registers with specified code tasks code instance a
returns the code sources code instance used by the code top code
this method is used to recursively iterate through each parameter set
registers the specified source file factory for source files with the
convenience method for finding out java vm system properties
returns the top singleton
creates a code source file code instance for the specified file
returns the canonical file object from the specified file object
returns the style flags for the javascript pretty printer
returns the style flags for the html pretty printer
registers with specified code sources code instance a
replaces occurences of substring code sub code with string
registers with specified code sources code instance a
returns a list with all the available property keys that start with the
returns the ast of this receiver
tests if specified string ends with the specified suffix
returns the default pretty printer style that is specified by the jsl
returns code true code if the specified filename has wildcard
transforms a user wildcard into a java
resolves the specified url path to a file on the local file system
returns a map of web mappings
accept the visitor
accept the visitor
convenience method to write indentation chars
returns an unmodifiable list of input sources
write a single character
adds a source to the list of input sources
write a sequence of characters
adds list of sources to the list of input sources
writes a string
moves the passed in cursor passed the whitespace excluding newlines
determines if specified position in comment string is the end comment
returns an unmodifiable list of strings representing the comment body
returns the comment body
returns an unmodifiable list of javadoc tags instances of comment
returns code true code if receiver has a javadoc tag matching
returns the original comment string
returns the list of columns to sort by
returns the table of sort data
returns the null behavior for this object
updates the list of sort columns
returns a hash code for this object
set the null behavior for this object
sorts a custom component that implements the sortable component interface
returns a string object representing this objects value
updates the table of sort data
returns the order to sort the column by
this routine sorts the table of data
returns the name of a columns at the specified index
returns the data list for this class
this routine sorts the table of data using a comparator provided in the
returns the data value at the row and column position specified in the
sets the data list and column names for this class
sorts a combo box using sorter
initializes this object
this method loads data into a list which is later tested
sorts a combo box using sorter
validates the table of sort data
loads the test data
sorts the data
sorts a combo box model using sorter
initialize this object
initializes this object
sorts the data
sorts the data
sorts a list model using sorter
initialize this object
sorts the data
sorts a table using sorter
sorts a table using sorter
saves results to files
generates info about the structure
ulozi graf do souboru
returns value a of the vertex
sets value a of the vertex
returns information whether the graph is weighted or not
returns value b of the vertex
sets value b of the vertex
returns number of vertices
sets the parent of the vertex
returns number of edges
adds a new neighbour
computes number of edges
adds a new neighbour
returns a generated graph
returns degree of the vertex
returns a random vertex
returns number of vertexs neighbours
equals two vertices
returns loaded graph
increases in degree of the vertex
saves the graph
returns vertex a if the line contains an edge
returns vertex b if the line contains an edge
prints all lines to the file
adds a new unweighted edge to the graph
adds a new weighted edge to the graph
adds a new vertex to the graph
returns vertex having the given name
returns created graph
separate a book mark object apart from its embedded
bind a book mark object to a vtdnav object
this method returns the embedded vtdnav object
set the cursor position of vtdnav object corresponding to the internal reference
record cursor position of the vtdnav object as embedded in the
bind is to replace rebind and set vtdnav
get the int at the location specified by index
assigns a new int value to location index of the buffer instance
select the element name before iterating
select the element name name space version before iterating
select all descendent elements along the descendent axis without ns awareness
select all descendent elements along the descendent axis withns awareness
select all elements along the following axis without ns
select all elements along the preceding axis as defined in xpath
select all elements along the preceding axis as defined in xpath
select all elements along the preceding axis as defined in xpath
select an attribute name for iteration choose all attributes of an element
select an attribute name both local part and namespace url part
eval xpath to number evaluates the xpath expression to a double
total size in terms of of bytes
eval xpath to string evaluates the xpath expression to a string
eval xpath to boolean evaluates the xpath expression to a boolean
this method returns the next node in the nodeset
convert the expression to a string
get the object at the location specified by index
assigns a new int value to location index of the buffer instance
get the long val at given index value
get the lower 32 bit of the integer at the given index
modify the value at the index to a new val
return the upper 32 bit of the long at the index
return the attribute count of the element at the cursor position
test whether the input i is unique
clear all entries in the hash table
test whether a give token type is a text
start will set the pointer to the first node in node recorder
obtain the current navigation position and element info from vtdnav
clear will erase all the nodes internal buffers are reused
get total size in terms of of bytes
get the next char unit which gets decoded automatically
get the depth 0 of the current element
get the index value of the current element
get the encoding of the xml document
get the maximum nesting depth of the xml document 0
get root index value which is the index val of document element
get total number of vtd tokens for the current xml document
get the depth value of a token 0
get the starting offset of the token at the given index
get the xml document
get the token type of the token at the given index value
test whether current element has an attribute with the matching name
test whether the current element has an attribute with
test whether ch is a white space character or not
obtain the current navigation position and element info from vtdnav
this method print out the current state info of the navigation object
test if the current element matches the given name
clear internal states so vtdgen can process the next file
clear internal states so vtdgen can process the next file
write the remaining portion of lc info
get the next char unit which gets decoded automatically
removes content from the master xml document
remove an attribute name value pair from the master document
this method returns the vtdnav object after parsing it also cleans
match the string against the token at the given index value
get the next char unit which gets decoded automatically
this method parses the xml file and returns a boolean indicating
get the depth 0 of the current element
parse file with default mode set to in memory
get the index value of the current element
convert a vtd token into an int
get the depth value of a token 0
convert a vtd token into a long
get root index value which is the index val of document element
this method returns the vtdnav object after parsing it also cleans
get the starting offset of the token at the given index
get total number of vtd tokens for the current xml document
load the context info from context buffer
get the depth value of a token 0
this method parses the xml file and returns a boolean indicating
store the context info into the context buffer
get the starting offset of the token at the given index
get the xml document
get the token type of the token at the given index value
clear the context stack2 after xpath evaluation
test whether the current element has an attribute with
test whether the url is defined in the scope
separate a book mark object apart from its embedded
bind a book mark object to a vtdnav object
this method returns the embedded vtdnav object
set the cursor position of vtdnav object corresponding to the internal reference
record cursor position of the vtdnav object as embedded in the
compare the node positions of two book marks
bind is to replace rebind and set vtdnav
register the binding between a variable expr name and variable expr expression
sort the integers in the buffer
remove all namespaces bindings
test if the current element matches the given name
select all elements along the preceding axis as defined in xpath
select all elements along the preceding axis as defined in xpath
select the name space nodes as defined in xpath
select an attribute name for iteration choose all attributes of an element
select an attribute name both local part and namespace url part
eval xpath to number evaluates the xpath expression to a double
eval xpath to string evaluates the xpath expression to a string
eval xpath to boolean evaluates the xpath expression to a boolean
convert the expression to a string
this private method process the comment after the root document
set the value of at terminal
the buffer reuse version of set doc
get the value of at terminal
evaluate the namespace indicator in bit 31 and bit 30
set the xmldoc container
this method writes the vtd xml into an output streams
over write is introduced in version 2
load the context info from context buffer
set the cursor position of vtdnav object corresponding to the internal reference
compare the node positions of two book marks
remove all namespaces bindings
this method loads the vtd xml from an input stream
print lc for debugging purpose
this method loads the vtd xml from a byte array
select an attribute name both local part and namespace url part
this method loads the vtd xml from a file
store the context info into the context buffer
clear the context stack2 after xpath evaluation
bind a book mark huge object to a vtdnav huge object
this method returns the embedded vtdnav huge object
compare the node positions of two book mark huge objects
test whether the url is defined in the scope
test whether the url is defined in the scope
set the value of at terminal
test whether a give token type is a text
obtain the current navigation position and element info from vtdnav
get the value of at terminal
bind resets the internal state of auto pilot huge
register the binding between a variable expr name and variable expr expression
this method returns the next node in the nodeset
returns the total allocated capacity of this buffer instance
return the upper 32 bit of the long at the index
get the object at the location specified by index
assigns a new int value to location index of the buffer instance
clear all entries in the hash table
ask text iter to return character data or cdata nodes
ask text iter to return comment nodes
ask text iter to return processing instruction name
test whether a give token type is a text comment or pi name
get the depth value of a token 0
test whether current element has an attribute with the matching name
test whether the current element has an attribute with
remove a byte segment from xml
dump the in memory xml text into output stream
remove a segment of byte content from master xml doc
insert the byte content into xml
dump the in memory copy of xml text into a file
insert ns compensated element fragment into the document
get the next char unit which gets decoded automatically
this method returns the vtdnav huge object after parsing it also cleans
get the index value of the current element
this method parses the xml file and returns a boolean indicating
test if the current element matches the given name
duplicate the vtdnav instance with shared xml vtd and lc buffers
sync up the current context with location cache
match the string against the token at the given index value
convert a vtd token into an int
convert a vtd token into a long
generate the updated output xml document and write it into
this method resets the internal state of xmlmodify instance so
sync up the current context with location cache
out and reparse writes updated xml content into a new byte
test whether the url is defined in the scope
write vtdnavs vtd and lcs into an output stream xml not written out
match the string against the token at the given index value
get the starting offset of the token at the given index
clear internal states so vtdgen can process the next file
enable the parser to collect all white spaces including the trivial white spaces
enable vtdgen to generate location cache of either depth 3 or 5
write white space records that are ignored by default
write the remaining portion of lc info
format the string indicating the position line number offset of the offset if
clear all entries in the hash table
clear internal states so vtdgen can process the next file
convert the byte content segment in terms of offset and length to
this method returns the vtdnav object after parsing it also cleans
write white space records that are ignored by default
convert the byte content segment in terms of offset and length to
clear the context stack2 after xpath evaluation
write the remaining portion of lc info
duplicate the vtdnav huge instance with shared xml vtd and lc buffers
sync up the current context with location cache
load the separate vtd index and xm l file
clone the vtdnav instance to get with shared xml vtd and lc buffers
this method returns the vtdnav object after parsing it also cleans
get the next char unit which gets decoded automatically
convert a token at the given index to a string
convert a token at the given index to a string upper case chars
convert a token at the given index to a string lower case chars
convert a segment of xml bytes a into string without entity resolution
convert a token at the given index to a string entities and char
remove a segment of byte content from master xml doc
insert the byte content into xml and surround it with and
convert the byte content segment in terms of offset and length to
convert the byte content segment in terms of offset and length to
convert the byte content segment in terms of offset and length to
this method writes the vtd xml into an output stream
this method writes the vtds and lcs into an output stream
write vtdnavs internal structure into an output stream
write vtdnavs vtd and lcs into an output stream xml not written out
write vtdnavs internal structure into a vtd xml file
write vtdnavs internal structure vtd and lcs but not xml into a file
duplicate the vtdnav instance with shared xml vtd and lc buffers
clone the vtdnav instance to get with shared xml vtd and lc buffers
this function return the substring
this method returns the vtdnav object after parsing it also cleans
return the prefix of a token as a string if the token
sync up the current context with location cache
convert the byte content segment in terms of offset and length to
convert the byte content segment in terms of offset and length to
write vtdnavs internal structure into an output stream
write vtdnavs vtd and lcs into an output stream xml not written out
duplicate the vtdnav instance with shared xml vtd and lc buffers
clone the vtdnav instance to get with shared xml vtd and lc buffers
see this class javadoc comments to find out why this method is
this method synchronizes the newsservers declared in the configuration
thread run method that posts the message using the appropriate connection
will get the ejb local home factory
make this point equal the given point
add the given point to this point
reset the game
puts piece into stack
tells whether a given row is complete
reset the game
removes all complete rows from the stack
removes a row
calculates the location of the shadow piece and sets code shadow location code
rotate piece clockwise
paint an image of the given block
return the height of the stack at the given column
rotate piece counter clockwise
sets the selected file usually the first file that
sets the selected files usually useful when mult file
adds a decision to the scenario
checks if the first element of a trimmed line is decision caps
sets the current directory so that the chooser can reference
adds a picture to be displayed at the start of the scenario
gets the a given decisions to make within the scenario
sets the default file so that the chooser can enter a default
gets the situation statement
the current number of pictures
sets the file chooser
sets the owner which is usually the component that
gets the current directory so that the chooser can reference
gets the default file so that the chooser can enter a default
adds a new row to the table
removes the given row
removes the selected rows
allows the user to edit the name cell of the currently
sets the stop flag
allows the user to edit the name cell of the currently
adds a choice for the decision
adds a choice for the decision
adds a mouse listener to the table
gets the position number from the currently selected entry
gets the given decision choice for the decision
gets the decision choices index for the decision
aceepts the file if its name ends withe specified string
displays a file open chooser when the action is invoked
updates the graphics
clears all images and resets all their coordinates
resets all image coordinates
sets the equation randomly based on the number of equations available
sets the equations for the given number of images
sets the speed of the images which is the x increment
gets the flag of whether the image has flown off the screen
gets this object
gets the preferences panel object
applies the settings from the preferences panel
applies preferences from the general tab in the preferences panel
closes the round and calls the next round if appropriate
closes the scenario
load mp3s from the music folder
randomly chooses an mp3 file to play from the files loaded
plays mp3 music from the given path
plays music on a new music player
picks a scenario randomly from the scenario entries in the
loads the anatomy answer choices including both the
checks if an anatomy word has already been picked
checks if a scenario has already been picked
checks the typed anatomy name to see if the user
updates the game after a successful round
increments the round number by one
resets the lives to the default number
resets the cash to the default starting value
displays the given question
displays the feedback message which is similar to a question
switches the gui to typing mode a form of rounds mode
adds the gui components specific to the typing mode
adds the gui components specific to the answer choices mode
switches from scenario mode to bonus rounds mode
adds a music selection to the music menu
sets the current anatomy
sets the current anatomy question
starts the thread
allows for resuming the music
runs the player
changes the foreground and background colors to the
sets the component to flash
the component to flash
accept a given file to display if it has the extension currently being
accept a given file to display if it has the extension currently being
get the users public timeline
get the users own and friends timeline
get the users replies
get the users followers from the twitter rest api
load the theme for preferences
get the users own and friends timeline
get the users own and friends timeline
destroys the status specified by the required id parameter
favorites the status specified in the id parameter as the authenticating user
close the on screen keyboard
verify the users credentials
check api requests status
execute a get request against the twitter rest api
execute a post request against the twitter rest api
execute a post request against the twitter rest api
create a new query with the constraint search parameters
insert a record from a json object
prune old records from the database to keep the size down
load the user and friends timeline
load the user and friends timeline
insert a row from a jsonobject
remove old records to ensure that the database does not grow too large
return the number of new statuses
get the http digest authentication
return the number of new replies
get the last status id
destroy the status specified by id
parse the status code and throw appropriate exceptions when necessary
format a date in the twitter date format
returns the relative time passed since now
load the theme for preferences
sets the title with a left and right title
updates the activity title
retrieve the text that is currently in the editor
set the text in the text editor
initialize the user interface
check to see if the system has a hardware keyboard
initialize service and bind to it
disconnect and unregister the service
disconnects from the service and stops it
tweets changed callback method
data loading callback method
messages changed callback method
replies changed callback method
returns the shape of the clipping region
sets the border for the annotation
sets the border for the annotation
this returns a child instance of this graphics object
this returns a specific page
returns the shape of the clipping region
this is called by pdfpage when creating a graphcis instance
this returns a font of the specified type and font
this method is used internally by create and by the pdfjob class
sets a unique name to a pdfimage
this method creates an outline and attaches it to this one
this initialises the stream by saving the current graphics state and
sets the documents author
sets the documents creator usually the name of the application thats
this returns a pdfgraphics object which can then be used to render
this is used by the pdf and pdfpage classes to compare font names
sets the title of the document
internal method to actually construct the job
this writes the pdf document to the output stream finishing the
this returns a child instance of this graphics object
returns the pages dimensions in pixels
returns the pdf object for this document
this releases any resources used by this graphics object
this simply draws a white rectangle to clear the area
sets the keywords for this document
we overide graphics
this method adds a text note to the document
fills a rectangle with the current colour
adds a hyperlink to the document
this is not yet implemented
this is not yet implemented
this method attaches an outline to the current page being generated
this adds a page to the document
this is not yet implemented
this method attaches an outline to the current page being generated
this is not yet implemented
this creates a procset and sets up the page to reference it
draws a polygon linking the first and last coordinates
draws a polyline
fills a polygon
draws an image onto the page
draws an image onto the page
draws an image onto the page with a backing colour
draws an image onto the page with a backing colour
draws an image onto the page with scaling
draws an image onto the page with scaling
clips to a set of coordinates
clips to a set of coordinates
as my jdk docs say this may break with java 2 d
this extra method allows pdf users to clip to a polygon
returns the rectangle that fits the current clipping region
sets the colour for drawing
returns the font metrics for a font
returns the current font
this sets the font
this draws a string
all functions should call this to close any existing optimised blocks
functions that draw lines should start by calling this
this is unsupported how do you do this with vector graphics
draws a line between two coordinates
translate the origin
draws an arc
this moves the current drawing point
this moves the current drawing point
this adds a line segment to the current path
this adds a line segment to the current path
this extension allows the width of the drawn line to be set
this is used to add a polygon to the current path
this extension appends a bezier curve to the path
this extension appends a bezier curve to the path
this extension appends a bezier curve to the path
this extension appends a bezier curve to the path
this extension appends a bezier curve to the path
this extension appends a bezier curve to the path
converts the java space coordinates into pdf
converts the java space coordinates into pdf
converts the java space dimension into pdf
converts the java space dimension into pdf
converts the java space coordinates into pdf text space
open the books database
create a new book using the title provided
delete the book with the given row id
return a cursor over the list of all books in the database
return a cursor positioned at the book that matches the given row id
update the book using the details provided
open the notebook database
create a new page using the title provided
delete all pages for a given book id
delete the page with the given row id
return a cursor over the list of all pages in the database
return a cursor positioned at the page that matches the given row id
update the page title using the details provided
update the page body using the details provided
this method initializes s shell
this method initializes browser contents
this method initializes j list sites
this method initializes j list articles
this method initializes j text area contents
this method initializes j content pane
configures the shell
a cache for trellises during training
the cost of a transition depends upon the nature of the transition
whether were moving from an established position or pushing down from the left
update the word aligners new translation parameters
enter data into the histogram
checks if the given object passes the filter
destructively normalize this counter in place
set the count for the given key clobbering any previous count
increment a keys count by the given amount
increment each element in a given collection by a given amount
finds the total of all counts in the counter
returns a representation of the queue in decreasing priority order
returns the total number of substates
add an element to the indexer
returns a representation of the queue in decreasing priority order
how much capacity do we need for this type of map
format map type num key value pairs
return true iff interval ms has ellapsed since
how much capacity do we need for this type of map
format map type num key value pairs
generates an alignment for the same sentence pair according to the supplied posteriors
detects whether this is a soft or hard alignment and writes
writes the sure and proposed alignments in a modified
writes the posterior alignments in a modified version
reads a string of alignments generated by an output function or pharaoh
reads a string of alignments generated by an output function or pharaoh
the main function for handling all types of speech requests
initiate a connection with the server
set whether or not the tts engine should be blocking
the main function for handling all types of speech requests
sets carbon pitch
returns a string representation of the name of the engine
set the text to be processed
set the request type to be sent to the engine
get the request type
set the priority to be sent to the engine
get the priority to be sent to the engine
bind to the servers host and port
stop the daemon
gets the message
gets command from the user
gets the status before the errors occur
gets the string of the ip address of localhost
attempts to get an available port of local host for use
just returns the port to be used by local host
tests whether the echo is available
sets the username
gets echoes from the server
starts to connect with the server
initilizes the streams that input and output
sets transfer mode of transfer files
closes the connection with the server
sets a new host
sets the local file name
tests whether the mode is passive
sets a new port
sets the passive mode
sets the password
sets the active mode
prepares for active data connection
opens the data connection in active mode
opens the data connection in passive mode
counts the number of arguments
closes the data connection
gets command from the user
attempts to get an available port of local host for use
look up the commands list recognize which command matches
judges the command
closes the connection with the server
reads the input
closes the data connection
uploads a file in active mode
uploads a file in passive mode
shows the echo from server
determines whether the echo is valid
show the version
this method gets called when a bound property is changed
loads the list
saves the list
returns the nth server from the list
returns the index of the server in the list
returns the number of servers in the list
adds a server to the list
removes a server from the list
removes a server from the list
requeries all the data that has already been retrieved from the db
removes all servers from the list
returns the text to be disaplyed for the server list
returns true if the list has been modified and needs to be saved
empties the query caches and fires the property changes
detects the changes of the servers and marks the list as changed needs
registers authentication request listener to receive events from every server in
removes authentication request listener from all the servers in the list
resets the authentication so that it will the next get connection will
tells the dialog whether it should add a new server or it should
tests whether a connection to the db has already been opened
saves the list to the file
returns the path of the data on the host
buffers a master server pair during xml parsing
returns next buffered slave or 1 if none are found
returns the ip address of the server
this method gets called when a bound property is changed
returns the master server or null if the server is itself a master
changes the master server for this server
returns the host name port and ip address
changes the connection strategy used to authenticate and retrieve a
queries the database and returns an updated version of the list
returns the last queried list of processes connected to the db
queries the database and returns an updated version of the list
returns the las queried list of variables and settings
although tecnhically visible is false for a window by default the
returns whether the input is hidden as in a password field
set the expanded state of the item
associates the specified container to this layout
get the root item visible state of the tree
set the size of the first component in the container
set the root item visible state of the tree
sets whether the split is vertical components are left and right or
get the selected item of tree
gets the prior selected item of tree
returns an enum constant telling whether the first second or neither
set either the first or second component to be maximized
assigns a user defined code object code to this code radio button code
get a text representation of the key combo that will activate this item
set the key combo shortcut that will activate this item
sets the favourite icon for the browser
one and only one
adds a code action listener code that will be notified when the
unregister an code action listener code from all action event
sets the selected date in the component
sets the current tab sheet
this property is unsupported by the tab folder component
this property is unsupported by the tab folder component
this property is unsupported by the tab folder component
this property is unsupported by the tab folder component
set the title for the message box
writes the uploaded file to a new code file code at the
writes the uploaded file to the specified code file code
set the message for the message box
initiates the upload of the file from the users machine to the server
set the icon for the message box
gets the code frame code that represents the primary application
sets the buttons based on a string
returns the component that is displayed upon clicking the drop down button
makes the message box visible
returns whether you can type in the text field
make the message box visible and then block
close the message box
returns the code component code that previously had focus in the
this property is unsupported by the tab sheet component
this property is unsupported by the tab sheet component
add an action listener that receives click notification from this object
returns whether the dialog can be resized by dragging the bottom right
set whether the dialog can be resized by dragin the bottom right corner
returns whether the dialog can be drug around the frame
all keys in the file map must be upper case
set whether the dialog can be drug around the screen
set whether the dialog is modal
returns whether the dialog will block execution when visible
makes the dialog visible
sets the checked state of the row
set the developer user defined object for this tree
gets the id that is associated to the specified object
executes a xod file adding the created objects to the map and list
get this rows child grid box
sets whether this column is visible
sets the name of the column
sets the width of the column
sets the text justification left right or center
set the display format for this column
set the comparator for this column
returns the text to display in column headers
sets the text to display in the header of the column
get the selected state of the item
set the root item visible state of the tree
returns a boolean indicating if this grid boxs column headers are
sets whether the column headers are visible
returns a boolean indicating whether this grid boxs rows have visible
sets whether there are check boxes on each row
get a boolean indicating whether clicking anywhere on a row in this
get a boolean indicating whether this grid box can be sorted by clicking
sets whether the grid box can be sorted by clicking on column headers
returns the row that is currently selected
returns the prior row that was selected
gets the code frame code that represents the primary application window
sets the current tab sheet
writes the uploaded file to a new code file code at the
this method links a label with an onscreen component
initiates the upload of the file from the users machine to the server
assigns the component that is displayed upon clicking the drop down button
this property is unsupported by the tab sheet component
gets the id that is associated to the specified object
returns the grid box part of the drop down
sets the grid box for the dropdown to a differnt grid box
get the delimiter separating values in the text field in cases where multiple
sets the checked state of the row
chooses which columns value will be displayed in the text field
gets the grid that contains this row
gets the index for this row
set this rows child grid box
get this columns comparator
removes an existing action listener
programmatically signals an action which triggers the appropriate listener which calls
set the selected state of the item
set the comparator for this column
returns the name of the image file
associates an image file with this code image code object
returns a string representation of the image including file name and size information
assigns the component that is displayed upon clicking the drop down button
add an action listener that receives click notification from this object
sets whether there are check boxes on each row
sets the checked state of the row
make the message box visible and then block
returns the selected state of the row
sets the grid box for the dropdown to a differnt grid box
set this rows child grid box
sets whether this column is visible
sets the display name of the column
programmatically cause an action to occur for the given menu
set the comparator for this column
returns get checked
programmatically signals an action which triggers the appropriate listener which calls
get the selected state of the item
returns the text to display in column headers
set the selected state of the item
assigns this radio button to a specific group
programmatically fires an action which triggers the appropriate listener
returns the row that is currently selected
sets the current tab sheet
assigns the component that is displayed upon clicking the drop down button
sets the checked state of the row
returns the selected state of the row
set this rows child grid box
programmatically cause an action to occur for the given menu
sets the text justification left right or center
set the comparator for this column
programmatically fires an action which triggers the appropriate listener
returns any rows that have children
initiates the upload of the file from the users machine to the server
makes the dialog visible
provides a simple interface for adding folders to the mail box viewers
adds a button to the tool bar
places one component on the tool bar and aligns to to the right
retrieves a single field public private protected or package from the provided class
register a component handler instance for a key generally a class
get the class that will be responsible for handling a particular component
returns the next object that starts with code substring code
open and save codes
returns the grid square at the specified cordinates
gets the distance between two grid squares
checks if alien race is declared friend
checks if alien race is declared neutral
checks if alien race is declared enemy
checks the diplomatic status of an alien race
checks if alien race has previously been specified
checks if alien race is the same as the one calling the function
sets alien race to the specified status
sets alien race to the specified status in this race and if bidirectional
check that a new session is created
check that the session is destroied
check that the user login and password are set on session
test for getting the value of child text node from a element node
tests connect disconnect connect sequence for a group with two members
releases the resources associated with this connection
commits transaction and restarts a new transaction
rollbacks transaction and restarts a new transaction
closes this handle
sets the autocommit mode
returns true if the result of invocation is already known
gets the result of the preformed operation
returns true if the database with the associated url exists
returns true if the result of invocation is already known
waits a given time until the result of the operation is available
dums the error message
accept the visitor
dumps an error message
sets the value of the given variable
returns the value of the expression
returns a simplified node if possible usefull in expressions
dumps an internal error message
returns the value of the expression
sets the value of the given variable
returns the value of the variable
returns the value of the function executes subroutine
sets the value of the given variable
returns true if the following parameters can be the parameters of
returns a simplified node if possible usefull in expressions
associates the given reservation to the current value of the variable
returns the reservations associated with the given variable
returns the value of the variable
returns the value of the variable
sets the value of the given variable
returns the value of the expression
returns a simplified node if possible usefull in expressions
returns a simplified node if possible usefull in expressions
process a database definition syntax begin sql ddl statements end
sets the value of the given variable
displays the source code of the node
returns the value of the expression
sets the value of the given variable
returns the value of the expression
displays the source code of the node
the code execution has entered a new scope
the code execution has exited a new scope all names declared in this
returns the value of the expression
returns a simplified node if possible usefull in expressions
sets the value of the given variable
returns the value of the expression
sets the value of the given variable
sets the value of the given variable
returns a simplified node if possible usefull in expressions
sets the value of the given variable
accept the visitor
returns the value of the expression
process the given node interpreting the source code
returns a simplified node if possible usefull in expressions
returns the value of the expression
returns the value of the expression
displays the source code of the node
returns a simplified node if possible usefull in expressions
returns a simplified node if possible usefull in expressions
displays the source code of the node
returns the value of the variable
returns the value of the function executes subroutine
note returns the next token to be printed
sets the value of the given variable
returns the value of the expression
returns a simplified node if possible usefull in expressions
initializes internal structures related with transaction processing
initializes internal structures related with query processing
interpreter should be properly initialized defined only to
interpreter should be properly initialized defined only to
interpreter should be properly initialized defined only to
interpreter should be properly initialized defined only to
interpreter should be properly initialized defined only to
interpreter should be properly initialized defined only to
interpreter should be properly initialized defined only to
returns the value of the expression
should be called when some reservation has been associated with any variable
should be called when some reservation has effectively been used in the execution
the associated transaction has been commit used reservations must be updated
the associated reservations has been rollbacked used reservations must be updated
returns the used reservation that backs up the given conditions
returns the value of the expression
returns the used reservation that backs up the given conditions
process a mobile transaction
checks the given parameters are backed up by this reservation
the associated transaction has been committed
returns a readable representation of this reervation format br
the associated transaction has been rollbacked
updates the reservation and database according to the current usage processed
updates the reservation and database according to the current usage processed
checks the given parameters are backed up by this reservation
returns a readable representation of this reervation format br
checks the given parameters are backed up by this reservation
returns a readable representation of this reervation format br
updates the reservation and database according to the current usage processed
updates the reservation and database according to the current usage processed
checks if there exists a reservation that satisfies the given conditions
checks the given parameters are backed up by this reservation
checks if there exists a reservation that satisfies the given conditions
returns a readable representation of this reservation format br
checks which conditions the given node satisfies
increases the number of used instances in the given reservation
checks which conditions the given node satisfies
the associated transaction has been committed
returns a readable representation of this reervation format br
updates the reservation and database according to the current usage processed
checks that the user is logged in
process one received app msg that is part of a plsql program
render a result set as a text string
create a new socket process for a new connection
returns the connected remote address as a string
create a new user session
initialize the given command with the defined parameters if any
adds initial parameter values for the given class
adds initial parameter values for the given class
you must call this method to initialize this class mappings
reads mappings from the given xml config file name
return the initial parameters for the given class
read mappings from the given input stream
adds mappings for the received commands
process a new i mapping i element
util method that returns an element text value
extracts parameters initizing values from a list of elements i param i
starts listening for messages
the user session id
starts listening for messages
when was this message created
default beahavior simple call the execute method on command
adds a new listener for group events
return a list of the current group members addresses
return the local address
convert a jgroups view into a non specific implementation view
leave a group
short cut method
simply calls the notify method on the main class
simply calls the notify method on the main class
simply calls the notify method on the main class
returns a copy of the list of current group listeners
normalize three letter and full residue names to their one letter abbreviations
return the mutant residue for this point mutation
return the wild type residue for this point mutation
test the the constructor works for input of both ints and strings
test that the hashcode method functions as expected
test that the constructors returns without error
test the the equals method performs as expected
test that the amino acid normalization is working properly
test that no mutations are returned for text that contains no mutations
test extraction when there are multiple mutations and look ahead is required
test extraction for case insensitive matches
test extraction on mutations is varying numbers of digits
the regexes should disallow unacceptable word boundaries
the regexes should allow these word valueboundaries
test that mf identifies full name mentions of amino acids
test that mf finds things like ala64 to gly
ensure proper spacing for matched mutations
test if reading is invalid
return the pose of this particle
calculate the weight for this particle by comparing its readings with the
get a specific reading
return the number of particles in the set
get a specific range reading
get a range reading for a specific angle
get the angle of a specific reading
return true if the readings are incomplete
get the number of readings in a set
set the range reading
dump the readings to a data output stream
load the readings from a data input stream
get a specific particle
print the range readings on standard out
calculate the weight for each particle
apply a move to each particle
returns the compass angle in degrees cartesian increasing counter clockwise i
get the estimated pose of the robot
moves the nxt robot a specific distance
reset the estimated position to unknown
return the minimum rectangle enclosing all the particles
sets speed of both motors as well as move speed and turn speed
the highest weight of any particle
get the border where particles should not be generated
also sets motor speed
check if a point is within the mapped area
return the bounding rectangle of the mapped area
dump the map to a data output stream
set the standard deviation for the sensor probability model
load a map from a data input stream
set the distance noise factor
set the distance angle factor
set the maximum iterations for the resample algorithm
find the index of the particle closest to a given co ordinates
check that the given pose satisfies the conditions for this way point
serialize the particle set to a data output stream
load serialized particles from a data input stream
dump the serialized estimate of pose to a data output stream
moves the nxt robot forward until stop is called
load serialized estimated pose from a data input stream
find the closest particle to specified coordinates and dump its
moves the nxt robot backward until stop is called
rotates the nxt robot through a specific angle
get the distance traveled
get the angle turned by a rotate or an arc operation
get the type of the movement performed
get the radius of the arc
rotates the nxt robot through a specific angle
send a packet
returns an input stream for this rcxport
receive a packet
receive an ack
returns an output stream for this rcxport
check if a packet is available
resets sequence numbers for this port
check if an ack is available
closes this rcxport stopping the listener thread
set the source and destination for this connection
set or unset the listen flag to keep a pc serial tower alive
check if an ack is available
close this packet handler and all lower layers
get the last error
checks if there is any data avaliable on the input stream
receive a packet
check if a packet is available
stops the nxt robot
helper method to return a single register byte
sets a single byte in the i2 c sensor
send data top the sensor
helper method for retrieving string constants using i2 c protocol
set the address of the port
moves the nxt robot in a circular arc through the specified angle br
resets tacho count for both motors
moves the nxt robot in a circular arc through a specific angle br
moves the nxt robot in a circular arc through a specific distance br
moves the nxt robot a specific distance in an hopefully straight line
method to set an angle in a rc servo
set minimal angle
set maximum angle
method to set minimal angle
method to set maximum angle
method to set medium angle
method to set medium angle
moves the nxt robot a specific distance in an hopefully straight line
classic forward method for continous rc servos
classic backward method for continous rc servos
method to add a rc servo to current lsc
method to add a rc servo to current lsc
method to get an rc servo in a lsc
method to add a dc motor
method to add a dc motor
method to get an ldc motor
load all servos connected this this lsc
unload all servos connected in a lsc
this only needs the be run if you are changing the sensor
returns the distance from the object in millimeters
turns the sensor module on
get the number of objects being tracked
camera sorts objects it detects according to criteria either color size
turns power to the sensor module off
enables adpa auto detecting parallel architecture
choose either object or line tracking mode
get the color number for a tracked object
disables adpa auto detecting parallel architecture
get the rectangle containing a tracked object
returns the current distance in millimeters for the lsb
send a single byte command represented by a letter
returns the current distance in millimeters for msb
returns the current voltage level in millivolts for the lsb
returns the current voltage level in millivolts for the msb
used to determin the sensore module that is configured
gets the number of points that will be in the curve
sets the number of points that will be in the configured curve
gets the min value in millimeters for the lsb
sets the min value in millimeters for the lsb
this method set the pulse in a rc servo
gets the min value in millimeters for the msb
method to set an angle in a rc servo
sets the min value in millimeters for the msb
method to set the speed in a rc servo
gets the max value in millimeters for the lsb
sends command to pf ir receiver to apply changes made to the registers
sets the max value in millimeters for lsb
determines which motors are to be used buy default both are activated
gets the max value in millimeters for the msb
returns the current ir channel in use by the pf mate
returns which motors are activated
sets the max value in millimeters for the msb
gets millivolts value of the specific index for the lsb
each bit in the short byte represents the boolean pressed or
sets millivolts value of the specific index for the lsb
gets millivolts value of the specific index for the msb
sets millivolts value of the specific index for the msb
calculates the turn rate corresponding to the turn radius br
returns the current operating mode of the sensor
gets millimeter value of the specific index for the lsb
use adpa mode only if you are trying to connect more
sets millimeter value of the specific index for the lsb
selects channel two
selects channel three
gets millimeter value of the specific index for the msb
selects channel four
turns off all channels
sets millimeter value of the specific index for the msb
returns an integer value from the specified register
method to set the speed in a dc motor
compass readings increase clockwise from 0 to 360 but cartesian
returns the direction of the target 1 9
returns value of sensor 1 5
method to get an rc servo in from the nxtservo
starts calibration for mindsensors
read the battery voltage data from
send commands to both motors
send a single byte command represented by a letter
sleep the sensor
method to know if servo is moving to a determinated angle
by default the sensor is short range
wake up the sensor
changes the sensor to short range mode
set a delay in a motor
get the steering value
changes the port to long range mode
get the average value
load servo located in a position x
acceleration along x axis
this class set the pulse over a rc servo or a dc motor
acceleration along y axis
acceleration along z axis
read the gyro value
get status from each sensor in the raw
floats the motor
runs the motor forward
convert sensor value to fahrenheit value outside 4 158 is not accurate
runs the motor backward
stops the motor
sets the motors speed
returns the speed
add a lsc lattebox servo controller
returns the raw values from the rotation sensor instead of degrees
get a lsc lattebox servo controller
the nxt uses 6 batteries of 1500 m v each
the nxt uses 6 batteries of 1
get the light reading
get the normalized light reading
set the nxtcomm used to communicate with the nxt
sets the power of the motor
toggle the verify flag
block encoder count is the count used to synchronize motors
small helper method to send direct command request to nxt and return
resets the block tachometer
starts a program already on the nxt
forces the currently executing program to stop
connects to a nxt brick
name of current running program
paint the map and particles
paint the particles
draw the map using line2 d objects
paint the pose using ellipse2 d
opens a file on the nxt for reading
create a line that represents the direction of the pose
find the particle closest to the specified coordinates
get current state of the particles from the nxt
send a command to the nxt
close down the program and the nxt
find the closest particle to the mouse click
close the stream
paint the panel
closes an open file
clear the panel
connect to the nxt
print the error message and exit
delete a file on the nxt
connect to any nxt over any protocol in packet mode
connect to any nxt over any protocol specifying mode
connect to a specified nxt in packet mode
connect to a device by url in packet mode
get the battery reading
close the current device
call the close command when your program ends otherwise you will have
write bytes to the device
put the nxt into samba mode ready to update the firmware
close the connection
log an exception to all the log listeners
log a message to all the log listeners
write data to the file
return true iff x is between x1 and x2
return the length of the line
a nxj extension to defrag the file system
get the friendly name of the nxt
set the friendly name of the nxt
get the local address of the nxt
retrieves tacho count
used to request data from an inter integrated circuit i2 c sensor the
sends a message to an inbox on the nxt for storage
plays a tone on nxt speaker
stops sound file playing
resets either rotation count or block tacho
get the fimrware version
deletes user flash memory
take a single range reading
stop the robot and clear the queue
add a point to the path to move
take a set of 3 readings
make random moves until the estimated pose is good enough
called within the scope of a thread defined by button
reset the fsm to its initial state
the thread entry point
inform the coordinator that we have released the actuators
request control of the actuators
return true if the fsm is executing false otherwise
convenience function to make it appear to subclasses that
attempt to run this actuator
this is actually executed in a thread established by
this is actually executed in a thread established by
this is actually executed in a thread established by
returns true if the given timestamp passed
returns the address info associated with this location object
this method is not implemented by le jos and returns null every time
returns the coordinates of this location and their accuracy
calculates the azimuth between the two points according to
returns whether this location instance represents a valid location with coordinates
sets the terminals course ensuring that the value is always in the range
set the current ground speed of the location object in m s
returns the horizontal accuracy of the location in meters 1 sigma standard deviation
returns the discovery agent for this device
returns the friendly name of a bluetooth device
changes the friendly name of the nxt brick
indicates if the remote device has been properly paired authenticated
the bluetooth device class for the lego nxt brick
normally the mode values are found in javax
indicates whether the nxt brick is visible to other devices
returns the local bluetooth address of nxt brick
retrieves the major service classes
determines if two remote devices are equal
retrieves the major device class
removes the device from inquiry mode
update the robot position and apply it to all the particles
get the forward projection of the robot
get the particle set
get the estimated position and angle of the robot
return the input stream for this connection
return the output stream for this connection
return the data input stream for this connect
return the data output stream for this connection
close the stream for this connection
open the stream for this connection
get the signal strength of this connection
reset sequence numbers
executes an i2 c read transaction and waits for the result
executes an i2 c write transaction
executes an i2 c write transaction
internal helper function read a string from the device
set the address of the port
get the port that the sensor is attached to
causes motor to stop pretty much
set the sensor type and mode
set the sensor type
set the sensor mode
reads the boolean value of the sensor
reads the raw value of the sensor
returns value compatible with lego firmware
get the name of the remote brick
get the nxtcommand object used for remote access
test if i2 c is busy
get the bluetooth address of the remote device
get the free flash memory on the remote nxt
enable i2 c on the port null for remote ports
return the emulated lego firmware version on the remote nxt
return lcp protocol version
deletes all user programs and data in flash memory
delete a file from the nxt
starts a lego executable file on the nxt
stops the currently running lego executable on the nxt
retrieves the file name of the lego executable currently running on the nxt
send a message to a remote inbox
play a tone on the remote nxt
plays a sound file on the remote nxt
plays a sound file on the remote nxt
stops a sound file that has been playing repeating on the remote nxt
close the connection to the remote nxt
download a file from the nxt and save it to a file
set a new nmea sentence into the object
return if your nmea sentence is valid or not
method used to parse a gga sentence
get speed in kilometers
returns the last time stamp retrieved from a satellite
get date in integer format
returns the number of satellites currently in view
returns the number of satellites being tracked to
return compass value from gps
return a nmea satellite object
get gps quality data
return compass degrees
return a date object with data from gga and rmc nmea sentence
returns the number of satellites being tracked to
get longitude direction
get true course in degrees
the altitude above mean sea level
get magnetic course in degrees
get speed in kilometers per hour
get the course heading of the gps unit
helper method used by both constructors
selection type of 2 d or 3 d fix
get the 3 d position dilution of precision pdop
get the horizontal dilution of precision hdop
get the vertical dilution of precision vdop
method used to close connection
internal helper method to aid in the subclass architecture
return the location of the keypress
add a listener to manage events with gps
typematic rate is the rate characters repeat when a key is held down
typematic rate is the rate characters repeat when a key is held down
version of select without timeout
notify listener if present
reset the timeout period
indicates whether or not caps lock is enabled for the keyboard
determines which modifier keys are held down
set the number of lines to show in the screen
enable disabled if you need to show output with delay
set the delay measured in ms
show in nxt screen a message
show in nxt screen a message
returns the source of the key event
add a handler to the set of handlers associated with this event
remove a handler from the set associated with this event
test to see if the handler given as the parameter is associated with
create a release parameters object appropriate to the release characteristics of this event
binds this to an external event a happening
gets the maximum priority available for a schedulable object managed by
removes a binding to an external event a happening
fire this instance of async event
gets the minimum priority available for a schedulable object managed
gets the normal priority available for a schedulable object managed by
this method first performs a feasibility analysis using the proposed
this method first performs a feasibility analysis using the proposed
gets the initial number of elements the arrival time queue can hold
sets the deadline value
sets the behavior of the arrival time queue in the case where the
this method first performs a feasibility analysis using the new cost
sets the initial number of elements the arrival time queue can hold
inform this scheduler and cooperating facilities that the resource
inform this scheduler and cooperating facilities that the resource
trigger the execution of a schedulable object like an
sets the priority value
trigger the execution of a schedulable object like an async event handler
queries the system about the feasibility of the system currently being considered
gets the period
gets the start time
sets the deadline value
this method first performs a feasibility analysis using the new period
sets the period
sets the start time
this method first performs a feasibility analysis using the new
compares this high resolution time with the specified
gets the minimum interarrival time
for the comparable interface
set the minimum interarrival time
returns true if the argument object has the same type and values
sends a close escape sequence to the socket proxy
waits until there is a socket connection available
returns the data input stream of the socket
returns a hash code for this object in accordance with the general
returns the data output stream of the socket
returns the output stream associated with this socket
returns the input stream associated with this socket
write escape sequence to indicate end of file
sets the millisecond component of this to the given argument and the
sets the millisecond and nanosecond components of this
get the bounds as a rectangle2 d with float coordinates
test if this rectangle contains a specified rectangle
test if this rectangle intersects a specified rectangle
test if the rectangle is equal to a given object
get the bounds of this rectangular shape as a rectangle
get the bounds of the line as a rectangle2 d
get the square of the distance between two points
get the square of the distance of this point to a given point
get the distance from this point to a given point asa double
test if this rectangle2 d contains a rectangle defined by double coordinates
returns the millisecond value of this code date code object
pushes an object onto the queue
test if this rectangle2 d intersects a rectangle defined by double coordinates
test if this rectangle intersects a given line
method used to know if exists new tokens
method implemented by interface requirement
returns a random boolean in the range 0 1
returns the next pseudorandom gaussian normally distributed double value with mean 0
returns a convenient enumaration object to cycle through elements in vector
get the bounds of the line as a rectangle2 d
writes a string to the underlying output stream
writes a newline character
writes a string followed by a newline character
if the file is a binary executable begins running it
returns the length of the file denoted by this file name
closes this input stream and releases any system resources associated
write the buffer to flash memory and update the file parameters in flash
create a string from a character array
create a string from a byte array
create a string from a byte array
create a string from a byte array
create a string from a byte array
returns the index within this string of the first occurrence of the
returns the thread id
find the last occurrence of a string
appends a string with no null checking
find last occurrence of s string from a given index
appends a string with no null checking
special version of hash that returns the same value the same string values
run the utility
set the value
set the maximum value
update the data in the model
set the raw value of the sensor
set the maximum raw value
return the number of rows
set the scaled value of the sensor
set the maximum scaled value for the sensor
get the data in a specific cell
set the type of the sensor
delete a file on the nxt and update the model
get the number of rows in the model
close the connection
attempt to restart the nxt in sam ba mode
get the object at the specified location
set the value of a cell
check if a cell is editable
fetch the files from the nxt
get the file info object for a specific file
update the status field when usb or bluetooth radio buttons selected
return the number of files
format the nxt file system
verify the firware downloaded to the device
creates a new socket server if instructed by the nxt
causes a new thread to be invoked
causes a new thread to be invoked
execute tiny vm
create the tabs for lcp
create the tabs for lcp
create the tabs for lcp
set up the files panel
populate the other panel
set up the files table
return the number of motors selected
return true iff exactly two motors selected and show message if not
return true iff at least one motor selected and show message if not
download a file from the nxt
show a pop up message
update the sensor dials
clear the files tab
switch between nxts in table of available nxts
update connection status in the connections table
toggle connect button between connect and disconnect
get the selected protocols
get the application protocol
stop the motors on the nxt and update the tachometer values
retrieve the sensor and battery values from the nxt
convert a byte array to a string of hex characters
convert a character to a hex digit
connect to the data logger
append data item to the data log
delete selected files
choose a file and update it
download the selected file
run the selected file
change the friendly name of the nxt
move the motors
set the sensor type and mode
play a tone
reset the tachometer for a motor
play a sound file
read i2c reply
format the file system
returns true if this monomial divides the argument
returns true if this monomial equals the argument
returns true if this monomial is before the other in their lexicographic
returns the lexicographic ordering associated with this list
returns true if this monomial is before the other in the given lexicographic
formats the monomial into a string representation using the lexicographic
adds a variable to the order at the end of the ordering
returns the index in the ordering for the variable name
creates a string representation vector format of the monomial
projects the ordering by removing the first variable in the ordering
returns the right sibling of this entry
test of unmarshall marshall monomials
test of unmarshall marshall lex order
test of unmarshall marshall monomial ideal
test of unmarshall marshall monomials
returns the lexicographic ordering associated with this tree
returns the tree root
resets the tree and returns all the entries to the pool
indicates whether the tree contains a monomial
iterates all the paths to monomials leaves in the tree
iterates all divisors of a monomial in the tree
adds a monomial to the tree with associated data
adds a list of monomials with associated data to the tree
removes the divisors from the tree
interrupts the current method if possible
produces a string format of the tree very large
removes the maximal artinian powers from the tree
adjust the tree and reverse the deformation caused by making an ideal
retrieve the root object of the given data object
retrieve the root object of the given data list
this method was created in order to create new data
this method was created in order to retrieve existing data
this method was created in order to retrieve existing data
by default returns that sum of all works durations
returns a day a key in for days map for the given datetime
returns the number of individual workers in the given group i
uses only for optimization
returns null or specific calendar for the given day
finds the task performed by the given worker in the given slot
returns the finish of the last task completion time
performs the main work without the client problem
checks if the given time is working
returns cost of the work during the given time interval
returns rate for the given time
returns day of month for the given time
used to filter workers for the work not to create undoable tasks
fills schedule with information on slots capacities
returns time since the calendar day begins 12 p
set worker filter by default all the workers can do any work
returns the time moved to the beginning of this
return the length of the atomic interval equal to one min time unit
must be equal or less than time unit
converts time from model to real life with base datetime
converts time from real life to model with base datetime
returns the difference between the given datetimes as double
returns the given time interval in milliseconds as double
return the length of the interval equal to 1 unit
returns ratio between two units they must be supported by
allows iterations of units from minimum to maximum
allows iterations of units from minimum to maximum
adds the task and reserves the capacity for this task
returns true if each time slot of the given interval is working
throws exception is time is 0
does not set null start time to set it later
p is a problem for detailing and p
must be called by scheduler when no continuous sequence of slots is found
returns duration depending on category index for vector of max durations
returns weight depending on category index for vector of max durations
optimized for slot schedule horizon must not be null
for jobs schedule
for non jobs schedule
override if there is more efficient way to sum compared to getting
optimized for jobs schedule whose get jobs method works fast
by default returns slot duration for all workers
extracts int from the given slot number
uses number format so it should be set before
if remains default skill task
some conditions can be checked only after creating the task instance
returns true if some constraints is violated by current start finish times
return the start time of the interval for the given slot index
by default returns work
adds the work necessary to be done before this work
initializes by set tasks of tasks job
for creation tree structure
returns true if the given worker has skills with appropriate level
support for duration depending on worker
returns true if all skills are contained by other skill set
uses number format so it should be set before
if remains default skill task
should return own
creates number of the same type x such as x
returns fuzzified fuzzy preference relation with non zero error
returns the support interval where membership function of the number is not zero
overriden only for case of exact number
overriden only for case of exact number
every element of matrix r except diagonal add betta
extracts int value from any number
casts any number to int number or extracts int number from it
extracts long value from any number
casts any number to long number or extracts long number from it
returns euclidean vector norm sum of elements squares
be careful the result is not immutable
calculation of module of eigen value with min module
calculation of module of eigen value with max module
check of operator consistent
setting information about convergence of algorithm
initialization of information about convergence of algorithm
setting initial estimate of process of calculation eigen value
check of operand inside brackets
default vector that have simple property
check of function expression
default vector that have simple property
creates complex number
creates new lu decomposition
creates new lup decomposition
creates new eigen value decomposition
override if you extend this
inconsistent with equals
overriden not to create unnecessary scalar from a
overriden not to create unnecessary scalar from a
re initialization and notification about matrix change
check whether table is square one
creation of non null matrix
re initialization and notification about matrix change
called in marix product
all methods calling this were overriden so this is useless
all methods calling this were overriden so this is useless
removing all diagonals that are along the edges and have only zero elements
total width of a string for 1 number solution component with ending separator
override to optimize
with line feed
without line feed
without line feed
diagonal check on all zero elements
can be overriden e
used in copy submatrix etc
abs can take matrix argument so change this
can be overriden to override ln
filling vector with zero
deep copy and clone calls this
override to change precision
getting length of main diagonal the maximum length among all diagonals
setting all diagonals for banded matrix
for vectors performs element by element multiplication for matrices calls their method
override to decrease wastes
for performance does not set resulting elements to matrix
override to decrease wastes
element by element product for vector a matrix product for matrix a
allows to set the degree of chebyshev polynomial
a can be null
removing extreme diagonals
allows to set the degree of legendre polynomial
is needed only to use specific linear algebra library
override to set element by element if get elements works slow
for performance does not set resulting elements to matrix
function of probability density referencing apache commons
to use in string argument constructors compatible with
adjust iteration count to the precision of the function argument
computes empiric dependence of iteration count on numbers precision p
pi 2 pi 2 see constructor
calls process element operation in a loop
here control whether x is integer or not is checking
whether value is integer in real or not
power can take matrix first argument
this nethod should return integer value or throw some exception
exponent can take matrix argument
dont set true in this method in intermediate calculations because of
override to update some more between calls to calc
calls process element operation a in a loop
call this method if some of elements are differentiable multi functions
is useful to adjust numerical differentiator step method etc
returns the value of n th chebyshev polynomial at x
must be called to save 1 function when calculating not anly derivative
can be overridden to diminish arg count after differentiation
approximates derivative using function values in some points
approximates derivative using function values in some points
the order of must coinside with the order of y components
calls process element operation a in a loop
use to set one step for all derivatives
use to set one step for all derivatives
is needed only for the case of default vector function differentiation
if true default differentiate only by first f
if true default minimize calls to the function
it is better if a is row matrix
calculation of matrix determinant
by default the argument in formula is x
by default the arguments in formula are y1 y2
override if possible
override if possible
returns vector function filled with derivatives of the given elements
can be not called if argument count should be determined automatically
can be not called if argument count should be determined automatically
must be called in iterate
setting function via string formulas
override to optimize especially if multifunction depends not on all arguments
it is better if a is row matrix
returns 0 if all functions are not multivariable
sets a constant part of variables name to all dependence multi functions
can be not called if arg count should be determined automatically
is used in some cases
call before set dependence if your dependence contains arguments which
the same as set owned argument names list string but for array
prepare this object for calls of calc method
the same as set owned argument names list string but for array
sets the set of variable names corresponding to xs argument of calc number
returns the index in xs argument of calc number method
returns matrix function filled with derivatives
convert the last part of variable name to int
string representation of
is called by matrix on every operation changing this matrix state
if this is needed call this before set lookup table
setting function of many variables as string
to do replace by set extrpolator
getting value of function in case the function is constant one
check whether function is a constant
modified woth korchak anton
modified woth korchak anton
modified woth korchak anton
modified with korchak anton
check whether operand should be wraped with brackets
return shallow clone children etc
called for root context created with empty constructor
for performance does not call process element and sets resulting elements to matrix
whether list with open bracket contains neseccary bracket
setting algorithm of graphic formula renderer
whether list with close bracket contains neseccary bracket
getting dimension with max width and height among two dimensions
for compatibility with jlabel
adding one more else close bracket
whether list with root beginnings contains neseccary root
whether list with root ends contains neseccary root
adding child into list of this context
to lift all arguments with some value
call this method only after filling table with data
sift this context only with value
call this method only after filling table row with data
to shift all arguments with some value
returns height that is recommended to set to the given table row
to lift only this context with some value
getting max height over all arguments which are depended on this one
inverses all elements
factory method called for both re and im parts
returns copy which imaginary ppart has the opposite sign
getting full minimal height of argument
changes sign of all elements
overriden to support equality the same functions
adding new varable to dufferentiate by
remove varable from list of variables to differentiate by
adding formula for differentiation
remove formula from list of formulas to be differentiated
calculating real size of graphical formula
discarding result of differentiation
getting derivative of all formulas by all variable
adding new varable to dufferentiate by
remove varable from list of variables to differentiate by
returns determinant of this 2
setting formula for differentiation
discarding result of differentiation
getting derivative of dependence
getting derivative by name of variable
getting all derivatives as map where key is name of variable
getting second derivative of dependence
getting second derivative by concrete variables
setting name of variable to differentiate by
setting formula for differentiation
discarding result of differentiation
getting result of differentiation in string presentation
for performance does not call process element and set resulting elements to matrix
getting result of second differentiation in string presentation
getting result of differentiation as root of tree function
getting result of second differentiation as root of tree function
getting result of differentiation as dependence
getting result of second differentiation as dependence
getting derivative of dependence
getting second derivative of dependence
to consider pow function as function or operator
processing sqrt function
searches junior priority operator outside existing brackets
setting root of differentiating tree function
setting name of variable to differentiate by
discarding result of differentiation
getting derivative of tree function
call this method if argument cant be processed with ordinary
whether this variable is one to differentiate by
getting derivative of variable type of named argument
getting derivative of complex function
creating derivative of simple function
getting derivative of operator
returns false is term must be added true if iterations must be broken
getting derivative of plust operator
getting derivative of minus operator
gets diagonal of square matrix as vector
creating of mult dependent
drawing mult operator
diagonal domination check
drawing divide operator
through exception if parameter value is not reasonable
check matrix on whether it is symmetric one
creating pow operator not pow function
create square matrix of the same size
whether to create pow operator of pow function
create square matrix of the same size
the method must be overriden of not only parameters are used as arguments
draw one bracket
setting storage of dependence elements
getting storage of dependence elements
draw one root
default initialization of simplification methods list
modified with korchak anton
call this if you work with non double precision numbers
the default is 1
whether to check expression on exponential notation of number
getting contex that contains target bracket
many implementations requires number equal to one 1
to distingush calls from begin series end series use the following conditions
getting contex that contains target root
notify listner about some changes in formula
returns number of elements in the given dependence part
split of aruments into simplest part and sorting them into
getting graphical contex for drawing lines
method just to simplify method add and sub all posible
override if you can assume that 2 subsequent terms can be zeros
by default no more than 100 iterations should result in relative accuracy 0
checks number some part of solution if no use to proceed iterations further
calculation of condition number for given matrix and norm method
setting method to calculate bounds of spectrum of matrix
maximize not only deviation but iteration count too is needed
getting method to calculate bounds of spectrum of matrix
the same as compare to number number but for double
updating storage with new value
is called before
creates unnecessary object
is implementation needed it processes case of scalar number
searching of greatest common divisor
is implementation needed it processes case of scalar number
returns new number
returns new number
actually now works only with one variable first in list one
do nothing because should add independent terms returns false
overriden to prepare term procesing instead if real function evaluation
overriden to form fuzzy number from combination coefficients changed in super
returns clone with the same a and d 0 see add fuzzy
simply assigns double value to this
calculate through fuzzy function
y value is already calculated
sets x0 for ys conservative linear combination
removing list of variables
removing all variables
does nothing in this implementation
removing variable that wont be used
setting order of decomposing in taylor series
can be overriden for another algorithm
relative bases i relative error is absolute error relative bases i abs value
is it needed to create number get value method
setting function for taylor series decomposing
discarding result of differentiation
0 month 1 tav 2 tdev 3 tmin 4 c p ymin
getting whole taylor series as
should be called only in case of single calculation of sum
can be overriden
without line feed
template method for extending direction set in subclasses
used only by the problem
overriden to store result and use it in calc derivative
if true by default calc derivative tries to use value of
can be overriden if derivative can be calculated only numerically
it is posible to get simplified series here
can be called together with set x0 double
for non autonomous problem the last argument of the function is x
can be called together with set interval double
is not final to calculate when needed
returned matrix must remain unchanged
to get mathimaticaly exact function decomposition as string
if inner grid is defines then its nodes will be used
seting the vector of functional values for the grid
setting list of nodes to grid function
returns the degree of decomposition by functional basis if it is set
sets the degree of generalized polynomial
returns the functional basis in use
sets the functional basis to be used
warning index is according to internal grid if it exists
returns the solver
returns the grid used in approximation
getting value of grid function
sets the grid to be used in approximation
returns internal grid if it exist
sets the solver to be used
calculates the value of model function in the point given
getting global grid of function
returns the default solver which contains the default algorithm
setting grid to
creation of the grid with given nodes
prints string representation of function number code number code
getting size of grid function
getting the number of points in which value of some
important k is relative positiv index e
in this implementation summation simplification is not used because it moves 1
length must be
overriden to use newton iterative solver
do not forget to set identity matrix to newton aealgorithm if needed
override to return non null if you use specific non scalar numbers
override or set explicitely to iterative nonlin aesolver this
returns y next can fill f next if it is not null
according to current implementation of init context context stores either y or f
direct gauss solver is used for linear tasks of small dimension
sets the given elements for parts simplifier if it is needed and differentiator
result is used as factor for y1 y2
if remains true returns best solution for smaller step
gets y1 y2 from step algorithm context
if false does not extrapolate but compute error only
sets the problem supplier
method must contain either coefficients of butcher table or solver of algebraic equations
used in store point and combine solutions
overriden to store only selected components
overriden to change solution component count
sets the solution components to be saved equals for all problems
sets one solution component to be saved equals for all problems
4 th order method with k 4
can be overriden for another rool of total inexactitude calculation
called only if is numerical derivative false
direct gauss solver is used for linear tasks of small dimension
copies this solution to some mutable odesolution
method must contain coefficients of butcher table
returns formatted time of computation in milliseconds
if the butcher table is not set default will be created
to be called by subclasses
semi implicit 2 stage 2 order a steady l steady monotonic
to be called by subclasses
to be called by subclasses
sets ys as a part of initial values vector for initial values problem
should return null
can be overriden
total width of a string for 1 number solution component with ending separator
can reduce solution back
can be overriden called before exponentiation
array length should coinside with the problem size or at least be 1
coefficients must already be set here
additional step decrease must be 1
overriden because our delta is not small and accuracy is not needed
returns algorithm to use at all iterations except the first
returns right part time derivative
step is fixed
returns empty context
the power of this method is the subject of change
should be called if relative derivative matters
should be called if absolute derivative matters
should be called from get scale base
doubles solution length by default
can be set instead of overriding init solution
is often overriden
if true creates final point solution if false by default default odesolution
overriden to clear old solution
implementation of both fixed and unfixed step
used both in init step algorithm assuming fixed time step and subclass
no step method by default if subclass does not override
getting parent stopper in chain
mustnt be called before setting a problem
getting mode of calculation whether it step mode or not
by default full scale for step method
setting some stopper to manager
getting link to stopper with ability to have access to all
if adapt step algorithm is already set its maximum step will be changed
to stop calculation through stopper
whether there is even one stopper that in waiting state
setting state of stopper in term of wait
can be null
can be null
set all three steps the given one become initial minimum initial 100
is needed when recomputation is needed
this method is called for i 1
symmetry and positive definiteness checks
empty methods is needed only for nonlinear implementations
whether to check given problem
setting parameter defining whether to check problem before calculation
return true if iterations should be stopped due to reached accuracy
the size of this vector must coincide with the number of null elements
checks if no use to proceed iterations further
diagonal domination check
solution interpolation to x by known x0 and x2 points
empty implementation by default most iterative solvers calculate new vectors without
doing the following l tau l u tau u
complicated method of calculation main part of xn 1 row
calculation of deviation vector
getting simple iterative parameter method
is required to call only if listener null stopper null
setting trivial parameter value
setting iterative parameter value
calculation of second iterative parameter of three layers chebyshev method
calculation of parameter ro
to do self adjoined check instead of symmetry check
called in the beginning of solve
ability to calculate second iterative parameter alfa
ability to calculate first iterative parameter tau
realization for chebyshev method
setting constant parameter value
modulus values of all eigen values should be less than 1
getting number of iterative parametes that will be used for creation iterative process
called in the end of solve
to do self adjoined check instead of symmetry check
steepest descent method or gradient descent method parameter calculation
setting spectrum bounds for system matrix
calculation of discrepancy at current iteration
converts error from convergence algorithms form square to client listener inexact solution form
symmetry and positive definiteness checks
setting number of iterative parametes that will be used for creation iterative process
getting matrix of system
minimal discrepancies method parameter calculation
positive definiteness check only
setting method to calculate spectrum bounds for system matrix
getting method to calculate spectrum bounds for system matrix
getting precision the set of iterative parameters is calculated for
three layers iterative method
modified with korchak anton
calculation of iterative parameter
setting precision the set of iterative parameters is calculated for
usually not needed see init d
setting maximum module of eigen values of system matrix
getting maximum module of eigen values of system matrix
setting precision the set of iterative parameters is calculated for
setting minimun module of eigen values of system matrix
getting minimum module of eigen values of system matrix
setting problem to be solved
whether to check entered eigen values on convergence
solution of linear problem
returns whether check of entered eigen values on convergence will be done
getting number of diagonals of supported matrix
calculation of system matrix condition number
doing some check of parameters on convergence
getting method of calculation of all necessary iterative parameters of algorithm
calculation of solution by fulfilling of two stage forward and backward runs
it is non trivial method
getting iterative parameter with number code parameters number code in successive
check of diagonal domination of matrix as diagonals
setting second iterative parameter value
replacing two columns in matrix
if associate matrix in extended matrix plays crucial role then its columns
initialization of array storer of current order of variables
exchanging variables places
getting iterative parameter with number code parameters number code in successive
setting second iterative parameter
call at the end of solve
returns false always
getting number of current iteration
actualy are variables reordered returns always false so this method return the same
getting iterative parameter method to calculate second iterative parameter
getting index of max element in noted row
replacing two rows in matrix
solving simple ae system with extended matrix b
engineering reset of method
to subtract row with row index from all others rows
getting operator b for iterative process
incrementation the value of counter
must be called before set solution
different realization via
synchronization inner counter with outer one
always call this method before solve because we copy problems contents here
different realization via
very complicated realization
empty we always create exact solution
newton algorithm by default
calculation estimate step using formula x x s dx
getting default min problem solver
can be called for operations with non scalar numbers
setting second initial estimate that is the end of segment x0 x1
calculation xn 1 using the secant method
calculation next solution estimate
calculation of rn factor
gauss algorithm by default created in direct aesolver
checks if no use to proceed iterations further
in real this method
newton algorithm by default
setting concrete method of calculation of simple iteration parameter
getting concrete method of calculation of simple iteration parameter
determining the type of equations system
checking initial estimates
all cases are considered
setting function matrix of parameter s
setting function of many variables as parameter s
engineering reset of method
some check of jacobi matrix of system g x 0
setting parameter s in some mathematical representation it is determined by parameterized type
getting parameter s in some mathematical representation it is determined by parameterized type
setting constant value of parameter s
setting constant matrix of parameter s
setting constant value of parameter s
override to avoid cloning often x next x is known for subclass
if problem to be set is not type of
first estimate of argument of function f s f x s dx
here simple solution is realazed
calculation value of function f argument f argument
getting function which norma will be calculating
delegation to clac step vector x boolean will calc deviation
to use different policy
setting the policy method of calculation performance
getting the policy method of calculation performance
setting of all diagonals of system matrix
both own interface and vector function method implementation
getting diagonal of system matrix with some number
getting system matrix as whole matrix
setting banded matrix as laternative way to set diagonals
call not to create solution in each solve
returns the number of diagonals
returns a x b
returns the dimention of slae
called when function and jacobi is set or jacobi is initialized here
if jacobi is numeric differentiator set function to it by itself
overriden to check size
the same as set jacobi
calculation will be done just once
values before and after
the 2 dimensional case
the many dimensional case
right part only
to convert row and column indexes
cutting boundary conditions
calculation of factor a at given point
overridden to return
calculation of factor b at given point
getting the top boundary condition
getting the bottom boundary condition
calculation of factor c at given point
creation of the default right part that is 0
getting the right boundary condition
setting right part of poisson equation as function of x and y
getting the function decribing the first factor a of the boundary condition
getting the left boundary condition
setting right part of poisson equation as string function of two variables
getting the function decribing the second factor b of the boundary condition
delegating to two dimensional case function
getting the function decribing the right part factor c of the boundary condition
getting a boundary condition corresponding to given coordinates
setting grid of numerial soluion
setting initial estimate as function of many variables
getting initial estimate as a function of many variables
creates default vector
setting nodes of grid
setting step of grid in x dimension
creation of problem for linear ae solver
the number of all grid nodes
creation of default solver of ae system
setting storage of pde solution
common method to set step of grid
setting the same step for both directions
getting infomarion about boundary
getting step of grid in x dimension
setting boundary of some type
setting step of grid in y dimension
getting default grid of numerical solution
getting beginning point of rectangle with respect to some dimension
setting number of nodes of grid over x
getting width of rectangle with respect to some dimension
boundary condition type check
getting step of grid in y dimension
realization for rectangle domain
setting grid of numerical solution
getting number of nodes of grid over x
setting number of nodes of grid over y
getting the domain as a rectangle
a scheme treated as algorithm
there is no check of grid property correctness
getting number of nodes of grid over y
default scheme of poisson problem solving
getting value from problem
some check of grid property correctness is doing
there is no check of grid property correctness
matrix of one element
getting x coordinate of point of given node
default scheme may be used
default scheme approximating the boundary conditions
getting problem to be used
setting grid to scheme
getting y coordinate of point of given node
getting pattern for current scheme
defining grid parameters
getting the function decribing the boundary condition
for 2 dimensions
setting top coorinate of boundary
setting boundary condition of some type for this boundary
setting right coorinate of boundary
setting left coorinate of boundary
boundary condition type check
getting boundary part the point belongs to
you can use get grades
very slow realization
note this implementation is inefficient but allows for possible equal assessments
is not used if method was set
can be overridden
this method can be called several times for the same arguments pair
see scores grouping algorithm for description of this responsibility
you can use get criteria info
use this for simplicity if you are not interested in grades sense
recommended method of filling criteria
normalizes the assessment with info of the given criterion
in many places alternative index can mean id
can be called if there is no need to load problem from file
often used to implement get object alternative
removes all groups added
see constants of this class
call this method if a single transformer for all criteria must be used
returns pairs alternative group sorted by alternatives
call this method if different transformers must be used for different criteria
returns the same problem
applied to problems assessments
you can use get grades
override for non default problems for non full grade problems
overrides alternatives methods not only of virtual but of default solution
returns matrix with two columns row index is alternative index
returns matrix with two columns row index is alternative index
used to identify group in map map collects alternative indices
by default groups should contain group scores
used if groups was null and should be determined by alternatives scores
override to support
can be overriden for performance only
final step of the solution creation process
factory method but is not called in this class
returns true if get preference method returns non normalized value
returns class name without algorithm word in it
interface method for convenience only
if is consistent calls this only with element2 element1
called only if consistent array is not rectangle element2 element1
overrides alternatives methods not only of virtual but of default solution
recommended method of filling criteria info
the main interface method
the main interface method
sets the contents of the problem by data loaded from the source
copies the contents of the given genome into this one
determines if the given object is equal to this dimension
determines if the given dimension is equal to this dimension
duplicates the contents of this genome
compares one genome to another
assign a ga to this genome
retreives the ga assigned to this genome
returns the number of evaluations which this genome has undergone
gives this genome a raw objective function score
returns this genomes current objective function score
performs common construction tasks
gives this genome a fitness score
performs common construction tasks
returns this genomes current fitness score
copies the given genome into this one
copies the given genome into this one
assigns a new global data object for all genomes that exist
copies the given binary bit string genome into this one
retreives the global data for all genomes
copies the given 2 dimensional binary bit string genome into this one
assigns a new custom data object to this genome
copies bits from the given genome into this one
retreives the custom data assigned to this genome
duplicates this genome by creating a clone
duplicates this genome according to the supplied cloning method
sets the evaluation handler for this genome
sets the chromosome i
returns the evaluation handler being used by this genome
sets the chromosome i
initialises the state of this genome
sets the initialiser handler of this genome
returns the initialisation handler being used by this genome
mutates this genomes chromosomes using the mutation probability supplied
sets the mutation handler of this genome
returns the mutation handler being used by this genome
retreives the value of the chromosome i
compares the given genome to this one to determine how similar they are
sets the comparison handler of this genome
returns the comparison handler being used by this genome
sets the sexual crossover handler of this genome
sets the asexual crossover handler of this genome
the actual size of the genome
returns the sexual crossover handler being used by this genome
returns the asexual crossover handler being used by this genome
determines if the object is equal to this genome
sets the width of the binary bit string of this genome
determines if the given genome is equal to this genome
evaluates the genome to determine its raw objective score
mutates a genome according to the supplied mutation rate
initialises the given genome
initialises any data before a test case is executed
tests genome initialisation using the no initialisation handler
tests comparison of two genomes using the no comparison handler
tests genome evaluation using the no evaluation handler
tests genome mutation using the no mutation handler
initialises any data before a test case is executed
tests genome duplication
retreives the value of the chromosome i
sets the height of the binary bit string of this genome
copies the given scaling handler into this one
creates a cloned copy of this scaling handler
defines the resizing behaviour of the genome
sets the value of the multiplier to be used by this scaling handler
defines the resizing behaviour of the genome
copies the given scaling handler into this one
creates a cloned copy of this scaling handler
copies the given scaling handler into this one
creates a cloned copy of this scaling handler
sets the value of the multiplier to be used by this scaling handler
reads the value of the current multiplier being used by this scaling handler
returns a value which represents the resize behaviour of this genome
copies the given scaling handler into this one
creates a cloned copy of this scaling handler
sets the value of the power to be used by this scaling handler
reads the value of the power currently being used by this scaling handler
returns a value which represents the resize behaviour of this genome
creates a cloned copy of this scaling handler
copies the given population initialisation handler into this one
creates a copied clone of this population initialisation handler
initialises the given population of genomes
copies the given population evaluation handler into this one
creates a copied clone of this population evaluation handler
evaluates the population of genomes if necessary
able to force the evaluation of the population of genomes
creates a new duplicate of this population
a string representation of this genome
initialises the given genome
returns the size of the population
initialises the given genome
adds the given genome to the population
removes the individual with the worst raw objective score in the population
initialises the given genome
removes the given genome from the population
replaces an individual in the population chosen at random with the given genome
replaces the nth best individual in the population by the given genome
replaces the given genome with the new genome
gets the individual with the best raw objective score in the population
gets the individual with the best raw objective score in the population
gets the individual with the worst raw objective score in the population
copies the attributes of the given statistics handler into this one
creates a cloned copy of this statistics handler
assigns a population to this statistics handler
gets the individual with the nth worst raw objective score in the population
swaps the positions of two genomes in an array of genomes
reads the maximum raw objective score for the last generation of the population
reads the minimum raw objective score for the last generation of the population
reads the maximum scaled fitness score of the last generation of the population
reads the minimum scaled fitness score of the last generation of the population
reads the value measuring diversity between two given genomes
reads the value measuring population diversity
sets the way in which the population is ordered
copies the given attributes of the selection handler into this one
returns a duplicate version of this selection handler
selects a genome according to the handlers selection scheme from the assigned population
returns a duplicate version of this selection handler
selects a genome according to the handlers selection scheme from the assigned population
copies the given attributes of the selection handler into this one
assigns a population to this selection handler
sets the basis for selection
retrieves the basis for selection that this selection handler is currently using
copies the given attributes of the selection handler into this one
returns a duplicate version of this selection handler
selects a genome according to the handlers selection scheme from the assigned population
returns a duplicate version of this selection handler
retrieves the sorting handler for this population
copies the given attributes of the selection handler into this one
returns a duplicate version of this selection handler
returns a duplicate version of this selection handler
selects a genome according to the handlers selection scheme from the assigned population
assigns to this population the genetic algorithm which will be operating on it
retreives the class of the value of the parameter defined
gives this parameter a new defintion to adhere to for setting its value
gives this parameter a new defintion to adhere to for setting its value
retreives the current definition of this parameter
retreives a reference to the previous definition in the collection
retreives a reference to the next definition in the collection
loads the default parameters into memory
assigns the given value to the named parameter
assigns the given value to the parameter defined by the supplied definition
determines if this definition has the same values as the supplied object
assigns the code int code value to the named parameter
evaluates all members of this population if need be
determines if this definition has the same values as the supplied defintion
assigns the code float code value to the named parameter
evaluates all memebers of this population if need be according to the
assigns the code boolean code value to the named parameter
retreives the parameter denoted by the given key
tests if this enumeration contains more parameters
retreives the parameter denoted by the given definition
returns the next parameter of this enumeration object
returns the next parameter of this enumeration object
returns an enumeration of all the parameters of the ga
sets the evaluation handler for this population
an enumeration of the keys for all parameters of the ga
executes any initial configuration based on loaded properties
tests the default setting of system parameters
tests the setting of system parameters from a parameter file
tests the setting of system parameters from a parameter resource
initialises the library configuration
tests the basic random number generator
tests the random number generator implementing the lecuyer algorithm
tests the random number generator implementing the knuth algorithm
executes the test by instantiating and throwing a jai system exception
loads all property files containing system message string tables
performs initialisation of member variables used within the test cases
tests the default constructor of
tests the copy constructor of
tests the setting of an arbitrary bit in the binary string
initiates the system with the default rng
tests thge comparison of two binary string objects
tests the setting of a range of bits in the binary string
tests the setting of a range of bits in the binary string
tests the unsetting of a bit in the binary string
tests the unsetting of a range of bits in the binary string
gets the value of a named property
tests the partial copy of bits from one binary string into another
this test case loads the default configuration properties via the
initialises this population for use in a genetic algorithm
sets the activation function handler for this neuron
retrieves the activation function handler being used by this neuron
sets a connection which comes in to this neuron
retrieves all input connections to this neuron
retrieves all connections leaving this neuron
set the value of the output signal of this neuron
retrieves the output signal of this neuron
determines if the given object is a neuron and equal to this one
appends the given layer to this network
sets the initialisation handler for this population
determines if the given neuron is equal to this one
sets the number of neurons in the given existing layer
replaces the layer designated by the given index by the supplied layer
retrieves the layer given by the specified index
used to determine if the delimited input data file has been processed
creates a connection between two existing neurons in the network
sets the string to be used as a delimiter in this file handler
retreives the delimiter to use in this file handler
writes the given 3 dimensional output data to an output data file
adds the given connection to the network
determines whether a connection exists between the designated neurons
evaluates the given inputs through this network
copies the given connection into this connection
duplicates this connection
trains the given input against the given targets
sets the value of the weight for this connection
randomises all the connection weights in the network
retrieves the value of the weight of this connection
creates a directed connection between the two given neurons
randomises all the connection weights in the network using the given seed
sets the neuron from which this connection originates
retrieves the neuron from which this connectino originates
sets the neuron to which this connection terminates
determines if the given network is equal to this one
retrieves the neuron to which this connection terminates
finds the connection between the two given neurons
determines if the given connection is equal to this one
determines if the given connection is equal to this one
determines if the given neuron exists in this network
assigns a selection scheme to this population
returns a list of the ranom numbers currently in the sequence
returns a list of the ranom numbers currently in the sequence
retrieves the selection scheme being used by this population
a call to this method will set a new seed for the rng
returns a list of the ranom numbers currently in the sequence
sets the new size of this binary bit string
scales the entire populations raw objective scores into fitness scores
logs this exception in syslog if it is configured or to
retreives the value of the bit at the desired index
assigns a scaling scheme to this population
retrieves the scaling scheme being used by this population
copies the given binary bit string bit for bit into this one
copies the given binary bit string bit for bit into this one
randomises the values of all bits in this binary bit string
a string representation of this binary bit string
resets internal flags of the population without completely initialising its state
returns the statistics handler being used by this population
determines if the given population is equal to this population
determines if the given population is equal to this population
may contain error
counts the days inbetween inclusive of two dates
returns the upi
sets the upi
writes a message to the security log
gets the rights of the user for that center
returns a string
issues a synchronous ping
detaches the node from the graph it belongs to
returns true if we didnt iterate through all attributes in the filter
returns the next attribute
returns true if we didnt iterate through all objects in the ideal
returns the next object
adds a concept to the filter
adds a concept to the ideal
calculates the intent size based on the contingent sizes in the filter
calculates the extent size based on the contingent sizes in the ideal
advances and then return the token current before
find the number of objects in this diagram
removes all subscriptions the listener has
stores the placement of a window in the preferences
retrieves the element in a certain dimension
find the number of attributes in this diagram
restores the placement of a window from the preferences
distributes a new event to the listeners
stores a list of strings in the preferences
processes the current event queues until they are empty
stores a color in the preferences
override to return true if logging is needed
returns true iff the given concept is in the filter of this one
sets the graphic format to be used when exporting
returns true iff the given concept is in the ideal of this one
sets the size of the image to be created
registers our graphic formats and sets up the instance
registers a new graphic type
sets the auto mode
returns a format supporting the given file name
returns true if there is a canvas position stored inside
returns a format matching the given name
returns true if there is a screen position stored inside
convenience method calling the string version
returns the position of the event in the canvas model
returns the starting position in the canvas model coordinates
get the current image format
returns the position of the event in the screen model
returns the starting position in the screen model coordinates
returns the end position in the canvas model coordinates
returns the end position in the screen model coordinates
returns true if the item should be raised on clicks
changes the content of the background
returns true if settings should be updated automatically
sets the paint used for drawing the grid
returns true if the history comments are to be saved to a file
returns the controller object for this canvas
returns true if the history comments are to be saved to the clipboard
registers our graphic format and sets up the instance
sets whether to save the history comments to a file
implements iterator interface by throwing an exception
checks if more tokens are available
sets whether to save the history comments to the system clipboard
paints the canvas including all canvas items on it
returns the next token and advances the pointer
returns the next token as string
gets the last exported image file
registers our graphic format and sets up the instance
sets the last exported image file
raises all items that have been requested to raise
if this flag is set no transparent backgrounds should be used
registers our graphic formats and sets up the instance
if this flag is set no transparent backgrounds should be used
returns the canvas item representing the background
changes the transformation used for displaying the canvas on screen
returns the transformation currently used for displaying the canvas on the
this prints the canvas onto the printer defined by the graphic context
show an error dialog that gives the option to show a more detailed
gives the uppermost item at the given position
makes the given item the uppermost in its layer
maps the given point from screen coordinates into the canvas coordinates
saves the current configuration
removes all canvas layers and items from the canvas except the
stores the size and position of a window
restores the size and position of a window
stores an int value
adds a canvas item to the uppermost layer in the canvas
stores a string value
retrieves a string value
stores a list of strings
retrieves a list of strings
adds a canvas item to a specific layer
removes an item from the canvas
creates a new layer with the given name
removes a whole layer from the canvas
returns true if there is a layer with the given name
return the width of a single cell in the current grid
return the height of a single cell in the current grid
sets the grid used for the canvas
turns the grid function on or off
returns true iff the grid function is enabled
returns the closest position on the current grid
returns preferred behavior according to substitution map in tt preferences
span endpoints assumed valid just moveq reformatting and repainting
given an offset into a leaf return corresponding subcomponent geometric point
removes span from document and its layer
build the menu bar
check that all leaves are valid and bbox
given esis subtree pluck class specific information from attributes call super
build the tool bar
open a schema using the file open dialog
enlarge content root to media box
open a file and parse it to create conceptual schema
shows the dialog to change the image export options
prints the diagram using the current settings
prints the diagram using the current settings
test method for
select resource for loading
select resource for saving
get loading ability
get source identificator
get icon index
display and wait for user input
get user password
check if local store exists
get form result
sets the locale of the l10n resources instance
gets the value for the specified key
wait for user
gets the value for the specified key
get icons manager
show form and wait
get selected icon index
release loaded icons
get image by index
try get and unserialize last data sources
show form and wait for user
try serialize data sources and store as last used
display and wait for user command
add source to list or move to top
get size of list
remove source from list
append list item
append list item
get tag by item index
get tag by item index
get tag by item index
set selected item by tag
set selected item by tag
get tag of selected item
get tag of selected item
get tag of selected item
save database to data source
push displayable in stack and display
set directory for browsing
push splash in stack and display
remove current displayable from stack and display previous
redisplay last in stack
replace last displyable in stack with new and display
replace last displayable with splash and display
wait for user
display browser and wait for user
reset watchdog timeout
get current directory
changes to the given subdirectory
get instance of record store db
get records in database
enumerate records names in database
get selected record name
check record with name
returns the url of the parent of the given directory
delete record by name
return database object
get encryption rounds
get create time
save group to database
delete group from database
get access time
proxy method for setting progress state
reset all fields
create empty database
change password key file encryption rounds
get user name
command listener implementation
enable or disable autosave when set any config parameters disable need for batch
get last opened kdb path
set last opened kdb path
get timeout for kdb browsing
set timeout for kdb browsing
get status icons show dont show
save entry to database
set icon status show dont show
set search flags
set last opened data source
is last opened sources known
get default encryption rounds
set default encryption rounds
gets the value for the specified key and current locale
get database header
get group by id
get parent group of child group identified by id
get page number on which the group is
search for entries with the title beginning with substring
enumerate entries in search result
get entry by index in search result
get group by index in group
get entry by index in group
get group data length in database
test db creation locking and unlocking
get entry data length in database
mark groups and entries as deleted recursively
delete group from database recursively
delete entry from database
add entry to database
replace group data with updated data
replace entry data with updated data
create a unique group id
reset change indicator
reset watch dog timeout
decrypt database content
this method must be added to all public methods
get database status locked unlocked
get database size
returns an inputstream used to read the data
utility method to populate a javabean style object with values
chart type change listener
p this method is bound to the input file component and is executed
callback method that is called if any exception occurs during an attempt
sets the selected panel to the specified panel
action listener for the changes the selected panel stack in the
from command listener
starts listening for incoming messages
stops listening for incoming messages
checks to see if a given class interface exists in this java
asynchronous callback method for receiving incoming messages
retrieves the system property and returns it or unknown if it is
adds a given string as a new line to the given form
processes the received message according to its type
signals the midlet that it has entered the active state
processes a binary message
signals the midlet to terminate and enter the destroyed state
indicates that a command event has occurred
returns an initiliazed instance of exibe imagem component
returns an initiliazed instance of back command component
returns an initiliazed instance of exit command component
returns an initiliazed instance of form component
returns an initiliazed instance of ok command component
returns an initiliazed instance of telefone component
returns an initiliazed instance of ok imagem component
returns an initiliazed instance of mensagem component
returns an initiliazed instance of task component
returns an initiliazed instance of task1 component
returns an initiliazed instance of ok exibe imagem component
a serializable subclass of a non serializable superclass
at startup create and show the main frame of the application
changes the state of clicked field
sets the fields name
sets the width of a frame an area that may be highlighted eg
sets the frame
sets whether the frame is highlighted
sets whether the frame is highlighted
adds the change of the fields states
moves and resizes this component
moves and resizes this component to conform to the new bounding rectangle r
resizes this component so that it has width width and height height
resizes this component so that it has width d
makes a string from the names of source and target fields
loads the board image
converts the record of games moves into string
checks whtether there is a tied flank the position like
checks whtether there is a lagging piece on the left flank
copies one fields states map into another
gets the information if there are whites or blacks to move
sets whether there are whites or blacks to move
copy the map of changes
simple query subsumption similar to standard concept subsumption
another example of subsumption
validates input parameters
request method to get data from geoapi service
returns string representation as in the specification
exit the application
returns the value contained in the combo box
returns true if the list contains the currently selected item
marks selects the entire text that is displayed inside the text component
sets the text of this document to the given text
selects the given item using the abstract component adaptor
searches for an item that matches the given pattern
returns true if code string1 code starts with code string2 code ignoring case
short table short zin int offset zin short zout int offset zout
short temp1 short temp2 short zout int offset zout
ensure the system state before the test
process ui input but do not return for the
assert that the two arrays are equal
perform post test cleanup
ensure the system state before the test
perform pre test initialization
perform post test cleanup
shows the dialog
creates the tcl shell
creates the package text box
creates the directory text box
tests if the current workbench selection is a suitable container to use
uses the standard container selection dialog to choose the new value for
ensures that the text fields are set
adding the page to the wizard
make changes to the template file
this method is called when finish button is pressed in
creates the global
creates file text box
make changes to the template file
creates author text box
creates the package text box
updates the the coloring rules according the prefernces
check if the preferences have changed
change background color of the editor
override to make use of soft tabs
override to set the initial color of the backgound
we will accept the selection in the workbench to see if
verify if a tab is used
return the source viewer for testing purposes
uses the standard container selection dialog to choose the new value for
preferences have changed
see if a soft tab is to be used
width of a soft tab
method declared on iauto indent strategy
set the completions based on the string
returns the end position a comment starting at pos
check what the string starts with
a change to the color has occurred
define the tcl content assist processor
updates the scanner according the prefernces
updates for content assistance
return the label provider
notifies this content provider that the given viewers input
return the content provider
because the domain model does not have a richer
because the domain model does not have a richer
answer the total number of items the
returns the jdbc connection
closes the jdbc connection
runs validation by setting auto commit to check for connectivity
starts this thread
clears jdbc connection warnings
stops this cleaning thread and timer
locks the given index in this array by setting the parallel boolean array
unlocks the specified index in this array by setting the parallel boolean
starts the timer thread
indicates whether or not a thread has a lock on the given index
gets a node from the array
cleans the pool nodes depending on the cleanup style rotate or refresh
sets a node into the array
tests if a pool node needs to be cleaned
gets a connection from the pool with the given identifier
returns a connection to the pool with the given identifier
increments the pointer in a circular fashion and returns the pointer
closes the connection and nulls out the node node
closes the given pool in the pool map map
gets the pooling resource from this node
closes all of the pool map in the pool map map
returns a resource to this pool by expiring its nodes lease
kills this nodes resource
prints the current state of the pool with the given identifier to the
validates the nodes resource
closes the pool with the given identifier
returns the next available leasable resource from the pool
leases node by setting the timestamp and marking it as inuse
verifies that the pool with the given identifier exists in the pool map
expires the lease of this node resetting it to initial state
closes nodes in pool unloads the driver and cancels cleaning thread
returns an instantiated connection
gets the lease time for this node
cleans a node by re initializing it
prints the current state of the pool
gets the last time this node was inuse
returns the result of wether or not this node is inuse
starts the pool by initializing nodes and the cleaner thread
initializes a node by clearing any leasing and use
resets the nodes state to initial values
returns the result for whether or not a nodes resource can be leased
initializes the pool nodes and resources
returns a string of the current state of the pool
initializes a logger with properties
checks and spins a development logging thread
checks and spins a production logging thread
checks and spins a logging thread
shuts down the output stream for this logger
sets up mailing for this logger
opens output stream to logfile
returns the stacktrace of a java exception
add criterion to junction
get parent criteria
get criteria alias
add a code criterion code to constrain the results to be retrieved
add an code order code to the result set
set a limit upon the number of objects to be retrieved
set the first result to be retrieved
