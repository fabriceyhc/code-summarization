get members by name
query a member field by type
insert the mapped classes into the hibernate
loads the table with the member fields of the class defined
returns the name of the table graph cell
checks if there is a source file for this cell
insert the mapped classes into the hibernate
writes the contents of get layout source to the layout output file
allows for menu preview
draw the screen background sky sea ground
draw all selectable targets
render the scene and flush the open gl pipeline
direct copy from the lwjgl wiki
process game logic here in the main finite state machine
initialises open al
dumps the ac3 d object to a file
loads a 3 d mesh from an ac3 d file
loads the ac3 d model
load a texture
sets up the gl for scene rendering
plays all the audio for each entity terrain
displays information messages
loads the configuration from the config file
saves the configuration to the config file
special keys game functions
ignored events necessary as their abstract
encodes an object into json
decodes a json object
encodes an object into json using the
decodes a json object in a specific type
constructs dice using only a number and a base
the modifier must also be specified
gets the next pseudo random value based on the number base and modifier
gets the current score for this ability
gets the current score for this ability
sets the current score for this ability
add the supplied value to the current score
gets the maximum value for this ability score
sets the maximum value for this ability score
sets the description for this object
method called to read data between xml tags
sets the maximum value for this ability score
method called to read data between xml tags
xpath root builder
test of get registration in period method of class timecheckup
login action the first action for this application
change the name of the xml markup
returns the attributs of the xml markups
returns the elements of the xml markups
delete announcement dto
count total posts send to contest
create new record in category recipe
update category recipe
create new tip
count total feedback by recipe id
delete feedback for recipe
create feedback for site
update table feedback site
count tip post by username
count recipe post by username
this adds a property descriptor for the auto increment sample data feature
this adds a property descriptor for the editable feature
this adds a property descriptor for the desc field size feature
this adds a property descriptor for the name feature
this adds a property descriptor for the pk field name feature
this adds a property descriptor for the desc field type feature
this adds a property descriptor for the desc field name feature
this adds a property descriptor for the name db feature
this adds a property descriptor for the entity feature
this adds a property descriptor for the depends feature
this adds a property descriptor for the entity feature
this adds a property descriptor for the use as filter feature
this adds a property descriptor for the pk field name feature
this adds a property descriptor for the sample data value feature
this adds a property descriptor for the subtitle feature
this adds a property descriptor for the visible form feature
this adds a property descriptor for the visible list feature
this adds a property descriptor for the default value feature
this adds a property descriptor for the documentation feature
this adds a property descriptor for the expanded feature
this adds a property descriptor for the group name feature
this adds a property descriptor for the is pk feature
this adds a property descriptor for the to string feature
this adds a property descriptor for the not null feature
this adds a property descriptor for the size feature
this adds a property descriptor for the type feature
this adds a property descriptor for the is password feature
this adds a property descriptor for the documentation feature
this adds a property descriptor for the is identity feature
this adds a property descriptor for the group id feature
this adds a property descriptor for the menu hierarchy feature
this adds a property descriptor for the row item feature
this adds a property descriptor for the resourse id feature
this adds a property descriptor for the base package feature
this adds a property descriptor for the label feature
this adds a property descriptor for the database feature
this adds a property descriptor for the documentation feature
this adds a property descriptor for the table name feature
this adds a property descriptor for the entity feature
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
validates the pattern constraint of em id basic type em
creates a new adapter for an object of class
creates a new adapter for an object of class
validates the pattern constraint of em uniq id em
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
this just records the information
create a new model
returns the label for the specified feature name
handles activation of the editor or its associated views
returns a diagnostic describing the errors and warnings listed in the resource
this accesses a cached version of the property sheet
initializes the annotations for b http java
makes selections based on the points collect from mark points buttons
converte array de bytes em string hexa
verifica assinatura da sequencia de bytes atrav s da chave p blica
this method initializes this
this method initializes scr empresa
this method initializes tbl produto
this method initializes btn novo
this method initializes this
this method initializes btn salvar
this method initializes btn filtro
this method initializes scr cliente fornecedor
this method initializes tbl cliente fornecedor
this method initializes btn consulta
this method initializes this
this method initializes btn confirmar
this method initializes btn cancelar
this method initializes pss senha
this method initializes this
this method initializes txt usuario
this method initializes scr empresa
this method initializes this
this method initializes tbl empresa
this method initializes this
this method initializes scr transacao
this method initializes tbl transacao
this method initializes this
creates the mildly complex radio buttons that the prefs dialog uses
sets this field editors value ensuring that text changed is called
called every time the text changes i
given a string looks up the corresponding dot method
logs the error in the workbench log using the provided text and the
logs a very common registry error when a required attribute is missing
this routine browses through the users path looking for dot executables
logs a very common registry error when a required child is missing
forwards the process standard error output to the given output stream
forwards the given input stream to the process standard input
forwards the process standard output to the given output stream
start the registry reading process using the supplied plugin id and
kills the process
returns the preference with the given name
sets the given preference to the given value
this method initializes cmb unidade medida
this method initializes grd fabricantes
this method initializes men arquivo
this method initializes mni fabricante
this method initializes pnl botoes
this method initializes menu item produto
stores the image handle reference so that when all the images report an
add a line from the message to our internal cache of the
populate the contents of the simple message with what we found in the
return the name of the server that connected to fakesmtpserver
set the name of the server that connected to fakesmtpserver in
add a mail recipient someone that the mail was send to to
set the email address of the person who sent the message
set the body of the email message minus the headers
this flag is set once the data segment has been completely
retrieve the last message that was sent to the smtp server
get the sender of the email
retrieve the last message that was sent to the smtp server
get the set of strings which indicates the destination of the
get the text of the email message
set the list of all mail headers attached to the message
listen for incoming messages
output the message received to the console
action copy pojo
returns an html select list for the first two colums key value display
returns a list of the argument names in each parameter
returns a list of the argument types in each parameter
gets the sql string for use in a prepared statement
returns an html select list for the first two colums key value display
create a rgb color object based on this hslcolor with a different hue
returns the content of the custom layout
create a rgb color object based on this hslcolor with a different
create a rgb color object based on this hslcolor with a different
create a rgb color object based on this hslcolor with a different shade
create a rgb color object based on this hslcolor with a different tone
create a rgb color object that is the complementary color of this
get the hue value
get the luminance value
get the rgb color object represented by this hdlcolor
get the saturation value
gets the type of question for this tt question result tt
adds an tt option result tt to tt option results tt list
initializes the list of all available option results
increments the frequency
initializes the list of all available option results
returns a short description of the servlet
notification that the web application initialization process is starting
notification that the servlet context is about to be shut down
notification that the web application initialization process is starting
notification that the servlet context is about to be shut down
listist the css style class to be used by the table surrounding
p an code action code to force page navigation to the main page
adds all vertical layouts as tabs in the wizard
adds a lazy loading view
standard setter method used to bind the container component to this bean instance
checks if the specified view exists in the component
checks if the specified view available and active
get the actual view component by the view name
provides name of the currently active view
provides the actual component of the current view
resolves view name by the actual view component instance
extracts the pure name from the view name combined with the parameters
for validating the email entries
for validating the subject
add a hit to the publication
remove hit of type cc from this publication
remove set of hits of type cc from this publication
get a single hit of concept class
check if publication contains given hit
filter a list of publication mappings
get publication id
delegates to certain filter methods that are specified in mapping
filter mappings with low score
take only the best n mappings to each concept class
sets the delete status for the document
gives back the delete status for the document
adds one chemical object to a medline abstract
returns name of this transformer
writes a collection of abstracts to the ondex backend
returns version of this transformer
retrieve accession number
retrieve ambiguous status of accession
retrieve data source of accession
does not require index ondex graph
prints the given route through the graph to the open file
sets the new identifier
gets the current identifier
returns name of this mapping
returns version of this mapping
returns name of parser
adds new accessions to entry
transfering a given ec number into a four position one e
returns version of parser
analyses a ec number given as string for hyphens eg
analyzes ec number as string and returns the next higher term eg
checks whether protein is registered
registers a protein id along with its internal id
gets internal id for a protein id
registers a gene id along with its internal id
gets internal id for a gene id
checks whether chromosome is registered
registers a chromosome id along with its internal id
gets internal id for a chromosome id
sets the ondexgraph and starts the parser
returns the ondexgraph
adds a publication reference to a node
copies a context list from on concept to another concept
returns the next abstract node in the current parsed file
adds a protein to an enzyme
clears the intern sink object cache
adds a link if the pathway is not already set
adds the ec number to the related enzyme
sets a pathway as super pathway
fix wrong annotations in element type from bio pax
reads in translation
adds a description as the concatenation of the comments to a concept
add a possible taxid to a concept
add a possible taxid to a concept
returns a data source either the specified one derived from a mapping
tries to infer the associated data source of an entity
copies a context list from on concept to another concept
get wrapped metadata entity
creates an indentation of size code level code
returns concept class that carries the given key as id or name
moves the cursor forward
resets the cursor to the first path
searches for paths
traces the results back
adds a publication reference to the family entry
adds a database reference to the family entry
returns the part after the keyword
debug output method
stores not to filter elements
checks if a given accession should be filtered
setups the filters
method for order on ortholog
method for order of inparalogs
returns name of this mapping
returns version of this mapping
returns name of this mapping
returns version of this mapping
checks whether there is already one concept with the
all accessions from dra entity will be written to concept
annotaion from dra entity will be written to concept
checks whether there is already one concept with the
all names except the preferred name
if id of this concept not yet set
checks if dra entity object has a key
extract concepts from dra entity instance
set the key of this concept only if not yet set
give the name of the concepts class
set the class of this concept
copies a context list from on concept to another concept
adds special formating for boolean
adds special formating for number
general case using xstream wrapper
adds special case for string
determines the type of attribute data
constructs the local name of a given concept
some sanity checks necessary for pro log
copies the original file to the given destination
propagates decomposition of string to object according to data type
for a given relation returns the source concept observes the reverse
for a given relation returns the target concept observes the reverse
creates the corresponding ondexconcept on the given graph
parses xml file and performs transformation into ondex entities
writes the header notes to the sbml file
gets internal id for a cds id
checks whether cds is registered
registers a cdsid along with its internal id
checks whether gene is registered
checks whether chromosome is registered
registers a chromosome id along with its internal id
gets internal id for a chromosome id
logs an inconsistency event with message code s code
converts the y name into sgd format if necessary
determines the deeper of two given concept classes in terms
concatenates all members of the collection code ss code
checks for valid argument
checks whether code b code holds
traces the results back
logs the information message in code s code
returns a nicely formatted string that describes the code ondexconcept c code
builds a valid go id from an integer
returns name of this mapping
returns version of this mapping
returns name of this mapping
returns version of this mapping
no index ondexgraph is required
the object name in the database which contributed the goa file
the go id
which part of the go three the goid is part of
the type gene transcript protein protein structure complex
the database which made the assignment
removes trailing character and possible last double quote
adds a alternative id to this obo concept
adds a reference e
adds another synonym for this obo concepts
returns name of this parser
sets references parsed from def line for this obo concept
returns version of this parser
calculates the log likelihood of the
recursively clones the whole tree
sets the parent
gets the parent
returns the child at the given position
constructs the hashkey
gets the standard deviation
sets the child at the given position
registers a whole dendrogram with the set
recalculates the leaf set
checks whether a change of likelihood is acceptable or not
gets the number of significant consensus clusters
if this node is a leaf
gets the number of feeds
gets the key
finds the threshold with numerical integration
if this node is the parent of the node that this query
replaces the old child with the new child
gets an unconnected clone of this node
sets the leaves
recursively builds an output graph based on a
computes the values of theta and e for the given node and
returns the name of this filter
returns the version of this filter
returns name of this export
returns version of this export
returns name of this parser
returns a random index of an internal node of the tree
returns version of this parser
returns name of this parser
returns randomly 1 or 0
return the encoding gene for this molecule
adds a molecule to the list of catalysing molecules
sets the encoding gene for this molecule
sets sequence data for this molecule
adds a molecule to the list of incoming molecules
sets the species of this molecule
adds a molecule to the list of inhibiting molecules
adds a subunit to the current list
sets authors line
adds a molecule to the list of outgoing molecules
sets source line
adds a dblink to current list
adds a alternative accession to current list
create a relation type if missing in metadata
adds a synonym to current list
adds a publication to current list
normalizes a line by removing first line identifier
parses a tp value out of a line
parses the type of entry from a line
adds a alternative accession to current list
sets the matrix string
adds a dblink to current list
adds a synonym to current list
parses a gene id from a bs line
adds a publication to current list
parses a binding site accession from a bs line
parse a tf from a fa line
sets the location on the chromosom tag
sets the regulation properties tag
generates a transfac url to the transcription factor
sets the protein sequence for this factor
adds an interacting factor to current list
adds a regulated gene to current list
adds a matrix to current list
returns name of this validator
returns version of this validator
returns name of this validator
returns version of this validator
sets the element id value for this pathway element
gets the element id1 value for this pathway element relation
sets the target id value for this structure alignment
sets the entry id1 value for this link dbrelation
sets the element id1 value for this pathway element relation
sets the entry id2 value for this link dbrelation
set the endpoint address for the specified port name
sets the query nodes value for this structure alignment
sets the components value for this pathway element
sets the target nodes value for this structure alignment
gets the element id2 value for this pathway element relation
sets the element id2 value for this pathway element relation
sets the subtypes value for this pathway element relation
sets the entry id value for this definition
sets the genes id1 value for this ssdbrelation
sets the genes id2 value for this ssdbrelation
gets the sw score value for this ssdbrelation
sets the sw score value for this ssdbrelation
sets the motif id value for this motif result
gets the bit score value for this ssdbrelation
sets the genes id value for this motif result
adds accessions derived from the names of the pathway element to the
sets the bit score value for this ssdbrelation
adds names from the pathway element to the ondexconcept
sets the evalue value for this motif result
sets the identity value for this ssdbrelation
sets the overlap value for this ssdbrelation
gets the start position1 value for this ssdbrelation
sets the start position1 value for this ssdbrelation
gets the end position1 value for this ssdbrelation
sets the end position1 value for this ssdbrelation
gets the start position2 value for this ssdbrelation
sets the start position2 value for this ssdbrelation
gets the end position2 value for this ssdbrelation
constructs file locations and constructs species
sets the end position2 value for this ssdbrelation
returns element of
sets element of
returns graphical x
sets graphical x
gets the best flag 1 to2 value for this ssdbrelation
returns graphical y
set graphical y
sets the best flag 1 to2 value for this ssdbrelation
modifies the concept id
returns of type fk
searches for name in all concept names of all concepts
sets of type fk
gets the best flag 2 to1 value for this ssdbrelation
constructs a regex that matches kgml files
sets the best flag 2 to1 value for this ssdbrelation
sets the definition1 value for this ssdbrelation
sets the definition2 value for this ssdbrelation
gets the length1 value for this ssdbrelation
sets the length1 value for this ssdbrelation
gets the length2 value for this ssdbrelation
sets the length2 value for this ssdbrelation
returns key from type berkeley relation key
returns kegg concept id for associated concept
returns actual accession
returns type of sequence usually aa or na
sets kegg concept id for associated concept
sets type of sequence usually aa or na
sets ambiguity of accession
changes the data source for this accession
adds a concept id to the list of context
checks if a concept id has been written already
returns id of from concept
returns relation primary key
returns type of relation
checks if a kegg internal id has been written already
returns id of to concept
returns mol string
if this concept is context of itself
searches for name in all concept names of all concepts
sets mol string
sets the set of pdb structures
returns parsed pathway concept
simply check for null or empty strings
extracts possible ec number from name and adds it as accession
registers a kgml component parser with the list of delegates
returns name of parser
returns version of parser
cleans cache of meta data
returns the name of this xmlcomponent parser
returns the name of this xml component parser
sets the state of this parser to cancelled
returns the name of this xmlcomponent parser
sets list of attribute attribute names to ignore for import
returns name of xmlcomponent parser
ensures back compatibility with old oxl
wrapper method for validate object o
returns name of this validator
tests if either concept names are ubiquitous
returns version of this validator
moves the cursor forward
searches for paths
creates relations between all pairs in the map
starts the thread and then waits until the reader has
enqueues a new array into the pipe
returns the concepts neighbour on the given relation
logs an event
returns the amount of the internal accession
resets the internal state to the default value
checks a value and sets the internal state
checks a value and sets the internal state
searches for last concept id in whole graph
returns ondexconcept for a given array index
returns ondexrelation for a given array index
returns the number of edges relations in the graph
returns the number of nodes concepts in the graph
returns the name of the producer
get the concept prototype that corresponds to the string
returns the name of the producer
returns name of this parser
returns version of this parser
compare matches according to their score
this returns the coverage in view of the longest sequence
this returns the coverage in view of the shortest sequence
this returns the coverage in view of the query sequence
this returns the coverage in view of the target sequence
creates an index over all names and identifiers of the the metadata of
records a new set of error rates
calculates inital error rates for each dataset
adds the given pair as a new edge
gets the other element
adds all nodes and edges of the given network
checks whether the network contains the given node
initializes the graph index map if necessary
checks whether the network contains the given edge
updates the counts
sample a new theta based on current g
sample intermediate consensus graph g based on p
gets the id of concept class to use for untyped interactions
returns whether to parse contained dna or aa sequences or not
returns the location of the psi mi to ondex mapping file
processes the parsers arguments by making them available as fields
helper method that constructs a fresh reader on the metadata mapping file
writes probabilities to file
returns name of this transformer
returns version of this transformer
returns name of this transformer
returns version of this transformer
returns name of this transformer
parses a properties file
returns version of this transformer
returns name of this transformer
returns version of this transformer
returns name of this transformer
returns name of this transformer
returns version of this transformer
returns version of this transformer
returns name of this transformer
prints to sys out the values in this map
sets the print stream to which the statistics are printed
make sure everything is written out
returns the hex string representation for a colour attribute
configures xml output factory
parses a shape of a concept and returns dot name for it
returns name of this mapping
returns name of this mapping
returns version of this mapping
returns version of this mapping
returns the name of this mapping
returns the version of this mapping
calculates the target subdir for a given concept dirs are grouped in
returns the name of this filter
returns the name of this mapping
returns the version of this filter
creates a concept and indexes it in the concept dictionary
creates a concept and indexes it in the concept dictionary
returns the name of this filter
returns the name of this filter
returns the version of this filter
returns the name of this filter
returns the version of this filter
returns the version of this filter
gets an entry from the matrix
puts an entry into the matrix
generates a unique string for the pair of integers given
returns what kind of matrix representation should be used for the next
sets a matrix entry
helper method for extracting psimi ontology terms from an xref list
returns the name of this filter
returns the name of this filter
retrieves the edge weight for a given relation
returns the version of this filter
returns the version of this filter
determines whether a given dbreference is a psi mi ontology reference
constructs the set of visible relations out of the backtracing matrix
filters the graph and constructs the lists for visible concepts and
formats hyper links in text to html
returns a concepts opposite one on a relation
returns the weight of the given edge
recursive method for backtracing inside the result set of the algorithm
fires an ondex error event
fires an ondex error event
manages access to the species index
retrieval system for translating to ncbi taxid
method for getting concept id for a previously written gene
method for getting concept id for a previously written gene
retrieval system for translating to ncbi taxid
reads accession reference from constructed index
pops up a dialog asking the user to set taverna home
sets the value to be used for this input to a string
sets the directory in which the taverna command line tool can be found
sets the values to be used for this input to a array
adds a code change listener code to thiis class
creates and starts the process logging the time it started
destories stops the process if it has been started
sets the directory in which the taverna dataviewer tool can be found
returns the output of the process run up to this point
check to see if taverna home has bee set successfully
sets a uri to be used as the source of the input values
check to see if data viewer home has bee set successfully
blocking method that logs a process is finished and returns its output
allows the user to identify and load a file based on a uri
sets a file to be used as the source of the input values
looks for a delimiter character that is not in any of the values
check to see if there is a value associated with this input
checks to see if the current state of the loaded parameters require inputs
cleanup default graph if persistant and closes all existing graphs
adds a ondex listener to the list
notify all listeners that have registered with this class
checks contract for two attribute to be equal
checks contract for two accession to be equal
checks contract for two attribute to be equal
checks contract for two names to be equal
propagates events to registered handlers
fetches the required metadata or throws a respective runtime
fetches the required metadata or throws a respective runtime
fetches the required metadata or throws a respective runtime
fetches the required metadata or throws a respective runtime
fetches the required metadata or throws a respective runtime
fetches the required metadata or throws a respective runtime
propagate events to registered listeners
scans a given zip file for file entries and
loads the exporter with the given name
loads the filter with the given name
loads the mapping with the given name
loads the parser with the given name
loads the transformer with the given name
loads the validator with the given name
a shortcut to add plug in programmatically from the plugin bean description
checks if this is a valid argument name for this plugin argument
checks if a value has been assigned for the given argument
counts the number of values for a given argument
extracts the unique value belonging to the given name from the list of
use this method to get the ondex mini main directory
returns the actual validator arguments
removes a validator listener from the list
notify all listeners that have registered with this class
notify all listeners that have registered with this class
downloads a file and passes on the handle
returns whether or not does this parser require this argument
returns whether or not is the parser allowed to be specified multiple
delete all files in the testing environment
checks for valid argument
recursively deletes the given directory and all its contents
return the lower numerical range
returns the upper numerical range
parses argument object from string
download file from given url to the given destination file
parses argument object from string
checks for valid argument
checks for valid argument
parses argument object from string
parses argument object from string
sets whether or not it is a directory
returns whether or not it is preexisting
sets whether or not it is preexisting
parses argument object from string
notify all listeners that have registered with this class
returns the parent ondexgraph meta data which is wrapped in this instance
deletes a value from a primary database for a given key and class
returns the parent ondexgraph which is wrapped in this instance
returns the parent concept which is wrapped in this instance
retrieve the score of a given ondexentity
constructs indecies of dag for later queries
parses the last valid concept id out of the berkeley persistent database
parses the last valid relation id out of the berkeley persistent
moves the unread data in the buffer to the beginning and resets the
throws the caught error or exception if present
returns the caught error or exception
add a concept to this subgraph
add a relation to this subgraph
remove a concept from this subgraph
inserts a key data combination into corresponding database
clones everything from the original graph
remove a relation from this subgraph
remove members of other subgraph from this subgraph
clones a concept from the original graph to the new graph
inserts a key data combination into corresponding database
close all open index handles
only keep a difference of this an other subgraph in this subgraph
close a potentially open index
adds all of the concepts contained in a view to this subgraph
adds all of the relations contained in a view to this subgraph
add relation type restriction valid at any depth in an incoming direction
add relation type restriction valid at any depth in an outgoing direction
add relation type restriction valid at any depth in any direction
will add a specified tag concept to all members of this subgraph
explicitly shutdown the executor
returns the actual lucene ondexgraph as an abstract ondexgraph
depth is set at integer
represents a faster search than individualy searching the graph as
adds a concept class restriction to a depth if no restrictions are in
adds a concept class restriction to a depth if no restrictions are in
adds a relation type restriction to a depth if no restrictions are in
adds a transition step from one state to another
checks for machine definition errors
compute the relative rank of the values according to the comparison method
removes the selected concept from the index nb this is an expensive
is the rank inverted against its natural order
take the absolute of all values before calculating rank
internal method used by the parser
parses a go id
adds a parent to a go term
re initializes the complete index
returns the number of entries
returns the corresponding go term for the given go id
returns the shortest depth of the given go query id
returns the shortest depth of the term
returns the distance in the go database structure between the two given terms
gets the directed distance from first query term to the second query term
sets the namespace
sets the parents
returns the namespace of the term
a recursion method for the distance search
removes the selected relation from the index nb this is an expensive
returns the number of elements yet to be examined
returns the parent of this node
memorises that the given node shall henceforth be considered as
retrieves and removes the head of the queue
returns the information content bitscore for a given go term
calculates a local similarity for two concepts according to their
calculates a global similarity for two sets of concepts
removes the selected relations from the index
returns a negative integer zero or a positive integer as the first argument
notify all listeners that have registered with this class
adds a ondex graph listener to the list
removes a ondex graph listener listener from the list
hierarchical precision function
checks if a java class is registered for jaxb
returns the complete message of this event type
returns the log4j level associated with this event type
hierarchical recall function
sets the log4j level for this event type
takes a given abstract ondexgraph and builds the index around it
hierarchical f score function
propagate event e to the right graph listeners
returns the is preferred
sets the is preferred
returns the id of the specialisation of
sets the id of the specialisation of
returns the from concept integer id
returns the name of the relation type
returns the is antisymmetric
sets the is antisymmetric
returns the is reflexive
sets the is reflexive
returns the is transitiv
sets the is transitiv
returns the element of
sets the element of
returns the is ambiguous
sets the is ambiguous
returns the id of the from concept
returns the name of the from concept
sets the id of the from concept
sets the name of the from concept
returns the id of the to concept
returns the name of the to concept
sets the id of the to concept
sets the name of the to concept
notify all listeners that have registered with this class
deletes the wrapped graph from the web service
decodes a url encoded string
returns or constructs new index for a given graph
fills sub graph of relations with all its corresponding concepts and
fills sub graph with all connecting relations and returns as oxl graph
recursive method for backtracing inside the result set of the algorithm
being overly paranoid here to make sure only key events from the
sets view scaling enabled or disabled
returns whether or not the contents display is currently visible
returns whether or not the options is currently visible
populates the tools menu
shows the contents display frame
shows the options frame
returns current viewer
sets gui for a given ovtk2 layouter
sets viewer to be used for these options
check for selection of an attribute name
return transformation lookup from cache
performs updates of layout parameters
shows a file save dialog with the given filter file extensions
calculates the gradient of energy function at the vertex m
calculates the energy function e
check for selection of an attribute name
return transformation lookup from cache
associated with go button
whether or not there was something drawn
sets the icon storage to the specified code map code
returns the validated values for node minimum diamiter
returns the validated values for node maximum diamiter
adds a column to the values
adds a new row to the data model
sets the pressed header column
highlight a column name
returns object located at specified row and column
method for setting a lsd on a probe
overloading for method for setting values for a probe
gets the ration between the specified treatments for this probe
construct the gui componants
propagate table selection to selection of nodes in the graph
sets editable flag for each cell
inserts a default row at the end of table
adds a new empty row to the table model
checks for selections in concept list
associated with go button
checks for selections in concept list
associated with go button
returns result of transformation
returns result of transformation
calculate the overall x dimension for a number of roots
recursively calculate the x dimension of the whole tree starting at
returns the list of siblings which are leaf nodes of the graph
get the depth of a path starting at node v recursively
reflect the selection of concepts in the viewer as selection of concept
transform the current vertex position into the layout location map
get maximum of all locations of nodes
populates given combo box with list of attribute names for visible
adds all suitable attribute names to the jlist
set layout position of given node
transform into radial positions
returns the component containing the accumulated error messages
annotates the nodes according to specified values
checks for selections in concept class list
associated with go button
checks for selections in data source list
maximum value found
minimum value found
associated with buttons
checks for selections in evidence type list
returns number of relation of this relation type
returns the concept class represented by this ondexmeta concept
returns number of visible relations
returns number of concepts of this concept class
returns number of visible concepts
returns the relation type represented by this ondexmeta relation
returns result of transformation
returns result of transformation
returns concept class or relation type
update all colours from the graph
update the colour of a given edge
update the colour of a given edge with a given colour
returns result of transformation
update all colours from the graph
update the colour of a given edge
update the colour of a given edge with a given colour
sets a new node size used to generate all shapes
returns result of transformation
update all shapes from the graph
updates the current hold meta data
update the shape of a given node with a given shape
makes maximum length texts
extracts the label from a given relation type
update the label of a given edge
update all labels from the graph
returns result of transformation
fills list of concept attribute names
fills list of relation attribute names
performs a re layout of the meta graph
creates a new chart object and replaces the old one
adds a new ondexmeta concept to the graph
checks for selections in attribute name list
returns whether or not an ondexmeta relation is contained in the wrapped
returns whether or not an ondexmeta concept is contained in the wrapped
returns the edge between two ondexmeta concepts if there is one
notify all listeners that have registered interest for notification on
returns the destination of the edge via to concept representing
returns the edge type of an ondexmeta relation
returns the source of the edge via from concept representing
returns whether or not a vertex is the destination of an edge
returns whether or not a vertex is the source of an edge
removes an relation type specified by the ondexmeta relation from the
removes an concept class specified by the ondexmeta concept from the
extracts the label from a given concept class
update the label of a given node
update all labels from the graph
returns result of transformation
prevent changing the graph belonging to this layout
returns node for the graph center
fills attribute selection list
creates new empty properties
shows the color legend frame
registers the attribute values in the sorted set
computes the colour table
creates an rgb int for the given hue
loads the contained config files from jar file
loads the contained config files from jar file
randomize selection of nodes
this hack is required as load from xml closes the input stream
this hack is required as load from xml closes the input stream
helper class constructs a classname for a producer type and id
helper class constructs a classname for a producer type and class name
save this java bean as xml
delete the xml file backing this object
returns associated jmenu item
finds the minimal and maximal value in the dataset
sets all filters to an empty state
calculates the average and standard deviation
adds a concept class filter to the list of filters
the computed standard deviation
removes a concept class filter from the list of filters
adds a relation type filter
creates a panel that holds a pair of swap buttons
creates a swap button
removes the given relation type from the list of filters
configures the data extractor according to the current selections
adds a attribute filter criterium to the list of filters
removes a given attribute filter from the list of filters
sets the variable field
returns the corresponding command line value
sets frame icon from file
adds a filter to the main filter table
returns the name of the current variable
creates a chart
sets the average label to the given value
removes one row from the data table
sets the deviation label to the given value
sets the concept number label to the given value
sets the number of relations label to the given value
adds a filter to the table
return attribute name fullname
extends the size of the underlying data table
return attribute name description
return attribute name unit id
return attribute name specialisation of id
sets a changed concept accession
forces changes in progress to be flushed to attribute
clone relation with having a new relation type
calls all other subroutines for coping informations of relation
copies all context information from old relation to new relation
copies all attribute from old relation to new relation
clone concept with having a new pid
clone concept with having a new data source
clone concept with having a new concept class
updates the graph with the new concept and all tables with it
calls all other subroutines for coping informations of concept
updates the graph with the new concept and all tables with it
copies all context information from old concept to new concept and
returns color for required fields
copies all accessions from old concept to new concept
sets frame icon from file
copies all names from old concept to new concept
adds a given jinternal frame to the desktop and centers it
sets help broker of java help for on click help
make button input panel
copies all attribute from old concept to new concept
sets whether or not to show labels on nodes
returns custom icon to keep track of actual location
returns whether or not node labels are shown
sets whether or not to show labels on edges
returns whether or not edge labels are shown
returns the current set node size
sets the node size
returns the current set edge size
sets the edge size
returns the current set font size
sets the font size
updates check box settings in menu
sets exact size of a component
create a jmenu labelled with text for the given property key
create a jmenu labelled with text for the given property key
create a jmenu item labelled with text for the given property key
create a jmenu item labelled with text for the given property key
lazy initialisation for meta graph visualisation
populates the selecting menu
hides any selection for nodes or edges in the graph
sets frame icon from file
change edge label font
change from picking to transforming mouse mode
sets whether or not to relayout on resize of viewer
shows all relations between the currently visible nodes
scales a given image and returns a new image icon
returns the search box used in this toolbar
returns current mouse mode setting
return selection of concept class restriction
return selection of data source restriction
returns the mode of search
returns text to search for
return selection of tag restriction
if search term should be treated a regular expression
for other tools registering interest
makes the current annotation manager accessible to the rest of the
checks validity of regex
make a thread safe call to clean all popups
processes a smile string and check if it is possible to parse
propagate action event removes null action listeners
concatenate different file name parts
sets selection in table to given item name
other tools lost interest de register
sets selection in table to given item name
open jira connection
submit issue to jira
loads available relation types into combo box
sets selection in table to given item name
get node selection from graph
get node selection from graph for context
returns the current ovtk2 viewer
loads available relation types into combo box
loads available evidence types into combo box
returns the ovtk2 menu in use
sets selection in table to given item name
setup desktop to contain all internal frames
set close button to given tab
setup ui calling subroutines
updates existing unit jcombo boxes
loads available concept classes into combo box
returns an image icon or null if the path was invalid
creates a combo box displaying available attribute names
populates selection box for separator string
get node selection from graph for tag
sets up the menu bar
creates a new menu item
loads available data sources into combo box
make sure that always the fullname is preferred
helper method to extract a usable concept name
helper method to write a html list of a collection
this is very specific code to the value of an evidence attribute
sets up the gui with the list and the ok button
sets viewer to be used for these options
updates the the panel to represent the current order in the
creates a new checkbox
hacked run method
takes a y coordinate and returns the corresponding element index
adds the frame to the register
trigger an update event to construct new windows menu
takes a y coordinate and returns the corresponding border index
we look for an active frame and attach ourselves to that
sets a current running state for a process and thereby disables all menus
starts the feeder thread
returns the current running state for a process if the menu bar is
get the number of invisible concepts and relations
filter files by extension
description of this file filter
adds another ondexconcept to the list
clears this list
resets the menus to normal mode after the process has ended
returns ondexconcept at a given index
adds another evidence type to the list
adds another data source to the list
clears this list
adds another relation type to the list
clears this list
returns data source at a given index
returns evidence type at a given index
clears this list
returns relation type at a given index
adds another object to the list
clears this list
whether or not the list of relation types is empty
adds another concept class to the list
adds given attribute name to internal list
clears this list
returns concept class at a given index
clears this list
returns attribute name at a given index
sets the menubar mode according to a running process
whether or not the list of concept classes is empty
whether or not the list of attributes is empty
scales current viewer by given factor
transfers text to the clipboard in the simplest way
sets the transformer for node labels to be used in node graphics
sets the transformer for edge labels to be used in edge graphics
sets the transformer for node fill colour to be used in node graphics
returning current draw paint selection
sets the draw paint selection to use for the nodes in the graph
returns result of transformation
sets the transformer for edge colour to be used in edge graphics
returning current fill paint selection
update all colours from the graph
sets the fill paint selection to use for the nodes in the graph
update the colour of a given node
returns result of transformation
update the paint of a given node with a given paint
update the alpha value of a given node
update all colours from the graph
writes the graph element and decides the default edge style
determine if the dragged data is a file list
writes a single node and corresponding graphics information
defines the two proprietary data keys required for capturing graphics
necessary name spaces used for graph ml and proprietary extensions
pack all columns in table
returns result of transformation
clears the stroke cache so sizes get re assigned
returning current edge color selection
sets the edge color selection to use for the nodes in the graph
returns result of transformation
update all colours from the graph
returns current shape selection strategy
update the colour of a given edge
sets node aspect ratio transformer
update the colour of a given edge with a given paint
whether or not to show arrows on edges
returns current arrow status
sets node shape selection strategy to use
returns visibility for a given node
returns result of transformation
returns result of transformation
return id of corresponding shape of node
update all labels from the graph
returns visibility for a given edge
update the label of a given edge
extracts the label from a given edge
update all shapes from the graph
sets everything in the ondexgraph visible
resets the shape scheme to configured one
update the shape of a given node with a given shape
sets the edge shape to use
returns current edge shape
sets visibility of a given ondexrelation
update the shape of a given node with a given shape
associated with go button
sets visibility of a given ondexconcept
populates list of selected concepts
checks whether there is a last state
returns current html tags inclusion scheme
saves current visibility setting as last state
sets inclusion of html tags
restores the last visibility state if there is one
returns result of transformation
update the label of a given node
set visibility for entire graph
subclasses override this method for to get the desired behaviour
method to change what interpreters are used in the interpretation controller
add custom method
clear the content
auto add all excluding the ones on the list
get root object by class
adds object to be referrable
auto add all excluding the ones on the list
returns true if the class is part of the defined application tree
add an array of root objects
add one root object
add method under the name method name
add root object with all of its implemetned classes and interfaces
add method that resolves an application component that is required by the
add method to be exposed
clears the entire content of the builder and releases used memory and references
auto converts the arguments for easier access from the scripting environment
processes a request
loads ondex kb graph oxl data file into memory
checks the index and returns the existing concept if present
indexes ondex graph
show standard file chooser
inits the set of windows
sets up the main content
sets up the look and feel
populates the menu and the toolbar
for enabling and disabling certain actions in the menus and toolbar
search a genomic region e
helper method for the public equivalent
semantic motif search for list of genes
sets up the main window contents the desktop and the status bar
registers an action with the menubar and the toolbar
private helper method for add action
displays the frame centrally on the screen
returns the currently active internal editor frame
deregisters a closed window with the main frame
creates a new internal editor frame
parses the semantic motif file
starts the daemon
fires an action event to the listeners
triggered when key is typed
create a name for concepts
returns the next color
get file chooser
sets up the gui
adds an entry to the popup menu
adds an entry to the popup menu
creates a button panel
creates a node from a concept class
returns the root node
creates the tree
fill out user interface
check whether ok button can be unlocked
create a button with given title and action listener
check if the file exists in the file system
center dialog over window
saves the current graph mapping to a file of the users choice
creates the main panel
creates the main panel
saves the current graph mapping to the current file
creates the button panel cancel ok at the bottom of the frame
creates the split panel in the centre
creates the profile panel
activated by ok button
creates text field for queries
sets a new tree on the left side of the split pane
returns whether descriptors are ok
safely destroys the dialog window
singleton treeselection listener for newly loaded trees
creates the namespace dropdown box
show error message
create field for neighbourhood selection
create button with given title and listener
parses a given path descriptor into concept class and relation type arrays
throws exception if current path is syntactically incorrect
alphanumerical comparison based on id
refreshes the lists contents
returns the central concept class of this descriptor
returns the path in string form
creates the button panel at the bottom
creates a panel selectable by a radio button
not yet implemented
radiobutton listener singleton method
not yet implemented
gets the current ondex graph
sets the current ondex graph
closes the ondex graph
gets the current ondex graph file
sets the current ondex graph file
create button with given label and listener
shuts all listener threads on the list items down
stops this file operation
selects a concept class focus creates the list of
runs this file operation
prepares for file processing
returns whether the descriptor is valid
finalizes this task
saves the current ondexgraph the given mapping descriptors to a file
gets the title
initializes the hashtables with a new set of descriptors
colors the textfield according to error state
gets id of path
checks whether the current path statement is syntactically correct
gets the contained descriptor
creates a name for the network
extracts the contents of a input stream into the temp directory
destroys the field and safely shuts down daemons
gets a name for the given concept
shows an error message on the screen
cy node id consisting of the concept class id a hash character
returns the metadata object
performs a given operation and registers it with the action stack
undos a last performed action from the action stack
promt the user for the next input
redos the last undone action from the reversion stack
closes this frame
overrides the dispose method to terminate associated threads before
adds missing file type tags to a file
saves the frames metadata object
saves the framess metadata object
sets the modified flag and visualises it
executes the given java script file
returns a short description of the servlet
called on stop of this plugin
todo document me
a factory calls this method to return an object that was cached
returns the local copy of the token factory
returns the local copy of the java node factory
returns the local node factory
returns the recognizer
sets the java recognizer
checks the state of the context sensitive actions
returns the version of the ide for which this addin was implemented
called when shutting down the ide
gets the supervising controller
updates the enabled status of the specified action within the specified context
returns the version of the addin
initializes the static arraylist of code csproperty option code objects
gets the value on the text being entered
initializes the ui
gets the current global property values
sets the current global property value
initializes the ui
triggers code action check style
gets the current project property value
utility method to determine if the project properties override the global
sets the current project property value
sets the code row editor model code
initializes the ui
gets the text to display
gets the code row editor model code
add a code table cell editor code for a specific row
sets the comma seperated string of values
remove a code table cell editor code for a specific row
gets the code table cell editor code for a specific row
gets the code table cell editor code of a specific row and column
utility method to determine if the file properties override the global
initializes the ui
gets the text to display
sets the display text for the textfield
runs checkstyle on 1 or many files in a code checker thread code
initializes the jbuilder global properties with jb checkstyles defaults
gets the jb checkstyle default value
reads the data from the text area replaces the new line characters
gets the checkstyle default value
gets the jbuilder global property
return the message view message for the filename
writes comma separated string to the text area replacing the with
check if the message view is open for checkstyle
gets the current property value for the supplied source
log error conditions
sets a new value to the supplied destination
ignored for now
ignored for now
triggered when a project is activated
ignored for now
reset to checkstyle defaults
ignored for now
checkstyle error event handler
triggered when a browser is activated
reset to jb checkstyle defaults
initializes the property model
gets the project property value and returns them as a properties object
gets the global property values and returns them as a properties object
reads the property file from disk
special logger for key value pairs so that string concats can be avoided
log error conditions
creates a new instance or attribute branch
adds a new instance branch to the model
clears the drawing area then repaints the query from the model
auto generated axis2 call back method for deploy bundle method
auto generated axis2 error handler
auto generated axis2 error handler
return the label of this node
auto generated axis2 error handler
auto generated setter method
test if choreography objects are persisteted correctly
auto generated setter method
test if non get xxx method return null for non existing identifiers
returns the plugins resource bundle
validate the array for any uri
auto generated setter method
auto generated add method for the array for convenience
forces the loading of imported ontologies if any
this method is called upon plug in activation
determines the type of an entity refered by iri
searches for an opened for editing entity by its file source path
the method is invoked just before save operation
the method is invoked just before save operation
auto generated getter method
the method is invoked just before save operation
auto generated setter method
the method is invoked just before save operation
auto generated getter method
extenders may customize the editability of the properties
this method is called upon plug in activation
auto generated setter method
validates the values for each of the groups controls
returns a code boolean code indicating whether the resource name rep
implementation of initialisable
auto generated getter method
moves the node to a certain location without property change notification
auto generated add method for the array for convenience
auto generated setter method
disconnect this connection from the shapes it is attached to
returns the source endpoint of this connection
returns the target endpoint of this connection
reconnect this connection
reconnect to a different source and or target shape
set the line drawing style of this connection
removes a bendpoint
can execute if all the necessary information has been provided
can execute if all the necessary information has been provided
can execute if all the necessary information has been provided
disconnects a list of connections from their endpoints
reconnects a list of connections with their previous endpoints
return true if reconnecting the connection instance to new source is allowed
return true if reconnecting the connection instance to new target is allowed
set the target endpoint for the connection
reconnect the connection to new source if set new source
set a new source endpoint for this connection
set a new target endpoint for this connection
reconnect the connection to its original source and target endpoints
can execute if all the necessary information has been provided
disconnects a list of connections from their endpoints
can execute if all the necessary information has been provided
this method is taken from fixed connection anchor in logical diagram editor
upon activation attach to the model element as a property change listener
upon deactivation detach from the model element as a property change listener
return the source connection anchor of the given connection
return the target connection anchor of the given connection
return the closest source connection anchor to the requests origin location
return the closest source connection anchor to the requests origin location
return the source connection anchor of the given connection
return the target connection anchor of the given connection
return the closest source connection anchor to the requests origin location
return the closest source connection anchor to the requests origin location
return the closest source connection anchor to the requests origin location
return the source connection anchor of the given connection
return the target connection anchor of the given connection
return the closest source connection anchor to the requests origin location
return the closest source connection anchor to the requests origin location
return the closest source connection anchor to the requests origin location
return the closest source connection anchor to the requests origin location
return the source connection anchor of the given connection
return the target connection anchor of the given connection
return the closest source connection anchor to the requests origin location
return the closest source connection anchor to the requests origin location
the method is invoked just before save operation
returns the palette root
declares an ide specific workbench image
validate the array for qname
auto generated setter method
auto generated add method for the array for convenience
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
validate the array for wsmldocument
auto generated setter method
auto generated add method for the array for convenience
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated getter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
p automatically managed component initialization
p automatically managed component initialization
init method for this filter
fun o de pagina o no banco
fired when the user clicks on the send button
fired when the user types in the name field
reads the manifest from the specified input stream
this placement is determined by the chart legend position attribute
creates a new instance of code task queue code
creates a new instance of code task queue code with the specified name
creates a new instance of code task queue code and adds the
registers the specified listener for receiving event messages
determines whether the task has finished execution
removes the specified listener
sets whether the task has finished execution
determines whether the task has finished its execution successfully
sets whether the execution of the task fails
gets an appropriate error code identifying the failure of the task
sets an error code identifying the failure of the task
creates a new code summary page code with default subtitle and description
gets an appropriate error message when the task fails
gets a detailed error information
creates a new code overview page code with default subtitle and description
sets a a detailed error information
sets the description of this task
determines whether there is a next page in this wizard
determines whether the task has been started
gets the result of the task execution
determines whether there is a previous page in this wizard
sets the result of the task execution
registers the specified code task listener code to be
determines whether the last page is specified
creates a new code progress page code with empty subtitle and description
removes the specified listener
creates a code progress page code with the specified subtitle and empty description
gets the current page
gets the current step in the wizard
creates a new code confirmation page code with default subtitle and description
adds a step that corresponds to one wizard page
registers the specified code action listener code to be
creates a code wizard page code with the specified subtitle and
removes the specified listener
creates a new code user input page code with empty subtitle and description
creates a new instance of code i18n code
creates a code user input page code with
sets a brief description about this page
gets the subtitle for this page
sets the subtitle for this page
gets the type of this page
sets the type of this page
determines the optional buttons that will be shown
constructs a code task event code object
constructs a code generic event code object
gets the code wizard code to which this page belongs to
identifies the event type
creates a new instance of code task list code
sets the code wizard code to which this page belongs to
creates a new instance of code task list code with the specified name
gets the code wizard model code to which this page belongs to
gets the wizards dialog
invoked when the page is going to become current in the wizard
determines whether all of the tasks in the list are done
registers the specified code generic listener code to be
invoked when the page becomes current in the wizard
removes the specified listener
invoked when the user clicks the back button
invoked when the user clicks the next button
invoked when the user clicks the last button
invoked when the user clicks the finish button
invoked when the user clicks the cancel button
gets the back button of the wizards bottom pane
gets the next button of the wizards bottom pane
invoked when the user clicks the close button
gets the last button of the wizards bottom pane
gets the finish button of the wizards bottom pane
invoked when the user clicks the help button of the wizard
gets the cancel button of the wizards bottom pane
gets the help button of the wizards bottom pane
gets the close button of the wizards bottom pane
gets the property prefix
returns the specified components minimum size appropriate for the look and feel
returns the specified components maximum size appropriate for the look and feel
determines whether to display the back button in the bottom pane
determines whether to display the next button in the bottom pane
determines whether the titlebar should be visible
determines whether to display the last button in the bottom pane
determines whether to display the finish button in the bottom pane
determines whether to display the cancel button in the bottom pane
determines whether to display the help button in the bottom pane
gets the icon for the back button in the navigation pane
determines whether to display the close button in the bottom pane
sets the icon for the back button in the navigation pane
gets the icon for the forward button in the navigation pane
determines whether to enable the back button in the bottom pane
sets the subtitle of wizards right pane
sets the icon for the forward button in the navigation pane
determines whether to enable the next button in the bottom pane
gets the icon for the down button in the navigation pane
determines whether to enable the last button in the bottom pane
sets the icon for the down button in the navigation pane
determines whether to enable the finish button in the bottom pane
determines whether to enable the cancel button in the bottom pane
creates a new instance of code navigation pane code
determines whether to enable the help button in the bottom pane
gets the l f object that renders this component
sets the l f object that renders this component
resets the ui property to a value from the current look and feel
creates a new instance of code link button code
gets the current page in this navigation pane
gets the titles background color of this code navigation pane code
creates a modal dialog without a title and with the specified
creates a modal dialog with the specified title and owner code frame code
creates a modal dialog without a title and with the specified
creates a modal dialog with the specified title and owner code dialog code
determines the visited state of this link button
gets the font color that is used for already visited links
gets the font style to be used for a visited links
sets whether the close button should be displayed
gets the font color that is used for unvisited links
gets the font style to be used for a unvisited links
creates a modal dialog without a title and with the specified
creates a modal dialog with the specified title and owner code dialog code
creates a new instance of code navigation page code with empty title
creates a modal dialog without a title and with the specified
gets the font color that is used when the link button is disabled
creates a new double buffered code pixmap pane code with
creates a modal dialog with the specified title and owner code frame code
gets the pixmap that is used for background
gets the font style to be used when the link button is disabled
sets whether the dialog was cancelled
creates a new instance of code component list code
determines whehter the mouse cursor is over the link button
gets the l f object that renders this component
determines whether there is at least one
sets the l f object that renders this component
invoked when the link button is pressed
determines whether there is at least one
resets the ui property to a value from the current look and feel
gets the current number of pages in the history list
removes from the model the last page that was returned by
gets the data model of this list
creates a modal dialog without a title and with the specified
creates a modal dialog with the specified title and owner code frame code
gets the current selection model of this list
gets the index of the first occurence of the given argument testing
gets the selection mode
creates a modal dialog without a title and with the specified
sets the selection mode
creates a modal dialog with the specified title and owner code dialog code
gets the first selected index or 1 if the selection is empty
gets the last selected index or 1 if the selection is empty
gets the l f object that renders this component
determines whether the specified index is selected
sets the l f object that renders this component
resets the ui property to a value from the current look and feel
specifies whether this wizard should be modal
gets the model of this wizard
creates a new instance of code dial code using the specified
gets the current page in the wizard
scrolls the viewport to make the specified component visible
determines whether the component list should be automatically updated
determines whether the component list should be automatically updated
gets the l f object that renders this component
updates the component list ui
sets the l f object that renders this component
resets the ui property to a value from the current look and feel
gets the data model that handles the dials minimum maximum and value properties
gets the pixmap used for drawing the dial knob
sets the pixmap to be used for drawing the dial knob
gets the pixmap used for drawing the dial knob when is disabled
gets the pixmap used for drawing the dial knob
sets the pixmap to be used for drawing the dial knob
gets the pixmap used for drawing
sets the pixmap to be used for drawing
gets the models maximum acceptable value
sets the maximum allowed value of this code dial code
sets the minimum allowed value of this code dial code
gets the current value of the code dial code
sets the current value of the code dial code
determines whether the dial knob is being dragged
sets whether the dial knob is being dragged
gets the mouse handler mode which determines
gets the value that the dial knob will have if
sets the current progress and informs listeners about this change
sets the sub tast name and informs listeners about this change
returns code true code if the type can be serialized and then
returns an instance of
returns an instance of
returns an instance of
returns an instance of
returns an instance of
returns an instance of
returns an instance of
returns an instance of
returns an instance of
returns an instance of
convenience method to define a default set of fields to request
test of get connection method of class com
test of retrieve all method of class com
test of close method of class com
test of get category id method of class com
test of retrieve method of class com
test of main method of class com
test of get description method of class com
test of add method of class com
test of get parent id method of class com
test of remove method of class com
test of get sort order method of class com
test of modify method of class com
test of get date modified method of class com
test of get last modified method of class com
scale the image to the target height and width using a fast algorithm
write the image as a jpeg to the given outputstream
write the image as a jpeg to the given outputstream
write the image as a png to the given outputstream
write the image in the given format to the outputstream
returns met arg0 jsonarray length during unmarshall operation
creates a jsonobject
creates a jsonarray
sets the arg2 value with arg1 name into arg0 jsonobject in building
says if met arg0 object during unmarshall is a jsonarray
sets the arg1 value arg2 index into arg0 jsonarray in building
saves if is not present into context the
saves into context the
converts a string representing a
converts an array into a string representing a
converts an array into a
converts a collection into a string representing a
converts a collection into a
converts passed parameter json string into a json entity
checks if passed id is correct for full mapping simple annotated and xml
p adds an attribute to the container
adds a feature to the group attribute of the property file object
gets the hidden property group attribute of the property file object
adds a feature to the action listener attribute of the
sets the property attribute of the image folder select pane object
adds a feature to the property panes attribute of the property wizard
adds a feature to the tabbed property panes attribute of the
adds a feature to the standard property panes attribute of the
adds a feature to the action listener attribute of the
gets the labeled attribute of the image folder select pane object
sets the property pane attribute of the property wizard object
adds a feature to the action listener attribute of the
sets the property attribute of the file chooser property editor object
gets the labeled attribute of the file chooser property editor object
sets the visible attribute of the property wizard object
adds a feature to the property attribute of the property tab object
sets the tip attribute of the property tab object
gets the tabbed attribute of the property group object
adds a feature to the properties attribute of the property group object
adds a feature to the properties attribute of the property group object
adds a feature to the properties attribute of the property group object
adds a feature to the properties attribute of the property group object
adds a feature to the property attribute of the property group object
adds a feature to the property tab attribute of the property group object
sets the text attribute of the timer label object
sets the string value attribute of the property object
sets the int value attribute of the property object
sets the double value attribute of the property object
sets the icon path attribute of the resource factory object
sets the boolean value attribute of the property object
sets the middle pos attribute of the bar panel object
sets the middle size attribute of the bar panel object
sets the start pos attribute of the bar panel object
sets the msg attribute of the timer frame object
sets the start size attribute of the bar panel object
sets the msg attribute of the timer frame object
sets the end pos attribute of the bar panel object
sets the end size attribute of the bar panel object
sets the date attribute of the jcalendar component object
sets the text attribute of the jlink button object
gets the scrollable block increment attribute of the jpanel view object
gets the scrollable unit increment attribute of the jpanel view object
sets the icon attribute of the jtool button object
sets the calendar attribute of the jcalendar chooser panel object
adds a feature to the mapping attribute of the
gets the table cell renderer component attribute of the
set the selected item
returns the value at the specified index
adds a feature to the all attribute of the collections list model object
sets the enabled attribute of the jdate chooser object
sets the value attribute of the property object
sets the value attribute of the property object
sets the progress attribute of the jprogress window object
sets the status attribute of the jprogress window object
adds a feature to the tray aware attribute of the tray panel object
sets the value attribute of the property object
adds a feature to the node attribute of the tree panel object
gets the type name attribute of the property object
adds a feature to the custom component attribute of the jshade panel
sets the object attribute of the property object
sets the entry info attribute of the tree panel object
sets the shaded attribute of the jshade panel object
gets the shaded attribute of the jshade panel object
sets the choice list attribute of the property object
gets the description attribute of the skin file filter object
sets the tree icons attribute of the tree panel object
gets the tray component attribute of the jshade panel object
adds a feature to the delimiter attribute of the
adds a feature to the maximize action listener attribute of the
gets the description attribute of the property file plugin description
gets the old vector attribute of the property object
gets the short description attribute of the property file plugin description
gets the status attribute of the property file plugin description object
gets the version string attribute of the property file plugin description
adds a feature to the minimize action listener attribute of the
gets the type attribute of the property file meta data object
gets the clazz attribute of the property file meta data object
gets the name attribute of the property file meta data object
gets the new vector attribute of the property object
registers a module as sub module for this module
adds a feature to the property changed listener attribute of the property
adds a feature to the heading action listener attribute of the jshade panel
gets the destroyed attribute of the default service object
registers a module as sub module for this module
gets the default dir attribute of the dexter object
gets the home dir attribute of the dexter object
adds a feature to the property input listener attribute of the property
gets the entry for mouse event attribute of the popup listener object
sets the display type attribute of the property object
gets the status attribute of the default status model object
returns an instance of the contained contact object if a contact equals
adds a feature to the contact model listener attribute of the
gets the property editor attribute of the property object
sets the property editor attribute of the property object
sets the description attribute of the abstract service object
gets the icon attribute of the player entry object
gets the tool tip text attribute of the player entry object
sets the show server info dlg action attribute of the player entry object
gets the icon attribute of the buddy entry object
gets the tool tip text attribute of the buddy entry object
sets the file name attribute of the server list object
adds a feature to the data change listener attribute of the server list
sets the show server info dlg action attribute of the server dlg object
sets the frags attribute of the player object
sets the ping action attribute of the server dlg object
sets the add ip action attribute of the server dlg object
sets the value attribute of the player object
adds a feature to the player attribute of the buddy object
adds a feature to the buddy data change listener attribute of the buddy
gets the map attribute of the server object
gets the row count attribute of the player table model object
adds a feature to the drawing event listener attribute of the drawing
gets the value at attribute of the player table model object
adds a feature to the player attribute of the server object
is called if a plugin or the chatframe want to send a message
gets the players count attribute of the server object
gets the mnemonic attribute of the sketch object
gets the favorite dat attribute of the cs beagle object
gets the tool tip attribute of the sketch object
sends a request object with specified request code
gets the player attribute of the server object
gets the sleep attribute of the cs beagle object
is called if a message was received
gets the rules count attribute of the server object
convert a single char to corresponding nibble
gets the power search at startup attribute of the cs beagle object
gets the name attribute of the encrypt object
gets the rule attribute of the server object
gets the mnemonic attribute of the encrypt object
gets the power search threads attribute of the cs beagle object
gets the tool tip attribute of the encrypt object
gets the popup notification attribute of the cs beagle object
gets the selected server attribute of the server dlg object
is called by sketch frame
gets the event match attribute of the vevent object
is invoked by sketch panel peer
gets the ping exec attribute of the cs beagle object
adds a feature to the change listener attribute of the specification model
sets the duration attribute of the vevent object
gets the recursive attribute of the vevent object
gets the ping parameters attribute of the cs beagle object
gets the row count attribute of the server table model object
gets the public slot free attribute of the server object
gets the all day attribute of the vevent object
gets the reserve slots attribute of the server object
sets the edit action attribute of the jvevent panel object
sets the delete action attribute of the jvevent panel object
adds a feature to the ip attribute of the cs beagle object
sets the dt start attribute of the vevent object
gets the dt end attribute of the vevent object
sets the dt end attribute of the vevent object
adds a feature to the player attribute of the cs beagle object
gets the encoded dt end attribute of the vevent object
gets the encoded dt start attribute of the vevent object
adds a feature to the vevent attribute of the icalendar object
gets the favorite attribute of the server object
sets the v event attribute of the icalendar object
gets the day for date attribute of the icalendar object
gets the day for date attribute of the icalendar object
gets the max players attribute of the server object
adds a feature to the icalendar attribute of the icalendar model object
gets the default calendar attribute of the icalendar model object
sets the default calendar attribute of the icalendar model object
gets the recursive events attribute of the vevent support object
sets the power search action attribute of the server dlg object
sets the midnight attribute of the date factory object
adds a feature to the calendar model listener attribute of the
sets the status text attribute of the chess frame object
gets the selection calendar attribute of the jcalendar panel object
sets the color attribute of the knight object
gets the valid move attribute of the knight object
sets the color attribute of the queen object
gets the valid move attribute of the pawn object
sets the color attribute of the rook object
sets the color attribute of the pawn object
sets the color attribute of the king object
sets the color attribute of the bishop object
gets the piece attribute of the board object
sets the piece attribute of the board object
adds a feature to the selection listener attribute of the jcalendar panel
gets the mnemonic attribute of the chess object
adds a feature to the board event listener attribute of the board object
gets the column attribute of the jchess panel object
gets the row attribute of the jchess panel object
adds a feature to the tree model listener attribute of the
gets the child attribute of the tree model adapter object
is called by chess frame
gets the child count attribute of the tree model adapter object
gets the index of child attribute of the tree model adapter object
is invoked by chess board peer
gets the leaf attribute of the tree model adapter object
adds a feature to the category attribute of the hot list model object
adds a feature to the entry attribute of the hot list model object
adds a feature to the entry attribute of the hot list category object
adds a feature to the entries attribute of the hot list model object
gets the entry attribute of the hot list category object
gets the category attribute of the hot list model object
sets the my player attribute of the chess frame object
gets the url attribute of the yabbifier service object
gets the browser attribute of the yabbifier service object
adds a feature to the hotlist attribute of the hotlist object
adds a feature to the bookmark attribute of the hotlist object
adds a feature to the conversation listener attribute of the
sets the events attribute of the jmonth popup menu object
adds a feature to the email attribute of the hotlist object
adds a feature to the phone attribute of the hotlist object
adds a feature to the mnemonic attribute of the smiley object
returns a title for all chatpanel components
gets the frame attribute of the messenger gui object
gets the frame attribute of the messenger gui object
adds a feature to the property change listener attribute of the
adds a feature to the plugin attribute of the default plugin chain object
sends message to the conversation object and bypasses any further
return a unique key for this conversation
adds a feature to the message receiver attribute of the
sets the description attribute of the abstract messenger plugin object
returns an instance of the used protocol
is called if the user decides to enable disable a plugin for a
adds a feature to the state listener attribute of the
adds a feature to the state listener attribute of the
adds a feature to the tree model listener attribute of the
adds a feature to the state listener attribute of the
adds a feature to the property change listener attribute of the
gets the child attribute of the flat category model object
adds a feature to the jchat panel attribute of the jtabbed chat panel
gets the child count attribute of the flat category model object
gets the index of child attribute of the flat category model object
adds a feature to the conversation start listener attribute of the
gets the leaf attribute of the flat category model object
gets the title attribute of the jtabbed chat panel object
is called if a message was received
is called if a plugin or the chatframe want to send a message
gets the mnemonic attribute of the grabber object
return the name of the plugin
gets the tool tip attribute of the grabber object
gets the contact for mouse event attribute of the popup listener object
is called if a message was received
is called if a plugin or the chatframe want to send a message
gets the engine for mouse event attribute of the popup listener object
gets the message command attribute of the remove from list message object
gets the message command attribute of the personal phone message object
gets the message command attribute of the buddy phone message object
gets the message command attribute of the add to list message object
gets the status attribute of the msn contact object
gets the online attribute of the msn contact object
gets the i d attribute of the msn contact object
gets the default status attribute of the msn engine object
sets the offline attribute of the msn engine object
sets the online attribute of the msn engine object
adds a feature to the contact attribute of the msn conversation object
sets the status attribute of the msn engine object
return a unique key for this conversation
adds a feature to the event attribute of the event browser frame object
sets the nick attribute of the msn engine object
gets the row count attribute of the event table model object
gets the offline icon attribute of the uifactory object
gets the value at attribute of the event table model object
gets the online icon attribute of the uifactory object
adds a feature to the contact attribute of the msn engine object
gets the row count attribute of the action table model object
gets the value at attribute of the action table model object
gets the destroyed attribute of the event browser object
gets the user status panel attribute of the jchat panel object
adds a feature to the control attribute of the jchat panel object
adds a feature to the controls attribute of the jchat panel object
get the label of the device
reads the info already stored in files
reads one of the cp files
check if certain device is mounted or not
get the label of the device
generates an evenly spaced light curve plot
assume no copy for performances sake
ajoute n blocks
efface les blocks
creates a new skosmanager object which is used to manage skos vocabularies
creates a new empty skos vocabulary that has the specified ontology uri
loads the ontology specified by the code uri code
a convenience method that load an ontology from an input source
a convenience method that loads an ontology from a physical uri
return a skosdata factory for this manager
creates a new skosmanager object which is used to manage skos vocabularies
this function is used to return the vector contains the format tab
this function get the height and size of the object
this function get the aligment x and y
this function get is enable the button
select working database must be called after get databases
this function is called to store the vector of the tables names in
this function return the tables of the database
the function get the fields vector for the given table
retrieves the number of rows of the table
retrieves fields with not null constraint
this function is used to get the info and save it
this function is used to retrieve the info specific for the jbutton
get the last sequence number of added component
go to last record in the table
go to first record in the table
increment the sequence number of a component
get the value of the required field
delete the current record in the result set the record is also deleted
undo current row updates
retrieves the last inserted id for auto increment primary key
the function use is to pop up the right click menu
action performed handler for the button
this function get text on the component
this function get the text vertical aligment
this function get the icon on the button
this function get is enable the button
the function is used to get db names
the function takes db names and return table names
this function get text on the component
this function get the text vertical aligment
this function get the icon on the button
this function is used to get the info and save it
this function is used to read the new inforamtion and set it again
this functions is used to fill the vector with strings of the fields
the function returns the fields vector
this function used to set the path of the photo on the label
this function used to get the path of the photo on the label
locate peers on the network until a time limit is reached
locate apps on the network until a time limit is reached
locate peers on the network until a time limit is reached
returns the label
validates input values
returns the error messages
execute the bare action process
initializes the root package name
apply the public field bean to el
tears down this action
initializes the servlet context
handles the error
creates a new
initializes the character set
creates a new
initializes the default time zone
returns the request parameter
sets the request attribute
initializes the default locale
sets the session attribute
initializes the default time zone
sets the servlet context attribute
determines if this application is running on the development server
downloads the data
determines if this request is get method
determines if this request is post method
determines if this request has request parameters
returns the request attribute value as byte
returns the request attribute value as byte
processes the current locale
returns the request attribute value as short
returns the request attribute value as short
processes the current time zone
returns the request attribute value as integer
returns the request attribute value as integer
returns the request attribute value as long
normalizes the value
creates a new action specified by the path
returns the request attribute value as long
returns the request attribute value as float
returns the request attribute value as float
returns the request attribute value as double
creates a new request handlers
returns the request attribute value as double
returns the request attribute value as big decimal
returns the request attribute value as big decimal
returns the request attribute value as string
capitalizes the text according to java beans specification
returns the request attribute value as boolean
returns the request attribute value as date
returns the request attribute value as
entity user user1 entity offset 1 limit 1
show this dialog
show this dialog
called when the yes button is pressed
called when the send button is pressed
moves this frame to the center of the screen
called when the abort button is pressed
called when the no button is pressed
prints out the names of all available algorithms
sets the password which is displayed by default when showing the dialog
reads out the configuration in the view and stores
prints out the help page
prints out program version
returns an algorithm as algorithm class given by its name
displays an error message
displays an error
set the compression level
returns the current compression level does not matter if use zip is set
returns a file list of the files to en decrypt
adds an algorithm name to the alrogithm list
sets the file path by calling
returns the current password which should be used for en decryption
adds a new algorithm
sets the currents paths to the given files
returns the current name of the algorithm which should be used for
returns the current paths
sets the current chosen algorithm name
returns the algorithm which should be used for
returns the current chosen algorithm name
selects the given compression level
returns the currently selected compression level
call to get the directory the decrypted files should be stored in
depending on whether there is a progress running some
stops the currently running algorithm
reads and returns a code table code from the string buffer passed as
reads and returns a code parameter code from the string buffer passed as
reads and returns a code scalar code from the string buffer passed as
an exact representation of this scalar as one would find in the model
an exact representation of this parameter as one would find in the model
destroy an existing grade letter
destroy an existing category
destroy an existing assignment
converts a json string into a java map
returns the launch manager
returns the file corresponding to the specified path from within this
returns the test project
synchronously removes a breakpoint that has been previously set
launches a previously created atf configuration
terminates the process launched by the last call to
this method initializes main window
this method initializes content panel
this method initializes tabbed panel
this method initializes ok
this method initializes south
this method initializes about scroll panel
this method initializes help scroll panel
this method no longer serves any purpose
this method no longer serves any purpose
set the interval at which regex patterns are checked
the idea behind this class is simply to eliminate the need for
set this int to infinity
formats the pattern as a string
this provides a base class for all the unicode character
this should always be cast to a string as in string tokenizer
this asks for the next token and changes the pattern
this asks for the next token and changes the pattern
tells whether there are more tokens in the pattern
determines the of remaining tokens
obtains the match if successful null otherwise
obtains the position backreference number i begins to match or
obtains the number of characters matched by backreference i or
obtains a substring matching the nth set
this returns the part of the string that preceeds the match
this returns the part of the string that follows the ith
this returns the part of the string that follows the match
this returns the string to the right of the ith backreference
this method does extra checking on a matched section of
this finishes the replacement appending the right part of
set to true if you only want to compare two of the
add a new regex to the set of regexs
get the regex at position i in this transformer
set the regex at position i in this transformer
add a new regex by calling regex
add an array of strings which will be converted to
replace all matches in the current string
replace all matching patterns beginning at position start
replace all matching patterns beginning between the positions
replace the first matching pattern in string s
replace the first matching pattern after position start in
replace the first matching pattern that begins between
this gets the next element of a pattern that
call this method if you have a pattern element that
this determines if the remainder of a pattern
this is a to string for the remainder
this can be used to perform a match test from
this can be used to perform a match test from
add a pattern to the singly linked pattern chain
get the size of the working buffer
set the size of the working buffer
set the dont match in quotes flag
find out if the dont match in quotes flag is enabled
set the state of the ignore case flag
change the replace rule of this regex by compiling
change the replace rule of this regex to rp
replace the first occurence of this pattern in string s
replace the first occurence of this pattern in string s
replace the first occurence of this pattern in string s
replace all occurences of this pattern in string s
replace all occurences of this pattern in string s
replace all occurences of this pattern in string s
a clone by any other name would smell as sweet
return a clone of the underlying reg res object
attempt to match a pattern beginning
attempt to match a pattern beginning
search through a string for the first
search through a string for the first
search through a region of a string
set the g flag
get the state of the g flag
get the state of the s flag
get the state of the s flag
only needed for creating your own extensions of
this method implements filename filter allowing one
the version of this package
once this method is called the state of variables
this function returns true if the optimize method has
checks to see if there are only literal and no special
this operation cant really be done
compile a new pattern
this is the method required by file name filter
this pattern matches nothing it is found in patterns
a rule describing how to clone only the current replace rule
add another replace rule to the linked list
this tells how to convert just the current element and none
copy a str pos from sp to this
advance the place where str pos points within the string
compare the possibly escaped character
as match but only matches if the character is escaped
increment the string pointer by each character in
read in an integer
returns the binary string of data that is substituted in for this
returns the class of this register
returns the number of commands that have been added to this table
resets and reinitializes the compiler
returns the line number of the current line that is being processed or
loads one of dasms internal directives
removes the head of a named queue
removes the head of a named stack
determines if a stack has at least one element
checks if there are any available lines
returns the next line in the file
retrieves the current line from the file
string representation of a working file in the format
returns the total size of this file
sets the calculator model that this variable should be sent to
retrieves the contents of this tireal and formats it as a java double
sets this code tireal code s value to the specified value
creates the pages of the multi page editor
the code multi page editor example code implementation of this method
calculates the contents of page 2 when the it is activated
closes all project files on project close
this method no longer serves any purpose
tests to see if this represents an infinite quantity
converts to a pat int to an int
the current size of the string buffer in use by regex writer
the character at location i in the string buffer
this is the equivalent string next element
obtain the text string that was matched against
obtain the source string like object
for optimization it is helpful but not necessary that you define the
for optimization it is helpful but not necessary that you define the
after a successful match this returns the location of the first matching
after a successful match this returns the number of characters in the
this is matched from chars matched after a successful match or 1
this method replaces the first occurence of the regex in the string
this returns the number of backreferences parenthesis in the pattern
contains true if the last match was successful
an older name for matched from
an older name for string matched
this method replaces all occurences of the regex in the string starting
an older name for matched from
an older name for string matched
get a replacer to that works with the current regex
another form of apply it is the same as apply r r
returns the number of regexs in this transformer
modified the behavior of a replace rule by supplying an argument
returns the current possibly escaped character
tell whether we are at end of string
returns true if the current character is escaped preceeded by
get the string that we are processing
changes the rule used to determine a variables value
gets the rule used to determine a variables value
this method evaluates functions in a string replacing them with their
get the current replace rule
clones this object creating a new score with the same values
print this object for debug
start the match with these numbers of sets and legs
returns the string representation for this throw
restarts this match object with the previous selected
adds the throw made by this player to the match
print this object for debug
tells this match that somebody won the set and it should be closed
tells this match that somobody won the leg and it should be closed
sets the players vector loosing the old one
tells this match that the turn must be closed because of a bust
removes a player from the players list
restart the match using the old configuration
undoes the last throw added
adds a player to the players list
restarts the leg
sets the number of legs
returns the match object which contains the whole matchs
gets the number of legs
tells this leg that the turn must be closed because of a bust
sets the number of sets
returns the last turn somebody played
gets the number of sets
this method is called when the view wants to report a throw that
returns the current value for this turn
sets a new value in the extra config table using this key
add the throw to its turns throw list
gets an extra config value from the list
removes the last throw from the list and returns the
get the table with extra configs
removes the last throw from this turn
checks if this turn is empty
return the table of scores
returns true if this turn has already all throws filled
returns the configuration object that the game is using
returns true if this turn has a throw that is a double or
restart the set with this number of legs
restart the set with the previous number of legs
adds the throw to the current leg
closes this set
gets the current state of the game
tells this set that somobody won the leg and it should be closed
tells this set that the turn must be closed because of a bust
helper method that returns the player that should be the next
tell the set to undo the last throw
help method iterates over the scores resetting the points
creates the components and place them in the form
refresh the values for the rows
cleans the form and restarts everything
gets the minimum content height
reacts to undo calling refresh
gets the minimum content width
add a new listener for the controller
starts resumes the application
creates the components and place them in the form
reacts to report calling refresh
called when the pointer is released
initiates the values for the form
removes the listener from the listener list
called when a key is released and focus is on this button
reports a new throw to the controller
reacts to restart calling refresh
paints the button
performs an undo in the game
called when the pointer is released
called when the item has effectively lost the focus
reacts to report throw
implementation for the command listener
reports a throw made by the current player
paints the board
reacts to restart
displays an event with a message for some seconds
sets a new game configuration
displays the board form
displays the scores form
gets the game configuration
displays the options form
gets the available games
return the scores hashtable indexed by player
sets the type of the game to be played
gets the current game key
gets the current game state
sets game over in the controller
helper method for calling fire listeners with a null throw
fires all listeners to the operation eventually using the throw
test method for
test method for
test method for
add a configuration command
get most recently executed alu function code
get state associated with executing most recent instruction
get the most recent instruction
stoppt den countdown
replace driver manager with data source for
replace driver manager with data source for
very preliminary just returns all the features on every request
should add code here to return different das2 feature i implementations
depth of ucsc annotations is usually always known based on captype
method used to set value of
method used to enable or disable automatic heuristic removal
for now assuming any type can be represented as jbrowse json
das2 source i passes filter if any version in the source passes filter
get elapsed time
for now try mapping full type uri
uses a das1 features capability i to get a das1 features response i
das2 type of a feature cannot or at least should not be null
failsafe for when there is no das1 types proxy
das2 source i
das2 source i
any code constructing a parent part hierarchy is
any code constructing a parent part hierarchy is
format the field name for query statements find find all find by id
obtain the dereferenced field name
obtain the field name
set the field name associed with property
set sql type
set output format pattern based on java
this property means that into query command this field
check if this field name will be dereferentiated into
enable disable identity conditions on all find commands
remove bean from db same of sql delete command
delete bean from db using an id
load a bean info associate with bean
set entity name mapped with bean
update bean into db having the possibility of
get entity name mapped with bean
join condition syntax
select bean from db using an primary key value
set an additional identity where conditions used in all find commands
get the db entity associate with bean
reload bean instance from db
create a param list using primary key
test if the bean have a primary key
add a new custom find command
enable disable identity conditions on all find commands
insert beans into db
update bean into db
update bean into db having the possibility of
delete bean from db using an id
delete bean from db
remove all bean from db
select bean from db using an primary key value
write the style tag
write the style tag
dummy processline function
replace host by th e application host
returns the content
process a token
search a token in function params
handles logic to translate variables
returns the single instance
returns the method name
safe javascript function caller
add a css file to be included in application
adds a js file to be include in the application
create the next js instance name
factory method for creating nested messages
adds a js file to be include in the application
adds a template path
set the output file
add a required package to application
returns image path with
write to default path
write all js in the same script tag
write the module footer
performance caution using float objects as map keys is not recommended
set entries to a new array of the given capacity
stack traces are not currently supported
stack traces are not currently supported
the set of keys associated with this dictionary
collection of values associated with this dictionary
enables caching to store computed values
get the resources associated with this class
gets the associated locale
keys associated with this resource
create a string method declaration from a dictionary value pair
a multi line representation of this object
gets the resource associated with this class
returns a resource key given a method name
override this method to examine the serialized response that will be
this method treats arrays in a special way
override this method to examine the serialized version of the request
returns true if the
used to determine whether the specified interface name is implemented by
call this method before attempting to append any tokens
appends a token to the end of the buffer
exception chaining is not currently supported for serialized exceptions
no effect exception chaining is not currently supported for serialized
called when the machinery of this class itself has a problem rather than
adds a child widget to this panel
automatically fires the appropriate keyboard event to all listeners
adds a widget to the panel at the specified position
sets the position of the specified child widget
fires a key down event to all listeners
gets the left position of the specified widget within the panel
fires a key down event to all listeners
gets the top position of the specified widget within the panel
fires a key down event to all listeners
if a keyboard event is currently being handled on this text box calling
gets this widgets parent panel
replaces the contents of the specified cell with a single space
gets the current position of the cursor this also serves as the beginning
determines whether this widget is currently attached to the browsers
adds a child tree item containing the specified text
return number of columns
this method is called when the widget becomes attached to the browsers
adds another item as a child to this one
gets the number of columns in this grid
gets the text currently selected within this text box
this method is called when a widget is attached to the browsers document
gets the child at the specified index
return number of rows
gets the length of the current text selection
this method is called when a widget is detached from the browsers
gets the number of children contained in this item
resizes the grid
removes this widget from its parent widget
resizes the grid to the specified number of columns
gets the index of the specified child item
resizes the grid to the specified number of rows
creates a new empty cell
gets this items parent
checks that a cell is a valid cell in the table
gets whether this items children are displayed
checks that the row index is valid
selects all of the text in the box
sets the cursor position
gets the layout direction of the given child widget
removes this item from its tree
sets the range of text to be selected
removes one of this items children
removes all of this items children
sets the alignment of the text in the text box
selects or deselects this item
sets whether this items children are displayed
sets whether this items children are displayed
sets the user defined object associated with this item
sets the default horizontal alignment to be used for widgets added to this
gets the css text align string associated with this constant
sets the default vertical alignment to be used for widgets added to this
sets the height of the cell associated with the given widget related to
fires a cell clicked event to all listeners
sets the vertical alignment of the given widget within its cell
sets the amount of spacing between this panels cells
fires an error event to all listeners
fires a load event to all listeners
this override checks to ensure
adds a style name to the widget
sets the widget to be wrapped by the composite
gets the objects absolute left position in pixels as measured from the
sets the widget to be wrapped by the composite
gets the objects absolute top position in pixels as measured from the
adds a widget to the end of this collection
determines whether a given widget is contained in this collection
gets the objects offset height in pixels
adds an item to the list box
gets the objects offset width in pixels
gets the widget at the given index
adds an item to the list box
gets the style name associated with the object
gets the index of the specified index
removes all items from the list box
gets the title associated with this object
inserts a widget before the specified index
gets the number of items present in the list box
gets an iterator on this widget collection
gets the text associated with the item at the specified index
determines whether or not this object is visible
removes the widget at the specified index
removes a style name from the widget
removes the specified widget
gets the currently selected item
sets the objects height
gets the value associated with the item at a given index
fires a focus event to all listeners
a helper for widgets that source focus events
sets the objects size in pixels not including decorations such as
gets the number of items that are visible
fires a lost focus event to all listeners
inserts an item into the list box
sets the objects size
inserts an item into the list box
gets the menu that contains this item
sets the objects style name removing all other styles
gets the sub menu associated with this item
determines whether an individual list item is selected
sets the title associated with this object
gets whether this list allows multiple selection
sets the command associated with this item
sets the sub menu associated with this item
sets whether this object is visible
sets the objects width
removes the item at the specified index
adds a set of events to be sunk by this object
sets whether an individual list item is selected
adds a style to the specified cell
sets whether this list allows multiple selections
removes a set of events from this objects event list
sets this objects browser element
gets the td element representing the specified cell
adds a child widget to the panel contained within the html element
sets the currently selected index
adds a widget to this panel
gets the panels child widget
sets the value associated with the item at a given index
gets a style from a specified row
sets the number of items that are visible
sets this panels widget
override this method to specify that an element other than the root element
gets the css vertical align string associated with this constant
inserts a new child widget into the panel
adds a new child widget to the panel
gets the list of children contained in this panel
determines whether or not this cell is visible
fires a popup closed event to all listeners
gets the action associated with this form
gets the encoding used for submitting this form
gets the http method used for submitting this form
gets the forms target
removes a style from the specified cell
sets the action associated with this form
sets the encoding used for submitting this form
sets the http method used for submitting this form
submits the form
gets the name associated with this frame
fires a before tab selected event to all listeners
fires a tab selected event to all listeners
sets the height of the specified cell
hides the popup
popups get an opportunity to preview keyboard events before they are passed
popups get an opportunity to preview keyboard events before they are passed
gets the url of the image
popups get an opportunity to preview keyboard events before they are passed
sets the url of the image to be displayed
gets the result text of the form submission
sets the popups position relative to the browsers client area
fires a change event to all listeners
gets the popups left position relative to the browsers client area
sets whether the form submit will be cancelled
adds a widget to the tab panel
gets the popups top position relative to the browsers client area
gets whether this form submit will be cancelled
adds a widget to the tab panel
sets the style name associated with the specified cell
gets the deck panel within this tab panel
this method must be called whenever a widget is removed
shows the popup
gets the tab bar within this tab panel
gets the filename selected by the user
fires a scroll event to all listeners
adds a child widget to the panel
inserts a widget into the tab panel
sets whether this cell is visible via the display style property
inserts a widget before the specified index
removes the given widget and its associated tab
sets the width of the specified cell
fires a tree item selected event to all listeners
fires a tree item state changed event to all listeners
programmatic equivalent of the user clicking the button
fires a mouse down event to all listeners
fires a mouse enter event to all listeners
gets the column span for the given cell
gets the row span for the given cell
fires a mouse leave event to all listeners
sets the column span for the given cell
sets whether the specified cell will allow word wrapping of its contents
fires a mouse move event to all listeners
sets the row span for the given cell
fires a mouse up event to all listeners
appends a cell to the specified row
gets the number of cells on a given row
gets the index of the currently visible widget
explicitly gets the
gets the number of rows
gets the td element representing the specified cell unsafely meaning
inserts a widget before the specified index
inserts a cell into the flex table
inserts a row into the flex table
shows the widget at the specified index
removes a number of cells from a row in the table
gets the element associated with a cell
ensure that the cell exists
ensure that the row exists
ensures that the specified item is visible by adjusting the panels
convenience methods to get an attribute on a cell
gets the vertical scroll position
gets the horizontal scroll position
sets whether this panel always shows its scroll bars or only when
sets the vertical scroll position
sets the horizontal scroll position
convenience methods to set an attribute on a cell
gets whether this widget is enabled
inserts a widget before the specified index
sets whether this widget is enabled
adds a style to the specified row
fires a click event to all listeners
gets the tr element representing the specified row
cancels this timer
schedules a timer to elapse in the future
schedules a timer that elapses repeatedly
gets a style from a specified row
determines whether or not this row is visible via the display style
removes a style from the specified row
sets the style name associated with the specified row
sets the vertical alignment of the specified row
sets whether this row is visible
given a class return the next superclass that is serializable
ensure the tr element representing the specified row exists for
returns true if we will need get set method pair for a field
perform a set of consistency checks on the service interface
see if a type has any subtypes that are serializable
convenience methods to set an attribute on a row
this method will generate a native jsni accessor method for every field
adds a listener to the current table
identify the custom field serializers that are available
creates a proxy class for the requested class
clears the given row and column
returns true if the type is serializable
check that the types used in the service interface are serializable or have
return true if atleast one of the items in the list is serializable
gets the amount of padding that is added around all cells
generate any fields required by the proxy
gets the amount of spacing that is added around all cells
implements the service def target interface to allow clients to switch which
gets the html contents of the specified cell
gets the row formatter associated with this table
gets the text within the specified cell
gets the widget in the specified cell
determines whether the specified cell exists
returns an iterator containing all the widgets in this table
creates an implementation of
method to process events generated from the browser
this class is an interface
emits the new class
registers a method creator
remove the specified widget from the table
entry point for subclass cleanup code
entry point for subclass setup code
given a type determine what jsni signature to use in the serialize or
removes the specified table listener
gets the associated writer
prints to the current code abstract generator class creator code
prints to the current code abstract generator class creator code
begin emitting a java doc comment
end emitting a java doc comment
sets the width of the tables border
sets the amount of padding to be added around all cells
returns code this code as this is a jsonstring
returns the raw java string value of this item
returns the json formatted value of this string quoted for evaluating in a
returns code this code as this is a jsonnumber
returns the json representation of this number
sets the amount of spacing to be added around all cells
returns code true code if this is the instance representing true
returns code this code as this is a jsonboolean
returns true for the true value and false for the false value
returns the value at the specified index position
returns a non null reference if this jsonvalue is really a jsonnull
returns code this code as this is a jsonarray
sets the html contents of the specified cell
sets the specified index to the given value
returns code this code as this is a jsonobject
create the json encoded string representation of this jsonarray instance
returns keys for which this jsonobject has associations
returns code this code as this is a jsonnull
determines the number of keys on this object
gets the number of nodes in this object
this function delegates to the native method code remove named item code
sets the text within the specified cell
this function delegates to the native method code get document element code
this function delegates to the native method code set named item code in
this function delegates to the native method code get element by id code
this method returns the string representation of this code comment impl code
this method returns the string representation of this
this method returns the string representation of this
this function delegates to the native method
this function delegates to the native method code append data code in
this method gets the index item
this function delegates to the native method code create comment code
this function delegates to the native method code delete data code in
this function delegates to the native method code get data code in
sets the widget within the specified cell
this function delegates to the native method
this function delegates to the native method code get attribute code in
this function delegates to the native method code get length code in
this function delegates to the native method code get attribute node code
this function delegates to the native method code insert data code in
this function delegates to the native method code create element code
this function delegates to the native method
this function delegates to the native method code replace data code in
this function delegates to the native method code get tag name code in
this function delegates to the native method code set data code in
this function delegates to the native method code has attribute code in
this function delegates to the native method code create text node code
this function delegates to the native method code substring data code
this function delegates to the native method code remove attribute code
this function delegates to the native method code set attribute code in
this function delegates to the native method code get name code in
this function delegates to the native method code import node code in
removes any widgets text and html within the cell
this function delegates to the native method code get specified code in
this method returns the string representation of this
this function delegates to the native method code get value code in
this method returns the string representation of this
this method returns the string representation of this code attr code
this method determines equality for domitems
this method returns the string representation of this
this function delegates to the native method code split text code in
this function delegates to the native method code append child code in
this function delegates to the native method code clone node code in
this function delegates to the native method code get target code in
gets the key associated with the cell
this method gets the code of this code domexception code
this function delegates to the native method code set data code in
this function delegates to the native method code get namespace uri code
computes the key to lookup the widget
this function delegates to the native method code get prefix code in
this function delegates to the native method code has attributes code
this function delegates to the native method code has child nodes code
gets the widget associated with the element
this function delegates to the native method code insert before code in
this function delegates to the native method code normalize code in
this function delegates to the native method code remove child code in
this function delegates to the native method code replace child code in
removes the given widget from a cell
this function delegates to the native method code set node value code in
bounds checks that the cell exists at the specified location
checks that the row is within the correct bounds
creates a new cell
gets the tables tbody element
directly ask the underlying dom what the row count is
inserts a new cell into the specified row
inserts a number of cells before the specified cell
inserts a new row into the table
does actual clearing used by clear cell and clean cell
removes the specified cell from the table
removes the specified row from the table
sets the tables cell formatter
sets the tables row formatter
returns the lni url for a known handle
type coercing accessor
zip a directory
effectively validates on any operation where cml is not supplied
extracts the in ch i from a cml file and encodes in rdf
base literals dont have an xsi type
accessor for the metadata package uri
returns the results of any validation performed
accessor for the conversion processing instruction flag
accessor for the metadata extraction processing instruction flag
accessor for the metadata extraction processing instruction flag
accessor for the converted cml
returns the cml mime type
accessor for the extracted metadata
returns the same filename
accessor for the metadata package uri
accessor for conversion processing instruction flag
accessor for conversion processing instruction flag
zip a directory
utility method to extract single values for a given xpath
if the add more chemist link has been clicked stop the submission
upload metadata check finished
writes any unwritten metadata for this package into the package manifest
this required to make sure custom validation gets performed as well as
the metadata page to use is configured into spring via the profile
this component has no reason to block submission
copy the properties of p onto this object
need to make concrete classes because serialization of mocks is too brain
hack required because file uris seem to come out with either one or
end of this page of results 1 indexed self correcting in case of
creates a file handle for an archive file of the identified package
must be called after set results
must be called after set results
make the index collect data from all sources synchronously right now
oai identifiers from dspace oai feed are of format
convenience method to get localized messages in code
returns the string representation of this uuid
private constructor singleton class
calculates the embargo start date and period
not expecting much useful here
maps the peak list
reads the content of file filename into a string
simple implementation steps are currently independent
checks that all variables required are not null
load the specified configuration
process the current configuration
checks that all variables required are not null
checks that all variables required are not null
checks that all variables required are not null
checks that all variables required are not null
checks that all variables required are not null
load the specified configuration
checks that all variables required are not null
checks that all variables required are not null
checks that all variables required are not null
checks that all variables required are not null
write int byte to output stream
write string s to output stream
checks that all variables required are not null
invoked when the components size changes
not supported any more
returns a valid mpeg7 document as string
whether the given file is accepted by this filter
the description of this filter
whether the given file is accepted by this filter
the description of this filter
returns the filled in description
returns string representation of the content
tests if the specified code point2 d code is inside the boundary
tests if the specified code rectangle2 d code
get all persistent dato of this class
tests if the specified coordinates are inside the boundary of
set all persistent data of this class
tests if the specified rectangular area is inside the boundary of
return the bounding box of the path
returns the bounding box of the path
returns a code path iterator code object that iterates along the
returns a code path iterator code object that iterates along the
tests if the interior of this code shape code intersects the
tests if the interior of this code shape code intersects the
ensure the data is not null
if false the entry delete is disabled in the popupmenu
shows basic help for using this panel
set as new entry for a textfield
set as new entry for a textfield
set as new entry for pull down box
returns true if the input string is yes or true
now we have an new document
a dot has changed now a shape resize is necessary
returns the number of ilines in the drawpanel
return the path where the description data begins
use this for set box
use this for set shape
return a list of point
return the path where the description data begins
return a spatial decomostion if available
to paint use the methods draw mouse over draw selected draw component
return the path where the description data begins
return the element that can be added to the root tag mpeg7
invoked by swing to draw components
derived classes can override this to extract data specific to their content type
walks though the child specified in loacation1 and returns the text
converts rectangle to x y width heigh
converts a color to a mpeg7 rgb color string value
set a mouselistenr for mouse events on the icomponents
convert 100 12 0 0 to point 100 12 point 0 0
converts 1 2 3 4 to point 1 2 point 3 4
returns the document containing the shape descriptors or the
return the path where the description data begins
return the element that can be added to the root tag mpeg7
this will be removed somethimes
return the element that can be added to the root tag mpeg7
repaints this component
title of the content
return the path where the description data begins
return the path where the description data begins
return the element that can be added to the root tag mpeg7
add a component to the object list for the drawing panel
title of the content
start with the root tag
get a keyframe from results from the mmdb
walks though the child specified in location1 and returns the text
content file size in byte
walks though the child specified in loacation1 and returns the text
tests if a specified file should be included in a file list
check one single filename like document
tests whether or not the specified abstract pathname should be
walks though the child specified in loacation1 and returns the text
creation date of the content file
same as apove just without comments
creation date of the content file
locate element with use of namespace
simple attribute setting without all the namespace stuff
set a dom attribute with a processing instruction
summary about the content of the media file
summary about the content of the media file
make your own xpath query
converts a color to a mpeg7 rgb color string value
where the description has been created
if true the panel is used to draw multimedia objects and operator
convert 100 12 0 0 to point 100 12 point 0 0
where the description has been created
if true the panel is used to draw mulmiedia objects and operator
set a prived identifier to identify this record
use for serialization
get the prived identifier to identify this record
extract the shape from an image with white background and black shape
extract the descrptor data
who has created this description
add a component to the menuebar without actionlistener and menuentry
summary describing the description purpose and context
summary describing the description purpose and context
meaningful title descripting this desctipion and the content
meaningful title descripting this desctipion and the content
name of the tool softwareaplication used for createing the desctiption
name of the tool softwareaplication used for createing the desctiption
get the framerate of the timepoint
get number of 1 10 seconds for a graphical repr sentation
get the position as number of frames
adds a graph to the corpus for calculation of idf
same as ask string message except adds cancel
calculates and returns the distance between two objects
allows the distance calculations based on visual descriptors
returns all phrases of alle base clusters
returns the phrase with the maximum score
using this method you can boost the ranking of the final clusters
adds a base cluster to the final cluster without checking similarity constraints
for implementing interface comparable
calculates and returns the distance between two objects
calculates the similarity between objects using the similarity function or the stored values
calculates the distance between objects using the distance function for k 0
calculates the similarity between objects using the similarity function for k 0
used for the heuristic for getting the pivots as described in the paper
calculates the distance between objects using the distance function for k 0
this method updates an existing similarity
checks wether a node can be a base cluster
returns the index of the col with minimum similarity to the given row
boolean distance function 1 in case of not equal 0 in case of
calculates and returns the distance between two objects
for debugging lists
returns the maximum distance for this function
calculates the distance between objects using the distance function for k 0
used for the heuristic for getting the pivots as described in the paper
makes base clusters comparable
calculates and returns the distance between two objects
returns the score of the base cluster without multiplication with document count
returns movement of the last step used to check if
adds a document with given id
this parameter makes cluster separation more significant
constant gravitation of points should be related somehow
constant gravitation of points should be related somehow
parameter prevents points from comint too close to each other
tunes the atraction of points the higher this value the
use this method to train a suffix tree for a corpus
normalizes the matrix for all values to 0 1
allows to use the very same suffix tree for another similarity
invoked when an action occurs
invoked when an action occurs
creates and returns a newly created similarity matrix from the given
invoked when an action occurs
normalizes the matrix for all values to 0 1
creates the mpeg 7 descriptor from the annotation
returns the number of children of i parent i
returns whether the specified node is a leaf node
copies the contents from the structured text fields to the
returns the index of child in parent
tells how leaf nodes are determined
sets the root file of the tree
returns the full mpeg 7 description
tests whether or not the specified abstract pathname should be
returns the full size image which is currently previewed
is called when a file is explicitely openend meanwhile not used
allows the iterative loading of image files
set a new image to edit
invoked when a mouse button is pressed on a component and then
invoked when the mouse cursor has been moved onto a component
invoked when the mouse button has been clicked pressed
invoked when a mouse button has been pressed on a component
invoked when a mouse button has been released on a component
gets path to mpeg 7 file
summary of result
creates and returns a parameters object for fdp algorithm
return the token stream
use when embedder is stoppeg eg
creates a string representation from a graph
returns true if the graph contains the same relations and nodes
invoked when a mouse button has been pressed on a component
checks if o is the same node as this object
compares this object with the specified object for order
invoked when a mouse button has been released on a component
eliminates an inverse relation as there is an inverse
inverts the current relation
calculates the maximum common subgraph metric the maximum common
invoked when the mouse wheel is rotated
init used by all constructors
added by mathias lux just an l1 distance function
invoked when a mouse button is pressed on a component and then
euclidean distance between the colors
normalize the percentage as in mpeg 7 part 8 is recommended for
makes some initial operations and calls the main extracting method
makes some initial operations and calls the main extracting method
invoked when an action occurs
initial values c1 2
compares one descriptor to another
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
creates a string representation from the descriptor
sets the descriptor value from a string
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
invoked when the mouse button has been clicked pressed
invoked when a mouse button has been pressed on a component
invoked when a mouse button has been released on a component
invoked when the mouse enters a component
invoked when the mouse exits a component
sets up the fixture for example open a network connection
when an object implementing interface code runnable code is used
loads an image as buffered image
gets the current impact
sets the impact value
adds a strategy to the weighting strategy collection
removes the strategy from the weighting strategies
adds an engine observer to this engine instance
removes an engine observer from this engine instance
resets the usage counter to its initial state
evaluates all weighting strategies for the
gets the weighted relevancy for the specified
resets all strategies state data to their initial
compares one descriptor to another
main similarity method called for each and every document in the index
allows the distance calculations based on visual descriptors
calculates the distance between objects using the distance function for k 0
provides basic search functions
normalizes the matrix for all values to 0 1
comparator for making features sortable
apply a model to the point
less than operater to make the models comparable returns false for error 0
returns the size in bytes of a feature object
build only the gaussian image with 2 initial sigma
clear the scale octave to save memory
reads descriptor from a byte array
get l1 distance between two pixel arrays
visualizes the attention model in a picture
find the appropriate cluster for a given feature
pop the next pixel of the smallest level
reads descriptor from a byte array
my history implementation
set pixel accessible and give back if this was possible
calc wer of a complex number
set the next edge
helper method to prepare the member fields before calculating the msers
explore the next edge of the pixel
explore the next edge of the pixel
extracts the color histogram from the given image
compares one descriptor to another
computes the mean per cluster averaged vector
reads descriptor from a byte array
do one step and return the overall stress squared error
re shuffle all features
computes the mean per cluster averaged vector
squared error in classification
compares one descriptor to another
test serialization of clusters
creates an index with an extensive list of global features
generate a data object with the supplied options
assemble 1st 2nd level options into a single options list
this method initializes this
insert arbitrary staus text
sets the options
set status text to complete message
set status text to complete with error message
add a single option
this method initializes j button
add a single sub option
this method initializes program dialog
this method initializes j button1
this method initializes program content pane
this method initializes j tree
this method initializes clear button
this method initializes j button
redisplays j tree to reflect any changes made to the underlying data object
returns the option possibly modified
return all current names values of options
this method initializes main pane
this method initializes j button1
returns the command line as it should be run
this method initializes option panel
this method initializes this
displays an option in the mainpanel
this method initializes j button
this method initializes program info label
this method initializes j content pane
update the document object when an option is modified
this method initializes program info label
this method initializes j button
update the document object when an option is modified
this method initializes j button
load settings spawn actual window
show the option being selected
this method initializes the back button not yet used
this method initializes this
this method initializes clear button
this method initializes j editor pane
this method initializes j button
this method initializes about dialog
this method initializes j button1
this method initializes about content pane
this method initializes the tool bar
this method initializes j button1
this method initializes about version label
this method initializes about version label
this method initializes j scroll pane2
this method initializes j editor pane
this method initializes j button
show info pane for a particular option
runs the program using all options
this method initializes info pane
show all the options in the tree
get the long information on an option
hide all the options in the tree
close gui and restart from scratch reset
find an option object from data based on the option flag
set the long information on an option
for stopping the thread
return the data object
validate xml document options section basic checking
validate xml document program section basic checking
set an option value right after object creation
this method initializes the wizard button
set the option value for choice type option only
get the option subset xml equivalent is the value of lt subset gt
set the option subset xml equivalent is the value of lt subset gt
this method initializes console panel
this method initializes j scroll pane
return true false
this method initializes console pane
set the parent data object
this method initializes j scroll pane1
see if there is one or more child options
get the child option
this method initializes error pane
set the child option
get the option linking character string
set the option linking character string
this method initializes j button1
set the run button back to run mode
this method initializes j button3
this method initializes j frame
this method initializes j jmenu bar
this method initializes j menu
this method initializes j menu
show binarychooser dialog
spawn a binary chooser
this method initializes j menu
this method initializes j menu item
this method initializes j menu item
change the color of the named tab to red
change the color of the named tab to black
start the hosted program
close this gui instance
this method initializes this
this method initializes j content pane
this method initializes j panel cpd
this method initializes j panel fondo
this method initializes j button aceptar
this method initializes j button cancelar
this method initializes this
this method initializes j content pane
this method initializes this
this method initializes j content pane
this method initializes j scroll pane disponibles
this method initializes j panel botones
this method initializes j button aceptar
this method initializes j button cancelar
this method initializes this
this method initializes j button buscar
this method initializes this
this method initializes j content pane
this method initializes j button aceptar
this method initializes j scroll pane resultado
this method initializes j button cancelar
this method initializes j label id
this method initializes j text field id
this method initializes j label clave
this method initializes j password field clave
this method initializes this
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes j panel comitente
this method initializes j panel fondo
this method initializes this
this method initializes j content pane
this method initializes j panel botones
this method initializes j panel botones
this method initializes j button aceptar
this method initializes j scroll pane ordenes
this method initializes j scroll pane cpd
this method initializes j button cancelar
this method initializes j panel boton menu
this method initializes j jtool bar bar
this method initializes this
this method initializes j button nuevo
this method initializes j button graba
this method initializes j button buscar
this method initializes j button exit
this method initializes this
this method initializes this
this method initializes this
this method initializes j button ordenes
this method initializes j text field comitente
this method initializes j text field id comitente
this method initializes j button buscar
this method initializes this
this method initializes j content pane
this method initializes j panel resultado
this method initializes j panel botones
this method initializes j button aceptar
this method initializes this
this method initializes j button cancelar
this method initializes j jmenu bar
this method initializes j content pane
this method initializes j menu archivo
this method initializes j check box denominacion
this method initializes j menu operatoria
this method initializes j menu listados
this method initializes j menu ayuda
this method initializes j menu item salida
this method initializes j panel botones
this method initializes j menu item back up
this method initializes j check box documento
this method initializes j menu item importar
this method initializes j menu item exportar
agrega un cpd a la base de datos
obtiene un cpd en base a un id
this method initializes j menu item banco
this method initializes j menu item provincia
this method initializes j button buscar
this method initializes j menu item sgr
agrega un comitente a la base de datos
obtiene un comitente en base a un id
this method initializes j menu item cargo
this method initializes j menu item tipo liquidacion
this method initializes j button agregar
this method initializes j menu item orden compra
this method initializes j menu item orden venta
this method initializes j menu item plaza
this method initializes j button modificar
this method initializes j scroll pane seleccionados
this method initializes j menu item activar orden
this method initializes j menu item activar orden
this method initializes j menu item segmento
this method initializes this
this method initializes j button eliminar
this method initializes j jtool bar bar
this method initializes j button nuevo
this method initializes j button graba
this method initializes j button buscar
this method initializes j button delete
this method initializes j button update
this method initializes j button aceptar
this method initializes j text field cantidad
this method initializes j button cancelar
this method initializes j text field total
this method initializes this
this method initializes this
this method initializes this
this method initializes j text field id
this method initializes j button ok
this method initializes j button cancel
this method initializes this
this method initializes this
this method initializes this
feeds an arry of input values to the neurons in the layer
at startup create and show the main frame of the application
load the xml configuration file
start containers defined in xml file
register a factory for later use
instantiate register services defined
to be used in unique resource
bind an rmi service instance to rmi registry
retrieve a message in a properties file according to
load a resource bundle from disk
custom component registration
recursively check in a class implements a given interface
add an instance of component factory i to this container
retrieve a list of registered components for the given key
retrieve a list of all registered components
gives back a component when you stop using it
this should called from your implementation before the event will send
this should called from your implementation until the event has an error
this should called from your implementation before the processing ends
this should called from your implementation before the processing starts
this should called from your implementation before the processing has a
stops the current req res processing until a message will send to the
adds a member to a list of channels
removes a member from the handler
updates the time we display in the text views
returns the bundle name for this open cms package
returns the color
parse the size of the video from the string videoformat
returns the configuration string
returns the crop height
returns the crop left
returns the needed info for communicating back
returns the crop options
returns the album path
returns the crop top
returns the number of resources in this album
returns the crop width
returns the down scale param
returns the filter
returns the number of items per page to be used
returns the frame
returns the height
returns the current albums xml content
returns the image
returns the image path
returns the xml string value for the given path
returns the ori height
checks if the given image need to be down scaled
returns the ori width
checks if we need pagination
returns the quality
returns the render mode
returns the image scaler
returns the show title
returns the needed info for initializing the js image tool
returns the thumbnail resource
saves the modified xml content to vfs
returns the thumbnail path
returns the thumb param
returns the width
returns the zoom level
sets a new size for this thumbnail
tests if the given floats are equals with respect to the given threshold
returns the thumbnail information from the xml content value
sets the zoom with 2 decimal positions
overwrite run bare so it can behave differenctly on client and server side
get a reference to the test ejb local interface br
test that call the test ejb using its local interface and fail
set the test as succeded
a test that cant fail
a test that cant fail using helper classe
test that call the test ejb using its local interface
test that call the test ejb using its local interface
just to show test helper classes support
a very dummy test sum of 2 int
test that call that use an inner class
a test that return a message as string
play the test case
play a test case using a junit
play a test case using a junit
play a test case using a junit
adds a new term to the term list for this document
clears the term list for a new document
sets the category of the document
finds out wether a document is categorized in a particular category
creates a string representation for debugging purposes
test for void customizable stop word provider string
p implementation of
returns when the resource was last modified
p adds the result of super
p append a code hash code code for a code long code
p append a code hash code code for an code int code
p append a code hash code code for a code short code
p append a code hash code code for a code char code
p append a code hash code code for a code byte code
p appends to the code builder code the comparison of
p append a code hash code code for a code float code
p appends to the code builder code the comparison of
p append a code hash code code for a code boolean code
p append a code hash code code for an code object code array
p append a code hash code code for a code long code array
p append a code hash code code for an code int code array
p append a code hash code code for a code short code array
p append a code hash code code for a code char code array
p append a code hash code code for a code byte code array
p append a code hash code code for a code double code array
p append a code hash code code for a code float code array
p append a code hash code code for a code boolean code array
p return the computed code hash code code
allows transformations to be done to word
replaces entity references with spaces
p append a code hash code code for a code double code
a convenience method for
a convenience method for
returns a div element of class recipe and everything about the recipe
checks the password supplied against that stored for a user
returns a div element of class recipe containting everything about the recipe
testing and db generation
if locked none of the modifying operations will redraw the control
currently only height is calculated
adds the listener to the collection of listeners who will be notified
adds the listener to the collection of listeners who will be notified
sets the selection in the receivers text field to an empty selection
deselects the item at the given zero relative index in the receivers
deselects all selected items in the receivers list
gets the editable state
returns the number of items contained in the receivers list
returns the height of the area which would be used to display
returns a code point code whose x coordinate is the start of the
returns the zero relative index of the item which is currently selected
returns a string containing a copy of the contents of the receivers text
returns the height of the receiverss text field
returns the maximum number of characters that the receivers text field
removes the item from the receivers list at the given zero relative
removes the items from the receivers list which are between the given
searches the receivers list starting at the first item until an item is
removes all of the items from the receivers list and clear the contents
selects the item at the given zero relative index in the receivers list
sets the editable state
sets the receivers list to be the given array of items
sets the selection in the receivers text field to the range specified by
sets the contents of the receivers text field to the given string
sets the maximum number of characters that the receivers
sets the number of items that are visible in the drop
currently only height is calculated
this method initializes grp text decorator
this method initializes cmp filler1
this method initializes grp example
this method initializes cb idtop left
this method initializes cb idtop right
this method initializes cb idbottom left
this method initializes cb idbottom right
this method initializes cmp example
this method initializes cb task tag
provider to which this tag task belongs
task which triggers decoration
returns providers facade isolates clients from working with list of providers
provider to which this tag task belongs
this method initializes this
this method initializes sash form
this method initializes cmp navigator root
this method initializes cmp editor root
this method initializes grp example
this method initializes cmp filler2
this method initializes cmp filler1
returns the xml schema for a index structur
returns the xml schema for a package structur
returns the sql statement to create the object structur
returns the xml schema for a packagebody structur
returns the xml schema for a view structur
returns the xml schema for a type structur
returns the xml schema for a procedure structur
returns the xml schema for a tablespace structur
returns the xml schema for a sequence structur
returns the xml schema for a schema structur
returns the xml schema for a datafile structur
returns the sql statement to create the object structur
returns a list of database tables
returns the xml schema for a constraint structur
returns the xml schema for a database structur
returns a list of constraints names
returns the database name
returns a list of schema names
returns the database type
returns a list of database tables
returns the database type
returns the table column data values
returns the table column meta data names
returns the table column meta data values
returns the database type
rename an existing table
returns the sql statement to create the object structur
returns a list of constraints names
returns the table column data values
returns the xml schema for a function structur
insert values into table
returns the sql statement to create the object structur
sets attribute name which value will be compared
sets attribute names which values will be compared
compares two objects for order
retrives a value of an attribute
drop a table
set precision of type
set scale of type
create a table
set type of field
count all child
creates new db object
this is the entry point method
shows the respective svar model panel
initialize and show plot configuration
sets this dialog to a slightly simple version not displaying all
returns the error code in hexadecimal notation
resets the card reader
returns a list with card specific information
returns a list with card specific information
sets the leds status
selects a specific terminal from the terminal list or to activate the
returns a list of all terminals connected to the scard server
returns the state of the currently active reader
process bring to front
prepare hotkey mask
register hotkey with user notification
unregister hotkey with user notification
gets the image
change suggestion dialog visibility
sets the widget factory
sets the keyboard layout manager
sets the translation manager
show about dialog
sets the resource manager
sets the window manager
sets the application properties manager
transform xml to object
extracts element at current take position advances and signals
notify hotkey change listners
inserts the specified element at the tail of this queue waiting for
inserts the specified element at the tail of this queue waiting up to
atomically removes all of the elements from this queue
a convenience method that calls start waits timeout milliseconds and then calls stop
sends the discovery message via broadcast and starts the waiting for answers
stops waiting for answers and processes the already received answers
helper function creates root node
helper function to insert theme into image path
helper function to insert theme into image path
handles list of open node s
handles list of selected node s
this method of the interface takes an event
reset all proxy settings and use jvm or system settings
puts the appopriate value into the jdni environment
provides access to the jdni environment hashtable
the name of this role which is used as a domain key
the name of this group which is used as a domain key
tests for equality
tests for equality
tests for equality
encodes a string into a md5 hash
closes the jdbc connection being used
the class name of the jdbc driver to use
disconnect all domains allowing any
setter for property jdbc config
utility method to better encapsulate close logic error handeling
used to attempt to locate a user within this domain
utility method to better encapsulate close logic error handeling
method called before each testcase
method called after each testcase br
is this resource secured by urisecurity constraints so that
uses authenticator to send a login challenge to the client
utility method to better encapsulate close logic error handeling
is this urisecurity constraint applicable to the
sets a session variable with number of login attempts made
can the user of the specified request access the protected resource
is the user authorized to access the uri pointed to by this request
is the http method allowed to access the resource
is the http method allowed to access the resource
match the uri with the regex patterns
checks for the existance of a valid user principal object in the
retrieve the request uri without the leading string containing the context path
add the specified regular expression to match against uris
if the current servlet reuqest is already an instance of a
setter for property method to check
add a http method to the list of methods
setter for property password varname
setter for property url to check
setter for property token varname
setter for property username varname
destroy method for this filter
used to check access to a theoretical uri
allows clean reuse if servlet container supports it
setter for property login page
setter for property login error page
uses a request dispatcher to forward the user to a preconfigured login page
does the user principal have the correct username group or role
setter for property client digest
getter for property max login attempts
setter for property max login attempts
setter for property c nonce
setter for property realm name
todo implement this using the jakarta commons bean utils
disconnect all domains allowing any
does this credentials object match the username password
setter for property nc
setter for property default domain
does this credentials object match the username and hashed password
setter for property nonce
used via digest driver to set the constraints for uri access
sets the domain manager object which is responsible for
convience method to return development information
returns the name of the domain manager
does this credentials object match the username password
does this credentials object match the username and hashed password
calculates the server side portion of the digest
parses the client authentication header and puts relevant information
calculates the server side portion of the digest
lookup if found instantiate and return user principal object
setter for property match on
is the user a member of this domain
checks the user to see if the user matches the username criteria
checks the user to see if the user matches the domain name criteria
is the user a member of the specified group and in this domain
adds a constraint matcher to be used in verifying user names
adds a constraint matcher to be used in verifying domain names
adds a constraint matcher to be used in verifying role names
adds a constraint matcher to be used in verifying group names
convience method for adding a new constraint matcher to be matched against
note roles have little context outside of groups
note roles have little context outside of groups
setter for property jdbc config
setter for property user password col
setter for property join table
setter for property user username col
setter for property join user col
setter for property group table
setter for property role table
setter for property user table
setter for property join group col
setter for property group name col
setter for property join role col
setter for property role name col
output get detail table method
output get detail table method
method to find the sample attribute for the method invocation
method to find the
calculates a series total
called once by the creating tag
hack ar 2004
set the endpoint address for the specified port name
returns the current capacity of the buffer
appends code s code to the end of this char buffer
appends code sb code to the end of this char buffer
appends code data code to the end of this char buffer
appends a single character to the end of this char buffer
shrinks the capacity of the buffer to the current length if necessary
converts the contents of the buffer into a string buffer
converts the contents of the buffer into a string buffer
reads the next char from the input stream
returns the last read character again
reads all characters up to but not including the given character
skips char in the stream
returns the current line number in the input stream
skips all chars in the input until but excluding the given char
returns the next char in the stream without consuming it
returns the nof line read
decodes unicode escapes
sets the specified csv strategy
obtain the specified parser strategy
returns a short description of the servlet
greedy accepts n and r n
creates the navigator component
this item has been moved from one category to another
adds an item and sorts the list
factory method that allows derived classes to install their own handlers
factory method that allows derived classes to install their own handlers
calls hierarchy navigator
returns the items
factory method that allows derived classes to install their own handlers
returns the visible
returns the hier extension
sets the visible
returns the hierarchy item click handler
sets the dirty to true
simulates an item click for the hierarchy
returns the member extension
called when the user clicks on this item
removes the deleted items from the model
executes mdx and throws an error if something goes wrong
returns the axis selection
returns the slicer selection
sets the axis selection
sets the slicer selection
returns the olap model
returns the axis selection dirty
returns the slicer selection dirty
returns the slicer extension
sets the axis selection dirty
sets the slicer selection dirty
enforce limits of 0 255 for rgb values
validates the selection
removes deleted members from the selections
the collection of members that shall be deleted from the query
sets the hierarchy item click handler
the collection of members that shall be deleted from the query
returns a drill through table model for the drill through
finds the hierarchy item for code hier code
key title measures by dimension name
key title measures by dimension name
returns the set of dimensions that are currently on the
called after parsing column header of the drillthrough soap result
called after parsing each row data of the drillthrough soap result
called before parsing starts
called after parse is done
returns the n hier
returns the all member
returns the all member
returns the default member
returns the dim type
returns the dim unique name
returns the dim unique settings
returns the is dim shared
returns the is dim visible
returns the is read write
returns the is virtual
sets the all member
sets the mdx query
returns the caption as label
sets the default member
sets the dim type
get the mdx for the user to edit
sets the dim unique settings
returns the children cardinality
sets the is dim shared
sets the is dim visible
sets the members
returns the is data member
sets the axis ordinal
returns the axis ordinal
sets the is read write
sets the is virtual
set the mdx entered by the user
returns the is place holder member
sets the ordinal
sets the structure
add level for this hierarchy
returns the parent level
find out whether a member can be expanded
returns the is members gotten
lookup member by unique name
sets the is members gotten
first check whether the member is really drillable
returns the parent unique name
expand a member in a specific position
set the level
drill down is possible if code member code has children
get level number depth of member
swap axes in parsed query
handle hierarchy info tag
returns the unique name of hierarchy
sets the visible properties
return list of members trivial for xmla
handle celldata start of cell loop
get dimension of member
returns true if one of the members is a measure
sets the parent
get hierarchy of member
returns the is calculated
returns the unique settings
set paren and child level
sets the default hier
add hierarchy for this dimension
add a property
retrieve a property
label is the string to be externally displayed
any olap item contains a map of properties
wcf table component calls this method from its constructor
does a drill through retrieves data that makes up the selected cell
returns the custom rollup settings
find out whether a member is in the formulas
returns the hier unique name
returns the key sql column name
returns the name sql column name
create children fun call
returns the ordering property
returns the unique name sql column name
return a members dimension
sets the custom rollup settings
sets the db type
sets the hier
sets the key sql column name
return a fun calls argument of given index
sets the name sql column name
sets the ordering property
returns the child level
implementation of generate url that integrates with jpivot wcf framework
returns the parent level
sets the child level
sets the parent level
returns the p query
returns the query adapter
gets the default dashboard of the project
sets default dashboar for the project
return member for exp object
display member array for debugging purposes
generate an object for a list of members
create fun call
check an expression whether we can handle it expand collapse
returns datasource object from datasource name
returns datasource object from datasource name
sets first name of te user
event for rebuilding the tree table list after
traverses all its child nodes recursively
returns jdbc connection properties of specified analysis
returns jdbc connection properties
deletes user roles from table user roles
sets the parameters to the xml document
checks the particular user already exists or not
returns jdbc datasource
returns feeds datasource object
generates the context url stylesheet parameter
returns feeds datasource map
set provider from result of discover ds
return cloned object instance of simple pojo object
delete the selected datasource object
removes the selected dashboard item from the dashboard and
exports report to output stream in specified type
returns user specific localized string of specified resource id
returns user specific localized string of specified resource id
returns user specific localized string of specified resource id
event is fired when dashboard list is changed
converts given path to the project relative path
true if the current request was redirected to the index page
return temp jasper location to compile jrxml
returns rdbms report datasource mapped for given path
deletes the selected datasource using the
method to render the customize tab or not
check if the dashboard already has the selected analysis
adds the analysis to the active dashboard
remove the selected analysis from the active dashboard
calculate avg distance between pair of points in cluster
get the threshold distance value
set the threshold value
get number of clusters
set the number of clusters
get the level of the policy
set the level of the policy
check if the code contained in the source if security
run a class for a specific user
give the input to a program of specific use
get the output from a program of specific use
initialized on first call or this may do by hibernate
used to identify the name of the file or folder
initialize the jwnl api
puts a document to the directory
sets the specified context as the local context of this object
removes a element from the definitions and also from the directory
sampling uniformity is the sample rate consistent with no dropped
returns an element stored in the directory
sampling uniformity is the sample rate consistent with no dropped
adds a element to the definitions
returns the context global or local which is applicable to this object
create a unique id unique for this document with the specified prefix
returns the distance between p and the nearest point in this trace
sets the view tree parent to this view
sets the name
calculates the distance between the represented traces and the point p
returns true if the is a maximum value specified
calculates the center of gravity of the traces represented by this point
returns true if there is a minimum value specified
return parent of this element in the trace view tree
compairs position within the chronological order of the traces
returns a list of the names of all annotations possible in this item
returns the root of the trace view tree
returns the annotations specified by the name s
compares two tree events and returns 0 if the have
you can set the orientation
return the value of an xml attribute as string
sets the unit used to measure the values of this channel
returns the value as double which is specified as string
returns the ink source which is given by this context
true if this channel is an intermittent channel
returns true if the brush has erasing functionality
test if this brush has a color specified
returns the string representation of the color of this
specify that this channel is an intermittent channel
returns the center of gravity of all points
returns the icon of the item specified
returns the prefix for ids
returns the icon of the ink anno element specified
returns the brush responsible to draw this trace
returns the context which is currently active
sets this channel final
sets a context active
gets the current brush
returns the format which was used to read this trace from the archive
returns the definitions object of this document
return the format which is used to access the trace points
adds a new trace to this document
returns the format which is used to access the trace points
uri of a page providing detailed or additional specifications
uri of a page providing detailed or additional specifications
returns the bounding box of the document taking every trace into account
test if the
returns the key of this element
returns the timspan this document is covering
set the to property
set the from property
returns the index of the specified channel to access to data
adds a trace view element to this trace view container
sets the unique document id of this document
turns the specified datapoint into the object which it acctualy represent
creates a child container of this object which will contain all view
returns the id generated from
removes this view and all its children from the view tree
change the x coordinate to x
change the y coordinate to y
turns the object into a double according to the channel specified by name
removes this view from the view tree
angle between two vectors the value is between pi and pi
calculates the distance between two segments
completely removes this view and all its children from the view tree
sets this trace trace format final
returns the number of elements contained by this object
returns the config class which is populated with the command line options
starts the funktionality of this class
method called to reload the backup
adds all elements of the array to the end of the list
return index of maximal value of list
return maximal value of list
return index of maximal value of list
return maximal value of list
returns the sum of all values
returns the mean of all values in the list
this method initializes this
this method initializes j list
return true if no ink trace view is contained
warns the user using the message sinks
retransforms the points from the source
transforms the source points to the target points with the
returns the index of the point within this trace
sets the value of the channel name to the current point
proceed to the next point
accepts an anonymous class implementing a
set the player whos turn it is to make a move
advance to the next player
get the piece located at the specified coordinates
checks whether or not the specified location has a living piece in it
get the height and width of the board
get the players color
this method checks if values have been changed or not
closes the dialog
returns a string representation of this code line layout code object
closes the dialog
compares this and o
compares this and d
this method initializes filter combo
calls update headers
returns the pgpprovider impl
sets the pgpprovider impl
returns the content type given in the constructor
encrypts a mime body part
checks the signature on a mime part
checks the signature on a body part
returns the encryption utils that created this key
returns the type s mime pgp of this key
returns a key store provider
returns the display information for this key
returns a key store provider
returns a key store provider
returns the encryption status of this mime message
returns the test manager for this class
sets up this test
returns the string representation for this test case
this method must be called if not the first message will be generated
returns the public key alias to be used in this test
returns the encryption key store that were using
sets up this test
creates the keystores
gets the x509 certificate for this key
sets the x509 certificate for this key
sets the certificate chain for this key
gets the private key for this key
returns the string representation for this test case
sets the private key for this key
returns the public key alias to be used in this test
returns the private key alias to be used in this test
returns the encryption utils that created this key
sets up this test
returns the type s mime pgp of this key
returns the display information for this key
sets the display information for this key
returns a key store provider
returns a key store provider
checks the signature on a message
returns the key bundle associated with this encryption key
returns the passphrase for the key bundle
returns the encryption utils that created this key
returns the display information for this key
returns the public key alias to be used in this test
returns the private key alias to be used in this test
sets up this test
creates an empty encryption key manager thats appropriate for this
creates and loads an encryption key manager thats appropriate for this
returns the actual alias
returns a string representation of this alias
rounds off a number for const
calculates the percentage of requests that were answerd in accordance
calculates the percentage of requests that were answerd in accordance
insert a new parameter into the database
delete a detached parameter from the database
updates the state of a detached parameter
insert a new org into the database
delete a detached org from the database
updates the state of a detached org
insert a new parameter into the database
delete a detached parameter from the database
updates the state of a detached parameter
insert a new parameter into the database
delete a detached parameter from the database
updates the state of a detached parameter
return if this controller is controlled by a human or ai
return if this controller is controlled by a human or ai
set the pawn being controlled
get the pawn being controlled
return the requested direction
request a move change
starts the gameloop
restart the pawn in its orignal state
the main loop
remove the element from the game on a reset
return true if the pawn is human controlled
add a tickable element to the list
return the x cell coordinate
register the bonus view
remove a tickable element
return the y cell coordinate
add a new game elements
return the collision radius
remove an element from the game
return true when the maze has been cleared from pills
set the bonus type for the given level
set the current controller
return all registered game elements
return the image to use for the bonus
ponder about what to do
add a new human player
return the image to use for the pacman in its current state
remove a human player
return the image to use for the pacman in its current state
load all the images
return a human controller
return true if the ai is smart chases pacman
return the number of players
called when the pawn hits a wall
fetch a cached result returns null when no cache entry was available
dirty hack to filter duplicate enter cell events caused by left and up
clear the cache for the target object
called when a new cell is completely entered
sets the number of ghosts for the next game played
return a player start point
start a new game
return a ghost foe starting point
touching this game element
print a reporting line
set the pawns speed
print a reporting line using a string
return the x offset within the current cell
create the used view classes
return the y offset within the current ceel
register a view for a class
unregister a view
get the view instance to render the given game elements
the endline method for the inputfilters
the endline method for the outputfilters
configures the given shell in preparation for opening this window in it
start thread and fetch data from the stream
add a resource with a key
fetch a resource with a key
gets the name of the action
sets the name of this action
performs the check
performs the checks sends the check to both input and outputfilters
run methods called by master
standard entry calls perform check and checks on a fatal error
checks wheter a condtionname exists in the parent filtermodule
reads a serialized object from the given file
returns an iterator that contains links to all the objects
adds an object to the data store given the object
removes an object given the id
removes an object given the id
adds the result of a comparison to the map
check whether an object has been compared before
checks if the given object is contained in the datastore
returns the object given the id
adds filteraction to the map
adds a conflct pattern to the specified resource
returns the conflict definition of the specified resource
sets the behavior that triggered is action an accept or a reject
gets the type of action
returns all types declared in a source
get a superimposed condition through its name
get a superimposed method through its name
get a superimposed filter module through its name
this interprets the selectors and attaches a list with concern references that
get a vector with all the alternative superimpositions of filtermodules
get a vector with all the alternative superimpositions of methods perhaps just
get a vector with all the alternative superimpositions of conditions perhaps
method name set
this list contains the concern designated by the classname concernname only
this list contains the concern designated by the classname concernname and
sel expression list
helper method move selector between lists
interprets the selector definition and attaches a vector of concern references
raise exception should not be invoked on this element
raise exception should not be invoked on this element
should be a reference
raise exception should not be invoked on this element
raise exception should not be invoked on this element
inclusion or exclusion
returns true if concern is possible declared in a sourcefile
returns true if concern is possible declared in one of the source files
sets the line this token is found at
sets the position in the line this token is found
gets the position in a line that is this token is found at
does the actual resolving
tries to resolve all concern references
function called by master
tries to resolve all labeled concern references
tries to resolve all filter module references
compares the sigantures methods of two methods to see if they match
consumes a character from the input
going to a new line so increase the column count
make a new special token containing positioning information
needed for char scanner
add a new type to the map
retrieve a type from the map
fetch the data retrieved from the stream
adds a concern object to the repository
start thread and fetch data from the stream
loads the properties from the given filename
stores the properties in the file
stores the properties in the given filename
adds parameters to a concern
adds a filter module object to the repository
adds a method object to the repository
adds the returntype to a method object
adds parameters to a method
adds an input filter to the repository
adds parameters to an input or outputfilter
adds an and object can be present in an filter element
adds an or object can be present in an filter element
adds an not object
adds a filter operator type i
adds a filter comp oper the character separating each filter
adds a matching part
adds a matching type
adds a substitution part
add a new type to the map
retrieve a type from the map
adds a selector object to a matching or substitution part
adds an output filter to the repository
creates a selector definition
creates a new condition binding i
creates a new method binding i
creates a new filter module binding
adds a filtermodule to the current binding
adds an assembly as implementationpart
adds a sourcefile as implementationpart
adds embedded sourcecode as implementationpart
creates a reference to a labeled concern
creates a reference to a labeled concern
creates a reference to a filter module element reference
creates a new reference to a condition will be resolved in rexref
creates a new reference to a method will be resolved in rexref
creates a new reference to an intenal will be resolved in rexref
finishes up the builder misc
relay tb list
relay tb list
the method code suites to args code check if the types
the method code get qequivalent code returns the non primitive
the method code select accessibility manipulator code
the method code call code invoke the method
the method code get value code give the value of the selected field
the method code find methods code create an array
the method code set value code set the selected field to the given
the method code select constructor code search for the first
a simple method which do anything
a simple method which calls do that x
a simple method which do anything
the method code call field asserts code iterate through the definied
logs string to output location in xml format
this method is incomplete
removes any empty xml thats left saving space for final save
append to the given string buffer an escaped version of the given text
append the time and date in iso 8601 format java
append a two digit number
registers required key strokes
gets the code file row data code that corresponds to the file
gets the index of the cursor selected item
sets the line at cursor selected line
gets the file which is currently selected
checks whether the currently selected file is the parent of currently viewed
displays the given directory
returns an initiliazed instance of form component
called to signal the midlet to terminate
the visual design2 constructor
returns an initiliazed instance of form component
returns an initiliazed instance of form certificate component
returns an initiliazed instance of ok command component
returns an initiliazed instance of string item subject component
returns an initiliazed instance of text field iterations component
returns an initiliazed instance of string item issuer component
returns an initiliazed instance of form component
returns an initiliazed instance of choice group component
returns an initiliazed instance of string item not before component
returns an initiliazed instance of dump file command component
returns an initiliazed instance of string item not after component
returns an initiliazed instance of screen command component
returns an initiliazed instance of item command details component
returns an initiliazed instance of text field iterations component
returns an initiliazed instance of back command component
returns an initiliazed instance of choice group component
returns an initiliazed instance of choice group chain component
returns an initiliazed instance of back command1 component
returns an initiliazed instance of string item cert version component
returns an initiliazed instance of string item cert serial component
returns an initiliazed instance of string item cert algorithm component
returns an initiliazed instance of string item cert issuer component
returns an initiliazed instance of string item cert not before component
returns an initiliazed instance of string item cert not after component
returns an initiliazed instance of string item cert subject component
returns an initiliazed instance of string item cert cert alg component
returns an initiliazed instance of string item cert cert signature component
returns an initiliazed instance of string item public key component
returns an initiliazed instance of string item public key alg component
returns an initiliazed instance of form data component
returns an initiliazed instance of string item data component
returns an initiliazed instance of back command2 component
returns an initiliazed instance of reader form component
returns an initiliazed instance of string item reader instructions component
returns an initiliazed instance of item simulate command component
returns an initiliazed instance of item simulate write command component
returns an initiliazed instance of item command read component
returns an initiliazed instance of item command write component
returns an initiliazed instance of back command reader component
returns an initiliazed instance of back command1 component
returns an initiliazed instance of ok command edit component
returns an initiliazed instance of text field component
returns an initiliazed instance of back command writer component
returns an initiliazed instance of writer form component
returns an initiliazed instance of string item1 component
returns an initiliazed instance of cancel command writer component
returns an initiliazed instance of spacer component
returns an initiliazed instance of edit signature uri component
returns an initiliazed instance of ok command component
returns an initiliazed instance of back command component
returns an initiliazed instance of text field signature uri component
returns an initiliazed instance of item command component
returns an initiliazed instance of ok command1 component
returns an initiliazed instance of back command2 component
returns an initiliazed instance of edit chain uri component
returns an initiliazed instance of text field chain uri component
returns an initiliazed instance of choice group certificate component
returns an initiliazed instance of item command show component
returns an initiliazed instance of back command3 component
called to signal the midlet to terminate
apply lyrics to a voice in the score context
a staff group contains no data but in the score context notes which
listen for the start of a line
listen for the ending of a line
generate lilypond commands to start a line
generate lilypond commands to terminate a line
generate a factor that all tuplets will divide into evenly by multiplying
set the start tick of each object found in a bar
add a new articulation
prompt for message and send it
respond to commands including exit
test the clear stack iterator
returns an iterator over the elements of the clear stack
returns the column number that should be sorted by default
this method changes only the currency performance
returns the main jtabbed pane
returns if there is any clipboard content
sets a new clipboard content
closes and saves the current opened member file if there is any and
reloads the status bar by setting the current users name in it
sets a new status in this window an in all its menus
reloads the current status by setting it once again
returns the current available popup menus in the main jtabbed pane
saves the current member file if there is one opened
returns if a image exists
returns the fees
sets new fees
sets a new file name
sets new shipping locations
returns the additional fees
sets new additional fees
returns if there is a shipping location in the shipping locations that is
override to use
updates the version information by a simple properties file
returns true if the update channel supports update information
returns the url where to post the error information to
returns the url that is the main url of this distribution
if some fees are null the currency maybe wrong
override to use
override to use
sets a new tool bar in the header
creates and answers the header panel that consists of
show the dialog when add new place
show the dialog when edit an place
returns the child of this node with maximum frequency
starts the machine from the initial state and reads all characters from reader
appends a new character to this buffer
groups the previously appended characters forming a new word
returns a matcher that matches any character not matched by this matcher
returns a matcher that matches any character matched by both this matcher
returns a matcher that matches any character matched by either this matcher
for use by implementors sets the bit corresponding to each character 0
returns the index of the first matching character in a character sequence
returns the index of the first matching character in a character sequence
returns the index of the last matching character in a character sequence
returns the number of matching characters found in a character sequence
returns a string containing all non matching characters of a character
returns a string containing all matching characters of a character
returns a string copy of the input character sequence with each character
returns a string copy of the input character sequence with each character
returns a substring of the input character sequence that omits all
returns a substring of the input character sequence that omits all
returns a substring of the input character sequence that omits all
returns a string copy of the input character sequence with each group of
collapses groups of matching characters exactly as
adds a parameter to this command
get the series bound color
get the series graph style
gets the 1st number of the password
returns a panel password utilzed in verification of user input panel password
sets the 1st number of the password
sets the param as the panel password
gets the 2nd number of the password
sets the 2nd number of the password
returns web id
gets the 3rd number of the password
sets the param as the web id
sets the 3rd number of the password
gets the 4th number of the password
sets the 4th number of the password
sets the param as the web password
gets the position of where the next entered number should go
returns a emergency phone number
sets the position of where the next entered number should go
sets params as the emergency phone number
compares control panel password objects to see if they are the same
paints this component
gets the selected security zone
gets zone id to activate
sets zone id to activate
sets the selected security zone
add the camera to server and set value of camera password to 0000
gets the current state of the safe home system
remove a camera from the server
pan right a camera which is selected by the id
pan left a camera which is selected by the id
sets the new current state of the safe home state
zoom in a camera which is selected by the id
zoom out a camera which is selected by the id
set the password of a camera
determine if safe home is on not in standby or not in standby
get the password of a camera
determine if safe home is idle
determine if safe home is monitoring
determine if safe home is in emergency mode
determine if safe home is in alarm mode
turn on safe home
turn off safe home
reset safe home activated zone is set to 1
disarm safe home
arm safe home
put safe home in panic mode immediately arms safe home
delays getting updates for the device monitor by 1 second
completes the action of turning off after the password is validated
completes the action of reseting after the password is validated
get the password of camera
set the password of camera
this function is the action listener call back function of three buttons
completes the action of setting away after the password is validated
completes the action of setting stay after the password is validated
completes the action of panic after the password is validated
returns true after every n max 1 invocations
initializes a list box object and adds softkeys
switch into the folder named by folder name
makes current screen active
check if a the indexed columns of a row probably have changed
the target tag and its super tags all should have an id
database path prefix name
click page path
return null if the user is not authorized to edit the fragment
exception thrown when invalid root node is given
set the package name for the entity classes being generated
set the package name for the api classes being generated
set the root directory of the java source files in your project
set the name of the property file which holds configutation data for
set the path for the web
sets the java version of the source files to be generated
public boolean unlearn spell int spell id int level boolean save
returns the use recursion property of this code options code object
ensures that a jsp comments are parsed correctly as preformatted text objects
sets the use recursion property of this code options code object
adds a directory to the list of input directories
converts the directories held by this code options code object into
see the field documentation for check only
see the field documentation for check only
test to make sure important spacing around elements is preserved
compares the given code jsp comment code with this
returns this code jsp directive code all on one line regardless of formatting
compares the given code jsp comment code with this code jsp comment code
by default return null indicating that there is no logical break that
returns true if the code that this code java code code object
ensures consecutive jsp comments are output on different lines
ensures that jsp directives can be formatted correctly
ensures that string utils
called when processing of a new file begins
called when processing of a file ends so messages should not appear to
ensures that string utils
output the filename we are currently working on if we are actually
ensures that string utils
ensures that string utils
ensures that string utils
ensures that string utils
a convenience method to fail the test case if the given input
search backwards through all code iformattable code objects in this
a convenience method to return the hash code of a primitive boolean type
convenience method to get a raw portlet url
convenience method to get a raw portlet url
implementacao do servico
implementacao da interface
sets the id value for this object ref
sets the project id value for this project version data
sets the date order value for this project version data
sets the size value for this attachment data
sets the released value for this project version data
sets the date submitted value for this attachment data
sets the download url value for this attachment data
sets the status value for this project data
sets the type value for this relationship data
set the endpoint address for the specified port name
sets the target id value for this relationship data
sets the field value for this custom field definition data
sets the owner value for this filter data
sets the view state value for this project data
sets the type value for this custom field definition data
sets the access min value for this project data
sets the possible values value for this custom field definition data
sets the filter string value for this filter data
sets the subprojects value for this project data
sets the reporter value for this issue note data
sets the valid regexp value for this custom field definition data
sets the view state value for this issue header data
sets the access level r value for this custom field definition data
sets the access level rw value for this custom field definition data
sets the project value for this issue header data
sets the length min value for this custom field definition data
sets the length max value for this custom field definition data
sets the priority value for this issue header data
sets the advanced value for this custom field definition data
sets the severity value for this issue header data
sets the display report value for this custom field definition data
sets the status value for this issue header data
sets the display update value for this custom field definition data
sets the reporter value for this issue header data
sets the display resolved value for this custom field definition data
sets the handler value for this issue header data
sets the display closed value for this custom field definition data
sets the resolution value for this issue header data
sets the require report value for this custom field definition data
sets the attachments count value for this issue header data
sets the require update value for this custom field definition data
sets the notes count value for this issue header data
sets the require resolved value for this custom field definition data
sets the require closed value for this custom field definition data
montar view state
sets the project value for this issue data
sets the priority value for this issue data
sets the severity value for this issue data
sets the os build value for this issue data
sets the reproducibility value for this issue data
sets the sponsorship total value for this issue data
sets the handler value for this issue data
sets the projection value for this issue data
sets the eta value for this issue data
sets the resolution value for this issue data
sets the fixed in version value for this issue data
sets the steps to reproduce value for this issue data
sets the additional information value for this issue data
sets the attachments value for this issue data
sets the relationships value for this issue data
sets the notes value for this issue data
sets the custom fields value for this issue data
the method retrieves jndi naming context using populated server instance
this method wires all dao classes with local entity manager so the latter
returns a value for a property
the start method is called when the wrapper manager is signaled by the
returns a subcontext based on the current context
generates a id for the file
sends a notofication email to the configured receiver
called when the application is shutting down
sends a notofication email to the specified receiver
called whenever the native wrapper code traps a system control signal
set the current parent of the node
add a child to the current parent set by calling set current parent
restores the previous parent
saves organizations to an xml file
invoked by the page to indicate the researcher name inputted
invoked by the page to indicate the researcher name inputted
invoked by the page to indicate the researcher name inputted
invoked by the page to indicate the researcher name inputted
invoked by the page to indicate the collaboration name inputted
invoked by the page to indicate the researcher name inputted
invoked by the page to indicate the organization name inputted
gets the name of the researcher that was found
invoked by the page to indicate the collaboration name inputted
gets the organization of the researcher that was found
invoked by the page to indicate the organization name inputted
gets the email of the researcher that was found
invoked by the page to indicate the collaboration name inputted
gets the picture link of the researcher that was found
invoked by the page to indicate the organization name inputted
gets the bio statement of the researcher that was found
invoked by the page to indicate the collaboration name inputted
invoked by the page to indicate the organization name inputted
invoked by the page to indicate the researcher being searched for
invoked by the page to indicate the collaboration name inputted
invoked by the page to indicate the organization name inputted
invoked by the page to indicate the collaboration name inputted
invoked by the page to indicate the organization being searched for
invoked by the page to indicate the organization name inputted
gets the name of the collaboration that was found
invoked by the page to indicate the collaboration being searched for
invoked by the page to indicate the organization name inputted
gets the type of the collaboration that was found
invoked by the page to indicate the organization name inputted
gets the contact of the collaboration that was found
a handler that performs an action when the login button is pressed
gets the affiliated of the collaboration that was found
a handler that performs an action when the add type button is pressed
gets the type of the organization that was found
gets the country of the collaboration that was found
gets the contact of the organization that was found
gets the keyword of the collaboration that was found
gets the affiliated of the organization that was found
gets the organization of the researcher that was found
gets the country of the organization that was found
gets the email of the researcher that was found
gets the keyword of the organization that was found
gets the description of the organization that was found
gets the picture link of the researcher that was found
gets the home page of the organization that was found
gets the bio statement of the researcher that was found
gets the contact person of the organization that was found
gets the affiliated researchers of the organization that was found
gets the country of the organization that was found
gets the research keywords of the organization that was found
gets the description of the organization that was found
gets the homepage of the organization that was found
gets the collaborating organizations of the collaboration that was found
gets the years of the collaboration that was found
gets the outcomes of the collaboration that was found
gets the description of the collaboration that was found
adds a unique id to the set of unique ids that already exist
a handler that performs an action when the researcher button is pressed
a handler that performs an action when the organization button is pressed
a handler that performs an action when the collaboration button is pressed
a handler that performs an action when the search button in view researcher
a handler that performs an action when the search button in view collaboration
stores the value on harddisk
returns the field in view mode
returns the field in view mode
code sort code sorts the resultlist before the truncating in
copies a binding set to a entry row for displaying them
code register page code should be called from the init method
initializes the list and retrieves the data
creates and inits an instance of a special page
retrieves the label of a special page config registered in this registry
implement couples one interface baseclass with an implementation for all dependency injected classes
returns the comment that is used for the later created element
icon for service provider
name of service provider appears in right click for remove service
reset the value inputed by the user
return a textual representation of this string
reset the value inputed by the user
it returns a textual representation of this instance
closes servlet and cleans up connection
exec the command on the local system
this function has to be called to initialized the connection to the db
return true if the connection with the db is valid
close the connection with the db
return a textual representatiion of this string
parse a flags type and return the corresponding arg flag
reset the value inputed by the user
return true if a file has been uploaded
it returns a textual representation of this instance
textual representation of this object
it tells you if the current instance of the app metadata supports
it returns the number of untagged parameters present in the data structure
it returns the arg flag that has the id equals to id
it returns the arg param that has the id equals to id
returns a textual representation of this arg flag
utility method to check of the job executed correctly
initialization method that is automatically invoked on startup
initialization method that is automatically invoked on startup
return true if the connection with the db is valid
this function returns the number of running jobs for the specified service
this function returns true if the input string version number
returns a copy of the job id
return if the job is held
return if the job is idle
return if the job is removed
return if the job is completed
sets a handler that will be called on failure
sets a handler that will be called on success
sets a handler that will be called on a specified event
blocks until all the node in the cluster to finish
returns a string that describes the content of this cluster briefly
returns a string that describes the content of this cluster
sends a reschedule signal to make rescheduling process happens
removes a job
removes jobs in a cluster
sets logfile name and monitor interval
submits a job description to the condor and returns a cluster of job
adds queue times line to the submit file
logs uploaded file info
it tells you if the current instance of the app metadata
this function set the private url which is the url used
this function set the pubblic url used to create the service
terminates this thread so tomcat can shut down properly
method to access the tomcat base url from other classes
get the next id
retrieves the restaurant identifier
protected method to set the restaurant identifier
defines the maximum string length used in validation
retrieves a reference to the restaurant service implementation object
determine a unique identifier for a restaurant data object
set the first name
set the username
set the last name
set the password
returns the username validated by the code validate code method through
returns the password validated by the code validate code method through
set the old password
indexed getter for property parameter
retrieves a reference to the locator service implementation object
set the new password
all the ratings that have been validated
set the confirmed new password
get the confirmed new password
returns an ordered list of code restaurant data code objects
determines the highest rated restaurant in the current set removes it
defines the maximum string length used in validation
retrieves a reference to the person restaurant rating service implementation object
retrieves the ratings identifier
retrieves the restaurant history identifier
protected method to set the ratings identifier
protected method to set the restaurant history identifier
retrieves a reference to the restaurant history service implementation object
retrieves the name of the external event which this transition
no guard conditions for this transition
retrieves the unique state name
build the code transition list code of code transition code s available
retrieves the users first name
sets the users first name
retrieves the name of the external event which this transition
retrieves the unique state name
retrieves the users last name
sets the users last name
retrieves the unique state name
build the code transition list code of code transition code s available
retrieves the name of the external event which this transition
retrieves the unique state name
build the code transition list code of code transition code s available
retrieves the name of the external event which this transition
retrieves the name of the external event which this transition
retrieves the unique state name
retrieves the name of the external event which this transition
retrieves the name of the external event which this transition
retrieves the name of the external event which this transition
retrieves the name of the external event which this transition
retrieves the name of the external event which this transition
defines the maximum string length used in validation
defines the maximum string length used in validation
retrieves a reference to the person service implementation object
defines the maximum string length used in validation
defines the maximum string length used in validation
defines the maximum string length used in validation
retrieves a reference to the location service implementation object
defines the maximum string length used in validation
process the next row of the sql query
returns whether the result is the unset error value
process the next row of the sql query
number of rows in the cache
sets the number of rows affected by the sql
process the next row of the sql query
each time through the result set add one to the count of rows
gets the number of rows processed
print the contents of the buffer to the output stream
this method executes a query that could be select insert
if this method is called at any time the transaction will rollback
use this method to bound multiple database operations which need
knows if the current or just executed transaction is marked for rollback
if this method is called at any time the transaction will rollback
knows if the current or just executed transaction is marked for rollback
used to get the thread singleton instance
extends the base class database manager by adding rollback
override the base implementation of this method to add transactional behaviour
executes a sql select insert update or delete statement containing
override the base implementation of this method to add transactional behaviour
create a code database manager code for data access
create a code transactional database manager code for data access
the add method can also be used as follows
parse a string containing multiple statements and add to the list
add another string statement to the query
add the contents of a batch query to this one
add a table to the select statement
get a reference to the where clause
set the where clause
returns a string object representing this batch query
returns the package within which this interface is defined
returns whether the method is part of an interface or not
returns the name of this interface
returns a list of interfaces that this interface i extends i
set whether the method is part of an interface or not
add an interface that this interface i extends i
attempts to establish a connection to the database
add an interface that this interface i extends i
add a list of interfaces that this interface i extends i
releases the jdbc resources
set the comment
returns whether the definition has a comment or not
returns the access control modifier
returns that this class is an interface definition
set the access control modifier
returns a string containing the java source representation of the definition
set whether the method is i abstract i or not
returns whether the type has a package specified or not
returns the types package name
returns the types name
returns true if this data type is equal to another object
set the list of superinterfaces that the interface i extends i
returns true if the receiver represents i public i access
returns true if the receiver represents i protected i access
returns a string object representing this java type
set whether the method is i final i or not
returns true if the receiver represents i package i access
parse out the package and type names from a fully qualified type string
returns true if the receiver represents i private i access
returns true if this access modifier is equal to another object
returns a hash code value for this java access modifier
returns a string object representing this java access modifier
set the access control modifier
set whether the method is i static i or not
opening braces will now appear on a line by themselves
opening braces will now appear at the end of the current line
increment the current indentation level
increment the current indentation level by code count code levels
set whether the method is i synchronized i or not
decrement the current indentation level
decrement the current indentation level by code count code levels
append code obj code to the buffer
append code text code to the buffer
returns whether the method is i native i or not
append code obj code to the buffer
append code text code to the buffer
append code obj code to the buffer
returns the identifiers underlying type object
set whether the field is i transient i or not
append code text code to the buffer
returns a string object representing the identifiers type
set whether the method is i native i or not
returns a string object representing the identifiers type
returns whether the identifier has a package name or not
increment the current indentation level and then append code obj code
returns the identifiers package name
returns the identifiers type name
increment the current indentation level and then append code text code
returns whether the identifier is an array or not
returns whether the field is i volatile i or not
returns the methods identifier
increment the current indentation level and then append code obj code
increment the current indentation level and then append code text code
returns a string object representing this java identifier
decrement the current indentation level and then append code obj code
set how many dimensions the array has assuming the identifier is an array
set whether the field is i volatile i or not
decrement the current indentation level and then append code text code
returns the methods return type package name
decrement the current indentation level and then append code obj code
decrement the current indentation level and then append code text code
append the representation of a tab directly to the buffer
returns the fields identifier
returns the methods return type
append an appropriate number of tabs for the current indent level
append code count code tabs directly to the buffer
append the representation of a newline directly to the buffer
returns the fields package name
append code count code newlines directly to the buffer
returns the methods name
append the representation of a space directly to the buffer
append code count code spaces directly to the buffer
start a code block
returns the fields type
append code obj code to the buffer and start a block
start a code block
end a code block
returns the name of the class that this class i extends i
start a multi line comment block
returns whether the field is an array or not
returns that this class is a class definition
end a multi line comment block
returns how many dimensions the array has assuming the field is an array
append the line contained in code comment text code
set whether fully qualified class names are used in import statements
returns whether the object needs i strictfp i or not
set whether the object needs i strictfp i or not
returns whether the function has parameters or not
set the copyright comment for the source file
returns the java type that represents the object
returns a list of interfaces implemented by the object
add an interface that is implemented by the object
set the fields initializer
add an i import i directive for the source file
add an interface that is implemented by the object
add a formal parameter that is passed to the function
add a list of interfaces that are implemented by the object
add an i import i directive for the source file
returns whether or not this object defines a class or not
returns whether or not this object defines an interface or not
add a list of i import i directives for the source file
add a formal parameter that is passed to the function
returns a list of potential import types for the object
set the class comment for the source file
set the list of interfaces that are implemented by the object
returns whether a getter method should be generated to access the field
add a list of formal parameters that are passed to the function
set the class or interface definition for the class file
returns whether the function has exceptions or not
add a class or instance variable field to the source file
add a list of class or instance variables fields to the source file
add a constructor method definition to the source file
add an exception that is thrown by the function
set whether a getter method should be generated to access the field
gets a code context code based on the code url code specified
add a list of constructor methods to the source file
add an exception that is thrown by the function
returns a reference to the code base services code implementation
get the base services implementation class to use from the property
add a method definition to the source file
create an instance from the code class code
add a list of exceptions that are thrown by the function
gets a code context code based on the code url code specified
add a list of methods to the source file
returns the statements defining the body of the function
gets a code context code
returns whether a setter method should be generated to access the field
set the list of formal parameters that are passed to the function
generate the java source representation of the source file
set the list of exceptions that are thrown by the function
reset the state of the component
reset the cached value of the widget
perform a set of tasks to prepare the source file for generation
gets the bean that we are monitoring
gets whether or not the state of the component has changed
set whether a setter method should be generated to access the field
reset the state of the component
reset the cached value of the widget
gather additional imports from the various parts of the source file
start monitoring the text field
returns a list of potential import types for the function
start monitoring the combo box field
reset the widget values from the cached values
write the copyright comments to the given
reset the widget values from the cached values
gets whether or not the state of the bean has changed
given a container size resolve the left edge of a component
reset the cached value for the given bean
gets the monitor for a given object
given a container size resolve the top edge of a component
get the list of bean monitors
returns the access control modifier for the getter
given a component size figure out the appropriate horizontal offset
adds the specified component with the specified name to the layout
given a component size figure out the appropriate vertical offset
return the constraint that is associated with the given
write the i package i statement to the given
given the size of a component return the smallest size
lays out the container in the specified panel
given a container size resolve the bottom edge of a component
given a container size resolve the right edge of a component
returns the access control modifier for the setter
given the size of a component return the smallest size
this method was created by a smart guide
write the import directives to the given
this method was created by a smart guide
removes the specified component from the layout
populate the resource manager with the required resources for the project
add a component and a corresponding constraint to
listener callback method
this method was created by a smart guide
cause the application to terminate
get the icon that is displayed in the window titlebar
write the java source representation of the field to the
get the title of the application from the resource manager
initialize the japplication
this method was created by a smart guide
initialize the panels
write the class comments to the given
find the top level frame and set its title
add an action to the command manager
write the class or interface definition to the given
returns a string containing the java source representation of the getter
disable an action in the command manager
listener callback from the tabbed panel
enable an action in the command manager
listener callback from the tabbed panel
write the class or instance variable field definitions to the given
command mgr accessor
initialize the panels
gets the menubar for the application
get a named popup menu from the command manager
write the constructor method definitions to the given
resource mgr accessor
answer the string displayed in the window title bar
write the setter and getter method definitions to the given
gets the toolbar for the application
initialize the buttons to be enable disable buttons when the interface comes up
write the method definitions to the given
create an instance of the command manager
initialize the contents of the panel
create an instance of the resource manager
write the end of class string to the given
set the wait cursor
returns a string containing the java source representation of the setter
set the wait cursor
find the top level frame and set its title
listener callback method
overridden to re connect focus listeners to the button if
overridden to hook in our key selection manager that can handle
add a combo box field
returns a list of potential import types for the field
reset attributes for next use
once all attributes are set use this to show the dialog
hide the dialog typically used after processing is complete
set help text html allowed
make sure the component is visible if in a scroll pane
accessor for url base
mutator for url base
reset attributes for next use
set help text using a url html allowed
did the user request a cancellation
set first of two message lines on progress dialog
set second of two message lines on progress dialog
add a combo box field
set the maximum number of steps in the progress
increment the progress bar for x number of tasks
update the progress bar set the value of the displayed percentage
display an error to the user
this method was created by a smart guide
called when the child node is selected
this new value will be applied to fresh text entered and
display an error to the user
this new value will be applied to fresh text entered and
display an confirmation dialog to the user
display an confirmation dialog to the user
display a warning to the user
display a warning to the user
display an informational message to the user
initialize the content panel
create an instance of the resource manager
display an informational message to the user
display an informational message to the user
gets the icon to use in the splash screen
set the integer padding
set the label to use to display the status
update the status string to the one passed in
set the product name to display
set the product version to display
get the string value for the key passed in
set the fraction padding
add a new resource to the pool
add a new resource to the pool
initialize the japplication
initialize the panels
set the content panel for the japplication shell
add a row to the table for each of the given objects
add a row to the table for the given object
remove a row from the table for the given object
add the columns
rebuild columns with new properties and headings
this method uses the decimal format
remove all of the objects from the table
get the object for the given row index
set the objects that represent rows in the table
set the objects that represent rows in the table
add another object to the table
sets the selected object in the table
remove an object from the table
get the index of the object
gets the index of the object
get the objects in the table
add another object row
refresh the data in the table rows
get the object for the given row index
refresh the row data for the given object
rebuild columns with new properties and headings
get the data for an object
remove all rows from the table
refresh all the data in the table rows
returns the selection mode
sets the selection mode
refresh the row data for the given object
gets a copy of all the objects in the table
get the data for an object
jtable uses this method to determine the default renderer
enable and disable sorting
refresh the row data for the given object
indicates if the object table is to display objects in a sorted order
get the selected objects from the table
add a object to the selected object list
sets all items as selected
deselect all items
get the selected objects
add a object to the selected object list
clear out all selections
sets all items as selected
get the formatter class for the column
add a check box to be monitored
add a combo box to be monitored
add a list to be monitored
add a table to be monitored
add a text field to be monitored
add a text area to be monitored
gets whether or not any state has changed
gets whether or not any state has changed
tree will expand tree expansion event event
this method was created by a smart guide
tree will collapse tree expansion event event
this method was created by a smart guide
this method was created in visual age
gets whether or not the state of the component has changed
reset the state of the comparator
add listener for data changing
this method was created by a smart guide
gets whether or not the state of the component has changed
reset the state of the comparator
reset the state of the comparator
reset the state of the comparator
gets whether or not the state of the component has changed
gets whether or not the state of the component has changed
reset the state of the comparator
this method was created by a smart guide
gets the splash screen
gets the renderer for the tree nodes
remove any jnlp files as they are no longer valid
start the web application
create an instance of the command manager
the command manager automatically creates actions for menu items and
initialize the content panel
initialize the windows look feel
display the status string in the splash screen
this method was created in visual age
display an error to the user
display an error to the user
display an error to the user
display an confirmation dialog to the user
provide the readed with the property tree that defines the format of the
display a warning to the user
display information to the user
gets a menu for the given menu name
this method returns the cached menu bar
read raw data records from an input stream convert them to
flush any buffered contents to the stream
write a set of strings representing a record out to the ouput stream
gets the relative location of the divider bar
this method was created in visual age
this method returns the cached tool bar
get the icon for the name given
get the menu bar button created for the given name
this method was created by a smart guide
gets the menu with the given name
returns a string containing the default application home directory
returns a string containing the default sax parser factory class name to use
gets whether or not the action is selected
lookup the property map for the given domain name
sets the button to the selected value
this method was created in visual age
sets the menu item s to the selected value
add a new char property to the main property map
add the ok and cancel buttons to the panel
add a new double property to the main property map
sets the toolbar and menu item s to the selected value
add a new float property to the main property map
add a new int property to the main property map
add a new long property to the main property map
sets up the fixture for example open a network connection
add a new string property to the main property map
logs an error for the given invalid property object
this method was created by a smart guide
writes the data in the property map out to the property file
this method was created by a smart guide
add the panel to our canvas and used the height of the panel
returns the given property attributes as an xml string
returns a well formed valid xml string from the given string
this method was created by a smart guide
add the panel to our canvas with the given height
this method was created in visual age
convert the given list of property objects into an array of double values
convert the given list of property objects into an array of float values
convert the given list of property objects into an array of int values
convert the given list of property objects into an array of long values
add the panel to our canvas with the given height
convert the given list of property objects into an array of string values
make the given domain names property map the current map
add the current property to the current domains property map
returns a string containing the application home directory property key
logs a system error for the given invalid property object
this method was created by a smart guide
returns whether the receivers data type is valid
returns whether the receivers data fields are valid
resize panel on our canvas with the given height
sets up the fixture for example open a network connection
parse and load the properties
resize panel on our canvas with the given height
lookup the property map for the given domain name
add the scroll pane to our canvas with the given height
returns the property value for the given property key as a boolean
returns the startup constants
returns the property manager
returns the property value for the given property key as a boolean
returns the new style property manager which allows access to all of the
adds the given set of properties to the code system code
this method was created by a smart guide
triggers a refresh of the property framework
returns the property value for the given property key as a boolean
get the method that matches the name and paramters passed in
get the value of the bean property
set the value of the bean property
returns the property value for the given property key as a boolean
this method was created by a smart guide
this method was created by a smart guide
look for a node with the specified name
this method was created by a smart guide
this method was created by a smart guide
returns the property value for the given property key as a char
add a max length text area
returns the detail message including the message from the
prints the composite message and the embedded stack trace to
returns the property value for the given property key as a char
prints the composite message and the embedded stack trace to
prints the composite message and the embedded stack trace to
add a max length text area
prints the composite message and the embedded stack trace to
returns the property value for the given property key as a char
this method was created in visual age
retrieve a logging category with name code name code
configure the logging framework
add a max length text area
returns the property value for the given property key as a char
overriden to set the focus on the tree
returns the property value for the given property key as a double
returns the property value for the given property key as a double
if log4j is in the classpath i
if log4j is in the classpath i
retrieve a logging category with name code name code
retrieve a logging category with name code name code
select the node in the tree panel
returns the property value for the given property key as a double
set the wait cursor
returns the property value for the given property key as a double
retrieve a logging category with name code name code
set the split pane divider location
configure the logging framework
log a system level error message
add a text field
retrieve a logging category with name code name code
configure the logging framework
returns the property value for the given property key as a float
set the wait cursor
flush the stream
get the filename used for mapping objects
find the top level frame and set its title
add a text field
create the xml string for the given object
returns the property value for the given property key as a float
bind to a collection of parameters
bind an element to the first element in the query string
bind a primitive integer type
bind a primitive double type
bind a primitive float type
bind a primitive boolean type
return the oql query object
get the filename used for mapping objects
create the xml string for the given object
display the card panel with the given name
update existing object or objects
add a text field
returns the property value for the given property key as a float
create object or objects
specifies if upcoming transactions will perform deep or shallow updates and creates
update existing object or objects
create object or objects
is this object recognized by the current transaction
load the specified instance
returns the property value for the given property key as a float
this method was created in visual age
begin a transaction
add a text field
commit the transaction
rollback the transaction
remove the object
get all objects for the given query string
returns the property value for the given property key as an int
get all objects for the given query object
gets the query object for a given query
add non editable text preceded by a label
validate that a transaction is started
get the database instance
returns the property value for the given property key as an int
close the connection
add non editable text preceded by a label
returns the property value for the given property key as an int
returns the property value for the given property key as an int
retrieves the main current list of objects managed by the receiver
retrieves the list of objects added since the last reset
retrieves the list of objects removed sinces the last reset
returns the property value for the given property key as a long
map the domain to a new record
clears both the added and the removed lists
creates a select statement using the given condition and then executes the statement
read the domain object of the given id
find a collection of domain objects for the given parent object
returns a list containing all domain objects mapped by the receiver
close the top level window
returns the property value for the given property key as a long
returns a list containing all domain objects mapped by the receiver
delete domain objects from the database that match the given condition
returns the property value for the given property key as a long
test for database existence of the given domain object
sets up the fixture for example open a network connection
tears down the fixture for example close a network connection
returns whether or not the given domain object exists in the database
marks the open transaction for rollback
setter for the version
massage the string
returns the property value for the given property key as a long
date formatter specific to the expected db 2 timestamp format
date formatter specific to the expected db 2 timestamp format
provide the caller with unique id values
returns an instance of
reset the identifier generator implementation instance
returns the identifier generator implementation class to use from the property setting
create a new instance of the given code class code
execute the command and return the target to forward to
returns the property value for the given property key as a string
initialize the command object with information from a servlet
put the given helper object into the request
execute the command and return the target to forward to
returns the package name containing the front command classes
sets the child context reference
returns the class name of a
sets the child context to code null code
returns the property value for the given property key as a string
sets the specified key value under the local context
specify that this is an internal transition
allow the state machine to know if this is an external internal transition
determines if the specified value exists in the context set
retrieves all key value pairs from this context set assuming that this
allows subclasses to specify code transition code s
retrieves the value mapped by code a key code
removes all values and removes the child context
retrieves the state name
retrieves the embedded state machine
does nothing defined only to satisfy the abstract superclass
returns the property value for the given property key as a string
returns a view of the current states context
retrieves a code string code list of all possible external events that
returns a reference to a new root code state machine code
get the root transition class name implementation to use from the property
create an instance from the code classname code
retrieves a code string code list of all possible external events that
retrieve a code string code list of events based on transitions with
implements the web logic specific implementation to retrieve a
lookup the specified topic
retrieve a code string code list of events based on transitions with
implements the web logic specific implementation to retrieve a
lookup the specified queue
returns the property directory where property files are stored
this is the clients interface method for event handling
this method was created by a smart guide
commit all messages done in this transaction and releases any locks
rollback any messages done in this transaction and releases any locks
create a bytes message
create a map message
create a message
retrieve the heirarchical state name given the current state
create an object message
create an initialized object message
handle system or development related error situations by scrubbing the
create a stream message
create a text message
handle system or development related error situations by scrubbing the
create a text message
handle system or development related error situations by scrubbing the
initialize the new instance
start or restart a connections delivery of incoming messages
implements the websphere specific implementation to retrieve a
implements the websphere specific implementation to retrieve a
since a provider typically allocates resources outside the jvm
returns a reference to the code topic session code associated with
lookup the specified topic
returns a code session code reference to the code topic session code
returns a reference to a new code message queue facade code
searches for the property with the specified property name within the
returns a reference to a new code message topic facade code
returns a reference to the code topic connection code instance
returns a reference to a new code message topic facade code
get the message queue facade implementation class to use from the property
create a code topic publisher code using the session instance
gets the state monitor for this panel
get the message topic facade implementation class to use from the property
initialize the message queue facade the queue sender and a message
create a code topic subscriber code using the session instance
handle an incoming message
cleanup resources and then exit
unsubscribe the durable subscription named by the code subscription id code
this method sets the given property for a given domain
reset the state of the monitor
initialize the new instance
start or restart a connections delivery of incoming messages
validates the code class code type of code a value code
since a provider typically allocates resources outside the jvm
returns a code string code representation of this domains value
defines the minimun integer value used in validation
defines the maximum string length used in validation
the base class code domain code will verify that any specified
returns a code session code reference to the code queue session code
defines the minimun string length used in validation
the base class code domain code will verify that any specified
returns a reference to the code queue connection code instance
retrieves a code string code representation of this domains
retrieves a code string code representation of this domains
the base class code domain code will verify that any specified
this method was created by a smart guide
defines the minimun integer value used in validation
create a code queue sender code
defines the maximum string length used in validation
the base class code domain code will verify that any specified
this method accepts a filename and then determines if this property builder
searches for the property with the specified property name within the
this method accepts a filename and then determines if this property builder
add a property as a child of this property
retrieve the first child property found with a given name name
this method was created by a smart guide
retrieve the first child property found with a given name
retrieve a the first property with a given name and value
this method is called when the parser encounters a starting element tag
this method is called whenever the parser encounters the end of an element
retrieve the value of the first child property found with a given name
this method is called by the parser if it encounters a recoverable error
this method is called by the parser if it encounters a warning situation
set a reader which has been opened on the data to parse
set the indentation from the left when placing elements
set the handler that will receive callbacks during parsing
returns a reference to a new code xmlstream code implementation
get the xml stream implementation class to use from the property setting
begins parsing of the xml file specified in constructor with callbacks going to
called by sax2 parser at the start of the document
called by sax2 parser whenever non tag characters are encountered
called by sax2 parser when a recoverable parse error is encountered
called by sax2 parser when a non recoverable parse error is encountered
called by sax2 parser when warning situation is encountered
called by sax2 parser when the start of a new element is encountered
called by sax2 parser when the end of an element is encountered
called by sax2 parser when the end of the document is encountered
set the left margin for placing elements
set a reader which has been opened on the data to parse
set the handler that will receive callbacks during parsing
returns true if this panel is being shown in a dialog
parse the data in the stream
this method is called by the parser at the start of a document
this method is called when the parser encounters a starting element tag
this method is called whenever the parser encounters the end of an element
called when parser reaches the end of the document
this method is called by the parser if it encounters a recoverable error
this method is called by the parser if it encounters a warning situation
used to convert the sax specific
returns a reference to a new code xmlstream code implementation
get the xml stream implementation class to use from the property setting
add the field to the monitor
add the field to the monitor
add the field to the monitor
add the field to the monitor
add the field to the monitor
add the field to the monitor
invoked when the ok apply button is pressed on the user interface
invoked when the cancel button is pressed
mutator for right indent
setup the components that you wish to have their state tracked
show this panel as a dialog without resizing
show this panel as a dialog
update the values from the interface back to the domain object
given a string return true if it can be converted to an integer
display an error to the user
display an error to the user
display an confirmation dialog to the user
display a warning to the user
display an informational message to the user
get the height of the panel
position the x and y coordinates for the next row
gets the calculated width of the panel
marked by implementors if properties panel to flag when fields are being
runs a slow worker task in another thread
runs a slow worker task in another thread
leaves class in either the directory pointed to by the
looks for a icompiler
returns enumeration of string where each token
returns all lines in i file i that contain i in i br
returns a new op code sharing the same code attribute and
removes connections from the pool until minimum is reached
checks the constant pool creates a new entry if needed
checks the constant pool creates a new entry if needed
overloaded to set m object value
returns the initial value for this property
returns a string representation of the initial
length in bytes of the op and its data if any
use set method instead unless you are sure
prints entries to standard out in index order as typed values
get one returns the class entry index and get two
loads classes using a browser class finder or the system classloader
get the name if this represents a named type
returns the path to the
adds entry by index
checks the constant pool creates a new entry if needed
checks the constant pool creates a new entry if needed
gets the ijava by doing class
in form com
returns enumeration of integer offsets into the constant pool
in form com
get an ijava guaranteed to be a class reader java
in form com
not supported throws unsupported operation exception use code set throws class code instead
this method does not load the class pointed to by p unless
returns enumeration of integer offsets into the constant pool
set the i i i th component of the argument to v
do any components of this argument act as a jump
re sets the documentation string and if needed gets a
adds to the top of the stack
add the op codes for a superclass init with no arguments
is the opcode listed as the start of an exception handler block
used for max stack calculation called from process stack
set to true if a d
get the last op code added
searches the classpath passed into the constructor
adds an entry for string if not found
adds a string typed entry for the entry pointed to by i
adds the op codes needed for a constructors minimal
call this method on a new class reader if you are building
in the usual case returns the offset of the named type however
gets all entries of type i
throws latch exception on set if name has not been set
create another output file if false
enumeration elements are seperated by commas and will be
enumeration elements are seperated by commas and will be
removes connections from the pool until minimum is reached
marks the connection as available
invokes a method
if boolean is true use object
overloaders remember in the usual case to call code load class proper code
send message to mail host specified in the session object br
call before sending
icm can be null
zero based index
load icircumstance from an object
sets an iexpression as a subexpression of this compound expression
does no evaluation on self will evaluate children
unlinks any loaded repositories and reloads all available repositories
sets properties iff no properties have been set
this method will be added to ipersistence
override to return something other than com
note does not call update on the part
note does not call update on the part
as implemented removes named repository from memory but not from any underlying store
subclasses changing out dictionary sub must override
not yet implemented
not yet implemented
note this implementation does not automatically chk the validity of
for the purpose of this parser treat this as a list of throws
resets the index of the alternate urls enumeration
check avalible nick
add job to quene
compare 2 tickets
set basicposition on map
settings position on map and head pos
the head posbits
geting finalposition afterall steps
getting next position of moving quene
added new instance from gettes valuse from byte
added new instance from values
add existing instance of move step to move quene
find the object that belongs to an id
save character stats in database
remove me from everyehere
remove selceted object from visitable obiects
get all plyers nearto obiect
get all things need to play from database
calculate rewards after deth for pc instane who kill me
method set actual region
update maps after it changes
basic method for spownobiect on map fistime
store client settings after logout or change character or also hard dc
base movable method giving info abou moving to all knowns object
move obiect to new position and send to all knowns players it
this method returns an instance of a daocompetitors implementing the idaocompetitors interface
this method returns an instance of a daotickets implementing the idaotickets interface
this method returns an instance of a daousers implementing the idaousers interface
this method returns an instance of a daoevents implementing the idaoevents interface
this method returns an instance of a daoheats implementing the idaoheats interface
the method is called to get a connection with the hsql database
id competitor getter
id competitor setter
name competitor getter
name competitor setter
surname competitor getter
surname competitor setter
horse competitor getter
horse competitor setter
id user setter
name event setter
password user getter
start date event getter
password user setter
start date event setter
end date event getter
end date event setter
set new clip rectangle
reads a single character from the stream
creates the view and action buttons
test of test get longitude method of class geographic position
test of test to string method of class geographic position
test of test get latitude method of class geographic position
test of test get time method of class geographic position
destroys the application
responds to commands issued on client form
shows the last log file on a chart
adds a mapping
populate values with the values in the part
adds all categories to the given model
adds all types to the given model
adds all models to the given model
clears the drawing area
sets the content of the drawing area to that encoded by the molfile
returns the content of the drawing area as a jme string
returns the content of the drawing area encoded as a v2000 molfile
makes the jmol draw frame visible
hides the jmol draw frame without destroying it
sets the new code jmddocument code that will be used by this code
returns the code jmddocument code in use by this code jmdapplication frame code
returns the code jmddocument code in use by this code jmdeditor pane code
sets the new code jmddocument code that this code jmdeditor pane code
returns the magnification factor being used
returns the code jmdeditor drawing area code currently in
activates the template drawing tool and modifies the appearance of its
returns the source event
returns the drawing area over which this event occurred
returns the position at which this event occurred
returns the token as a string
reads the next token acting as an interator
returns the current token
returns the error messages generated if any after calling the validate method
changes the default locale to a new one
returns the current locale for a state
returns true if current state is a final state
returns true if this state is final i
returns the error messages generated during validation if any
add an item to the menu and add action listener
adds a filetype dot extension to filter against
returns the review of this instance
saving method for a given xml document file pair
returns the id of a comment as an integer representation
removes a comment from the database
adds a review to this model
removes the given review from the model
clears the model
returns the next free id for the given review id author pair
returns the comment specified by the given combination
displays the no agile review source project wizard
checks whether the given review id is stored in the model
checks whether a set contains the search string searching case insensitive
creates a new annotation for a given comment key
what should happen when the check box is clicked
disable the container and all its inhabitants
adds all passed file endings to this entity
returns the begin tag
returns the container so other field editors can set it as their parent
adds a field editor so it will be handled as inside the container
clears all used models
checks whether the file represented by the given abstract multiple wrapper exists
converts a given
returns the review id this wrapper belongs to
adds an element to this wrapper
removes an element from this wrapper
can set the open state of this review comments loaded
returns the wrapped review
switches the perspective to the agile review perspective
adds a review to the node
deletes a review from the node
removes all objects from the root node
refreshes the tree viewer
adds the given review to the viewer
deletes the given review from the viewer
expands all sub nodes of the passed node
collapses all sub nodes of the passed node
used to set a new model
append wildcards to search string
sets the column to be ordered
recreates the replies component
reload current table input
refreshes the reply components and recalculates the scroll bars
resets the comments reloading from model
filter comments based on the viewers filter
sets the levels for the status and priority configuration of a comment
changes the view part ui to
loads all comments of the given document into the database
returns whether the current parent is revertable or not
add reply if and only if the comment detail part is opened
reverts all unsaved changes
returns the current content representation
sets the levels for the status and priority configuration of a comment
fills the contents of a given review object into the review detail view
saves every changes made in the current detail view
returns the current content representation
converts all line breaks either n or r to r n line breaks
changes the background color for this abstract detail
reverts all unsaved changes
returns whether the save button was pressed or not
sets the given variable use one of the static fields of this class
returns the author of the reply
return the replys text
what should be done when pressing ok button
what should be done when pressing cancel button
states whether the review access has a valid source project at the moment
returns the property according to the given key
returns a comment status value defined in the properties according to its id
returns the comment specified by the given tupel
returns a comment priority value defined in the properties according to its id
returns the result of this wizard the name of the created project
returns whether this pages controls currently all contain valid values
returns the log level as an integer
returns an image representing the icon of the key
checks whether the given review id already exists
returns whether this pages controls currently all contain valid values
checks whether all paths are valid
deletes a review and all comments specified by this review
creates a single column of the viewer with given parameters
get the selection adapter of a given column
removes the comments of the given review from the database
fills the comment model with all found files
proves whether the current open editor contains the tags for the given comment
relocates the comment passed to the current selection within the same file
clears the current parser map and deletes all done annotations
editor has been closed remove from parser map
editor has been brought to top add annotations
reset the parser of the editor given by part ref
not yet used
adds the selection filter of the viewer
removes the selection filter from the viewer
sets the focus to the filter text field
selects the given comment in the table
sets the selection to the comment following the last selected one
post a news article to facebook wall and news feed
the new status of the facebook connection
the url to share
the text to display in the link or button
save a game configuration object to xml
load game configuration file
walks the tree in pre order style
constructor for primary key
constructor for primary key
set the value related to the column adresse
set the value related to the column num tel
set the value related to the column cb num
set the value related to the column cb cle
set the value related to the column cb valid mois
set the value related to the column cb valid annee
set the value related to the column commandes
constructor for primary key
set the value related to the column stock
set the value related to the column limite stock
set the value related to the column ingredients pizza
constructor for primary key
set the value related to the column quantite
set the value related to the column commande id
constructor for primary key
constructor for primary key
constructor for primary key
set the value related to the column boissons
set the value related to the column pizzas
constructor for primary key
constructor for primary key
constructor for primary key
return the value associated with the column quantite
set the value related to the column quantite
set the value related to the column pizza id
set the value related to the column ingredient id
constructor for primary key
set the value related to the column boisson id
constructor for primary key
constructor for primary key
set the value related to the column client id
set the value related to the column date commande
set the value related to the column date livraison
set the value related to the column boissons
set the value related to the column menus
set the value related to the column pizzas
constructor for primary key
set the value related to the column menu id
constructor for primary key
calculates center of tt records tt using averaging algorithm
loads evaluation analyzers
adds datas of this component as xml elements to the code container code
listener that updates tabs title
loads a file configurations into tabs
does nothing because of correlations between nodes movement
calculates angle of moving according to previous and current position
sets location of this probabilistic node node to code loc code
used to put member nodes arround leader node using maxinitialdistance
two group node are equal if their node are equal
paints node according to leader or member node
note that it uses integer
used to put member nodes arround leader node using maxinitialdistance
sets nodes that this model should manage their movement
only validates nodes that is located in a disk
model should initiate its nodes and set their initial location by this method
compares each map according to private map number field
paints all related objects to this model
inits the applet creates initial nodes and layouts components on the page
by this method each node can have different radius
paints current transition of node and them himself using parent paint method
paint this node with this color and radius
runs setup btn action
it is a shortcut method to get current transition easier
sets transition using node
switchs enable property of buttons in shower
it used by to update all nodes in the simulation space
runs the application after initialization
runs graphical suimulation using the properties file uiparameters
sets enable property of matrix menu and all of its submenus
updates the view of confguration panel and repainting presentation components
runs evalutor with the edu
a public function to load a properity from a properties edu
runs a dfs on the tree of nodes
pastes coordination of loc location to this object
sets coordination of this location object according to x and y coordination
according to node tt name tt
checks if tt node tt is in range of this node
overrided to set dialog position at center of window
overrided to set frame position at center of window
updates the tt o tt observer when user selects some files
sets default selected files
implemented to pretend singleton behaivour because it may be created by reflection
assumes that the name is integer parsable
pastes coordination of loc location to this object
sets coordination of this location object according to x and y coordination
moves the coordination according to the origin coordination br
paints this node on g graphic pallet
adds a property with name tt key tt and value tt value tt
deligates stop event to the tt bulkd using handler tt
loads first line file edu
subclasses can override this method to change buffer size handling method
if the internal parameterable can handle its ui
initialzes this parameter using tt data parameter tt
set selected object
parses the string value of tt data parameter tt using
parses string tt s tt by extracting only digits
parses string tt s tt by extracting only digits
compares using object name
initilizes this parameter using tt data parameter tt
adds an observer to for the change of current ui component
updates the parameters of embedded parametrable from ui values
adds an observer to the ubservers of masoud uiparameter
adds tt comp tt to this box using defualt settings
adds tt comp tt to this box using tt c2 tt settings
passes the observer tt o tt to the inline parameters
updates tt parameterable tt parameters according to ui parameter values
used first object in tt arg tt array
selects the v parameterable in ui
updates ui components according to tt selected parameterable tt
loads and constructs this object and subobjects from an xml tree
compares according to tt name tt
in fact this method load all information from xml file from passed elements
return the modifiers for the modeled constructor
indicates whether or not the given annotation is present
p gets the default value for the annotation member represented by
return the title of the implementation of this package or null if this
return the name of the vendor or organization that provided this
return the version of the implementation of this package or null if this
return the value of the field in the specified object
return the name of the modeled method
return the title of the specification this package implements or null if
return the name of the vendor or organization that owns and maintains the
deallocates space for a memory block that was previously allocated by a
return the version of the specification this package implements or null
places code value code into first code length code bytes of the
execute prog in a separate platform process the new process uses the
causes the virtual machine to stop running and the program to exit
record in the receiver a walkback from the point where this message was
return true if this package is sealed false otherwise
answers the amount of free memory resources which are available to the
gets the value of the single byte at the given address
return true if this package is sealed with respect to the specified url
return the value of the field in the specified object as an int
sets the given single byte value at the given address
loads and links the library specified by the argument
gets the value of the signed two byte integer stored in platform byte
loads and links the library specified by the argument
answers the total amount of memory resources which is available to or in
return the name of the modeled field
gets the value of the signed four byte integer stored in platform
gets the value of the signed eight byte integer stored in platform byte
causes the virtual machine to stop running and the program to exit
return the number of processors always at least one
return the maximum memory that will be used by the virtual machine or
gets the value of the ieee754 format four byte float stored in platform
posts an interrupt request to the receiver
sets the value of the ieee754 format four byte float stored in platform
calls the code run code method of the runnable object the receiver
answers an url which can be used to access the resource described by
gets the value of the ieee754 format eight byte float stored in platform
set the context class loader for the receiver
sets the value of the ieee754 format eight byte float store in platform
gets the value of the platform pointer at the given address
sets the value of the platform pointer at the given address
starts the new thread of execution
attempt to locate the requested package
sets the assertion status of a class
sets the assertion status of a package
sets the default assertion status of a classloader
clears the default package and class assertion status of a classloader
helper method for the get packages method
read the specified byte buffer
read a byte buffer given a starting position and length
reads a byte array directly
writes from a byte array using the supplied file descriptor
does this event type accept the supplied number of attributes of each
utility for security checks
compare parameter lists for agreement
implementation of the miranda method our test will call
run a test ie a list of threads all run in gc context
determine if two call sites are the same
return whether aos logging has booted
helper routine to produce the current time as a string
stringify this instance
called from controller thread
call this method to dump statistics related to decaying
call this method when one run of the application begins
this is the main loop of the compilation thread
this method reports the basic speedup rate for a compiler
this method reports the basic compilation rate for a compiler
return this instance of this phase
initialize instrumentation by the opt compiler immediately before
this method reports the benefit ratio from one compiler to the other
string representation of fields
this method reports the compile time ratio from one compiler to
this method logs the scheduling of a recompilation
determine if two call sites are the same
convert from a 0
this method logs the beginning of an adaptively selected recompilation
convert a value to a 0
increment the edge represented by the input parameters
this method logs the successful completion of an adaptively
initialization to perform after the transformation is applied
this method logs the abortion of an adaptively selected recompilation
either find the index that is already being used to hold the counts
this method logs the actual compilation time for the given compiled method
how should this choice be displayed
this function defines how the controller handles a
this method logs the event when the controller discovers a method that has
called when the controller is ready to process this event
to be called when the vm is about to exit
called when the controller thread is about to wait on
called when the application wants to recompile all dynamically
called when the controller thread is woken after waiting on
if were going to be gathering a dynamic call graph then we dont
execute the plan
this method logs when the decay organizer runs
increase the size of the counts backing arrays
create the compilation thread and schedule it
create a dynamic call graph organizer of one doesnt already exist
create profiling entities that are independent of whether or not
restore the heap property after increasing a count array entrys value
create the organizer threads and schedule them
this method logs when the organizer thread has reached its
restore the heap property after decreasing a count array entrys value
swap the heap entries at i and j
this method logs that the controller is notified of a
validate that internal fields are consistent
this method logs a controller cost estimate for doing nothing
this method is called when its time to record that a
setup buffer and buffer size
this method is called when its time to record that a
reset in preparation of starting a new sampling window
reset the buffer
this method records a sample containing the cmid compiled method id
reset the buffer to prepare to take more samples
last opportunity to say something
append a decrement of the global counter to the given basic block
this method logs the successful completion of an adaptively
part of reportable interface
given a string find or create the counter associated and return
part of reportable interface
return the value of a particular counter
given a string find or create the counter associated and return
this method must be called before creating any counters for this
set the value of a particular counter
part of reportable interface
tell the data to automatically expand the counters if there is a
for a given string return the number of the counter associated
create a place holder instruction to represent the counted event
used to reset the number of counters for this data
for a given string return the number of the counter associated
return the count for the given relative index
set the count for the given index
part of reportable interface
return the number of counters currently allocated for this data
still under construction
get the value for a given slot
adjust alignment to the next highest value
return the counter manager for this data
set the value for a given slot
create a place holder instruction to represent an increment of a
set the current size of the object excluding header
adjust the size of the object if necessary to accommodate a field
sort a vector counter by decreasing count
update the rvmclass with context info
update a field to set its offset within the object
lay out a given field
print a new line
set the type for this tib
determine the vm specific key for a given option name
set the superclass id set for this type
a non fatal error occurred during the setting of an option
a fatal error occurred during the setting of an option
set the itable array for this type
set the does implement entry of the tib
set the imt of the tib
insert as the first element for convinience
set a virtual method in this tib by offset
set a specialized method in this tib
the number of virtual methods in this tib
does this slot in the tib hold a tib entry
does this slot in the tib hold code
inserts a new entry at the begin of the list
converts tuple to string as
print the current state for debugging
after finishing iteration of one method move to the next
has next method id to iterate
has next element of this method id to iterate
moves the index to the next element update more first because
generate value in the osr map
print the name of the class to which the argument belongs
does the osr map exist for a machine instruction offset
print the name of the class represented by the class descriptor
get bytecode index for a given instruction offset in bytes
close the latch causing future calls to wait or wait and close
wait for the latch to become open
wait for the latch to become open and then close it and return
conditionally acquire a processor lock
get registers reference map for the machine instruction offset
given a mc offset return an iterator over the
do a binary search find the entry for the machine code offset
disassociates this heavy weight lock from the indicated object
set the owner of a lock
update the locks recursion count
get the locks recursion count
set the object that this lock is referring to
get the object that this lock is referring to
dump threads blocked trying to get this lock
dump threads waiting to be notified on this lock
is this lock blocking thread t
is this thread t waiting on this lock
insert an element at a given position in the list
insert at the tail of the list
starting at the position passed swap with parent until heap condition
add all members of the given collection
read a byte
add all members of the given collection after the given element
advise against growing the buckets if they are immortal as it will lead
logically ands this bit set with the specified set of bits
discard all entries in the list
logically ors this bit set with the specified set of bits
logically xors this bit set with the specified set of bits
set inclusion test
check if the intersection of the two sets is empty
return the nth element of the list
copies the values of the bits in the specified set into this set
return the position of the given element
how many bits are set
compares this object against the specified object
remove the nth element of the list
remove the given element from the list
converts the bit vector to a string
get the instruction this node represents
returns the string representation of this node
add an out edge from this node to the given node
add an out edge this node to the given node
returns the register operand associated with this element
change the register operand
returns the register associated with this element
returns the register type associated with this element
determines if the item passed is in the current set
determine the set of variables live on entry to any handler
returns the next element on this list
sets the next element field
returns a string version of this element
create the dependency graph nodes for instructions start to end
are there any more elements
returns the next element if one exists otherwise throws an exception
get the no yieldpoints cond lock for this thread
string i fy the current list
update the data structures to reflect that all live intervals for r2
inspects the passed ptr if it is nonnull it returns its next field
add a affinity of weight w between two registers
return the backing graph holding the preferences
add architecture specific register restrictions for a basic block
returns the string representation of the edge
do two live ranges overlap
add the live interval element i to the map for register r
returns the string representation of the end node used for printing
returns the string representation of the start node used for printing
set up register preferences based on instructions in an ir
can physical register r hold an 8 bit value
remove the live interval element i from the map for register r
update the cost for a particular register
insert the prologue and epilogue
insert an explicit stack overflow check in the prologue em after em
replace all occurences of register r1 in an instruction with register
compute implicit backward dependences from a given register use
register allocation is required
is it forbidden to assign symbolic register symb to physical register r
compute implicit backward dependences from a given register def
we will have to save and restore all non volatile registers around
get the location of a given load or store instruction
insert code into the prologue to save any used non volatile
we will have to save and restore all non volatile registers around
initialize clear the d node field in register for all registers
insert code before a return instruction to restore the nonvolatile
spill the contents of a scratch register to memory before
print the dependence graph to standard out
find or create a node in the graph corresponding to a register
find or create an edge in the graph
insert code into the prologue to save the floating point state
end an interval of scratch ness for a symbolic register
should this register be included in the liveness solution
end an interval of scratch ness for a physical register
restore the contents of a scratch register before instruction s
insert code into the epilogue to restore the floating point state
return a string representation
return a string representation assuming the scratch field of
return a string representation assuming the scratch field of
insert code into the prologue to save all volatile
just a helper method to encapsulate the optional debugging info
insert code before a return instruction to restore the volatile
if register r is currently in use as a scratch register
record that a parameter may or may not escape from a thread
query whether a parameter may escape from a thread
query whether the result of this method may escape from a thread
is analysis of this method in progress
mark that analysis of this method is or is not in progress
prints the results of the fixed point computation
insert the epilogue before a particular return instruction
walk over the currently available scratch registers
perform the transformation
prints the final maps
is a particular instruction a system call
perform the transformation
does a memory operand hold a symbolic register
prints the final live intervals
is a particular register dead immediately before instruction s
given symbolic register r in instruction s do we need to ensure that
returns the live information for a particular block
in instruction s replace all appearances of a symbolic register
insert code as needed so that after instruction s the value of
generate an object which transforms defs uses of synchronized
returns the kill set
returns the first pei kill set i
attempt to rewrite a move instruction to a nop
find a register which can serve as a scratch
returns the gen set
find the first available register which can serve as a scratch
returns the in set
insert copy instructions into a basic block to safely translate out
returns whether this block has a pei with a handler in this method
record the effects of a getfield instruction on the heap array
special treatment for guard registers
record the effects of a putfield instruction on the heap array
does instruction s use the spill location for a given register
initialize some architecture specific state needed for register
assuming instruction s uses the spill location for a given register
record the effects of a getstatic instruction on the heap array
creates allocates the gen and kill sets
does instruction s define the spill location for a given register
is a particular instruction a system call
return a string representation
does instruction s define spill location loc
record the effects of a putstatic instruction on the heap array
creates a string representation of this object
union step of union find for guard registers during un ssa
does instruction s use spill location loc
update the heap array ssa form for an allocation instruction
find step of union find for guard registers during un ssa
returns the instruction
assuming instruction s uses the spill location loc
return a fpr that does not appear in instruction s and is dead
do any of the vertices in this set represent a parameter
add a vertex to this congruence class
remove a vertex from this congruence class
return a representative vertex for this congruence class
make a string representation
record the effects of a aload instruction on the heap array
update the interval representing the allocations of a physical
record the effects of an astore instruction on the heap array
perform some calculations to prepare for ssa construction
does register r appear in instruction s
compute node congruence over the value number graph
record the effects of an arraylength instruction on the heap array
initialize the congruence classes assuming that all nodes
is s a pei with a reachable catch block
given a label return a new congruence class for that label
initialize the work list
return the offset from the frame pointer for the place to store the
record the effects of a label instruction on the heap array
assuming congruence class c has changed find all other classes
insert heap variables needed for array ssa form
record the effects of a bbend instruction on the heap array
does vertex v belong to any congruence class in a vector
return the offset from the frame pointer for the place to store the
does the current state of the algorithm optimistically assume
register that an instruction uses a heap variable of a given
register every instruction that can leave this method with the
should this phase be performed
insert the prologue
register that an instruction writes a heap variable for a given
register every call instruction in this method with the
a string representation of this phase
should we print the ir either before or after this phase
perform the transformation
register every instruction in this method with the
after register allocation go back through the ir and insert
check whether its ok to allocate symbolic register to a physical
if node n dominates all defs of a register r then n does
choose one of the active intervals or the new interval to spill
get the next number to be assigned to a new heap variable
main driver for redundant load elimination
insert a phi function for a symbolic register at the head
record that we need a stack frame for this method
test against another key for equality
create a phi function instruction
return a hash code for this name
redefine should perform so that none of the subphases will occur
returns the name of the phase
are there more elements in the enumeration
get the result operand of the instruction
ensure param passing area of size stackframe header size bytes
check whether if we spilled interval spill we could then assign
get the next instruction in the enumeration
redefine should perform so that none of the subphases will occur
should this phase be performed
return the name of this compiler phase
perform the analysis
allocate the specified number of bytes in the stackframe
return a string representation of this cell
can we eliminate a null check as it has lready been performed
returns the name of the phase
should this phase be executed
return the target of the ith operand of this node
return the type representing this heap object
is the this the exception heap type
we encountered a float int conversion that uses
return a bit vector that represents the basic blocks that define
get the array length reference ignoring instructions that adjust
note that this heap variable is defined in a given basic block
return a string representation of this variable
return as successor on the path from a to b in the dominator
is this heap variable exposed on procedure entry
compare a and b according to their depth in the dominator tree
we encountered a catch block that actually uses its caught
return a string representation of the value graph
schedule me as late as possible
add a node to the value graph for every symbolic register
update the value graph to account for a given move instruction
update the value graph to account for a given pi instruction
update the value graph to account for a given new instruction
update the value graph to account for a given newarray instruction
create an df lattice cell corresponding to an heap variable
update the value graph to account for a given putfield instruction
initialize the lattice variables
update the value graph to account for a given putstatic instruction
put the optimized loops iterator register into the hash set
initialize the work list for the dataflow equation system
update the value graph to account for a given astore instruction
update the value graph to account for a given aload instruction
initialize the interval for each register to null
update the value graph to account for a given unary instruction
check whether the loop that contain such iterator register had
evaluate a dataflow equation with the meet operator
update the value graph to account for a given guarded unary instruction
given an existing call site tree representing a method add a new
given an inline sequence representing an inlined call site find
update the value graph to account for a given null check instruction
is this inline decision a yes
is this inline decision a no
update the value graph to account for a given null check instruction
does this inline site need a guard
return the number methods to inline
returns the string representation of this inline sequence
return the depth of inlining 0 corresponds to no inlining
return the root method of this inline sequence
update the value graph to account for a given binary instruction
does this inline sequence contain a given method
record that if a particular rvmmethod method is ever overridden then
return a hashcode for this object
delete a not overridden dependency
record that if a particular rvmclass ever has a subclass then
delete a no subclass dependency
delete all no subclass dependencies on the argument rvmclass
does this state represent an invokeinterface call
update the value graph to account for a given guarded binary instruction
return the depth of inlining so far
return the call instruction being considered for inlining
obtain the target method from the compilation state
return the controlling compiler options
return whether or not the receiving object is extant
return whether or not the target is precise ie needs no guard
return the root method of the compilation
return the method being compiled
return the real bytecode index associated with this call
return the inlining sequence
return the compiled method
update the value graph to account for a given inline guard instruction
return a string that is the printout of level stackframes in the stacktrace
update the value graph to account for a given if cmp instruction
update the value graph to account for a given phi instruction
estimate the expected cost of the inlining action
update the value graph to account for an ir prologue instruction
redefine hash code for reproducibility
a preorder depth first traversal printing node as visited
returns the string representation of the end node used for printing
returns the string representation of the start node used for printing
returns the next element in the list iterator
traverse edges from target to source
update the value graph to account for a given call instruction
renumber the nodes densely from 0
a postorder depth first traversal adding nodes to the list
any elements left
returns the next element in the list iterator
enumerate the nodes in no particular order
add all elements in bitset b to this bit set
add an object to this bit set
does this set contain a certain object
a preorder depth first traversal adding nodes to the list
this method checks to see if the second parameter has a single
add an edge to the graph
this method checks to see if the second parameter has a single
find or create an value graph vertex corresponding to a
add an edge to the graph
this method keeps track of nodes in the graph that are known to
build a topological sort of this graph
returns the first child of this node
build a reverse topological sort of this graph
returns the next node with the same parent as me
return whether there are any more nodes left to enumerate
adds a child to this node
sets all tree pointers to null
wrapper for next to make the enumeration interface happy
get the out edges of a given node
find or create an value graph vertex corresponding to a
find or create an value graph vertex corresponding to a
find or create an value graph vertex corresponding to a
print to system
link two vertices in the value graph
print to system
bypass move instructions that def an operand return the first def
return the machine level register number corresponding to a given integer
return the machine level register number corresponding to a
return a string representation
enable yieldpoints on this thread
given a forward branch instruction and its target
inline a call instruction
remove osr barrier instructions
debugging support return a printable representation of the machine code
generate hir for ir
verify barrier is clean by checking the number of valid operands
disable yieldpoints on this thread
split each osr point and connect it to the exit point
debugging support return a printable representation of the machine code
return the register used to for local i of type reference type
update this phase to support the measuring of compilation
set the inline oracle
determine possibly by consulting the passed options object
execute a compilation plan by executing each element
do the work represented by this element in the optimization plan
generate to the sys write stream a report of the
report the total time spent executing the plan element
make a register operand that refers to the given local variable number
return an optimization plan that isnt in use
release an optimization plan
helper function for code report stats code
get the local number for a given register
this method is called to initialize the optimization plan support
determine possibly by consulting the passed options object
fail if yieldpoints are disabled on this thread
is the operand a particular bytecode local
report the elapsed time spent in the plan element
called when printing a measure compilation report to enable a phase
return the concrete type of a field or null if none determined
this method is called immediately before perform phase
verify the ir
return a constant operand that is the base address of the jtoc
return the zero based indexed nth gpr that may hold a return value
return the number of symbolic registers doesnt count physical ones
is a particular register subject to allocation
get the framepointer fp
get a temporary that represents the fp register
get a temporary that represents the pr register
return a string version of this object
get the object for locking for synchronized methods
only for use by bc2 ir return
take an element out f the bag
return the first symbolic register in this pool
this method makes sure that nc guard only maps to registers that
release a now unused register
gets a new address register
kill nc guards so we do not use outdated mappings unintendedly later on
gets a new integer register
gets a new float register
gets a new double register
gets a new condition register
gets a new long register
gets a new validation register
get a new register of the same type as the argument register
get a new register of the same type as the argument register operand
create a twin entry required when the same mir gc point
return the instruction with this entry
get a new register of the appropriate type to hold values of type
add a new spill list element for this map element
mir get the other half of the register pair that is
delete a spill list element from this map element
counts and returns the number of references for this map
counts and returns the number of register elements not spills
make a temporary register operand to hold values of the specified type
counts and returns the number of spill for this entry
return a string version of this object
make a temporary register operand that is similar to the argument
make a temporary register operand that can hold the values
make a temporary to hold an address allocating a new register
make a temporary to hold an address allocating a new register
make a temporary to hold an int allocating a new register
make a temporary to hold a boolean allocating a new register
return a new operand that is semantically equivalent to code this code
are two operands semantically equivalent
returns the string representation of this operand
make a temporary to hold a float allocating a new register
returns a copy of the current operand
make a temporary to hold a double allocating a new register
returns if this operand is the same as another operand
make a temporary to hold a long allocating a new register
make a temporary to hold a condition code allocating a new register
make a temporary to hold a guard validation allocating a new register
returns a copy of the current operand
returns if this operand is the same as another operand
returns a copy of the current operand
returns if this operand is the same as another operand
return a new operand that is semantically equivalent to code this code
are two operands semantically equivalent
returns the string representation of this operand
flip the direction of the condition return this mutated to flip value
change the condition when operands are flipped
return a new operand that is semantically equivalent to code this code
return the number of the heap variable corresponding to this
return the type corresponding to the heap variable associated with
is the operand a movable
does this operand correspond to the same heap variable as another
associate this operand with a given instruction
enumerate all the volatile gprs in this set
return a new operand that is semantically equivalent to code this code
does the operand represent a value of the reference data type
does the operand definitely represent code null code
are two operands semantically equivalent
return a new operand that is semantically equivalent to code this code
are two operands semantically equivalent
does the operand represent a value of an int like data type
returns the string representation of this operand
enumerate all the nonvolatile gprs in this set
return a new operand that is semantically equivalent to code this code
are two operands semantically equivalent
returns the string representation of this operand
return a new operand that is semantically equivalent to code this code
are two operands semantically equivalent
returns the string representation of this operand
enumerate all the volatile fprs in this set
does the operand represent a value of the int data type
enumerate all the nonvolatile fprs in this set
used in dependence graph construction
this accessor is only valid when register lists are valid
is the condition code equal
does the operand represent a value of the long data type
returns the string representation of this register
is the condition code not equal
is the condition code less equal
does the operand represent a value of the float data type
is the condition code greater equal
does the operand represent a value of the double data type
is the condition code greater
is the condition code less
does the operand represent a value of the reference data type
is the condition code higher
does the operand represent a value of the address data type
is the condition code lower
does the operand represent a value of an int like data type
does the operand represent a value of an int data type
return a new operand that is semantically equivalent to code this code
return the lower 8 bits as an int of value
is the condition code higher equal
return the lower 16 bits as an int of value
return the upper 16 bits as an int of value
does the operand definitely represent code null code
return the upper 24 bits as an int of value
are two operands semantically equivalent
is the condition code lower equal
returns the string representation of this operand
returns a copy of this branch operand
flip the probability p 1 p
are two operands semantically equivalent
returns the string representation of this operand
is the condition code an unsigned comparision
is the condition code a floating point compare
return the index of the operand in its containing instruction slow
will this floating point compare branch if the results are
convert this integer compare to a floating point cmpl
convert this integer compare to a floating point cmpg
flips the direction of the condition
translate from condition operand used by burs
flips the direction of the condition
returns the string representation of this operand
is the accessed location possibly volatile
return a new operand that is semantically equivalent to code this code
does the operand represent a value of the double data type
convert this floating point compare to the equivalent unsigned
return a new operand that is semantically equivalent to code this code
are two operands semantically equivalent
returns the string representation of this operand
returns the string representation of this operand
return a new operand that is semantically equivalent to code this code
are two operands semantically equivalent
return a new operand that is semantically equivalent to code this code
are two operands semantically equivalent
returns the string representation of this operand
returns the string representation of this operand
does the operand represent a value of the address data type
return a new operand that is semantically equivalent to code this code
return a new operand that is semantically equivalent to code this code
are two operands semantically equivalent
return a new operand that is semantically equivalent to code this code
are two operands semantically equivalent
does the operand represent a value of the float data type
returns the string representation of this operand
are two operands semantically equivalent
returns the string representation of this operand
returns the string representation of this operand
does the operand represent a value of the long data type
returns a copy of this branch operand
return a new operand that is semantically equivalent to code this code
return the lower 32 bits as an int of value
are two operands semantically equivalent
are two operands semantically equivalent
return the upper 32 bits as an int of value
returns the string representation of this operand
returns the string representation of this operand
return a new operand that is semantically equivalent to code this code
are two operands semantically equivalent
returns the string representation of this operand
are two operands semantically equivalent
does the operand represent a null pointer check
does the operand represent an array bounds check
does the operand represent a divide by zero check
does the operand represent a stack overflow check
does the operand represent a check cast
called when it is determined that the thread is stuck in native
does the operand represent a must implement trap
returns a copy of this register operand as a register operand
does the operand represent an array store check
does the operand represent a regeneration trap
returns a copy of this use register operand as another use reg operand
return a new operand that is semantically equivalent to code this code
returns a copy of this def register operand as a use
are two operands semantically equivalent
return a new operand that is semantically equivalent to code this code
returns the string representation of this operand
returns the string representation of this operand
returns a copy of this use register operand as a def
return the numeric value representing the trap code this is
returns a copy of this def register operand as a def
return a new operand that is semantically equivalent to code this code
is the operand a movable
given two longs evaluate the condition on them
are two operands semantically equivalent
returns the string representation of this operand
copy type information from the given operand into this one
get whether this operand represents a method call that never
record whether this operand represents a method call that never
return whether this operand is the off branch of a guarded inline
record that this operand is the off branch of a guarded inline
refine the target information
refine the target information
refine the target information
return a new operand that is semantically equivalent to code this code
are two operands semantically equivalent
returns the string representation of this operand
get the jtoc register
get a temporary that represents the jtoc register as an address
get a temporary that represents the jtoc register as an object
returns the string representation of this basic block
are there more elements in the enumeration
is a certain physical register allocatable
get the next instruction in the enumeration
get the next instruction in the enumeration
are there any more elements in the enumeration
add a new exception type to an extant exception handler block
return yes no maybe values that answer the question is it possible for
return yes no maybe values that answer the question is it guarenteed that
next element in the enumeration
get how many table entires this ehbb needs
returns the set of registers live before the first instruction of
set the set of registers live before the first instruction of
next element in the enumeration
return a string representation of the basic block
returns the number of gc points in this map i
calculates the number of spill entries in this gcirmap
are there any more elements in the enumeration
this method inserts a new entry into the gcirmap
this method removes an entry in the gcirmap that is specified
this method moves an entry in the gcirmap that is specified
next element in the enumeration
this method inserts an entry for a twin instruction immediately after the
is this the gc thread
set this register as having a precise type
return the entry node of the fcfg
how many real instructions does the block contain
return the exit node of the fcfg
return the first basic block with respect to
return the last basic block with respect to
replace fall through in this block by an explicit goto
create a copy of this instruction
should this thread run concurrently with stw gc and ignore handshakes
add an fcfg edge from the given basic block to the exit node
remove a basic block from both the cfg and code ordering
remove a basic block from the fcfg leaving the code ordering unchanged
remove a basic block from the code ordering
insert a block to add not currently in the code ordering after
merge two sets of register flags
return the next instruction with respect to the current
insert a block to add not currently in the code ordering before
currently all flags are inheritable so copy all flags from src
currently all flags are meetable so mask flags together
make bb2 follow bb1 in the code ordering
return the previous instruction with respect to the current
return true if we have any bits set flag true that other
create a break in the code order between bb1 and bb2
get the thread to use for building stack traces
clear the code ordering information for the cfg
get the basic block that contains this instruction
are we in ssa form
set the source position description
are we in ssa form thats broken awaiting re entry
get info scratch short
handle the case of exception handling triggering new exceptions
set info scratch short
sets scratch object of the register operand to parameter
sets scratch object of the register operand to parameter
returns the scratch object of the register operand
modify the register
get the offset into the machine code array in bytes that
print the instructions in this ir to system
should strictfp be adhered to for the given instructions
only for use by
return the first instruction with respect to
return a string representation of this cell
include a single basic block in this set
include all basic blocks in this set
return a set of all the volatile registers
return the instructions operator
this pass performs peephole branch optimizations
this method actually does the work of attempting to
return the last instruction with respect to
is a conditional branch a candidate to be flipped
return the opcode of the instructions operator
flip a conditional branch and remove the trailing goto
return the first basic block with respect to
this is the method that actually does the work of the phase
this method determines if the phase should be run based on the
returns the name of the phase
return the last basic block with respect to
get the number of operands in this instruction
append an instruction to the current basic block
dump this threads identifying information for debugging via
forward with respect to the current code linearization order
get the basic block for this dominator tree node
reorder basic blocks either by trivially moving infrequent blocks
reverse with respect to the current code linearization order
return a string representation of this phase
main driver for the post dominator calculation
returns the number of operands that are defs
this method actually does the work of attempting to
enumerate the basic blocks in the ir in an arbitrary order
is the basic block represented by this structure dominated by another
should the optimisation be performed
returns the number of operands that are pure defs
return a string representation of this phase
forward with respect to the current code linearization order
main driver for the dominator calculation
check to make sure all nodes were reached
make a field reference operand referring to the given field with the
dump this threads identifying information for debugging via
returns the number of operands that are pure uses
reverse with respect to the current code linearization order
do simplistic static splitting to create hot traces
get the first node either entry or exit
print the next nodes either out or in for the passed block
return the candidate test in b or code null code if
return an enumeration of the parameters to the ir
return the cold predecessor to the argument block
returns the number of operands that are uses
returns an enumeration of the next nodes either out or in for the
return the off trace successor of b
simplistic cost estimate since we
returns an enumeration of the prev nodes either in or out for the
is the operand a parameter of the ir
replace all occurances of the first operand with the second
this method inspects the passed block and returns the following
this recursive method performs the path compression
how many bytes of parameters does this method take
is this a countable loop of the form
is a conditional branch a candidate to be flipped
replace any operands that are similar to the first operand
this final step sets the final dominator information
dump this threads identifying information for debugging via
is this an affine loop of the form
recompute the basic block map so can use get basic block int
returns the current dominator for the passed block
flip a conditional branch and remove the trailing goto
returns the parent for the passed block
is this loop a non regular loop
get the basic block with a given number
returns the ancestor for the passed block
replace all occurances of register r with register n
is this value modified by the loop
returns the current semidominator for the passed block
get an enumeration of all the basic blocks whose numbers
returns the size associated with the block
get the child node for this block
does this instruction hold any memory or stack location operands
is this operand related to the iterator of this loop
print the result of the dfs numbering performed in step 1
is this operand related to the phi iterator of this loop
enumerate all leaf operands of an instruction
set the frequency of each basic block to 1
make a type operand that refers to the given type
is this operand related to the carried iterator of this loop
postorder traversal of lst computing loop multiplier and loop exits
do any of the instructions in a basic block define a long
compute the loop multiplier for this loop nest
enumerate all memory operands of an instruction
is the loop iterator monotonic
this method returns the set of blocks that dominates the passed
sets the semidominator for this node
returns the semidomintor for this node
sets the immediate dominator for this node
returns the immediate dominator for this node
sets the parent of this block
returns the parent of this block
enumerate all the root operands of an instruction
densely number all the instructions currently in this ir
removes the passed block from the bucket for this node
return the stride value for monotonic loops
adds the passed block from the bucket for this node
sets the ancestor for the value passed
returns the ancestor for this block
sets the label
returns the label
evaluate the cost of a basic block in number of real instructions
sets the size
sets the child field
is the loop iterator a monotonic increasing value
set the scratch word on all instructions currently in this
returns the child
dump this threads info for debugging
helper method to return the info field associated with a block
enumerate all defs both pure defs and def uses of an instruction
set the basic block enum field
prints a string version of objection
evaluate an equation with the meet operation
return a string representation of the operator
return a string representation
should this phase be performed
returns dominator tree
is a given basic block in an innermost loop
is the loop iterator a monotonic decreasing value
clear set to zero the scratch word on all
initialize the lattice variables dominator sets for
make a type operand that refers to the given type
initialize the work list for the dataflow equation system
make a new df lattice cell key corresponding to a basic block
return the root node of the tree
enumerate all the pure defs ie not including def uses of an instruction
get the first node either entry or exit
insert each instruction in a list before instruction s
clear set to null the scratch object on
return the parent of the vertex corresponding to a basic
does this basic block appear in the loop
return the already calculated dominance frontier for
return the already calculated dominance frontier for
enumerate all the pure uses ie not including def uses of an instruction
clear set to null the scratch object on
does basic block number b dominate all basic blocks in a set
does basic block number master dominate basic block number slave
clears the back edges for the basic block passed
converts the annotated loop to a concise string
does basic block number master dominate basic block number slave
return the number of symbolic registers for this ir
creates domniator tree nodes for the passed block and adds them to the
enumerate all the def uses of an instruction
return the distance from the root of the dominator tree to a given
returns the name of the phase
a compiler phase to construct the loop structure tree lst
build the loop structure tree lst for the given ir
prune the exceptional out edges for each basic block in the ir
this is the method that actually does the work of the phase
does this equation contain an appearance of a given cell
return a string representation of this object
return a string representation of the dataflow solution
return the lattice cell corresponding to an object
enumerate all root uses of an instruction
note that this variable appears on the rhs of an equation
return an enumeration of the equations which use the result of this
note that this variable appears on the lhs of an equation
is the a particular block in this loop
return an enumeration of the equations upon whose results this
partially convert the fcfg into a more traditional
does the instruction represent a simple move the value is unchanged
return an enumeration of basic blocks corresponding to a depth
states whether liveness for handlers is available
solve the set of dataflow equations
implementation for graph interface
enumerate the nodes in the graph
return the solution of the dataflow equation system
add a node to the graph
return a string representation of the system
return an enumeration of basic blocks corresponding to a depth
record whether or not liveness information for handlers is available
the main entrypoint for this pass
is the instruction an intraprocedural branch
get the number of equations in this system
add an equation to the work list
verify that the ir is well formed
add all new equations to the work list
add all equations to the work list
is the instruction a conditional intraprocedural branch
call this method when the contents of a lattice cell
find the cell matching this key
add an equation with one operand on the right hand side
determine the spill location given the frame ptr and spill offset
get address of the first spill location for the given frame ptr
get address of the last spill location for the given frame ptr
add an equation to the system with an arbitrary number of operands on
is this instruction a branch that has that has only two possible
return the df lattice cell corresponding to a key
add all equations which contain a given cell to the work list
get compiler that generated this methods machine code
is the instruction an unconditional intraprocedural branch
get handler to deal with stack unwinding and exception delivery
update the worklist assuming that a particular equation
number the equations in topological order
fetch symbolic reference to a method thats called
is the instruction a direct intraprocedural branch
process a regular block within the loop
find source line number corresponding to one of this methods
is the instruction an indirect intraprocedural branch
simulate a load from a given local variable of an int
get the carried loop iterator
is the instruction a call one kind of interprocedural branch
is the instruction a pure call one kind of interprocedural branch
insert a block to the end of the list
this method searches the machine code maps and determines if
verify that every non physical non parameter symbolic register
determine the stack location given the frame ptr and spill offset
get address of the first spill location for the frame ptr
is the iterator at the end of the vector
is the instruction a conditional call
get the next element from the vector and move the current block along
is the instruction an unconditional call
check whether uses follow definitions and that in ssa form
simulate a load from a given local variable of a float
does the instruction compute some expression
is the instruction a direct call
get the next element from the vector and return without requiring a cast
is the given instruction a check instruction
is the instruction an indirect call
string representation of the object
is the instruction an explicit load of a finite set of values from
process a store instruction
should the instruction be treated as a load from some unknown location s
is the instruction an explicit store of a finite set of values to
simulate a load from a given local variable of a reference
should the instruction be treated as a store to some unknown location s
return the number of non volatile gprs used by this method
eliminate all ae tuples that contain a given operand
return the number of non volatile fprs used by this method
is the instruction a throw of a java exception
set the number of non volatile gprs used by this method
set the number of non volatile fprs used by this method
eliminate all ae tuples that cache any memory location
is the instruction a pei potentially excepting instruction
gather cumulative stats about the space consumed by maps
has the instruction been explictly marked as a a pei potentially excepting instruction
build burs trees for dependence graph code bb code label the trees and
create the mir instruction given by operator from the binary lir operands
unused hashcode method
simulate a load from a given local variable of a long
is the instruction a potential gc point
does this expression represent the result of a load or store
is the instruction a potential thread switch point
does this expression represent the result of a load
is the instruction a compare val val condition
does this expression represent the result of a store
build burs trees for dependence graph dg label the trees and
is the instruction an actual memory allocation instruction
stage 1b do bookkeeping to make it easier to identify
does this expression represent the result of a bounds check
is the instruction a return interprocedural branch
create the mir instruction given by operator from the binary lir operands
is this expression commutative
simulate a load from a given local variable of a double
is the instruction an acquire monitorenter lock
is the instruction a release monitorexit unlock
stage 3 label the trees with their min cost cover
return the number of specialized methods
could the instruction either directly or indirectly
move op into a register operand if it isnt one already
find or create a specialized method in this context
create specialized method in this context
generate code to specialize a method in this context
is the instruction a yield point
the resource class of this reservation
returns a string representation of scheduling info
checks whether this reservation is for all available units of the class
record that this instruction is not a pei
grows the ru map to a given size
compares this object against the specified object
reserves resources for given instruction at given time
checks whether this reservation conflicts with specified reservation
frees resources for given instruction
should we print the dependence graph
returns a string representation of the resource map
set corresponding graph node for instruction
perform instruction scheduling for a method
return corresponding graph node for instruction
burs expansion of a commutative sse2 operation
perform dfs to compute critical path for all instructions
note only for use on mir instructions
sort basic block by scheduled time
are there nodes to process on the stack
remove a node from the ready set
note only for use on mir instructions
reset iteration to initial state
initialize boot image compiler
compile a method with bytecodes
note only for use on mir instructions
given a index in the local area biased local0 has index 1
gets the location of the next return address after the current position
note only for use on mir instructions
cleanup pointers used with method maps to release data structures early
process the effect of the ret instructions on the precedance table
for debugging used with check ref map
return the probability in the range 0
for every handler make a block that starts with the handler pc
given a index in the local area biased local0 has index 1
record the probability in the range 0
for every try start make a block that starts with the try start
invert the probabilty of this branch being taken
mark all the blocks within try range as being try blocks
size of individul maps
show the basic information for a single unusualmap this is for testing use
push a single width operand int float ref
return true if this instruction is the first instruction in a
return whether or not the instruction offset corresponds to an uninterruptible context
return true if this instruction is the last instruction in a
set the stack browser to the innermost logical stack frame of this method
for debugging used with check ref maps
advance the stack browser up one internal stack frame if possible
print this compiled methods portion of a stack trace
mainly intended for assertion checking returns true if the instruction
print the e table
set the lock acquisition offset for synchronized methods
insertion insert new instr immediately after this in the
generate instructions to acquire lock on entry to a method
insertion insert new instr immediately before this in the
return the number of bytes used to encode the compiler specific mapping
push a copy of the given operand onto simulated stack
replacement replace this with new instr
to be called when the vm is about to exit
generate instructions to release lock on exit from a method
removal remove this from the instruction stream
called when all the recording for this map is complete
after code is generated translate the bytecode indices
pop an int operand from the stack
given a index in the local area biased local0 has index 1
validate that that pushing bytes actually written
pop a ref operand from the stack
subroutine to deep copy an unusual map into the jsr info
subroutine to copy a bitmap into the extra unusualmap
pop a ref operand from the stack
emit the code to push an intlike boolean byte char short int value
this routine is used to clean out the method map of structures that
note it is incorrect to use get operand with a constant argument
note it is incorrect to use get clear operand with a constant argument
emit the code to push a float value
pop an int from the stack to be used in a shift
show the basic information for a single map
show the offsets for all the maps
emit the code to push a double value
offset of java local variable off stack pointer
are two instructions similar i
emit the code to push a double value
set the stack browser to the innermost logical stack frame of this method
allow burs a back door into link with next
translate a fp offset into an sp offset
might this instruction be a load from a field that is declared
emit the code to push a long value
get the unique jni on load symbol associated with this library
get the unique jni on unload symbol associated with this library
browse up one frame failing if we fall off the stack
are there more stack frames
called after weve successfully loaded the shared library
browse up one frame eliding native frames
set the dynamic link information
set the current bytecode index called only by the appropriate compiled method code
set the current method called only by the appropriate compiled method code
look up this dynamic library for a symbol
set the current compiled method called only by the appropriate compiled method code
set the inline encoding for opt compiled methods only
tell the operating system to remove the dynamic library from the
the bytecode index associated with the current stack frame
emit the code to push a long value
the method associated with the current stack frame
the compiled method associated with the current stack frame
the class of the method associated with the current stack frame
the class loader of the method associated with the current stack frame
get class name
return the data type of the given operand assuming that the operand is
emit the code to push a reference address value
get method name
initialize a thread specific jni environment
get the compiled method at element
emit the code to poke an address
push a reference onto thread local jnirefs stack
return the data type of the given operand assuming that the operand is
the vm is about to exit
emit the code to poke an int
get a reference from the jnirefs stack
prepare to scan a threads stack and saved registers for object references
remove a reference from the jnirefs stack
emit the code to pop a char value from the expression stack into
assert that the given operand is of the given type or of
put some basic properties about this vm build current execution into the feed
append a code array to the current machine code
define an event type
define an event type
define an event type
emit the code to pop a short value from the expression stack into
string represenation of this local variable
string representation of the local variable table
create an instance of this type of annotation with the values
emit the code to pop a byte value from the expression stack into
return a string representation of the annotation of the form
string representation of the value pair of the form
find the value for an annotation
is this method a bridge method bridge methods are generated in some cases
entry point to factory
is this a varargs method taking a variable number of arguments
emit the code to pop an intlike boolean byte char short int value
get the element type of for this array type
are two members equivalent
get array type corresponding to this array element type
print a debug string to the sys write stream
compute hash code from meth
return the dimensionality of the type
return the innermost element type reference for an array
ordering for sorted annotation members
should all allocation from this method go to a non moving space
emit the code to pop a float value
emit the trap pattern trap llt 1 we use for nullchecks on reg
do this and that definitely refer to the different methods
do this and that definitely refer to the same method
get the native ip for this method
has the method reference already been resolved into a target method
get the native toc for this method
find the rvmmethod that this method reference refers to using
is the method reference to a magic method nb
if using embedded imts get offset of interface method slot in tib
return a string representation of the current basic block set
emit the code to pop a double value
is the method reference to a specialized invoke nb
is the method reference to a magic method nb
should assertions be enabled on this type
find the rvmmethod that this member reference refers to using
find the rvmmethod that this member reference refers to using
find the rvmmethod that this member reference refers to using
is this field a type that must never move
compile a specialized version of a template method
emit the code to push a long value
how many stackslots do value of this type take
does the field hold a reference
does the field hold a reference
emit the code to pop a long value
is this field invisible to the memory management system
make this field a traced field by garbage collection
get the value from the runtime final field
read one object ref from heap using rvm object model gc safe
emit the code to pop a reference address value
how many stackslots do value of this type take
do this and that definitely refer to the different fields
do this and that definitely refer to the same field
find the rvmfield that this field reference refers to using
generate the code for this method
emit the code to peek a float value
get a representation of the bytecodes in the code attribute of this method
assign one object ref from heap using rvm object model gc safe
size of bytecodes for this method
assign one object ref from heap using rvm object model gc safe
initialization is a no op arrays have no clinit method
generate the code for this method
do this and that definitely refer to the different types
emit the code to peek a double value
do this and that definitely refer to the same type
checks if the method is in state for osr specialization now
sets method in state for osr specialization i
package name something like java
restores the original state of the method
force the resolution of the type reference
returns the osr prologue length for adjusting various tables and maps
returns a bytecode stream of osr prologue
emit the code to peek a long value
returns the synthesized bytecode stream with osr prologue
sorting method for comparable
equals method to be consistent with comparable
print this emitter set readably
return the difference between the number of emit methods in this set that
generate a boundscheck instruction for the given operand and index
set the value of the runtime service method flag to the argument
get the modifiers associated with this class
generic type information for class
name of source file from which class was compiled
does this class directly define a final instance field has implications for jmm
class that declared this class or null if this is not an
class that immediately encloses this class or null if this is not an
find description of a field of this class
find description of a field of this class
find description of a method of this class
find the first description of a method of this class
get or create a block at the specified target
find description of public static void main string
set the imt object
get offset of a literal constant in bytes
get or create a block at the specified target
get description of a literal constant
should the methods of this class save incoming registers
get a heap address for the object
return code true code if this instance is zero
return code true code if this instance is the maximum allowable
fabricate an code object reference code instance from an
return an integer that reflects the value of this
return a code long code that reflects the value of this
return a code word code instance that reflects the value of
returns a hash code value for the key
set object representing available holes in the field layout
map an address to an object
identity hash code of an object
mark the entry as requiring an identity hash code
emit the code to load the counter array into the given register
set object representing available holes in the field layout
get image code size in bytes
return the size of the rmap
allocate a scalar object
returns a hash code value for the key
allocate an array object
return true if this
allocate an array object
return true if this
allocate an array object
set the alignment for instances of this class type
return true if this
round a size in bytes up to the next value of min alignment
return true if this
return true if this
increment an edge counter
reset the allocator as if no allocation had occured
return true if this
fill in 1 byte of bootimage
set a byte in the reference bytemap to indicate that there is an
prefetch a cache line architecture independent
fill in 2 bytes of bootimage
fill in 4 bytes of bootimage as numeric
ia32 prefetchnta operation fetches the data into the
fill in 4 8 bytes of bootimage as object reference
fill in 4 8 bytes of bootimage as null object reference
fill in 4 8 bytes of bootimage as null object reference
fill in 8 bytes of bootimage
write contents of this processors modified data cache back to
keep track of how many references were set null because they pointed to
touch a data cache block use to prefetch
touch a data cache block for a store use to prefetch on a
zero all bytes of this 32 byte cache block without forcing a read
zero all bytes of this cache block without forcing a read use to
the icbi instruction invalidates a block containing the byte
loads a reference from the memory location pointed to by the
loads a reference from the memory location pointed to by the
reset all data in this stream to default values
distribute a value across a sequence of tiles
send the data and summary for this stream
end the transmission for this event
loads a byte from the memory location pointed to by the
distribute a value across a sequence of tiles
send the data and summary for this stream
set the stream address and id called by abstract driver
mark final fields as being available as literals
distribute a value across a sequence of tiles
loads a byte from the memory location pointed to by the
send the data and summary for this stream
set the summary value for presentation styles with just one value
set the summary values for presentation styles with two values i
send the summary data for this stream
loads a char from the memory location pointed to by the
copy the values of all static final fields into
loads a char from the memory location pointed to by the
loads a short from the memory location pointed to by the
return the number of pages reserved for use given the pending allocation
calculate the number of pages a collection is required to free to satisfy
prepare for a new collection pass
prepare for a new collection pass
release resources after completing a collection pass
loads a short from the memory location pointed to by the
loads a float from the memory location pointed to by the
unregisters all native methods
loads a float from the memory location pointed to by the
add to list of classes that derive from this one
loads an int from the memory location pointed to by the
loads an int from the memory location pointed to by the
given a method declared by this class update all
loads a long from the memory location pointed to by the
loads a long from the memory location pointed to by the
update the jtoc slot for the given static method to point to
loads a code double code from the memory location pointed to by the
update this classs tib entry for the given method to point to
report a field that is part of our librarys gnu classpaths
loads a code double code from the memory location pointed to by the
update the tib entrys for all classes that inherit the given method
classes used as interfaces get assigned an interface id
loads a word value from the memory location pointed to by the
return the space into which an allocator is allocating
return the allocator instance associated with a space
loads a word value from the memory location pointed to by the
stores the address value in the memory location pointed to by the
stores the address value in the memory location pointed to by the
display a phase for debugging purposes
perform any required write barrier action when installing an object reference
stores the address value in the memory location pointed to by the
emit code to perform an unsigned comparison on 2 address values
stores the code float code value in the memory location pointed to by
flush the local buffers of all deques
stores a code float code in the memory location pointed to by the
report nulling out a pointer
generate code to invoke arbitrary method with arbitrary parameters return value
any plan can override this to provide additional plan specific
stores the code byte code value in the memory location pointed to by
if a finalizable object has moved return the new location
stores the byte value in the memory location pointed to by the
perform any required write barrier action when installing an object reference
generic trace routine
set the thin lock offset for instances of this type
an object is unreachable and is about to be added to the
stores a code double code value in the memory location pointed to
generate call and return sequence to invoke a c function through the
return true if an object is ready to move to the finalizable
force the next collection to be full heap
return the expected reference count
perform a linear scan of all spaces to check for possible leaks
prepare for a new collection pass
prepare for a new collection pass
release resources after completing a collection pass
is there any work outstanding in this trace
push an entity onto the context
return the number of pages available for allocation
stores a short value in the memory location pointed to by the
return the number of pages reserved for collection
push a field access onto the context
a user triggered gc has been initiated
return the number of pages reserved for use given the pending
return the expected reference count
stores a short value in the memory location pointed to by the
add an object to the modified objects buffer and mark the
calculate the number of pages a collection is required to free to satisfy
push an array access onto the context
the minimum number of pages a gc must have available after a collection
is the specified object live
prepare for an atomic store operation
process any remembered set entries
return the number of metadata pages reserved for use given the pending
prepare for an atomic store operation
prepare for an atomic store operation
log a message from within poll
return the number of pages used given the pending
perform garbage collection
this method controls the triggering of a gc
prepare for an atomic store operation
is the specified object reachable
return the expected reference count
this method controls the triggering of an atomic phase of a concurrent
prepare for an atomic store operation
return the allocator instance associated with a space
perform a per mutator collection phase
is the specified object reachable
prepare for an atomic store operation
return the number of pages available for allocation i assuming
calculate the number of pages a collection is required to free to satisfy
is the specified object reachable
prepare for an atomic store operation
return the allocator instance associated with a space
ensure that the referenced object will not move from this point through
ensure that this object will not move for the rest of the gc
prepare for an atomic store operation
attempt an atomic store operation
perform a per collector collection phase
called before the mutator context is used but after the context has been
perform a per mutator collection phase
return the allocator instance associated with a space
return true if code obj code is a live object
attempt an atomic store operation
will this object move from this point on during the current trace
return true if code obj code is a reachable object
is this object guaranteed not to move during the collection
will this object move from this point on during the current trace
print some debugging info
attempt an atomic store operation
return the number of pages reserved for use given the pending
return the allocator instance associated with a space
pass a root to all drivers
calculate the number of pages a collection is required to free to satisfy
gather data for the immortal space
gather data for gcspy for the semispaces the immortal space and the large
return the allocator instance associated with a space
attempt an atomic store operation
debugging info for the semispaces
return the number of pages reserved for use given the pending
perform some concurrent collection work
flush the buffer to the trace
return the number of pages reserved for collection
validate the scheduled sub phases
calculate the number of pages a collection is required to free to satisfy
the number of scheduled sub phases
return the expected reference count
return an individual scheduled sub phase
display a description of this phase for debugging purposes
replace a scheduled phase
attempt an atomic store operation
process any remembered set entries
replace a scheduled phase
replace a placeholder phase
decide which threads will be helpers and let helpers grab their resources
attempt an atomic store operation
trace an edge during gc
trace a node during gc
notify that the collector context is registered and ready to execute
abort concurrent work due to pre empt by stop the world collection
allow concurrent work to continue
attempt an atomic store operation
prepare for a collection
called for live objects in heap
first closure is depth measuring in single thread
only accept non negative values
return the number of pages reserved for use given the pending allocation
calculate the number of pages a collection is required to free to satisfy
only accept non negative values
ensure the value is valid
notify that a new block has been installed
notify that the mutator context is registered and ready to execute
is the specified object live
a new collection increment has completed
a new collection increment has completed
return the space into which an allocator is allocating
trace a reference into the mature space during gc
return true if code obj code is a live object
execute a per collector collection phase
return true if this object is guaranteed not to move during this
called before the mutator context is used but after the context has been
execute a per mutator collection phase
return true if this object is guaranteed not to move during this
return the number of pages available for allocation into the mature
process any remembered set entries
force the next collection to be full heap
flush mutator context in response to a request mutator flush
return the allocator instance associated with a space
flush per mutator remembered sets into the global remset pool
independent of how many pages remain in the page budget a function of
assert that the remsets have been flushed
is the specified object live
return true if this object is guaranteed not to move during this
should we inline a call site
calculate the number of pages a collection is required to free to satisfy
return the number of pages available for allocation into the mature
return the mark state incremented or decremented by one
return the allocator instance associated with a space
is the specified object live
will the object move from now on during the collection
print pre collection statistics
is the specified object live
is the specified object live
return the allocator instance associated with a space
return the expected reference count
return the number of pages available for allocation into the mature
is the specified object live
will this object move from this point on during the current trace
return the number of pages reserved for use given the pending
calculate the number of pages a collection is required to free to satisfy
will this object move from this point on during the current trace
return the allocator instance associated with a space
return the expected reference count
is the specified object live
return the allocator instance associated with a space
return the number of pages reserved for use given the pending
is the specified object live
calculate the number of pages a collection is required to free to satisfy
reset the allocator
given an allocation which starts a new card create a record of
adds a character to the buffer
will this object move from this point on during the current trace
forward data table using the supplied trace
adds a string to the buffer
get an entry for an object
process an object during a linear scan of the heap
gather data for gcspy
process an object during sanity checking validating data
flushes the buffer
gather data for gcspy
nursery can not be empty
nursery can not be empty
only accept non negative values
only accept values between 1 and 100 inclusive
sets the flag so that a thread identifier will be included before
ensure the value is valid
ensure the value is valid
ensure the tile size is positive
trace rate must be positive
ensure the port is valid
ensure that the value is sensible
return the sorting key for the object passed as a parameter
initialize a unit as a sentinel
reset the local buffer throwing away any local entries
get the size of a lump of units
buffer space has been exhausted allocate a new buffer and enqueue
prepare for parallel processing where a specific number
reset the local buffer throwing away any local entries
set the size of lump of units
buffer space has been exhausted allocate a new buffer and enqueue
establish whether a lump of units is free
increment the event counter by code value code
start this counter
start this counter
set the prev pointer in a buffer forming the linked buffer chain
stop this counter
stop this counter
print current mid phase units
the phase has changed from gc to mutator or mutator to gc
get the next lump in the doubly linked free list
increment the event counter
check the number of buffers in the work queue for debugging
print statistics for the most recent phase
push an address on to the stack
increment the event counter by code value code
set the boolean to true for this phase increment the total
start this counter
set the next lump in the doubly linked free list
stop this counter
lock this shared queue
pop an address from the stack
get the previous lump in the doubly linked free list
special process for long double constants
debug routine used to check if the object buffer is sorted correctly in
set the previous lump in the doubly linked free list
release the lock
get the name of this driver type
set the uncoalescable bit associated with this unit
setup summaries part of the code transmit code method
get the name of this driver type
handle a remset address
is the current round of processing complete
clear the uncoalescable bit associated with this unit
reset the remset stream
get the name of this driver type
update the tile statistics
get the lump to the left of the current lump i
register a set of abstract driver instances to be notified about direct references
reset a new subspace
process an edge
reset a new subspace
get the contents of an entry
is an index in the range of this subspace
reset the tile stats for all streams including values used for summaries
get the maximum number of tiles in this space
is address in the range of this subspace
get the block index from an address
update the tile statistics
get the address of start of block from its index
set the contents of an entry
setup summaries part of the code transmit code method
count number of tiles in an address range
handle a root address
get the name of this driver type
calculate the space remaining in a block after this address
reset the roots stream
count number of tiles in an address range
handle a remset address
dump a representation of the subspace
handle a direct reference from the immortal space
indicate the limits of a space
indicate the limits of a space
reset the statistics for all the streams including totals used for summaries
setup the tile names in a subspace
flip the roles of the spaces in preparation for a collection
allocate code size code units
special process for long double constants
gather data for gcspy from the nursery
return true if a cell is on a given treadmill
gather data for gcspy
reduce a lump of units to size freeing any excess
the typical maximum number of objects in each tile
coalesce two or three contiguous lumps of units removing start
update the tile statistics
is the server connected to a gcspy client
is this a discontiguous space request
add a lump of units to the free list
commit pages to the page budget
remove a lump of units from the free list
adjust a page request to include metadata requirements if any
scan an object found at a location
check if this object is an array of primitives
get the lump to the right of the current lump i
adjust a page request to include metadata requirements if any
transmit the data if this event is of interest to the client
scan an object found at a location
notify that several pages are no longer in use
scan an object found at a location
setup summaries part of the code transmit code method
notify that previously unused pages are in use again
handle a direct reference from the immortal space
prepare for a collection
finish up after a collection
gather data for gcspy from the nursery
set space info
setup control info part of the code transmit code method
gather data for gcspy for an older space
adjust the start and cursor fields to point to the next chunk
return the size of the super page
initialise the value of a control
add a control to the tile
set the control
prepare for a collection
release after a collection
get the controls for a tile
release this copy space after a collection
notify that several pages are no longer in use
notify that a new block has been installed
notify that several pages are no longer in use
set the control value in each tile in a region
prepare for a new collection increment
a new collection increment has completed
send all the streams for this space if it has changed
prepare for a new collection increment
return true if this object is live in this gc
is this object live
prepare for a new collection increment
has the object in this space been reached during the current collection
has the object in this space been reached during the current collection
prepare for a new collection increment
a new collection increment has completed
sweep through the large pages releasing all superpages on the
return a block to the global pool
returns if the object in question is currently thought to be reachable
this instance will be age segregated using the sticky mark bits
extend the virtual memory associated with a particular discontiguous
this hook is called by page resources each time a space grows
return a block to the global pool
prepare for a new collection increment
release one or more contiguous chunks associated with a discontiguous
has the object in this space been reached during the current collection
prepare for a new collection increment
this is the treadmill used by the large object space
prepare for a collection
prepare for a collection
a chunk iterator
finish up after a collection
determine the collection kind
a chunk iterator
a chunk iterator
a chunk iterator
return the number of pages allocated since the last collection
gets the specified local variable
return the mark state incremented or decremented by one
notify that a new block has been installed
should the sweep reclaim the cell containing this object
the maximum number collection attempts across threads
report that the the physical allocation has succeeded
log a message
log a thread identifier and a message
report that a physical allocation has failed
does the vm consider this an emergency allocation where the normal
returns if the vm is ready for a garbage collection
given a method name determine if it is a real method or one
create or retrieve the option set used for mmtk options
prepares for using the code compute all roots code method
gets the specified local variable long double
add a reference at the end of the table
update the reference table
computes static roots
reset the mutator iterator
return the next code mutator context code in a
retrieve from the reference table
compute all roots out of the vms boot image if any
trace a reference to an object
tell the native driver the tile name
add an event to the server interpreter
tell the native driver the tile name
set the general info for the server interpreter
start the server running its main loop in a pthread
tell the native driver the tile names
are we connected to a gcspy client
tell the c driver to resize
weak and soft references always clear the referent
start compensation timer so that time spent gathering data is
start a transmission
stop compensation timer so that time spent gathering data is
add a stream to the native driver
indicate that we are at a server safe point e
get the referent from a reference
start transmitting a stream
discover the smallest header size for objects
send a byte
set the referent in a reference
send a short
send an int
clear the contents of the table
end of this stream
start to send a summary
send a summary value
end the summary
the number of entries in the table
send all the control info for the space
mark the line s associated with a given object
the number of entries ready to be finalized
send info for this space
the number of entries ready to be finalized
set the specified local variable
gets a pointer to the address just past the end of the object
return the size required to copy an object
get a block for a parallel sweep
return the alignment requirement for a copy of this object
read nano time high resolution monotonically increasing clock
read a cycle counter high resolution non monotonic clock
convert nanoseconds to milliseconds
convert nanoseconds to seconds
return the alignment offset requirements for a copy of this object
convert milliseconds to nanoseconds
convert seconds to nanoseconds
initialize performance counters
read the current cycle count from the perfctr libraries
read the current event count for the metric being measured by the
return the size used by an object
when an exception occurs registers are saved temporarily
return the next object in the heap under contiguous allocation
return an object reference from knowledge of the low order word
clear all live bits for a block
is the passed object an array
is the passed object a primitive array
tests a bit available for memory manager use in an object
log a message
identify all the object pointers stored as local variables
log a thread identifier and a message
copies characters from the string into the character array
joins an already requested collection
peek at the counter
sets an element of an object array without invoking any write
trigger an asynchronous collection checking for memory
delegated scanning of a object processing each pointer field
the maximum number collection attempts across threads
invoke a specialized scan method
report that the allocation has succeeded
delegated precopying of a objects children processing each pointer field
set the specified local variable
report that a physical allocation has failed
identify all pointers into code pointers associated with a frame
pre copy all potentially movable instances used in the course of
does the vm consider this an emergency alloction where the normal
computes static roots
determine whether a collection cycle has fully completed this is
computes global roots
prepare a mutator for collection
prepare a collector for a collection
computes roots pointed to by threads their associated registers
rendezvous with all other processors returning the rank
compute all roots out of the vms boot image if any
gets the value of bits available for memory manager use in an
ensure all concurrent worker threads are scheduled
create or retrieve the option set used for mmtk options
request each mutator flush remembered sets
possibly yield the current concurrent collector thread
global preparation for a collection
create a new active plan instance using the appropriate vm specific
scan through the list of references
iterate over all references and forward
per collector preparation for a collection
return the number of references objects on the queue
sets the byte available for memory manager use in an object
per collector post collection work
create a new assert instance using the appropriate vm specific
global post collection work
sets the range of addresses associated with a heap
create a new barriers instance using the appropriate vm specific
reset the mutator iterator
demand zero mmaps an area of virtual memory
scan this frame for internal code pointers
protects access to an area of virtual memory
read the byte available for memory manager use in an object
create a new collection instance using the appropriate vm specific
allows access to an area of virtual memory
zero a region of memory
create a new config instance using the appropriate vm specific
zero a range of pages of memory
logs the contents of an address and the surrounding memory to the
create a new lock instance using the appropriate vm specific
sets the bits available for memory manager use in an object
aix specific code
create a new memory instance using the appropriate vm specific
create a new object model instance using the appropriate vm specific
read the bits available for memory manager use in an object
create a new reference processor instance using the appropriate vm specific
create a new finalizable processor instance using the appropriate vm specific
create a new scanning instance using the appropriate vm specific
create a new statistics instance using the appropriate vm specific
create a new strings instance using the appropriate vm specific
return the size required to copy an object
create a new synchronized counter instance using the appropriate
return the alignment requirement for a copy of this object
acquire the appropriate lock depending on whether the context is
create a new util instance using the appropriate vm specific
logs a message and traceback then exits
checks that the given condition is true
checks that the given condition is true
print out the basic information associated with the top frame on
print a stack trace
checks if the virtual machine is running
return the alignment offset requirements for a copy of this object
create a new server interpreter instance using the appropriate vm specific
returns an address guaranteed to be inside the storage assocatied
return a property of type string
return a property of type string with default
return a property of type int
return a property of type string with default
return a property of type boolean
return a property of type boolean with default
returns the number of collections that have occurred
return the size used by an object
release the appropriate lock depending on whether the context is
read the cycle counter
initialize performance counters
print out information associated with a reference
read the current cycle count from the perfctr libraries
read the current event count for the metric being measured by the
dump debugging information for an object
print out the name of a method
get a heap address for the object
object hash code
is this a null reference
type cast to an int truncating on 64 bit platforms
create a string representation of the given int value as an address
type cast to a long zero extending on a 32 bit platform
create a string representation of the given int value as an address
type cast to an offset
the base address of a given cell
type cast to an extent
add two words
add an offset to a word
add an extent to a word
zero the memory in this page
subtract two words
return code true code if this instance is zero
subtract an offset from a word
subtract an extent from a word
return code true code if this instance is the maximum
less than comparison
less than or equal comparison
greater than comparison
fabricate an code object reference code instance from an
load a byte value from this page
greater than or equal comparison
not equal comparison
load a char value from this page
bit wise and of two words
bit wise or of two words
bit wise complement of a word
load an integer value from this page
bit wise exclusive or of two words
left shift a word
return a code word code instance that reflects the value of
logical right shift a word
load a long value from this page
arithmetic right shift a word
add an integer to this code address code and return the sum
add an code offset code to this code address code and
only accept non negative values
only accept non negative values
add an code extent code to this code address code and
get the out of memory status
subtract an integer from this code address code and return
set the out of memory status
get the number of collection attempts
perform the actual read of memory
subtract an code offset code from this code address code and
report a collection attempt
print a new line
clear the collection attempts
mark a mutator as currently active
was the last failure a physical allocation failure
subtract an code extent code from this code address code and
a non fatal error occurred during the setting of an option
a fatal error occurred during the setting of an option
is the given word being watched
compute the difference between two code address code es and
mutator specific handling of uncaught exceptions
return true if this code address code instance is i less
return the mmtk mutator context for this mutator
return true if this code address code instance is i less
compute the thread roots for this mutator
print the thread roots and add them to a stack for processing
a gc safe point for the mutator
policy specific formatting
return true if this code address code instance is i greater
format yield statistics as a string
mark a mutator as no longer active
request a heap dump also invokes a garbage collection
return true if this code address code instance is i greater
take a snapshot of the heap before collection
take a snapshot of the heap after collection
the main collector execution loop
return true if this code address code instance is i equal
print a message that this code path should be impossible and exit
cancel the timeout
mark a mutator as currently active
assert that the given condition is true or print the failure message
return true if this code address code instance is i not equal
wait for a scheduler wake up
store a value into the data field of an object
prefetch a cache line architecture independent
wait for a gc to complete
register an incoming pointer
load and return the value of a data field of an object
scan an object calling the appropriate visitor method
trace an object calling the appropriate visitor method
trace the harness root set
loads a reference from the memory location pointed to by the
iterate over the heap depth first scanning objects until
get the hash code for the given object
loads a reference from the memory location pointed to by the
loads a byte from the memory location pointed to by the
append new instructions
get the index of the current instruction eg as a branch target
set the temporaries required to execute
resolve all the method references in this methods instructions
loads a byte from the memory location pointed to by the
format the p code for this method
resolve this method
get a free temporary from the pool or create a new one
create a new stack frame for the execution of this method
push to the top of the stack
pop off the stack
look at the top element
loads a char from the memory location pointed to by the
loads a char from the memory location pointed to by the
enter a new procedure pushing a new stack frame
exit from a procedure popping the top stack frame
visit an expression and return its type
loads a short from the memory location pointed to by the
visit a node and return its result as a register
get the data count operand from code frame code
loads a short from the memory location pointed to by the
get the reference count operand from code frame code
get the alignment operand from code frame code
get the object on which this instruction operates from the
accessor for the enclosed method
get the field index from the stack frame ie from the location
loads a float from the memory location pointed to by the
does the return instruction return a value
get the return value
format this instruction for printing
loads a float from the memory location pointed to by the
get the object on which this instruction operates from the
the source code line leading to this instruction
the source code column leading to this instruction
the source location of this instruction for error messages
the source location of this instruction for error messages
loads an int from the memory location pointed to by the
loads an int from the memory location pointed to by the
loads a long from the memory location pointed to by the
loads a long from the memory location pointed to by the
define a new field
loads a double from the memory location pointed to by the
given a starting bytecode index find the greatest bc index that
loads a double from the memory location pointed to by the
loads a word value from the memory location pointed to by the
loads a word value from the memory location pointed to by the
return from a method call
perform a method call
push a new stack frame for a given method
save context in the callers stack frame
loads an address value from the memory location pointed to by the
initialize the actual parameters in a method call
get this value as a boolean
declare a variable in a given slot
print a script stack trace
return the variable at the given slot in the current stack frame
get this value as an object
loads an address value from the memory location pointed to by the
return the type of the variable at the given slot
get this value as a boolean
assign a new value to the given slot
gc time processing of the contained object
loads a word value from the memory location pointed to by the
gc support trace this stack frame
debug printing support dump this stack frame and return roots
loads a word value from the memory location pointed to by the
return the saved program counter
save a method code array
stores the address value in the memory location pointed to by the
set the slot for the return value
clear the return value slot
set the return value
convert a return type from a java type to a scripting language value
return the slot of the variable this expression refers to
evaluate the method as an expression
stores the object reference value in the memory location pointed
execute the method as a statement
return the string representation of the most recently formatted ast
stores the address value in the memory location pointed to by the
stores the address value in the memory location pointed to by the
stores the float value in the memory location pointed to by the
stores the float value in the memory location pointed to by the
stores the word value in the memory location pointed to by the
return either the named type or a proxy for the named type
is there a type by the given name
stores the word value in the memory location pointed to by the
return the given source line numbered from 1
stores the byte value in the memory location pointed to by the
stores the byte value in the memory location pointed to by the
stores an int value in memory location pointed to by the
stores an int value in memory location pointed to by the
stores a double value in memory location pointed to by the
type cast to an int truncating on 64 bit platforms
type cast to a long zero extending on a 32 bit platform
stores a double value in memory location pointed to by the
type cast to an offset
type cast to an extent
return code true code if this instance is zero
add two words
stores a double value in memory location pointed to by the
add an offset to a word
add an extent to a word
return code true code if this instance is the maximum
subtract two words
subtract an offset from a word
fabricate an code object reference code instance from an
subtract an extent from a word
stores a double value in memory location pointed to by the
less than comparison
less than or equal comparison
stores a char value in the memory location pointed to by the
greater than comparison
greater than or equal comparison
return an long that reflects the value of this
not equal comparison
stores a char value in the memory location pointed to by the
return a code word code instance that reflects the value of
bit wise and of two words
bit wise or of two words
bit wise complement of a word
add an integer to this code address code and return the sum
bit wise exclusive or of two words
stores a short value in the memory location pointed to by the
left shift a word
update the value of the option echoing the change if the echo options
update the value of the option echoing the change if the echo options
modify the default value of the option
modify the default value of the option
logical right shift a word
update the value of the option echoing the change if the echo options
add an code offset code to this code address code and
modify the default value of the option
stores a short value in the memory location pointed to by the
modify the default value of the option
arithmetic right shift a word
update the value of the option echoing the change if the echo options
return the next option in the linked list
modify the default value of the option
update the value of the option echoing the change if the echo options
add an code extent code to this code address code and
modify the default value of the option
prepare for an atomic store operation
log the option value in plain text
search for a string in the enumeration
log the option value in xml
log the option values in xml
subtract an integer from this code address code and return
a fatal error occurred during the setting of an option
fail if a specified condition is met
a non fatal error occurred during the setting of an option
subtract an code offset code from this code address code and
modify the default value of the option
warn if a specified condition is met
prepare for an atomic store operation
update the value of the option echoing the change if the echo options
modify the default value of the option
subtract an code extent code from this code address code and
prepare for an atomic store operation
compute the difference between two code address code es and
return true if this code address code instance is i less
prepare for an atomic store operation
return true if this code address code instance is i less
prepare for an atomic store operation
return true if this code address code instance is i greater
prepare for an atomic store operation
return true if this code address code instance is i greater
returns the basic block which has the next higher bytecode index
return true if this code address code instance is i equal
prepare for an atomic store operation
return true if this code address code instance is i not equal
prepare for an atomic store operation
attempt an atomic store operation
loads a reference from the memory location pointed to by the
loads a reference from the memory location pointed to by the
attempt an atomic store operation
loads a byte from the memory location pointed to by the
attempt an atomic store operation
loads a byte from the memory location pointed to by the
attempt an atomic store operation
attempt an atomic store operation
loads a char from the memory location pointed to by the
attempt an atomic store operation
loads a char from the memory location pointed to by the
loads a short from the memory location pointed to by the
attempt an atomic store operation
loads a short from the memory location pointed to by the
attempt an atomic store operation
loads a float from the memory location pointed to by the
loads a float from the memory location pointed to by the
loads an int from the memory location pointed to by the
loads an int from the memory location pointed to by the
loads a long from the memory location pointed to by the
loads a long from the memory location pointed to by the
loads a double from the memory location pointed to by the
loads a double from the memory location pointed to by the
loads an address value from the memory location pointed to by the
loads an address value from the memory location pointed to by the
loads a word value from the memory location pointed to by the
loads a word value from the memory location pointed to by the
stores the address value in the memory location pointed to by the
stores the object reference value in the memory location pointed
stores the address value in the memory location pointed to by the
stores the address value in the memory location pointed to by the
stores the float value in the memory location pointed to by the
stores the float value in the memory location pointed to by the
stores the word value in the memory location pointed to by the
stores the word value in the memory location pointed to by the
stores the byte value in the memory location pointed to by the
stores the byte value in the memory location pointed to by the
stores an int value in memory location pointed to by the
stores an int value in memory location pointed to by the
stores a double value in memory location pointed to by the
stores a double value in memory location pointed to by the
stores a double value in memory location pointed to by the
stores a double value in memory location pointed to by the
stores a char value in the memory location pointed to by the
stores a char value in the memory location pointed to by the
stores a short value in the memory location pointed to by the
stores a short value in the memory location pointed to by the
prepare for an atomic store operation
prepare for an atomic store operation
prepare for an atomic store operation
prepare for an atomic store operation
prepare for an atomic store operation
prepare for an atomic store operation
prepare for an atomic store operation
prepare for an atomic store operation
attempt an atomic store operation
attempt an atomic store operation
attempt an atomic store operation
attempt an atomic store operation
attempt an atomic store operation
attempt an atomic store operation
attempt an atomic store operation
returns a string representation of this bble
returns a string representation of state that determines if the bble
dummy stack slot
create the table
this method initializes send button
checks if a document with the given id is already indexed
use this method to test if the index exist
calculated the doc id for the given lito id
deletes the document with the given id if stored in the database
deleted the hole index
adds a new category id to the list
deletes all items which could be reached by the forward button
init the folder tree from the database
show the exception in a message box
sets the lit data value for this synch lit data request
gets the lit data id value for this send lit file request
sets the id value for this synch lit data request
sets the lit data id value for this send lit file request
sets the filename value for this send lit file request
sets the lit time stamp value for this send lit file request
returns the value of field id
sets the value of field filename
sets the value of field id
method has id
sets the value of field father cat
sets the value of field name
computes a new filename bei adding a number if the given name already
copy file to location for files
saves the input stream to file with the given name
job is doing this for you
job is doing this for you
return total amount of workunits to do
increase done work units by one
set job state to job finished or job failed
get description of the job default is a string with the percent
compares two lit data objects by attribute defined in orderby
set the endpoint address for the specified port name
resolve a resource name
sets the name of the used classes recording directory
utility to assist with copying input stream to output stream
the action has been activated
sets a new buffer size
helper merging list2 into list1
insert all the key value pairs from code d code into
determines if the contents of a pattern matcher input instance
very similar to the standard python getattr method
equivalent to the standard python contains method
return the parent of this inferior object
return the account classs unique key
return the indicator whether the account is a liability account
return the accounts description
return the cash flow indicator for investment transactions
return the stock flow indicator for investment transactions
is this a stock account
return the currencys description
return the number of digits after the decimal point
return the decimal point separator character
return the thousands separator character
return the currency prefix
return the currency suffix
initializes the code resource bundle code used to get the
execute the tasks specified when the instance of code worker code
returns the description of this filter
returns the length of the list
returns the code string code that the code collation key code at
removes the code collation key code at the specified index from
execute the tasks specified when the instance of code worker code
sets the view coordinates of the code jscroll pane code s
returns an code action code that copies the selected region of
returns the type of substitution being performed
returns the number of alphabets the code substitution code has
appends the specified code component code to the end of
adds the event listeners the dialog needs to work as expected
returns the code jspinner code s current value
initializes the code text file chooser code s accessory that
returns the code jframe code the code substitution code uses
adds code radio button code to code rb grp code and
gets the ciphertexts coincidence index and sets it as the value of
returns the length of the selection list
returns the value at the specified index
adds a code change listener code to code subst code that
sets the selected item but does not notify any listener about
sets the selected item and notifies the listeners about
returns a code list code of code set code s that contain the
returns the selected item
sets the substitution to injective or not injective
returns the selected code collation key code
returns the instance of code collator code being used
sets the instance of code collator code being used to the one
returns a code set code with the characters that were
returns the code locale code that identifies the language
since the contents of code list code may be changed by
returns a code list model code that may be used to display the
shift the selection in the substitutions currently selected
performs the kasiski test
returns a code jmenu bar code that lets the user access some
returns the characters to be ignored in a code hash set code
returns the user character to be replaced
takes the currently selected code mono alpha subst code and assigns
returns the number being displayed by the code jspinner code
returns the replacement user character
reverses the order of the selected substitution characters in the
returns a code hash map code that uses the characters of the
sets the value of code auto collapse code to that of the
returns the code jframe code used to display the data that results
returns the cipher for which the tools are currently being displayed
returns the cipher alphabet
adds an code action listener code to the combo box
removes an code action listener code from the combo box
returns the plain alphabet
adds an action listener to code ignore btn code
removes an code action listener code from code ignore btn code
returns the kind of state change that took place
returns the index of the alphabet in the code substituion code
adds a code window listener code that warns the user when he
returns the value of code lt cryptanalysis gt code cipher
returns a code set code of code string freq code s with the
returns the code lt cryptanalysis gt code ciphertext
returns a code set code of code collation keys code with the
returns a code set code with the characters of the cipher alphabet
returns a code map code with i character replacement i pairs
returns the value of code lt alpabet rules gt code
returns a code set code with the characters of the plain alphabet
returns the value of code lt alpabet rules gt code
returns a code set code with the characters from the ciphertext
opens a window that displays the list of ignored characters
returns a code language frequencies handler code with all of the
returns a code set code of code string freq code s with the
returns a code set code of code string freq code s with the
returns a code set code of code string freq code s with the
returns a code set code of code string freq code s with the
returns a code set code of code string freq code s with the
returns a code set code of code string freq code s with the
returns the coincidence index calculated using the frequencies of the
returns the code collation key code
sets code str code to code s code
returns the code string code that the code collation key code
sets the frequency to code f code
returns a code string code object representing this
returns the name of the column code col code or code null code
returns the number of rows in the model
adds the code mouse listener code needed to let the user sort the
returns the sequence
returns the sequence in the form of a code string code
returns the length of the sequence in user characters
returns the number of times the sequence appears in the ciphertext
sets code total code to the sum of the frequencies in the list
returns the number of rows in the model
returns a code string code with this code ciphertext manager code s
saves the current cryptanalysis project to its file where it was
sets code locale code to code loc code and
returns the code list code of code string freq code s that contains
sets the value of the member variable code ignore white code to
returns the code set code of code collation key code s that stores
sets the value of the member variable code ignore control code to
returns the code list code of code string freq code s that
returns the character at the specified index in the form of a
returns the code map code that contains the character
returns the code list code of code string freq code s that contains
returns the characters to be ignored in a code hash set code
returns the code list code of code string freq code s that contains
sets the path of the file from which the relative frequencies are
returns the encoding of the file from which the relative frequencies
sets the encoding of the file from which the relative frequencies
returns the absolute path of the instance of
sets the absolute path of the instance of
adds the name of the language in the code locale code
adds the event listeners the dialog needs to add characters to
sets the name of the cryptanalysis project on the title of the
sets the name of the cryptanalysis project on the title of the
if a network contains an on neuron all added hidden and output neurons
deletes all temporary values for this epoch and all values from the
deletes all temporary values for this epoch but keeps all values from
returns the last calculated value of a neuron
creates gneuron wrapper instances for the whole network
the caller has to fire the model change events afterwards
attaches listeners to all neurons and neuron connections that inform the
calculates the fitness of all population elements and selects the best one
selects some population elements to reproduction and possibly generate better elements
reproduction of the selected elements at
mutate some population elements in attempt to increase variability of population
returns the best individual found through the generations
returns the population
register a listener for the generation creation event
unregister a listener for the generation creation event
notify all generation listeners about the creation of a new generation
pointcut where the crossover will occur
creates a random
calculate the fitness of a tour
creates an instance of a tsp model object
this method returns the refined file list but with fully qualified filenames
gets invoked if a card is inserted
gets invoked if a card is removed
install an applet on the smart card
register an applet on the smart card
check whether the card resident applet with the specified
reads the tt applet info tt of a given applet id from
provides credentials to a card service
special ms sql server version to allow the item id
get the next sequence using an oracle thread safe sequence
inclui o usu rio no sistema
sets the icon x position in whole container
sets width of the big version of image icon
sets height of the big version of image icon
sets the icon y position in whole container
sets width of the small version of image icon
sets text is html based or not
signals that potential changes to the component were ended and it can
sets height of the small version of image icon
sets main part of label first string this string is always visible
adds string to label
remove last string from label applies only to non first strings
sets the icon width
sets current focus animation time
sets alpha channel responsible for transparency
sets click animation time
sets the icon height
sets animation element number
sets the area height
sets the area width
sets visibility of shadow generated for icon
sets image type
sets true if the focus animation starting and the icon gain focus false
sets visibility of icon shadow
sets bounds of icon shadow
sets that current state occurs on root actions instead of sub actions
sets shadow image x position inside icon label
sets image bounds
sets small image of the action
sets big image of the action
sets focus time animation value used by focus animator
sets shadow image y position inside icon label
sets click time animation value used by click animator
adds a launch action to action subactions list after that action become a
sets shadow image width inside icon label
sets shadow image height inside icon label
sets the background image
sets visibility of title label contained action title
sets title label x position in whole container
sets main label of whole panel must be set before start is executed
sets title label y position in whole container
sets title label width
sets title label height
sets visibility of description label contained action long description
sets description label width
compute using computor animation input data generate output data and
sets image painting type
sets animation computor
sets color of title label foreground
called when start animator generated new code start time code
sets title label will render text as html or not
called when focus animator generated new code focus time code value
called when click animator generated new code click time code value
sets visibility of main panel background image
close the tee flushes and closes both sides of the tee
description of the method
write a portion of a char array to both sides of the tee
write a character to both sides of the tee
write a string to both sides of the tee
sets a default catalog to use in the dao
description of the method
write a portion of a string to both sides of the tee
get a list of columns in the given schema
gets the current db info attribute of the db console dao object
tell db console to not show a spinner
toggles autocommit mode on the dao
executes the command
description of the method
description of the method
description of the method
description of the method
description of the method
description of the method
show previous queries and offer the user the ability to rerun a query
toggles raw mode on the dao
turn spinner off if dao is in raw mode
tells the dao to to an explicit commit when auto commit is off
description of the method
quits the application
toggles showing the row column
description of the method
executes the command
closes the file output
description of the method
description of the method
sets a default schema to use in the dao
description of the method
description of the method
gets the current database connection url
execute the command
should db console show the spinner most commands can leave this as is
write a character to both sides of the tee
gets the classname of the current database driver
show which database currently connected to
shows the database name url and driver in a form suitable for display
gets the dao
sets the common name for this database
this string will be shown above the list of choices
formats the given time into decimal seconds
sets the url for this database
sets the resource bundle for display strings
gets the input attribute of the input object
gets the url for this database
sets the classname of the driver for this database
sets the dao
gets the classname of the database driver for this database
description of the method
gets the default resource bundle for the choice input here are the valid
adds a known user to the list of users for this database
sets the choices
gets the choices attribute of the choice input object
returns the character at the specified index
returns the length of the sequence could be 0
gets the user count attribute of the db info object
returns that portion of the sequence between the given indices
the string embedded in an ansi color string
gets username and password for the user currently set to use to connect
gets the input attribute of the password input object
reads the next byte of data from the input stream
sets the default choice attribute of the choice input object
gets a list of schemas in the database
gets the default choice attribute of the choice input object
initialize the application
sets the show cancel attribute of the choice input object
gets the show cancel attribute of the choice input object
load the application messages
load the commands from the configuration file
gets the command prompts sets up io and shows the intro
set up the io streams
gets the columns of the tables matching the schema name and table
lists the column attributes for the given schema and table pattern
prints a blank line to the console
prints the given string to the console followed by a line feed
prints the given string to the console
removes count characters from the end of the current line in the display
makes a nifty ascii spinner
gets the connection attribute of the db console object
stops the spinner
sets the echo attribute of the db console object
sets the output stream of the console to the given writer
resets the default output writer to system
sets the in attribute of the db console class
description of the method
description of the method
turns auto commit on or off
resets the default input reader to system
gets the auto commit mode attribute of the db console dao object
sets whether a select should get the raw data from a binary object
gets the raw mode attribute of the db console dao object
executes a data definition command such as alter table etc
returns a string showing the coordinates of the bottom left and top right
returns a string showing just the data from the table
set path to folder which contain templates
fetches the contents of the url string
tab panel should be the width of the window minus some overhead
tab panel should be the width of the window minus some overhead
fetches the contents of the url string
fetches the contents of the url string
changes the visibility of extra widgets tab tags urls
intelli start project kick off demo method
get id method comment
get provider method comment
get name method comment
get id method comment
get event disposition method comment
get event disposition method comment
get provider method comment
put method comment
get address capabilities method comment
get capabilities method comment
get terminal connection capabilities method comment
get transfer controller method comment
this method initializes table list panel
this method initializes datenbank scroll pane
gibt zur ck ob alle server richtig konfiguriert sind
receives data chunks from the
executed on the i event dispatch thread i after the
neues design des programms
neue sprache des programms
returns the new update easy tomcat updater
sets the new update easy tomcat updater
sets the new easy tomcat version
returns the update easy tomcat updater
returns the new updater file name
returns the updater file name
sets the new updater file name
sets the main gui
delete the specified directory including all of its contents and
given a context path get the config file name
given a context path get the config file name
anzeigen des installationsdialogs
returns the server configure check box
gibt die sprachenressource zur ck
setzt den status des tomcat servers
returns the server restart button
returns the server start button
returns the server stop button
this method initializes j panel6
this method initializes connections panel
this method initializes reset button panel
this method initializes reset button
this method initializes j panel7
this method initializes reset button
stoppt tomcat und oder my sql
returns the contentents of the collection as a string a collections with
returns the contentents of the collection as a string a collections with
this method initializes j table
reads the data from the input stream and writes to the output stream
reads the entire contents of stream into a string
uses class loader which loaded streams
this method initializes j scroll pane
convenience method to check for missing resource null stream
this method initializes datenbank scroll pane
returns the configure server
returns the server identifier
returns the server type
returns the version
sets the configure server
adds a filetype dot extension to filter against
gets the complete
gets the destination folder
gets the delete
gets the source zip file
gets the update file delete update dir
gets the state
sets the state
gets the error state
initialize update extractor
sets the error state
initialize update extractor
checks if is use extractor
do proxy configuration
prepare update file
creates the destination folder
checks if is use proxy
sets the use proxy
gets the proxy host
sets the proxy host
check extracted update file
sets the proxy port
gets the proxy user name
sets the proxy user name
gets the proxy user password
sets the proxy user password
checks if is substance design
this method initializes table list panel
gets the updater setting to
returns the ok pressed
this method initializes datenbank scroll pane
sets the ok pressed
creates the xml string
using jaxp in implementation independent manner create a document object
the real workhorse which creates the xml structure
this method uses xerces specific classes prints the xml document to file
returns the description
returns the easytomcat updates
sets the include
sets the exclude
returns the is requested
gets the type
returns the current version
gets the update extractordelete update dir
checks if is use extractor
returns the type
sets the type
returns the new version
sets the use extractor
sets the source zip file
sets the destination folder
gets the delete update dir
gets the value of the easytomcat updates property
sets the value of the easytomcat updates property
create an instance of
create an instance of
returns the allowed old version
create an instance of
create an instance of
create an instance of
sets the is requested
create an instance of
sets the current version
gets the value of the complete property
gets the value of the size property
checks if is can install update
sets the value of the complete property
sets the value of the size property
gets the value of the delete property
checks if is installed
sets the value of the delete property
gets the value of the date property
gets the value of the server identifier property
sets the value of the server identifier property
sets the value of the date property
gets the value of the configure server property
sets the value of the configure server property
gets the value of the server type property
sets the value of the server type property
sets the value of the filename property
gets the value of the new version property
sets the value of the new version property
gets the value of the allowed old version property
sets the value of the allowed old version property
sets the value of the delete update dir property
sets the value of the use extractor property
sets the user list
returns the show only new updates
returns the new show only new updates
gets the tomcat user to
sets the new show only new updates
checks if is new use proxy
this method initializes j panel2
sets the new use proxy
this method initializes j panel7
gets the new proxy host
this method initializes reset button
sets the new proxy host
gets the tomcat user to
gets the new proxy port
adds the active sessions observation
adds the rejected sessions observation
this method initializes j table
sets the new proxy port
adds the expired sessions observation
adds the session counter observation
gets the new proxy user name
adds the total observation
adds the free observation
adds the requests observation
sets the new proxy user name
adds the errors observation
adds the total requests observation
gets the new proxy user password
adds the bytes sent observation
adds the bytes received observation
sets the new proxy user password
sets the tomcat server
sets the text resource
returns the selected role list
sets the tomcat settings panel
sets the add edit user dialog
returns the selected group list
sets the tomcat manager
returns the selected group list model
sets the tomcat overview panel
sets the tomcat server
returns the selected role list model
sets the tomcat users panel
returns the default background color of jlist
returns the group list model
returns the role list model
sets the data
this method initializes j panel6
adds the group
adds the role
removes the role
removes the roles
removes the group
removes the groups
sets the data
gets the tomcat traffic chart panel
returns the create user
sets the create user
gets the tomcat request chart panel
sets the groups
sets the roles
sets the group list
sets the role list
constructs a code string code with all attributes in name value
adds the ssl connector
this method initializes reset button
removes the ssl connector
returns the shutdown port
returns the new shutdown port
sets the shutdown port
returns the referenced element
constructs a code string code with all attributes in name value
returns the new port
sets the new port
returns the original doc base
returns the new protocol
sets the new protocol
returns the new keystore file
returns the new redirect port
sets the new keystore file
sets the new redirect port
constructs a code string code with all attributes in name value
returns the new keystore pass
returns the new scheme
sets the new keystore pass
sets the new scheme
returns the new keystore type
sets the secure
sets the new keystore type
returns the new ssl protocol
sets the new ssl protocol
returns the redirect port
returns the keystore file
returns the keystore pass
returns the secure
returns the keystore type
returns the initial heap size
returns the ssl protocol
returns the max heap size
returns the new client auth
returns the new initial heap size
returns the is new port
returns the new max heap size
sets the new client auth
returns the is new protocol
returns the client auth
returns the is new redirect port
returns the new ssl enabled
returns the is new scheme
sets the new ssl enabled
returns the is new secure
returns the ssl enabled
returns the is new ssl protocol
returns the user manager
returns the is new keystore file
creates the host
returns the is new keystore pass
creates the connector
returns the is new keystore type
creates the context
creates the host
removes the host
removes the connector
removes the context
gets the root context
update the conf tomcat users
removes the host
close the database
save server data
gets the root
sets the s sl keystore to
gets the root path
returns the config dir
checks if is s sl enabled modified
gets the first active ssl connector
gets the first ssl connector
gets the first ssl connector by port
anzeigen des installationsdialogs
returns the up time
gets the export the database to
sets the s ql directory text
gets the s ql directory text
gets the database user to
activate progress bar
gets the my sql add edit user guito
deactivate progress bar
gets the creates the database to
discard work dir
gets the configuration
given a context path get the config file name
sets the user list
sets the user list
switch to online
switch to offline
switch to online
switch to offline
gets the database user
gets the creates the database to
sets the s ql file text
gets the s ql file text
sets the server dir
import existing database
import new database
import skript exclusively
gets the tomcat dir t field
gets the grp
sets the create database dialog
sets the export database dialog
sets the database manager
gets the select tomcat dir
this method initializes connections panel
sets the mysql database panel
this method initializes my sqltraffic chart panel
sets the database manager
sets the mysql settings panel
sets the integrated server
sets the my sqladd edit user dialog
sets the mysql manager
this method initializes my sqltraffic chart panel
sets the import database dialog
sets the database manager
sets the mysql overview panel
sets the my sql users panel
this method initializes reset button
gets the https connector
sets the data
gets the selected service
returns the sql file
sets the sql file
returns the delete existing database
sets the delete existing database
returns the create new database
sets the create new database
sets the database list
returns the import skript execusively
sets the import skript execusively
constructs a code string code with all attributes in name value
sets the aborted connections
returns the sql file dir
sets the sql file dir
sets the bytes received
returns the sql file name
sets the bytes sent
sets the sql file name
sets the connections
constructs a code string code with all attributes in name value
sets the max used connections
sets the opened tables
sets the open files
sets the open streams
sets the open tables
sets the username
sets the threads cached
sets the threads connected
sets the threads created
sets the threads running
gets the old host
creates the user if necessary
gets the config file properties
gibt zur ck ob alle server richtig konfiguriert sind
sets the new port
gets the configuration
gets the port
sets the new port
gets the port
gets the mysql dir t field
gets the port
sets the new port
gets the port
gets the port
sets the new port
sets the new port
gets the port
gets the user name t field
sets the new port
gets the port
checks if is new server configuration
gets the user password t field
gets the select mysql dir
returns the mode
save config file
creates the new working config file
returns the config dir
sets the ssl keystore dialog gui
sets the server version
sets the location
gets the country
sets the country
sets the email
gets the organization
sets the organization
gets the organization unit
sets the organization unit
sets the password
sets the state
sets the alias
gets the lifetime
sets the lifetime
gets the unit
sets the unit
gets the keystore file
sets the keystore file
returns the keystore path
sets the keystore path
sets the location
sets the keystore type
sets the country
sets the organization unit
decrypt the specified bytes with the generated public key
sets the lifetime
sets the unit
gets the ssl keystore dialog guito
gets the ssl keystore dialog guito
gibt an ob das programm schonmal gestartet worden ist
legt fest ob das programm schoneinmal gestartet wurde
returns the owner frame
returns the linked button
setzt den installationsstatus f r datenbank und tomcat
returns the owner frame
gets the exception
constructs a code string code with all attributes in name value
fuegt die validate exception in die collection ein
gets the length
checks if is empty
sets the head text area text
sets the head text area icon
adds the right bottom button
adds the left bottom button
returns the text resource
gets the value of the delete folder property
sets the value of the delete folder property
this method initializes table list panel
this method initializes datenbank scroll pane
this method initializes j panel2
this method initializes reset button
this method initializes j table
this method initializes j scroll pane
sets the user list
adds the requests observation
adds the errors observation
adds the total requests observation
adds the bytes sent observation
adds the bytes received observation
this method initializes reset button
update the conf tomcat users
close the database
save config file
creates the new working config file
design des programms
returns the description
this method initializes table list panel
the creation time of the entry
get the size of this entry
the creation time of the entry
get the absolute file entry name
get the size of this entry
add query to batch
returns a string for inserting into db
escapes the string to be inserted into db
add the list of columns to the current list in the query
dummy function so that it can implement execute update
dummy function so that it can implement execute update
int column references
returns 1 if yes 0 if no or 1 if unsure
this will compare the string to anywhere in the string
moves the cursor down one row from its current position
sets the sequence used for this column if its an auto increment column
sets the foreign primary key
sets the foreign table
releases this code result set code objects database and
same as add where string and pre comparison pred
use this for adding a string that you want to be sql formatted
will recurse through all select querys until union is null
retrieves the value of the designated column in the current row
sql server returns date with time
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
uses default sequence as would be made in oracle create table query
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the first warning reported by calls on this
retrieves the number types and properties of
p gets the value of the designated column in the current row
p gets the value of the designated column in the current row
maps the given code result set code column name to its
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves whether the cursor is on the last row of
moves the cursor to the end of
moves the cursor to the last row in
retrieves the current row number
moves the cursor to the given row number in
moves the cursor a relative number of rows either positive or negative
moves the cursor to the previous row in this
gives a hint as to the direction in which the rows in this
retrieves the fetch direction for this
retrieves the fetch size for this
retrieves the type of this code result set code object
gives a nullable column a null value
updates the designated column with a code boolean code value
updates the designated column with a code byte code value
updates the designated column with a code short code value
updates the designated column with an code int code value
updates the designated column with a code long code value
updates the designated column with a code float code value
updates the designated column with a code double code value
updates the designated column with a code java
updates the designated column with a code string code value
updates the designated column with a code byte code array value
updates the designated column with a code java
updates the designated column with a code java
updates the designated column with an code object code value
updates the designated column with a code null code value
updates the designated column with a code boolean code value
updates the designated column with a code byte code value
updates the designated column with a code short code value
updates the designated column with an code int code value
updates the designated column with a code long code value
updates the designated column with a code float code value
updates the designated column with a code double code value
updates the designated column with a code java
updates the designated column with a code string code value
updates the designated column with a byte array value
updates the designated column with a code java
updates the designated column with a code java
updates the designated column with an code object code value
inserts the contents of the insert row into this
deletes the current row from this code result set code object
cancels the updates made to the current row in this
retrieves the code statement code object that produced this
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
updates the designated column with a code java
updates the designated column with a code java
updates the designated column with a code java
updates the designated column with a code java
updates the designated column with a code java
updates the designated column with a code java
updates the designated column with a code java
initialize the toolbar
converts a chord pro model to a tab style multi line string
creates the pages of the multi page editor
saves the multi page editors document
saves the multi page editors document as another file
calculates the contents of page 2 when the it is activated
spawns the monster for this spawnpoint
adds a player to this map and sends nescessary data
test that a null pointer exception is thrown by the constructor
test that it can construct a template from an empty string
test the opt operator expand method
test the neg operator expand method
test sec x
test the prefix operator expand method
test the suffix operator expand method
test sec x
test the join operator expand method
test the list operator expand method
asserts that given expansion is expanded correctly given a set of parameters
test the code encode code method with an empty string
test the code encode code method for all unreserved characters
test the code encode code method for all ascii characters 0x00 to 0x7f
asserts that given expansion is expanded correctly given a set of parameters
test the code encode code method for some non ascii characters not involving
test the code encode code method for characters involving unicode normalisation
test the code decode code method with an empty string
test the code decode code method for all unreserved characters
test that the constructor sets the name appropriately
test the code decode code method for all ascii characters 0x00 to 0x7f
asserts that given expansion is expanded correctly given a set of parameters
test the code decode code method for some non ascii characters not involving
test that the code is valid name code method work as specified
test the code equals code method for variables with no default value
test the code equals code method for variables with a default value
test the code find code method
test the code equal code method
test the code parse code method for a code null code value
test the code equals code method
test the code parse code method with syntax error
test the code equals code method
test the code find code method
test the code match code method
test the code pattern code method
asserts that the string of matches itself
test the code expand code method using test cases in the specifications
asserts that the pattern is valid and working for a given string
test the code find code method
test the code expand code method using test cases in the specifications
test that the constructor handles an empty string
test the code resolve code method with some int values
test the code equals code method
test the code match code method
test the code equals code method
test the code match code method
test the code resolve code method with some int values
test the code match code method
test the code expand code method using test cases in the specifications
test the code match code method
test the code match code method
test the code match code method
test the code match code method
test the code expand code method using test cases in the specifications
test the code resolve code method with some string values
test the code expand code method using test cases in the specifications
test the code resolve code method with some string values
test the code expand code method using test cases in the specifications
returns the uri handled by this resolver
returns the first uri pattern in the list which matches the underlying uri
test the code resolve code method with some escaped values
generates the token corresponding to the specified expression
returns the first uri pattern in the list which matches the underlying uri
test the code expand code method using test cases in the specifications
returns the variable wrapped by this token
resolves the given uri pattern
test the code resolve code method with some multiple values
test the code expand code method using test cases in the specifications
returns the uri pattern that was used to produce this result
puts the object corresponding to the specified variable name in the results
test the code resolve code method with some multiple values
sets the status of this result
test the code expand code method using test cases in the specifications
test the code expand code method using test cases in the specifications
test the code resolve code method with some multiple values
test the code expand code method using test cases in the specifications
test the code resolve code method with some multiple values
returns the form of this variable
expands the token operator using the specified parameters
test the code resolve code method with some objects values
test the code expand code method when a type is in use
returns the operator part of this token
test the code resolve code method with some objects values
returns the default value for this variable
returns the argument part of this token
test the code resolve code method with some objects values
returns the implementation type of this variable
the default resolver accepts everything and resolves all values to themselves
binds the variables with the specified name to the specified resolver
binds the variables with the specified name to the specified resolver
returns the expanded value of this variable
binds the variables with the specified name to the specified resolver
returns the resolver used for the variable of the specified name or type
returns the resolver used for the variable of the specified name
returns the resolver used for the variable of the specified type
indicates whether this uri pattern matches the specified url
returns the character
returns the regular expression pattern corresponding to this uri pattern
indicates whether the given variable name is bound to a variable resolver
indicates whether the given variable type is bound to a variable resolver
returns the score for this uri pattern
expands the token operator using the specified parameters
compute the regular expression pattern for this uri pattern
compute the score from the specified tokens
scans a single quoted string
collects the rendreres who have the attributes of defined attributes
this method should be called after all renderers are added
the tree instance returned by this method
junit doclet moves marker to this method if there is not match
locates the first child of node with id parent id
locates the first child of node with id parent id
creates a wrapper for the root node
creates a wrapper for a node located at node index
creates the connection with the postgresql driver
get the milliseconds
set the milliseconds for this molst date
returns a java
closes the connection
reads a property from the config file
returns an enumeration of all keys in the properties file
tests a case that should pass
tests a case that should fail
remove the test user from the db
this test fails right now because it creates a patient
this test fails right now because it creates a patient
this test fails right now because it creates a patient
remove the test user from the db
play this sound as a sound effect
initialise the sound effects stored
return the average read length in this sam file
test method for
test method for
get root item for this item
get the top level item of this tree
this function will set certain levels specified to be enabled
set the trial number for logger
set the block number for logger
takes touch pad points where origin is at the top left corner and
if only one up value is taken use 0 for start index
this event is a compound event taken from a compound event
this function updates the gui part of the program
draw the menus
draw the text with shadow
sets the overall volume of this soundset 0 to 1
describes how the samples must be played together in this sound set
adds a stereo sample
uses a soundlevel of 0
get the angle value for the polygon
plays the sample immediately
plays the sample immediately
plays the sample immediately if it is not already playing
plays the sample as soon as no more sound is being played
plays sample after sample0
stops all sounds currently playing
returns the duration of the given sample in seconds
compute the next buffer
check to see if the current zone is different from the last zone
play the end of the selection of a leaf node
this methods is not weighted or every element has the equal weight
reset the sound source so it can adapt to
setup the visual menu
play the number for a trial
uses play stimuli item and select item for simuli
need this method to get the current experiment mode
get the zone index for the current x and y position
get the item in focus under the zone
transform any index number within a set to a float point number
handle the adding of zone index for the spirals
get the radian of the first position
add an int value to the speed queue it is the speed
return the average speed depending on the speed size
if only one up value is taken use 0 for start index
takes touch pad points where origin is at the top left corner and
translate the touch pad points with origin at the top left corner to
translate the screen points with origin at the top left corner to
this one will return the polar coordinates according to the center
these methods are not really used right now
play number only plays number 0 100
must refer to a valid module that sources this class
this is the entry point method
this method initializes this
this method initializes j split pane
stores the flag for whether to just launch the application
gets the preference node for all the installations
gets the node for the installation of a given application
gets the install directory to which the given application
gets the install directory to which the application
gets an installation version node given
gets an installation version node given
gets the flag for whether to just launch the application
gets the path of the first file path extracted
exits the program if in standalone mode otherwise disposes
exports the user preferences from text trix to an xml
imports preferences from an xml file
resets the preferences underneath and including the given
resets preferences starting from the main self extractor
builds the package using the packager xml file
changes the state assuming that the current direction
captures and responds to specific keys pressed
asks user whether the extraction should be cancel and exited
creates an extractor xml file which has need for fewer
gets this object
resolves the entity based on the given public and system ids
paints the component in the center of the panel
prints an error message in response to parser warnings
prints an error message in response to parser errors
creates an packager xml file which has need for more
prints an error message in response to parser fatal errors
sets the welcome message
sets the package name
sets the zip file path
sets the logo file path
sets the output directory path
sets the keybindings to standard shortcuts
sets the command and argument string to run after extraction
sets the readme path for display after extraction
sets the path to a license to display during extraction
gets the package name
gets the zip file path
sets the keybindings to a mesh of standard and emacs shortcuts
gets the logo file path
gets the output directory path
gets the command string for running an application after extraction
gets the readme path for display after extraction
gets the path to the license
converts text displayed in an html enabled field to the same
sets the keybindings to emacs shortcuts for most typical single key
gets the packager object
starts the thread
unzips the file from the stream and closes the stream
extracts the set zip file to the set install location
sets the regions displayed indentation
counts the number of continuous tabs from a given position
indicates that the user has encountered an error in the code
indents a paragraph by a given number of tabs and size per tab
indicates an error during the unzip process
indents the current paragraph no matter where the caret is within it
runs the application using the run string supplied
indents the current paragraph no matter where the caret is within it
sets the reset flag
sets the installation location and also
determines whether the tab is at the start of a given line
sets the non interactive flag
gets the files path
gets the non interactive mode flag
gets the files name
gets the path to the files directory
sets the index of the current state
gets the auto indent selection
sets the file to a path
opens the file chooser sets it up to the appropriate
execute an edit capture the state changes and make the changes
sets the auto indent selection
check whether the file has been created
undoes the last text change
applies the current code undo manager code as well as the tab size
tells whether the pad has any characters in it
gets all the current text
replaces all the text with the given string
converts the pad to a plain text view
converts the pad to an html text view
converts the pad to an rtf tex view if possible
fills an array with the components possible actions
stores the editor kit and document during a state change
restores the editor kit and document from the tables stored settings
sets the number of characters that each tab represents
flags the manager to ignore the next change in style
gets the state of the flag for ignoring the next style change
overridded to return master copy non javadoc
directly use the master copys get image method
set the string variable for the action
override methods to prevent methods replacing the graphics non javadoc
override methods to prevent methods replacing the graphics non javadoc
set the integer value
override methods to prevent methods replacing the graphics non javadoc
override methods to prevent methods replacing the graphics non javadoc
set the boolean value
returns the image buffer to be used
resets the text value of the button
return the string value
uniform calculation which calculates the complexity of the regional tree
uniformity calculation method used to check the maximum complexity of the tree
return the integer value
return the boolean value
set the action
set the target
sets the animation cycle period
return the bottom right x position of the region
sets the caption border
sets the hint of the widget
return the bottom right y position of the region
get the target
returns the neighbors in the tree
set the life of the sprite
a method for converting text color attributes to color values
returns the maximum life cycle of this sprite instance
returns the number of life cycles left in this sprite
enable disable the rotation feature on this widget
method to return the node adjacent to the top
runs audio thread non javadoc
method for reseting board size
method which sets the grid for the rendering panel
method for reseting the board column and rows
set the rotation speed angle for the widget
method to return the node adjacent to the bottom
method used to set the column of the board
method used to set the row of the board
method used to get the node adjacent to the left
return the angle to rotate
method to set the offset
method used to the node adjacent to the right
set the x coordinate
return whether this widget can be rotated
set the y coordinate of the hint
set grid space
sets the hint
reset the still animation image
sets the visibility of the hint
gathers all the widgets in the current region into a result vector
wait for the jpanel to be added to the
returns the length of the hint
add a mouse click image to the image click list
gathers all the widgets within the tree
method used to start rendering
add a mouse over image to the mouse over image list
method checks to see if the current region overlaps with another node
method for starting new thread of this guide
assigns a new rendering panel to the task manager
sets the mouse object
method used to executed the infinite loop non javadoc
add a regular animation image to the mouse over image list
sets the text of the text box
append text to the current text
check to see if the mouse is over the current widget
checks to see if a widget has been clicked non javadoc
returns whether if the current widget text has the mouth over
set the x location of the widget
method which adds a widget to the screen list of widget
set the font color of the text box
method which is used to add hints to the screen
set background color
set the y location of the widget
method used to add the textbox to the screen
method checks to see if the mouse is in the scroll over region
un implemented mouse entered function non javadoc
this method adds a sprite to the spite list
sets the mouse over state to true
sets the visibility of the screen
un implemented mouse exited function non javadoc
set the period of the interval cycle in seconds
performs a tick check and see if the next cycle has been reached
sets the mouse over state to false
method to initate the fade screen change effect
returns the sprites held in this screen
method which returns the widgets held in this screen
un implemented mouse moved event non javadoc
set the pressed state based on the boolean value
method which returns the hints being held in this screen
method which returns the texts being held in this screen
method clears all the widgets in the screen
find proper translations to keep rotated image correctly displayed
method which clears hints
method which clears the texts in the screen
set widget action to be executed
clears all widget objects hints and text
memory optimizing method which constructs a quadrature regional tree
set the actions target
performs memory optimization using a regional grid tree
set the actions string variable
set the actions integer value
removes the hint object from the list of hints
performs memory optimization methods on the screen
set the action boolean
get the x coordinate of the central axis
get the y coordinate of the central axis
set the x coordinate of the central axis
set the y coordinate of the central axis
set the y boundary height of the widget
set the x boundary widget of the widget
execute the widgets action
return this widget
return the current angle of the widget
sets the angle of the widget
this method initializes the menu bar
this method initializes j menu file
this method initializes j menu item evaluate
this method initializes j menu item exit
this method initializes j menu item new
this method initializes j menu item open
this method initializes j menu item save
this method initializes j menu item save as
this method initializes the vertical splitter
repaint using the awt event dispatching thread
uses photo dao
process add transaction
process get items
sets the price of the product
returns the database variable
sets the database variable
boolean representing if the object is in the database
boolean that indicates if object has been written to the db
sets the boolean representing if the object is in the database
change flag to indicate object has been written to the db
returns the date the rental was returned
revenue source refers to the type of income the txln is referring to
sets the date the rental was returned
set revenue source
returns the id of the rental the return is for
sets the id of the rental the return is for
add coupon object to txln
calculate subtotal of txln
creates a new membership by first creating an id and then passing
set revenue source type
creates a new purchase order for the vendor that is passed to it
theres no need for two creates because we dont need
create a payment object
returns the data the repair order was created
sets the date the repair was started
returns the date the repair was completed
sets the date the repair was completed
sets the hours of labor for the repair
returns the date the repair was picked up by the customer
sets the date the customer picked up the repair
used for holding a customer object
validate the e mail address and password passed in
used to hold a membership temporarily
this method will set the amount or dollar discount for the coupon
get is in db
returns the held membership
creates membership interest associations by saving them to the database
returns the held customer object
creates a new repair object by first creating a guid and then calling
create a physical object
creates a new rental return object
saves the repair object to the database
sets the change of the payment
insert a new repair record in the database
sets the type of payment
theres no need for two creates because we dont need
returns the membership id of the owner of the backup
private read of a physical object
sets the membership id of the owner of the backup
set source type
sets the caption associated with a backup photo
sets the amount of the payment
sets the creditcard number
sets the file name of a backup photo
private save method of a product
return the creditcard expiration date
sets the creditcard expiration date
insert a physical object into the database
sets the date of the purchase order
creates a new store object by first creating a guid and then calling
creates a new sale object by first creating a guid and then
sets the vendor
reads a sale object off the database or from cache
sets the order lines
sets the file size of a backup
add orderline to the list
saves the sale to the database
update a database record for a physical object
inserts the sale data into the database
updates the sale data in the database
check to see if a product exists
set the store variable
create a photo set
creates a new interest by first generating a guid and then passing it
sets the product sold
sets the product type
sets the price of the sale
gets the price of the sale
set total price on abstract rs object
get conversion type
set conversion type
returns the times rented of the object
sets the times rented of the object
returns the current rental id
sets the current rental id
sets boolean flat to indicate object has been written to db
returns the database variable
returns the date the rental was picked up
sets the database variable
sets the date the rental was picked up
returns the date the rental is due
sets the name of the store
sets the date the rental is due
sets the description
sets the first line of the stores address
sets the average cost
sets the second line of the stores address
sets the contact name of the vendor
sets the transaction lines for a transaction
adds a single txline to the list of txlns on the object
returns the temporary purchase order for the vendor
sets the temporary purchase order for the vendor
sets the payment object for the transaction
set total price on abstract rs object
theres no need for two creates because we dont need
set photo set object
get print format
set print format
sets employee id of store manager
main method of new tester
create a new instance of a conceptual object
creates a new rental object by first creating a guid and then calling
saves a rental object to the database
inserts a rental object into the database
updates a rental object in the database
returns the length of the backup service
sets the length of the backup service
reads the backup object off the database
sets the cost
returns the late day
insert the conceptual object into the database
private save method that inserts the object into the database
create new conversion order
sets the late days
gets the maximum days for rent
private save method that updates the object database information
sets the maximum days for rent
create conversion type dao based on known id
update the conceptual object information in the database
gets the maximum days it can be late
sets the maximum days it can be late
create print format
returns a boolean if the object exists
calculate subtotal of transaction by adding the subtotal of all txlines
create print format with known id
calculate tax for tx
method for charging members for rental that have never been returned
add subtotal and tax to get total
theres no need for two creates because we dont need
return origional tx object if the tx is a return
returns the number of photos
sets the number of photos
returns the dirty boolean
set origional tx object if the tx is a return
returns the employees social security number
get print format by parameters
sets the employees social secutiry number
this methode will create a new employee object by first creating
sets the interests title
sets the employees date of hire
sets whether the membership has been saved to the database
returns the purchase order
create a transaction based on a previous transaction type return
sets the purchase order
sets the employees salary
sets the product
creates a print order
read a print order
insert a print order object into the database
update a print order object in the database
returns the membership preference to the newsletter
sets the membership preference to the newsletter
return the total of the transaction
creates a new category object
sets the id of the employees assigned store
returns a list of the members interests
create a conversion business object
sets a list of the members interests
insert a conversion object into the db
theres no need for two creates because we dont need
sets the customer of the membership
returns backup experation date
sets experation set
sets the date of the last update
returns the membership if any associated with the customer
sets the membership associated with the customer
replaces the current word token
accumulates a dictionary at the end of the dictionaries list used
indicates if this word is equal to another one
allocates a word if it is not already present in the dictionary
writes the property list key and element pairs in the
adds a word to the list of ignored words
builds the file words database file and the contents file for the on
adds another word to the dictionary
returns a list of words that have the same phonetic code
verifies if the word to analyze is contained in dictionaries
returns a list of word objects that are the suggestions to an
produces a list of suggested word after looking for suggestions in various
method called by j edit to finalize the plugin
resets list of ignored words
loads the index file from disk
this actions doesnt have to remove respected restrictions
may mutate input parameter
onboard debug routine
required because 0
helper method to signal step useful for solver follow up
gets the highest fitness measure
sets vector space
moves all the given figures by x and y
reads the contained figures from storable input
move current selection by dx and dy
reads a string from the input stream
writes a string to the output stream
creates the font from current attributes
gets the handles of the figure
creates the drawing used in this application
this must reflect the capabilities of the drag ssource not your desired
draws this handle
activate a palette of the tool bar by setting all tools
gets the handles for the group figure
gets the attribute with the given name
sets the attribute with the given name
factory method for undo activity
creates the buttons panel
creates the connection figure
creates the color choice for the given attribute
creates the font choice
draws all the contained figures
creates the tools palette
creates the tools
creates the selection tool used in this editor
checks if the created figure is empty
adds a listener for this drawing
moves all the given figures by x and y
forwards draw to its contained figure
connects the figures if the mouse is released over another
returns true if thje enumeration contains the specified figure
inserts a vector of figures and translates them by the
activates the tool for the given view
deactivates the tool
gets the tools drawing
gets the tools editor
sets the attribute with the given name and
shows a help page for the application
handles when the mouse enters or leaves a palette button
initializes the applet and creates its contents
determine if the next input token is a valid number or not
reads an int from the input stream
creates the attributes panel
executes the command
executes the command
creates the color choice for the given attribute
creates the overlay for the given container using a
adds an action listener
remove an action listener
gets the preferred size of the overlay
creates the font choice
creates the buttons panel
gets a the default value for a named attribute
writes a string to the output stream
returns the named attribute or null if a
stores the figure to a storable output
reads the figure from a storable input
creates the tools palette
creates the tools
gets the displaybox including the border
invalidates the figure extended by its border
move current selection by dx and dy
draws the arrow tip in the direction specified by the given two
if the pressed figure is a text holder it can be edited otherwise
gets the handles for the group figure
gets the attribute with the given name
sets the attribute with the given name
handles mouse up events
a text figure understands the font size font style font name
draws the figure in the given graphics
draws the map of the figure
gets the number of columns to be overlaid when the figure is edited
gets the number of rows to be overlaid when the figure is edited
convert an xml style name to a java style name
draws the contents of the drawing view
factory method for undo activity
draws the drawing
factory method which create a new instance of this
disconnects the text figure
bloat the drawing if necessary to contain all objects
creates the color menu
shows an authentication dialog
sends the form to the server
creates the font size menu
adds a string parameter to the form
adds a file parameter to the form
gets the response code from the server
sets the text challenge question
adds a file parameter to the form
gets the response message from the server
writes the form to the specified output stream
gets the response data from the server as a utf 8 encoded string
writes the form to the specified output stream
sets the actions for the action popup menu in the toolbar
replace current app with a different url
creates the fonts menus
creates the color choice for the given attribute
gets the version of the applet
returns the drawing component
creates the tools
workaround to get it work without update button
cancels the applet
creates a new figure by cloning the prototype
shows a help page for the application
shows an authentication dialog
reads a string from the input stream
sets the default tool of the editor
creates the tool palette
gets the preferred size of the overlay
creates an action button with the given image action and text
handles a user selection in the palette
handles when the mouse enters or leaves a palette button
creates the selection tool used in this editor
draws a the figure and decorates it with a border
gets the displaybox including the border
invalidates the figure extended by its border
draws the map of the figure
creates the drawing component
returns the target of this proxy
returns the setter for the property
adds a sub menu to the popup menu
finds a connection end figure
attaches the figure attribute editor handler to the specified drawing editor
override this method to create a tool specific input map which
override this method to create a tool specific action map which
get an image icon from the resource bundle
adds the specified action as a menu item to the supplied menu
adds a separator to the supplied menu
updates the listeners of this action depending on the current view
updates the enabled state of this action depending on the new enabled
trigger the notification of all property change listeners
save the last value from the component and then get the latest value
poll the current state of the jinput device
setup a timer to start polling the jinput devices at a specified time
stop polling if there are no registered listeners
returns whether or not the property has a fixed length
returns the fixed length of the property or code 0 code if the
returns whether or not this spec supports the file alteration discard
returns whether or not this spec supports read only mode
returns whether or not this spec supports a group id
returns whether or not this spec supports the compression of
returns whether or not this spec supports the encryption of
returns whether or not this spec supports unsynchronisation on frame
adds the specified property change listener to receive property change
returns whether or not this implementation supports tag wide
removes the specified property change listener so that it no longer
returns whether or not this implementation supports the include of a tag
subclasses may override this method to return an object where spec
returns whether or not the frame type code frame type code is supported
returns the byte value that is represented by the frame property value
returns the spec independent frame type for the spec dependent frame id
returns the default frame definition for a frame of type
creates a unique frame definition object for the frame
returns whether or not the
returns whether or not this spec and the code object code
returns the object an
really ugly method that subclasses may use to set the tags size without
returns the spec used by this frame
returns the spec dependent lexical id identifying this frame just as you
returns an enumeration of all
returns the property count of this frame
returns whether or not this frame contains a code frame property code
returns the code frame property code of type code type code or
returns the frame property at index code index code
returns whether or not the frames data is supposed to be read only
returns whether or not a group id was set for this frame
returns whether or not the frames data is to be encrypted
returns whether or not the frames data is to be compressed
returns whether or not this frames data is to be unsynchronised
marks this frame to be discardered on tag alteration
tries to set the frames data to be read only
tries to set the frames data to be compressed
tries to set a group id for this frame
returns whether or not the object code object code is equal to this
returns the byte value of the property
returns the frame this property belongs to
sets the code id3v2 frame code this property belongs to
sets the string value for this property to the value
sets the byte value for this property to the value code value code
sets the binary value for this property to the value
adds the frame code frame code to the tag
removes the frame code frame code from the tag
removes the first frame of type code type code in the tag
removes all frames of type code type code in the tag
removes all frames from the tag
recalculates the binary size of the tag
returns the tags size including the padding
returns the preferred size of the tag
returns the tag size excluding the padding
returns the amount of padding being used by the tag
returns the current spec policy
returns the version number of the current spec
returns the revision number of the current spec
returns a string formatted 2
returns whether or not the tag contains a frame of type
returns the total amount of frames in the tag
returns the amount of frames of type code type code in the tag
this method is a convenience for code get id 0 code
returns the frame which is of type code type code and additionally
returns the frame which is of type code type code and additionally
returns the frame which is of type code type code and additionally
returns an iteration over all frames in the tag
returns whether or not the tag is to be considered experimental
returns whether or not a crc32 is included in the binary tag
returns whether or not this tag is restricted in some way
returns the restrictions that affect this tag or code null code if
sets the spec policy which may either be code id3 constants
sets the preferred size of the tag
sets whether or not the tag is to be considered experimental
writes the tag to the
returns key for the given value
if any errors exist return error message
checks whether given graph had edges with negative capacities
removes the minimal element of this binary heap and returns it
return maximum flow size
returns but not removes the minimal element of this binary heap
decreases key of the given element
checks whether graph has loops
if any errors exist return error message
increases key of the given element
if any errors exist return error message
checks whether givaen graph had edges with negative weights
if any errors exist return error message
pushes new command to this buffer
performs this layout
clears this buffer
checks whether there are command for undoing
checks whether there are command for redoing
adds the specified visual state listaner to recive notification about state
removes the specified visual state listaner from this presentation
sets new graph presentation
sets new graph presentation
paints imaginary edge
marks presentations of given edges
selects givet edge presentation
finds and marks element containing given point
selects all item within given rectangle
checkes whether given point lies whithin an already selected item
markes selected vertex
unselects previously selected elements
markes given vertices
unmarks previously marked elements
unmarks previously marked edges
if graph is weighted and weight of some edge contains selected point
unmarks previously marked vertices
if any selected edge end mark contains given point returns this edge
sets new graph presentation to this component
veryfies whether edge end mark was selected
veryfies whether edge start mark was selected
returns new add vertex command
returns new add edge command
returns new edge end editing command
returns new delete command
returns new drag command
returns new drag command
sets a tool to handle events
returns new layout command
returns graph presentation
returns new weight change command
returns new convert to weighted command
returns new convert to unweighted command
returns new convert to undirected command
returns select tool
returns add vertex tool
returns add edge tool
returns dijkstra selection tool
returns max flow selection tool
returns tool factory
returns component editing actions factory
returns component algorythm actions factory
returns whether user has choosen directed or undirected graph
returns component convertion actions factory
returns whether user has choosen directed or undirected graph
adds temrorary component to this component
removes temprorary component from this component
adds new command to this component
performs required actions before another tool is set
sets new state for this tool
performs any additional painting required
adds the specified algorythm error listener to recive notification about state
returns an action for selecting mode
removes the specified algorythm error listener from this presentation
adds button to the list of users
returns an action for adding vertices mode
returns an action for adding edges mode
returns an action for converting graph from unweighted to weighted
returns an action for converting graph from weighted to unweighted
returns an action for converting graph from directed to undirected
returns an action for layout
makes required actions if message is no longer active
return an action for manually discaring highlighting
makes required actions if message is active
returns an action for exit
returns an action for topological sort
returns an action for dijkstra algorythm
returns an action for minimal spanning tree algorythm
returns an action for maximum flow algorythm
returns an action for saving as
adds the specified element state listaner to recive notification about state
removes the specified element state listaner from this presentation
retrieves the center point of this presentation
sets the center point of this presentation
paints this vertex using given graphics
verifies whether this presentation contains given point
verifies whether this presentation lays whithin giver rectangle
adds the specified graph state listaner to recive notification about state
removes the specified graph state listaner from this presentation
pauses all changes firing until resume is not called
resumes firing changes
returns edge start point
paints this graph using given graphics
adds this vertex presentation to graph presentation
removes this vertex presentation from graph presentation
paints this edge using given graphics
adds this edge presentation to graph presentation
removes this edge presentation from graph presentation
checks whether given vertices are connected
validates file according to xml schema
returns preferred graph view size
parses graph from file
returns model graph of this presentation
parses graph presentation from file
checks whether this presentation is weighted
sets weight of this presentation
returns parsed graph
returns parsed graph presentation
returns this presentation weight
saves given graph to xml file
saves given graph presentation to xml file
return upper left point of weight rect
marks this presentation
returns a destination vertex of this edge
returns a vertex opposite to the given one
unmarks this presentation
adds given vertex to graph
verifies whether this presentation contains given point
checkes whether two given vertices are connected with an edge
verifies whether this presentation lays whithin giver rectangle
checkes all contracts of connect
enables subclasses to add vertices to graph
enables subclasses to remove vertices from graph
verifies whether given point is in this prenentation weight rect
checks whether the given vertex is in graph
checks whether the given vertices are in graph
tests special case of
get the component type
get the component key
get the ordinal position of the parameter starting from 0
to create a component monitor instance that sequentially invoke
to get the signature of the method call that caused this error
get the property key
get the expected property type
is this pool currently having something in cache
instantiate the component
get the static type of the component
get the component in this object
get the container in this object
get the number of components registered under a string key
gets the user state of this component
create a new component object with the specified user state
create a new component that utilizes singleton pattern when creating instance
create a new component that utilizes singleton pattern
create a component that instantiates a factory interface
get the string object map of all components with the given type
create a component that instantiates a factory interface
create a component for a constructor with monitoring support
get the key object duplicated
create a component that instantiates the
create a component that instantiates the
decorate this component so that
create a component for a method with monitoring support
get a bean object
create a new component object that
create a new component object that
create a new component object that
create a new component object that
create a new component object that
create a new component object that
create a new component object that
create a new component object that
get the child container
get the parent container
create a new component object that
registers the component to the child container
unregisters components of a provided type from child container
unregisters a component identified by a key
retrieves a component identified by a key
retrieves a component of a provided type
create a new component object that uses a part object
gets the dependency object for a component of
create a new component object that returns the given type
verifies all components in this container
create a new component object that returns the given type
transforms one component object to another
create a new component object that uses dynamic proxy
create a new component object that uses dynamic proxy
create a new component object that uses dynamic proxy
get the component key
to get the source of the exception
create a new component that upon creation
create a new component that upon creation
by default all components depended by this component
get the problematic method
get the total number of parameters
get the parameters
get the properties
get the property type
the component is transformed by
gets the property key
gets the object that has the property
transforms a component by calling singleton
ignore the property identified by a key and use the default mechanism
the component is transformed by
the component is transformed by
make a property identified by a key optional
the component is transformed by
the component is transformed by
get the actual argument type
get the expected type
make sure the properties are optional
the component is transformed by
the component is transformed by
the component is transformed by
make a parameter optional
subclasses may choose to override this method
get the primary resource
get the alternative resource
make sure the parameters are optional
create a component object that will use an alternative creator object
create a component object that will use an alternative creator object
get the public constructor object identified by an array of parameter types
creates an optional component
creates an optional component
create a new component object that will recover errors
monadic bind operation
monadic bind operation
create a component object according to the boolean value returned from this component
get the method identified by a signature
create a staged component
get the key for caching a service
get the public method identified by a signature
create a staged component
create a staged component
gets the factory that creates the servant object who backs this service
get the field object identified by name
monadic sequence operation
get the public field object identified by name
redirects resolution of arguments to properties
redirects resolution of properties to arguments
create a sealed component
get the component for the actual servant
add property setters of an entire class to the filter list
add a single property of a type to the filter list
get the component type
gets the type of the first candidate component
gets the type of the second candidate component
gets the function object
gets the ordinal position of the parameter
get the array object that stores the elements
creates a component that will call a certain method
get the begin index
get the set object storing the component instances
creates a component that will read a certain field
create a new component that repeatedly call this component for
create a component that the create method is put in a
initialize the root web application context
create the yan loader to use
initialize the root web application context
return the yan loader used by this listener
close the root web application context
close the root web application context
this should never even be called since no mapping to this servlet should
to get the servlet context object
to get the resource loader object
this is not guaranteed to be safe
to get the procedure to invoke
initialize this object by instantiating container and life cycle manager
is any life cycle phase defined at all
to get the exception handler of this phase
to get the key of this phase
to add a phase
to remove a phase definition
to determine if a certain phase exists in the life cycle
to get a phase entry
to get all the phase keys
to get all the entries
add a live object into the lifecycle manager
to create a component object that enables life cycle support
to get the managed
pushes a resolution frame to the exception
get the resolution trace
print the resolution trace
print the resultion trace
prints the resolution trace to the standard error output
clear the resolution trace
to register the open phase
to register the close phase
to register the init phase
to register the open phase into a lifecycle object
to register the dispose phase
to register the close phase into a lifecycle object
to register the verify phase
to register the init phase into a lifecycle object
to register the start phase
to register the stop phase
to register the dispose phase into a lifecycle object
to register the open phase as re entrant
to register the verify phase into a lifecycle object
to register the close phase as re entrant
to register the start phase into a lifecycle object
to register the init phase as non reentrant
to register the stop phase into a lifecycle object
to register the dispose phase as non reentrant
to register the verify phase as reentrant
to register the open phase into a lifecycle object
to register the start phase as re entrant
to register the close phase into a lifecycle object
to register the stop phase as re entrant
to register the init phase into a lifecycle object
add a component that instantiates bean post processor
to register the open phase as re entrant
get the name of a bean post processor component
get a bean post processor component
to get the number of bean post processor components stored in the queue
to register the close phase as re entrant
to register the dispose phase into a lifecycle object
to register the init phase as non reentrant
to register the verify phase into a lifecycle object
to register the dispose phase as non reentrant
to register the start phase into a lifecycle object
get the application context object
to register the verify phase as reentrant
report an existence of a disposable bean object
report an existence of a component that instantiates bean post processor
to register the stop phase into a lifecycle object
to register the start phase as re entrant
get all the bean post processor components
get all the destruction aware bean post processor components
to register the stop phase as re entrant
to create a component with the current lifecycle
to get the closer phase
manage an instances life
to set the close phase
to get the disposer phase
get the component object
decorate the autowire mode by filtering out setters defined
to set the dispose phase
subclass override this method to wrap around the delegate target
is the val1 attribute set
is the val2 attribute set
to get the init phase
to set the init phase
to get the open phase
is this registration eagerly instantiated
dynamically register a value
to set the open phase
to get the start phase
to set the start phase
calculate the fully qualified name using the prefix and suffix
loop once by calling the body function and register the result
to get the stop phase
loop once by calling the body function and register the result
to set the stop phase
to get the verify phase
get the class that declares the constructor
evaluate the component without applying life cycle
to set the verify phase
get the binder object
disable key type by throwing exception
disable of by throwing exception
set the factory interface
get the type attribute
get the maximum number of the arguments
is the a property explicitly specified
get the specified autowire mode
when no property names is specified no property values are set
in case the component implements any marker interface or has any specific
get the auto wire mode for properties
get the auto wire mode for parameters
to get the adder method for a given name
get the adder method for adding sub elements anonymously
to get the parameter type for a given adder method
is wildcard used
is this a collection nut
get the evaluator object that evaluates a nut object
get a map of the property descriptors for this type
apply arguments and then properties to the component
get the nut descriptor object for a given sub element
if the nut is a collection nut get the method corresponding
is this tag defined globally
if the nut is a collection nut get the element type of the
get the sequence number starting from 0
get the 1 based column number
get the 1 based line number
get the id of the component within the containing module
get the id of the containing module
get this tags location within the configuration file
get the sequence number in the order of tag evaluation
get the sequence number in the order of tag declaration
to set the sequence number of the tag in the enclosing scope
to set whether the tag is defined globally
the framework calls this method to set the location
the framework calls this method to set the environment
get the class loader used to load the component classes
get a class loader object that uses the current class loader
the framework calls this method to set the tag name
get the environment that the nut object is running in
get the default parameter auto wiring mode
get the default property auto wiring mode
get the default singleton mode
convert an object to a target type
get the dependency trace that caused the cycle
print the dependency trace
print the dependency trace
prints the dependency trace to the standard error output
transforms a component so that the instantiated instance
register a component to be eagerly instantiated using the current tags id
throws a configuration exception with the current tag name and location information
throws a configuration exception with the current tag name and location information
make sure an object is not null
makes sure that a certain attribute is not set yet
makes sure the array only contains one element
to get the parameter binder object that encapsulates the auto wiring strategy
to get the property binder object that encapsulates the auto wiring strategy
to determine if string literal can be converted to the target type
pre initialize eagerly instantiated components
pre initialize eagerly instantiated components
pre initialize eagerly instantiated components
pre initialize eagerly instantiated components
to get the lifecycle manager used by this processor
to get the base directory used by the processor
to get the class loader used to load component classes
to get the resource loader used to load resources
register a property autowiring mode
register a parameter autowiring mode
prepare the test em is serializable em
to find the service object registered using
to register a service object that can be read by customized nuts classes
to unregister a service object
get the set of the keys of the service objects
prepare the test em is xstream serializable em
add an external nut descriptor for the processor to use
prepare the test em verification fails with unsatisfied dependency em
get a nut descriptor registered by put nut
unregister a nut descriptor
prepare the test em creates new instances em
register a variable that can be referenced in the xml file
to get a variable value
checks whether a variable name exists
prepare the test em runtime exception is rethrown em
to remove a registration of a variable
get the set of keys of nut descriptors
create an nuts processor object thats gonna be used to
create an nuts processor object thats gonna be used to
prepare the test em failing verification with cyclic dependency exception em
create a component that instantiates a factory interface
make sure the component will notify the listener when an
get the child container
get the parent container
gets the dependency object for a component of
monadic bind operation
create a staged component
monadic sequence operation
run initliazation for components with java
run start for components with java
run stop for components with java
run dispose for components with java
get the result component object
add an action identified by an action key to the user state
add a starter action
add a stopper action
add an initializer action
add a disposer action
gets the encapsulated constructor object
get the encapsulated field object
get the property names of this bean type
get the property descriptor for a given property
prepare the test em is serializable em
prepare the test em is xstream serializable em
prepare the test em verification fails with unsatisfied dependency em
prepare the test em creates new instances em
prepare the test em runtime exception is rethrown em
prepare the test em failing verification with cyclic dependency exception em
this method construct classsifier
returns the title for the tab in the explorer
returns the tooltip for the tab in the explorer
sets the explorer to use as parent frame
sets the logger to receive informational messages
returns a string describing this attribute evaluator
return the full data set
returns a string describing this attribute evaluator
returns a description of the file type
nastaven viditelnosti ciz ho kl e
nastaven zobrazitelnosti tabulky
not implemented yet
creates and displays the title
reset all aggrgates positions
accessor to the x displacement
accessor to the y displacement
replaces group identifiers of the format code group no code by the
returns the score of the reformulation used by the answer selection
reads a line from the command prompt
translates a german question into english
creates a query string from the interpretation of a question and the
returns the analyzed question
checks if the given answer extraction technique is applied to results
returns the interpretation of the question used to generate this query
sets the analyzed question
sets the score of the query
sets the answer extraction techniques that are applied to results
adds an answer extraction technique that is applied to results retrieved
sets the interpretation of the question used to generate this query
sets a modified question string e
sets the answers determined by the qa engine
return a copy of this code query code object
sets the question interpretation that led to the top answer
returns the question string
returns the question interpretation that led to the top answer if
returns the answer string
returns the supporting document
returns the condensed target
checks if the target is a noun phrase
sets the condensed target
sets the possible target types
marks the target as a noun phrase
sets the term for the verb
looks up a word
compares two predicates by comparing their similarity scores
looks up a word
computes the md5 checksum of a string
writes new entries to the cache
adds a word to the dictionary
waits for the time specified in code timeout code and then interrupts
looks up a word
looks up a word token
sets the verb and or arguments of the predicate
does a fuzzy lookup for a word
does a fuzzy lookup for a token
appends strings to the verb and or arguments of the predicate
returns the maximum number of tokens of a word in the dictionary
returns a new instance of code wikipedia ka code
returns a new instance of code world factbook ka code
tests whether the knowledge annotator is appropriate for a question by
returns the maximum total number of search results
performs the search and passes the results to the static class
extracts the relevant content of a question by resolving the group
returns the maximum number of search results per query
returns a new instance of code wikipedia ka code
returns a new instance of code yahoo km code
returns the name of the knowledge annotator
p sets the query and starts the thread if the knowledge annotator is
p creates code max results total max results perquery code
returns a new instance of code indri km code
returns a new instance of code google km code
returns a new instance of code yahoo km code
returns a new instance of code indri document km code
compares two results by comparing their scores
indicates whether an other result is equal to this one
returns the answer string
p calculates the length of the question interpretation which is defined
returns the normalized score of the result
sets the target of the question
sets the context of the question
drops the context without recalculating the length
p compares this code question interpretation code to another
returns a string representation of the interpretation
returns the id of the document in the search engine cache or
sets the code context ids code field and replaces the context tags by
checks if the answer was judged correct
normalizes and sets the lemma of the term
returns a predicate extracted from a sentence level answer
formats the extracted target and context objects
normalizes and sets the lemmas of the expansions
gets the weight of the term or expansion with the given lemma
returns the supporting sentence of a factoid answer
creates a string representation of the term
checks if a factoid answer is a named entity
checks if a factoid answer was extracted with the given technique
sets the answer string
increments the confidence score by the given value
sets the normalized score of this result
the input properties that must be defined are
sets the id of the document in the search engine cache
judges the answer as correct
overrides default properties with those given
sets named entities extracted from a sentence level answer and their
sets terms extracted from a sentence level answer
sets a predicate extracted from a sentence level answer
reads in properties from this classs properties file and sets class data members
sets the supporting sentence of a factoid answer
convenience method that tokenizes the given question by whitespace creates
adds a named entity type for a factoid answer
creates and populates an instance from a question analysis object
prints the features generated for each example in an input file
returns a copy of this code result code object
retrieve the extra score set by some source
instantiates a rule object from an xml element
tells whether a given instance matches this rule by returning
tells whether a given instance has a feature that matches this rule element
initializes the feature extractor
adds a capturing group that covers the string between the target and
replaces the target tag by a regular expression that matches target tags
replaces context tags by regular expressions that match context tags with
set a property of the target to a given value
retrieve the value of a property
replaces ne tags by regular expressions that match ne tags with at least
check if this dossier already contains a value for some property
optimizes the pattern to improve its runtime performance
cut leading or tailing introductory parts of information given in
compares this object to another code answer pattern code
cut the leading news agency acronym and city from a snippet for instance
prints the current overlap analysis
compares two code answer pattern code objects by comparing the number
filters a single code result code object
the hashcode of an code answer pattern code is the hashcode of its
this method is not used
filters a single code result code object
compares its two arguments for order
compares its two arguments for order
filters a single code result code object
combines normalized scores using comb min
returns the number of correct applications of the pattern
checks if the answer extraction techniques used to extract the first
combines normalized scores using comb med
combines normalized scores using comb max
sets the score of the result to 0 and returns it
returns the number of wrong applications of the pattern
drops a result if the answer string contains only function words and
combines normalized scores using comb sum
drops a result if the answer string contains an interrogative
combines normalized scores using comb anz
drops a result if the answer string contains a single bracket or
calculates a confidence measure for the pattern by applying the formula
delays the main thread until all documents have been fetched
combines normalized scores using comb anz
drops a result if the answer string is an adverb
delays a thread until there are less than max pending pending fetchers
increments the number of correct applications by 1
increments the number of pending fetchers by 1
used by the code web document fetcher code threads to return the
increments the number of wrong applications by 1
increment the value of this term counter by 1
sets the calling filter and the snippet and starts the thread
increment the value of this term counter by code inc code
decrement the value of this term counter by 1
decrement the value of this term counter by code dec code
multiply the value of this term counter times code fact code
find the ne type of a target
cut tailing words like university international corporation
extract acronyms from the targets
get the maximum count out of a set of counters
get the sum of a set of counters
flush the internal buffer
traverse xml document by iteration
traverse xml document by visitor go f
transfer xml to string
transfer string to xml
this method initializes this
this method initializes j split pane
this method initializes this
this method initializes j panel
this method initializes j tabbed pane
this method initializes apdl ui
this method initializes result ui
this method initializes this
this method initializes j button
this method initializes j scroll pane
this method initializes j table
this method initializes j button
this method initializes j button1
this method initializes j button1
this method initializes j scroll pane1
this method initializes this
this method initializes j tabbed pane
this method initializes j button2
this method initializes j list
this method initializes j panel2
this method initializes j image pane
this method initializes j text field
this method initializes j text field1
this method initializes j tabbed pane
this method initializes j text field2
this method initializes j image pane
this method initializes j text field3
this method initializes j text field4
this method initializes j scroll pane2
this method initializes j text field5
this method initializes j text field6
this method initializes j text field7
this method initializes j text field8
this method initializes j text field9
this method initializes j text field10
this method initializes j text field11
this method initializes j text field12
this method initializes j text field13
this method initializes j text field14
this method initializes j text field15
this method initializes j text field16
this method initializes j text field17
this method initializes j button
this method initializes j button1
this method initializes j button2
this method initializes j button3
this function draws our square on screen
checks the current content of columns 1 to 6
inserts a line break if the current position is
inserts a line break if the current position is
counts the number of distinct factors
test for equality up to coefficient
permutes the factors such that a division
creates a deep copy of this expression
tests if two powers have the same base
implements a comparison between powers
the extra flag is used to indicate patterns in parentheses
the extra flag is used to indicate patterns in parentheses
must only be called after set pseudo code
returns a bracket
stores the argument as list of brackets
accept the visitor
operator precedence and associativity
set the list of scripts to be executed by this action
function called by ibis to give us a newly arrived message
function called by ibis to give us a newly arrived message
add given cube to the cache
get a cube from the cache
copy contents of this cube into a given target
number of times this cube has been twisted
function called by ibis to give us a newly arrived message
returns if this cube is solved or not
twist the cube returning the result as a new cube
computes the inverse of a row or column last first etc
checks if consistent
interface receive port connect upcall
verify if a double is a na n
this calculation is based on bisection method
this calculation is based on secant method
reset the n and gn parameters
do the step of fixed point method
check if the method reached the maximum number of iterations
compute the next position
check if is a valid position
verifies if has converged
get the number of iterations
this method returns the largest positive integer satisfying j 1 or if
this method returns the largest positive integer satisfying j 1 or if
this method return x k where k is the largest nonegative integer
this method return x k where k is the largest nonegative integer
calculates the linear interpolation
resolves the referrers returns unknown if not available
returns a name for the robot either the user agent string
get a list of newly instantiated report instances
gets the time of the first request over all log files
gets the time of the last request over all log files
save the current configuration to disk
gets the reports filename
adds a new group of configuration fields settings
gets a group of configuration fields settings
resolves the names of user agents returns unknown if not available
calculates the top level domain from a hostname
get the start date
resets information of all previously identified robots
get the start date formatted as a string
gets the table model adapter
get the end date
add a new log file
get the end date formatted as a string
gets the unresolved hostname ip address always lower case
get a description for the given domain
adds the specified entry to the log file
set the title of the graph
gets the default legend properties
set the labels axis text
gets the default object2 d properties
gets the number of rows
get a suitable graph implementation
sets the hostname ip address which can be code null code
gets the default chart2 d properties
set the numbers axis values
set the labels axis text
gets the value of a specific row and column
gets the default multi colors properties properties
get the graphs buffered image object
set the numbers axis values
gets the resolved hostname always lower case
find a match for the given user agent string
calculate the maximum value of numbers axis
parses the specified log file entry
sets the resolved hostname
gets the entry date time
runs the report generator
sets the entry date time
starts the progam up
shuts the program down
sets the entry date
get a specific string
get a specific character mnemonic
sets the entry time
shows a modal error dialog box with a single ok button
get a specific name value
extract the http protocol version number i
shows a modal error dialog box with yes and no buttons
shows a modal question dialog box with yes and no buttons
gets the originally requested url
extracts a string field converts to an empty string
sets the originally requested url
converts a numerical field to an integer value
gets the resolved url
sets the resolved url
get the filters description
converts a numerical field to an float value
gets the http version
sets the http version
gets the http referrer which might be code null code
get the filters description
get a unique hashcode that identifies this instance used when storing
method get account pending balance
returns the num of transactions
sets the num of transactions
returns the account number
sets the account number
returns the transfer account
sets the transfer account
sets the interval
sets the next apply
sets the trans
returns the payee
returns the status
sets the balance
returns the transaction date
sets the transaction date
returns the account types
returns the all accounts
returns the splits
sets the account types
sets the transactions
sets the splits
sets the all accounts
returns the end balance
returns the reconciled balance
sets the end balance
sets the reconciled balance
returns the pending balance
sets the pending balance
sets the transaction date
sets the splits
returns the all categories
sets the all categories
returns tt true tt if this connection is already connected
creates an inner jar url pointing to the resource with the specified name
creates an url for the specified specification
returns tt true tt if the specified url denotes a directory
returns tt true tt if the specified filename denotes a jar file
converts the specified tt url tt to a tt file tt
looks up the session bean
gets visibility status
set the source
empty method might be used in the future
create a new ctworkbook with all values set to default
return the textual content of the paragraph including text from pictures
returns the text of the paragraph but not of any objects in the
appends a new run to this paragraph
get the document part thats defined as the
returns the paragraph alignment which shall be applied to text in this
returns the policy on headers and footers which
specifies the paragraph alignment which shall be applied to text in this
returns the text vertical alignment which shall be applied to text in
specifies the text vertical alignment which shall be applied to text in
appends a new paragraph to this document
create an empty table with one row and one column as default
specifies the border which shall be displayed above a set of paragraphs
create an empty table with a number of rows and cols specified
specifies the border which shall be displayed above a set of paragraphs
verifies that the document protection tag in settings
verifies that the document protection tag in settings
specifies the border which shall be displayed below a set of paragraphs
verifies that the document protection tag in settings
verifies that the document protection tag in settings
specifies the border which shall be displayed below a set of
specifies the border which shall be displayed on the left side of the
enforce the filling forms protection
enforce the comments protection
specifies the border which shall be displayed on the left side of the
enforce the tracked changes protection
specifies the border which shall be displayed on the right side of the
remove protection enforcement
specifies the border which shall be displayed on the right side of the
specifies the border which shall be displayed between each paragraph in a
specifies the border which shall be displayed between each paragraph in a
specifies that when rendering this document in a paginated
specifies that when rendering this document in a paginated
specifies the spacing that should be added after the last line in this
specifies the spacing that should be added after the last line in this
specifies the spacing that should be added after the last line in this
specifies the spacing that should be added after the last line in this
specifies the spacing that should be added above the first line in this
specifies the spacing that should be added above the first line in this
specifies the spacing that should be added before the first line in this
specifies how the spacing between lines is calculated as stored in the
specifies how the spacing between lines is calculated as stored in the
specifies the indentation which shall be placed between the left text
specifies the indentation which shall be placed between the left text
specifies the indentation which shall be placed between the right text
specifies the indentation which shall be removed from the first line of
specifies the additional indentation which shall be applied to the first
specifies the additional indentation which shall be applied to the first
this element specifies whether a consumer shall break latin text which
this element specifies whether a consumer shall break latin text which
this method provides a style to the paragraph
gets the style of the paragraph
returns a short description of the servlet
returns a short description of the servlet
store the next filter in the pipeline
determine if this filter should be applied to a specific request
store the handler to call when end of stream is reached
this implementation does not read from input so this method does nothing
store a stream to use for output
this method is invoked when end of stream is reached
this returns a web reader for the specified host and port
return the definition this points belongs too
sets the actual bean object
attribute to bind to
autoscale based on actual values
internally used to ceil values
factory to get a plotter i
this method moves the buffer on by one element
this method retrieves the given element from the buffer
lets the user know that the text they entered is
lets the user know that the text they entered is
optionally override in sub classes
adds a new document to the history
displays the previous document in the history list
checks to see if the code htmldocument code contains an
this returns the short information on the server received upon
displays the default text in the status display
returns the index of the server to use
gets the server set in the preferences
adds a new server to the list of servers
removes a server entry from the preferences
gets a property
sets a property
fires a code property change event code to any
returns the short name of the database from which the defintion was
gets the full name of the database from which this definition was
this method initializes this
this method initializes bt logar
this method initializes bt cancelar
this method initializes txt login
this method initializes pf senha
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes j scroll pane
this method initializes this
this method initializes txt matricula
this method initializes btn sair
this method initializes mb principal
this method initializes menu aluno
this method initializes cb pesquisa
this method initializes this
this method initializes txt nome
this method initializes mi cadastro
this method initializes txt descricao
this method initializes mi pesquisa
this method initializes mi sair
this method initializes btn selecionar
this method initializes txt nascimento
this method initializes cb sexo
this method initializes txt rua
this method initializes txt bairro
this method initializes txt cidade
this method initializes txt numero
this method initializes txt zona alvo
this method initializes cb modalidade
this method initializes txt data inicio
this method initializes txt nome
this method initializes j table
this method initializes btn novo
this method initializes txt nascimento
this method initializes btn excluir
this method initializes btn gravar
this method initializes txt cpf
this method initializes txt dia vencimento
this method initializes btn atualizar
this method initializes cb sexo
this method initializes btn pesquisar
this method initializes txt end
this method initializes txt bairro
this method initializes txt cidade
this method initializes txt zona alvo
this method initializes txt data inicio
this method initializes txt dia vencimento
this method initializes btn gravar
this method initializes btn limpar
this method initializes btn excluir
this method initializes btn atualizar
this method initializes btn consultar
this method initializes txt numero
this method initializes txt aluno
this method initializes txt peso
this method initializes txt altura
this method initializes txt braco esq
this method initializes txt braco dir
this method initializes txt torax
this method initializes txt cintura
this method initializes txt quadril
this method initializes txt coxa esq
this method initializes txt coxa dir
this method initializes txt pantu dir
this method initializes txt pantu esq
this method initializes cb modalidade
saves the xml file
returns a lyrics object from a string
returns the value from a given position in the table
returns a connection object to connect with the database
start the player
pause the player
stop the player
returns the length of the song
returns the current position seconds of the player
returns the current position milliseconds of the player
sets the current position of the player seconds
sets the current position of the player milliseconds
returns the current song
returns the number of channels from the audiofile
returns the factor to scale the wave to fit on the x axis
returns the factor to scale the wave to fit on the y axis
returns the increment to draw the wave correctly on the panel
returns the length of the audiofile
add a sentence to the array of sentences
saves the properties
calculates the zoomconstants
this function converts the given song pathname to a wav file
update the song timer
returns the current position
the current position of the song can be set
the previous timeframe will be shown
the next timeframe will be shown
the wave will completely be repainted
the audio info object will be reset and the panel will be cleared
when the pane resizes the wave has to be repainted
the current position can be adjusted with the mouse
this method initializes this
this method initializes j text field
this method initializes j text field2
this method initializes j text field
this method initializes j text area1
this method initializes array
this method initializes j text field
this method initializes j check box
add an element to the indexer if not already present
method applies find some account
resursive procedure used in print method
prints department tree starting with current one
searches for department in loaded structure
recursive function that fetches children of specified department
renames department in database
deletes department from database
inserts a department into database
this method initializes j frame
this method initializes j button
this method initializes j text field
this method initializes j text field1
this method initializes j text pane
this method initializes j button4
initialization of the servlet
sets the service
process the given request generating a response
create an instance of
create an instance of
it attempts to get the password from the private
add an alias password pair to the callback mechanism
method for document listener when something changes in the document
method for document listener when something is inserted into the document
method for document listener when something is removed from the document
central method when something was removed or inserted into a document
method for document listener when something changes in the document
central method when something was removed or inserted into a document
start the fb instances
stop the fb instances
algorithm req in st
start the fb instances
stop the fb instances
algorithm move pist left in java
algorithm move pist right in java
algorithm stop temp in java
algorithm both on state in java
algorithm move pist down in java
algorithm req in st
start the fb instances
algorithm sensor activate in java
stop the fb instances
algorithm move pallet right in java
algorithm stop temp in java
algorithm both on state in java
algorithm move pallet down in java
start the fb instances
stop the fb instances
start the fb instances
algorithm move object left in java
stop the fb instances
algorithm move object right in java
algorithm stop temp in java
start the fb instances
algorithm both on state in java
stop the fb instances
algorithm move object down in java
algorithm initialisation shell in java
algorithm move shell left in java
algorithm move shell right in java
algorithm stop temp in java
algorithm both on state in java
start the fb instances
stop the fb instances
start the fb instances
stop the fb instances
start the fb instances
stop the fb instances
start the fb instances
stop the fb instances
start the fb instances
stop the fb instances
116 algorithm count up in st
127 algorithm count down in st
138 algorithm flash all in ld
145 algorithm chase up in ld
start the fb instances
153 algorithm chase down in ld
stop the fb instances
start the fb instances
stop the fb instances
start the fb instances
stop the fb instances
start the fb instances
stop the fb instances
start the fb instances
stop the fb instances
algorithm alg off in st
start the fb instances
stop the fb instances
start the fb instances
stop the fb instances
algorithm allow right in st
algorithm extend1 in st
algorithm extend0 in st
algorithm block right in st
algorithm wait 1 in st
algorithm allow right in st
algorithm retr0 in st
algorithm block right in st
algorithm allow left in st
algorithm block left in st
algorithm to next0 in st
algorithm to next1 in st
algorithm to mgz1 in st
start the fb instances
algorithm to mgz0 in st
stop the fb instances
algorithm ackled0 in st
algorithm startled1 in st
algorithm startled0 in st
adds an error to the result
algorithm resetled1 in st
algorithm resetled0 in st
algorithm vacuum on in st
algorithm vacuum off in st
returns the java source
removes extra characters at the beginning and end of attribute strings
returns the string to be used to display the tree node
returns the icon to be used for display of this element
gets the parser result
closes a start element
returns a vector of the receivers children
check whether the given jmenu item resides in the given jmenu
internal prints an error message
recursive method for deleting the selected element from the document
store data associated with this library element
retrieve data associated with this library element
returns the document element of the receivers type document with lazy
returns the selected node from the library tree or tt null tt if
sets the dom element represented by this component and updates its
sets the background color tt color
sets the background color tt color 119 190 255 tt for
returns preferred layout size based on components get preferred bounds
returns the default background color tt color
returns the default background color tt color 119 190 255 tt for
sets the selection state
the color for deselected elements of this type
adds the visible parameters of this element if any to the given
add a label at the given location
algorithm count up in st
algorithm count down in st
this method initializes project frame
algorithm flash all in ld
algorithm chase up in ld
start the fb instances
algorithm chase down in ld
this method initializes import text field
this method initializes export text field
this method initializes browse import button
stop the fb instances
this method initializes browse export button
this method initializes import button
this method initializes export button
this method initializes j scroll pane
this method initializes project tree
this method initializes file tree
this method initializes j scroll pane
use binary search algorithm to locate the specified file in the given
this method initializes build button
this method initializes this
this method initializes menu bar
this method initializes exit menu item
this method initializes output pane
this method initializes main split pane
this method initializes xsl combo box
record another answer or throw an exception if the time
return horizonal offset
return vertical offset
get a component from an rdf component description
this method checks for any updates
thi sremoves the filter from the table sorter
this method repopulates the folders combobox
this method populates the locations combobox
this method paint an image onto the backgroud of the panel
this mothod refreshes the table from the download list
this refreshes the combox box with the latest updated series
this method paint an image onto the backgroud of the panel
this gets the download progress of an episode
this sets the size of an episode
this is the lastupdated date of a series
this gets the last checked date
sets the update flag for a series
this sets the last updated date
this sets the last checked date
this gets the last updated date
this returns the tite of the series episode
this returns the location of a series episode
this returns the tite of the series episode
this returns the location of a series episode
sets the update flag for a series
gets the prefixed properties
loads from json
load from json
sets the default prefix
store to json
store to json
gets the process properties
store to json
sets the environment factory
gets the properties
sets the prefix configs to build up a
sets the prefix configs
clears the prefixes the default prefix and set the delimiter to
gets the configured prefix
gets the prefixed properties
sets the default prefix
gets the prefix delimiter
sets the prefixes
sets the prefixes
gets the prefixed key and parse it to an boolean value
gets the prefixed key and parse it to an boolean value
gets the prefixed key and parse it to an byte value
gets the prefixed key and parse it to an byte value
gets the prefix
gets the prefixed key and parse it to an double value
gets the prefixed key and parse it to an double value
gets the prefixed key and parse it to an float value
gets the prefixed key and parse it to an float value
gets the prefixed key and parse it to an int value
gets the prefixed key and parse it to an long value
gets the prefixed key and parse it to an long value
gets the prefix config
gets the prefixed key and parse it to an byte value
gets the prefixed key and parse it to an short value
loads a json file
load a json file by using the given reader
removes the property
sets the configured prefix
sets the default prefix
sets the prefix config
stores a properties file by using the given comments and encoding
store to json
gets the complete properties
attribute config string attribute config name value
attribute config 37 name value
bean bean bean
use to return primitive type or string or json object or json array
use to return primitive type or string or json object or json array
use to return primitive type or string or json object or json array
use to return primitive type or string or json object or json array
same as read in memory parssing
adds a widget
returns the component
sets the option for automatically closing the gui if the optimization
returns the event when the gui is closed
sets the event when the gui is closed
executes the task
force a repaint of the plot
repaints the plot
repaints the diagram
returns the progress value between
returns the number of maximal iterations
returns the current iteration
updates the view
repaints the table
returns the terminate button
bind a value
initialize with a parent
bind a value
returns the current iteration
calls the listeners that listen to the state of this task
bind a constant
adds an item to the given menu which allows to restore the
returns the permutation mode
sets the permutation mode
returns the double type
sets the double type
returns the eta
sets the eta
calculates a random value in the interval
returns the rate of the
sets the rate of the
returns the number of crossover points of the
sets the number of crossover points of the
returns the rate of the
sets the rate of the
returns the number of crossover points of the
sets the number of crossover points of the
returns the nu value of the
returns the type of
sets the nu value of the
sets the type of
returns the number of batched individuals for the evaluation
sets the number of batched individuals for the evaluation
sets the rotation value for the
sets the generations
returns three different
binds the given
calculates the sum of the
sets the final temperature
sets the initial temperature
returns the perturbation
sets the perturbation
calculates the delta value for the non uniform mutation
returns the number of particles
sets the number of particles
randomizes the constants of the term
returns the velocity
sets the velocity
returns the best position
returns the best objectives
sets the best position
update the global leaders
update the personal best of each
returns the tournament value
sets the tournament value
implements the hypervolume calculations as proposed by zitzler e
returns the type of
sets the the type of
binds the given
returns normalized objectives
calculates the fitness of the
returns the second element
returns the number of children
sets the number of children
sets the number of parents
returns the type of crossover rate that is used
sets the type of crossover rate to use
sets the crossover rate
invoke an out message for the
invoke an err message for the
returns the value of an attribute
returns the first child
returns the first child with a specified name
update with current population
returns the strings content
returns the configuration of the
sets the strings content
sets an attribute to a value
return the distance of two
append a new
append an xml
returns the owner
add a new
writes the object information to an output the stream
save the module configurations to a file as filename
save the module configurations to a
save the modules configuration to an
save the module configuration to an
returns the xml representation of the
returns the xml representation of the
calculate the distance between two
adds a module
removes a module
calculate the fitness
executes the specified modules a
returns the total number of
returns the value of the property
sets the value of the property
returns the enclosing actual type of a class
verifies if a class is assignable to a type
sets the value of the property
returns the instance of the
sets the current file
opens the file chooser for loading the current configuration file
opens the file chooser for saving the current configuration file
loads the selected modules from the specified file
saves the current selected modules to the current file
saves the current selected modules to the specified file
removes a module from the panel
returns the divider for the labels
returns the name of a
returns the info of a
returns the tooltip of a
returns the icon of a
returns the name of a
returns the tooltip of a
converts the given
returns the formatted name of the property
returns the instance of the table
returns the instance of the model
formats a text for tooltip inserts break lines
returns the module for the
removes empty categories
sets the state of the
returns the scaling factor for the offset value
sets the scaling factor for the offset value
returns the initial offset value
sets the initial offset value
adds a new
returns a random sat genotype of the constrained problem
binds the specific solver as singleton
binds the specific solver as singleton
sets the right hand side value
checks if this constraint is satisfied for a given model
specifies if the
returns the boolean vector
sets the boolean vector
returns the double vector
sets the double vector
returns the variable of this
returns the phase of this
returns the negated
returns the coefficient
returns the value of the variable or null if this variable is not
returns the literal
sets the variable to a phase
constructs a copy to this term
sets the number of instances
returns the learning strategy
sets the learning strategy
returns the restart strategy
sets the restart strategy
returns the number of learned clauses that are kept
increments the activity of a variable
sets the number of learned clauses that are kept
sets the instance to n vars
sets the value
sets the activity of the specified variable
rescales the activities of the variables
sets the prioritized phase of the specified variable
sets the activity of a variable
returns the activity of a variable
returns the prioritized phase of a variable
the h function
sets the number of bits per double value
sets the zdt function
sets the m value
converts a sublist of boolean values to an integer in 0 1
sets the k value
sets the l value
sets the capacity of this knapsack
sets the m value
set the profit of an item
get the profit of an item
set the weight of an item
get the weight of an item
sets the k value
computes how much the given item exceed the defined capacity of the
computes the profit for the given items for this knapsack
get the integer value in the line
get the double value in the line
returns the costs for one field of a specified dimension
the number of objective functions
adds or removes queen from a field
returns the decoder strategy
sets the decoder strategy
sets the seed of the problem generator
sums the costs of a
counts the number of
converts a binary representation of a double to a double value
set the encoding double or binary
sets the zdt function
validates all settings
randomizes this genotype by a random permutation
initialize this genotype with random values based on the size of the
returns the element value of the index
initialize this genotype with random values based on the number of keys
returns the lower bound for the
returns the upper bound for the
initialize this genotype with
returns the lower bound for the
returns the upper bound for the
initialize this genotype with
initialize this genotype with
returns the feasibility
returns the objective that is assigned to the given value
binds the given
adds the objective with the specified value
call this method if a new iteration started
updates the archive with a single individual
adds the objective with the specified double value
adds the objective with the specified integer value
starts the optimization process
adds all objective with the specified value specified in
increases the iteration value by 1
returns the maximal number of iterations
calculates the euclidean distance of two
returns the wrapped object
returns the objectives
returns the genotype
sets the genotype
sets the phenotype
sets the objectives
indicates whether this
indicates whether this
sets the state of the
sets the list of
sets the capacity of this
set the number of divisions for the
returns the appropriate
returns the most crowded
determines the new bounds for the individuals and returns
sets the type of the random number generator to the specified value
returns the type of the random number generator
select if a specific seed should be used
this method resets the state of this instance using the byte array of
returns the maximal number of parallel threads
sets the maximal number of parallel threads
initialize the print write from a filename
returns the step size of the evaluations
sets the step size of the evaluations
returns the step size of the iterations
sets the step size of the iterations
sets the observation for the number of evaluations
sets the observation for the number of iterations
statistics for the given
sets the printout mode for infeasible individuals
return a string describing this applet
create a color chooser
return the best vertical offset for the given icon
return the best horizontal offset for the given icon
sets the x value of the starting point
updates the end point of the zoom box
sets the x value of the end point
sets the y value of the start point
sets the y value of the end point
draws the zoom in icon
draws the zoom out icon
set this to false to disable drawing of the
true if icons are drawn at the corner of this
return a string describing this applet
return a string describing this applet
exit the application
implements the code action listener code for our timer
implements the code timing event code method from code org
implements the code begin code method from code org
implements the code repeat code method from code org
sets the bounds of the current window
sets the visibility of the current window
sets the window parameter of being on top of other windows
dispose the current window
sets the animation speed
returns the resulting document of the last call to parse
the parse method should call this after parsing
sets wether or not the parser should validate the xml being parsed
returns true if this parser is validating false otherwise
sets wether or not xml schema validation should be done
returns true if this parsers uses xml schema validation
turns namespace processing on off
returns true if namespace processing is on false otherwise
returns the current entity resolver
returns the current error handler
sets an entity resolver for the parser
returns the currently used schmea implementation
change the default schema implementation http www
clones the parser
returns the month day value this object represents
returns a string representation of this object
returns the string representation of this object
returns the xml schema date representation of this time
returns a string representation of this object
returns a string representation of this object
returns the xml schema date representation of this date
returns the value that this object represents
returns a string representation of this object
sets wether or not the parser should validate the xml being parsed
returns true if this parser is validating false otherwise
sets wether or not xml schema validation should be done
returns true if this parsers uses xml schema validation
this sets a dtd reference to use when marshalling objects to xml
this sets a xml schema reference to use when marshalling objects to xml
turns namespace processing on off
adds and object with a key
adds the specified object after the last object of the same key
returns true if namespace processing is on false otherwise
replaces the object associated with the specified key
this is simply an alias for replace
gets an object by key
returns the actual object associated with the key
sets an entity resolver to be used when parsing
returns the object at the specified index
returns tt true tt if the iteration has more elements
gets the current entity resolver or null if none exist
returns the next element in the iteration
removes from the underlying collection the last element returned by the
sets the error handler to use when parsing
returns the current error handler or null if none exist
sets the error handler to use when parsing
sets a filter set that is used when getting children from a parent
this method handles setters of child elements
this sets a dtd reference to use when marshalling objects to xml
this sets a xml schema reference to use when marshalling objects to xml
this method handles attribute setters
receive notification of a recoverable error
receive notification of a non recoverable error
receive notification of a warning
returns the name of the filter
allow the application to resolve external entities
sets the attribue of children to filter on
returns the attribue of children to filter on
sets the value the filter attribute should have to be included
returns the value the filter attribute should have to be included
this should simply create a new instance of the xmlparser implementation and
returns any cauthg dtd reference
returns the next element in the iteration
returns the real resolver
removes from the underlying collection the last element returned by the
makes a new filter in the set
sets a fully qualified name including namespace if any
lookup a named filter
returns the alias for the namespace if any
returns the location of the schema for the namespace
returns the default namespace xmlns as an xmlattribute
returns a fully qualified name including namespace if any
returns the xmlns xsi attribute as an xmlattribute
returns the xsi schema location attribute as an xmlattribute
returns a string representation of all information held by this class
generates a summary section
generates a detail section
generates a detail section alternative 2
sets a child element on this element
adds a child element
returns the current xmlparser implementation
this replaces the standard xmlparser implementation using jaxp apis with a user
creates a new dtdref
returns a list of all direct child elements as xmlelement objects
creates a new dtdref
returns a list of the named child elements
creates a new dtdref
returns the first child element with the name
creates new schema ref
adds a file to generate doc for
creates new schema ref
generates a summary section
generates a detail section for all complex types in the specified iterator
creates a new xmldata filter set that can be set on an xmlunmarshaller
generates detail for a specific complex type
sets an attribute
collects elements in sub groups
internal support method that calls a setter in the real task
internal support method that calls a setter in the real task
returns an iterator of all attributes as xmlattribute objects
returns true if the alternative output is selected
internal support method that calls a getter in the real task
returns the verbose state
sets the directory the documentation should be generated in
returns true if the alternative output is selected
returns the directory the documentation should be generated in
sets the file set of the input schema files to generate from
set to true to list files being generated
returns the current file set
returns the verbose state
executes the task
sets the directory the documentation should be generated in
getter for property barcolor
returna all attributes of the specified name but with different namespace
setter for property barcolor
returns the directory the documentation should be generated in
getter for property bar text color
setter for property bar text color
sets the file set of the input schema files to generate from
getter for property header text color
setter for property header text color
returns the current file set
getter for property xsd file
executes the task
setter for property xsd file
generates a summary section
getter for property doc dir
generates a detail section for all groups in the specified iterator
setter for property doc dir
generates detail for a specific group
finds all xmlns xyz and xmlns attributes
returns true if the minimum required options are set
getter for property alt
setter for property alt
getter for property verbose
returns the options
generates a summary section
generates a detail section for all attribute groups in the specified iterator
generates detail for a specific attribute group
returns the current print writer
returns the value of a specific attribute
returns application specific information for this object
prints a string using the current writer
returns true if there are any app info available
returns the documentation for this object
returns true if there is any documentation available
prints a line plus a line feed using the current writer
writes an annotation node
returns the value of a specific attribute
writes the end of the html document
returns true if there are elements in the set
sets the element value
returns an iterator of xsdelement set
gets a named element reference
returns the elements text value
gets the real attribute this ref references
writes the summary section heading
returns an xsdbase types constant representing the type of this attribute
returns the type as a string
returns the type as a java type
returns the name of the attribute
returns true if this attribute is optional
writes the beginning of a summary section for a type
returns true if this attribute has a default value
returns the default value of this attribute
writes a summary contents comment
do some things we couldnt do before the whole schema was parsed
writes the summary contents for a section entry
this makes sure that if the public type references a public simple type
returns a string representation of this object
returns true if the element has a public type
writes the end of a summary section
returns true if the type is public and an xsd basic type
if has public type returns true this returns the name as a string
writes a heading for the details sections
if has public type returns true this returns the type name
calls the post parse method on all xsdobject objects in the iterator
registers a new named xsdelement
returns true if this element has a private type
writes the start of a detail section
gets the namespace of the object
sets the schema object this object belongs to
returns the schema that this object belongs to
registers a new named xsdcomplex type
validates if the specified type is a primitive schema type
writes the end of a detail section
qualifies a name with the namespace alias used by the schema file
returns all public named complex types as xsdcomplex type objects
this prefixes the name with the namespace alias for the
removes any namespace prefix from the name
registers a new named xsdsimple type
this searches for a child element with the specified name in the specified
writes the start of a detail contents entry
this searches for a child element with the specified name in the specified
returns a registered xsdsimple type
returns all public named simple types
writes the end of a detail contents entry
returns the attributes defined by this attribute group as xsdattribute objects
returns the elements defined by this group
registers a new named xsdgroup
returns the groups defined by this group as string objects
returns the attributegroups defined by this group as string objects
writes a list of attributes as part of a detail
returns all groups as xsdgroup objects
registers a new named xsdattribute group
returns all attribute groups as xsdattrbiute group objects
returns the loaded map
registers a public attribute definition
throws an exception if there were any errors
returns a registered xsdattribute
receive notification of a recoverable error
writes a list of element references as part of a detail
receive notification of a non recoverable error
returns true if the schema requires xml files to be namespace qualified
receive notification of a warning
returns the target namespace
returns the named object if any null otherwise
figures out the installation catalog when run through a jar
adds a zip file to the classpath of this classloader
opens an input stream relative to the installation catalog
returns tt true tt if the iteration has more elements
finds the basic type of this attribute by searching simple type extensions
adds a catalog path to the classpath
returns the next element in the iteration
returns an xsdbase types constant representing the type of this attribute
this takes both a catalog path and paths to zip and jar files
returns the type as a string
removes from the underlying collection the last element returned by the
loads a specific class
returns the basic type
sets min occurs
returns the type as a java type
gets the min occurs value
sets max occurs
returns the max occurs value
finds the specified resource
sets wether or not this element is ordered
returns wether or not this element is ordered
returns true if there are more than one of this element
returns true if this attribute is optional
finds all mathing resources
returns true if this attribute has a default value
returns true if this is a private type
returns the default value of this attribute
returns true if this type extends other types or references groups
returns true if this simple type extends another
if this classpath entry contains the specified file then it returns an internal
returns the extensions as a list of string objects
returns the type this simple type extends if any as a string
returns true if there are elements defined by this complex type
returns an input stream for reading the entry
returns true if there are attributes in the set
returns a list of xsdattribute objects
sets an entity resolver to use
return an url pointing to the entry
sets an entity resolver to use
returns true if there are any attributes defined by this complex type
parses the input stream and returns an xsdschema object
returns true if this complex type have simple content that restricts or extends
if this classpath entry contains the specified file then it returns an internal
this only returns true if extends simple type returns true and the
this method generates a whole interface
returns an input stream for reading the entry
gets the generator options
return an url pointing to the entry
sets the readonly flag
returns the value of the readonly flag
gets the name of the source file we are generating from
closes the output file
sets the package the generated interfaces should belong to
gets the directory we are generating to
returns teh package the generated intefaces should belong to
gets the package the generated interfaces belongs to
sets the package the generated interfaces belongs to
writes a javadoc comment
sets the output directory where the generated files should be put
if true the generator should automatically generate mappings for
sets the automap state
adds an element name object name mapping
returns the output dir
writes a section comment
sets the source schema file to generate from
validates that all required options are set
returns the schema file to generate from
writes the interface end
sets options to use
generates the attribute section
writes default constatns for attributes
writes setters and getters for the attributes
generates the element section
writes an empty line
generates the elements from the references
sets the readonly flag
returns the value of the readonly flag
sets the package the generated interfaces should belong to
writes a default constant
returns teh package the generated intefaces should belong to
if true all non mapped element names are mapped to object names automatically
writes an xom xml object map mapping constant
returns true if automapping is on
returns the value of object name
sets the output directory where the generated files should be put
returns the output dir
executes the task
sets the source schema file to generate from
returns the schema file to generate from
returns the first 60 chars of the passed string
writes an attribute getter
writes a value setter
allow the application to resolve external entities
writes a qualified namespace constant for the factory interface
writes a factory method
converts the name to an object name
this is an internal feature setter that handles exceptions
this should simply create a new instance of the xmlparser implementation and
allow the application to resolve external entities
gets the package of the api to generate
sets the package of the api to generate
gets the schema file to generate from
sets the schema file to generate from
set mappings between element and object names
returns the auto mapping state
set the auto mapping state
returns a string representation of this object
returns a lt doctype
test of main method of class nonvalidating
allow the application to resolve external entities
test of main method of class validating
allow the application to resolve external entities
test of main method of class validating
allow the application to resolve external entities
test of main method of class validating
allow the application to resolve external entities
set to true to list files being generated
given a hash set students fill in combobox appropriately
count number of students in the combobox
should load the combo box with the name of
given an index set the selected student
this method initializes j frame
this method initializes j text area1
this method initializes j editor pane
this method initializes student score
how useful is ontology annotation for integration across phylogenetic studies
how are annotations distributed across anatomy and taxonomy
this method loads in all the ontologies in a specific location
this method connects the shard to the database given the systems
this method creates a node for an instance of the
finds the equivalent tao term for the given zfa term
within bone annotations what is the distribution of skeletal characters
this check if the term has any xrefs to gni
create about dialog with the menu item as parent
reads the software license file into the text area and exposes the dialog
set the endpoint address for the specified port name
creates an obosession by opening and parsing the file
creates a box containing stop watch button
creates the pane for user inputs
set the watcher gui invisible and remove mouse listeners
closes all sockets and stops watching process
closes the transmission sockets
parses the report from transmitter
returns the flag specifying if there is no internet
the thread run function just creates a udp socket and runs the timer
sets the names of the columns
returns the server tcp port
returns the first player the player which started the game
sets the first player name the player which started the game
returns the server udp port
gets the game port of the user
returns the second player the player which joined the game
sets the second player name the player which joined the game
the method parses the given arguments and initializes the fields of the
returns the udp listener an object that manages the alive messages protocol
removes the given client name from the udp list now we will not
gets the transmit waiter socket
this method opens a new timer of the given client
gets the alive sender instance
ends the transmission
this method checks whenever the client is online or not it
returns true of the game is active otherwise returns false
this method prints the borad in the command line
initialize the whole board to be empty
returns true if the game board is full otherwise returns false
returns true if the given cell is one of a row sequence
returns true if the given cell is one of a column
removes a viewer by name if it is exists
returns the color of the player
sets players timer with the object which is listening to this timer
unsets players timer
adds a new watcher into the game
gets the number of the reports
returns the server inet address
returns elapsed time of the current move
this method treats servers public key request the public key for
gets an instance of the encryption class
returns a decrypted input stream for a file
gets the clients alive port
returns an decrypted input stream for a regular
gets the transmit waiter port
gets the game result
gets the winner
sets a winner
gets the current user statistics
sets the current user statistics
sets the top ten users statistics data
gets the transmit waiter instance
gets the number of loses
opens the statistics window and loads the statistics
gets the current time
gets the current date
internal function for info message writing
internal function for error message writing
this method authenticates the given player with the db
updates the gui components which shows the time that left to move
print the info message to the log file
print the error message to the log file
return a string with current date and time for info message
return a string with current date and time for error message
shows a dialog and writes down the message to the log
generates a pair of public private keys
sets a public keyfor the class
gets a public key of the class
encrypts a message with the public key
decrypts the encrypted message with the private key
class representing the timeout event
gets the timer thread
updates the timer text with current time
pauses the timer
resumes the timer
enables the game
restarts the timer and updates the timer text
gets the server public key
updates the timer with a specific time
creates the timer box containing the timer text
disables the game
loads the properties file and returns it
this method treats a statistics request
returns the report status
reset the watcher to null
this method treats a player disconnection
starts the transmission waiter waiting for transmission
stops the transmission and reset the transmission data
pops up a dialog window for the user
prepare the password for transmission
hashes a password
stops the timers
excahnges init data between users their names address and ect
creates an empty report for game
handles the reconnection process
saves a report to a local file
moves to the next player
adds the given player to the game
returns the player of the given color
returns the game id
calls the opponent surrender method of the game
calls the reset connection method of the game
stops the timers and notifies if needed
this method handles the situation that the opponent surrenders
closing the connection sockets
sends the current move to the game viewers
auxillary send to opponent move
sleeps for a certain amount of time
erases the current point
tries to set the time of the source to
a safer way to set the time of the sound source
gets a short helpful comment regarding the use of this
sets the value of this code preference code
a callback for whenever a code preference set code
a callback for whenever
a callback for whenever
a callback for when a
a callback for when the
a callback for when a
a callback for when a
a callback for when the
called whenever the state of the sound source
returns the name of the query language
checks that commit works by br
returns the crs authority factory
converts the given i18n string to an ordinary string using the current locale
returns the last transform that either transformed successfully all coordinates or filled
sets the last transform that either transformed successfully all coordinates or
returns the invalid authority code
converts the character set to a java charset if it can
scans the given directory for
returns the value of the given attribute as a string
returns the value of the given attribute as an upper case string
returns the value of the given attribute as an international string
returns the value of the given attribute as a date
returns the value of the given attribute as a floating point value
adds the given provider to the list of registered providers
returns a description possibly including coordinates of an identified point or points
returns the time after which this datum definition is valid
returns the number of ordinates in the net cdf axis
returns the units as a string
wraps the given net cdf projection into a geo api operation object
generates a list of all supported projections and their parameters in javadoc format
wraps the given net cdf file into a geo api crs object
verifies that the given axis has the expected properties
wraps the given net cdf file into a geo api metadata object
compares the properties found in the
area or region or timeframe in which this object is valid
sets this affine transform to the values of the given matrix
creates a new jndi name for the given scope and character sequence
returns a clone of the
if the event is a request type the method returns the request transported
if the event is a response type the method returns the response transported
returns the code for this exception
returns the client where to write the result response or an
attribtue descriptor being checked against
natural order usually associated with fid or key attribtues
returns the element name for this sorting order as a sql
returns the sort order
returns a single instance after deserialization
retrieve the local name
convert this name to a complete uri
returns the canonical instance on deserialization
returns the canonical instance on deserialization
returns the canonical instance on deserialization
returns the canonical instance on deserialization
creates an exception for an invalid type
creates an exception for an invalid value
prints the given name using the
returns the locale to use for producing messages in the reports
sets the default product name and factory name
adds the given row to the
writes the property value for the given key
adds the coordinate reference systems identified by all codes available from the given
adds an operation to be show on the html page
invoked when the report is making some progress
adds the objects identified by the given codes
returns information about the configuration of the test which has been run
convenience method adding all
creates a new row for the given authority code and identified object
unconditionally throw an exception since this functionality is not supported yet
creates a new row for the given authority code and exception
returns the url to the javadoc of the test method
creates a new row for the given operation and parameters
unconditionally throw an exception since this functionality is not supported yet
adds a new test result
returns a html anchor for the given category
sets the implementation identification
invoked when the existence of a mandatory attribute needs to be verified
unconditionally throw an exception since this functionality is not supported yet
invoked when the existence of a forbidden attribute needs to be checked
writes the list of content before the table of operations
unconditionally throw an exception since this functionality is not supported yet
unconditionally throw an exception since this functionality is not supported yet
returns the current band index
returns the current integer value from iteration
returns the current float value from iteration
returns the current double value from iteration
formats the current position of this iterator in the given buffer
unconditionally throw an exception since this functionality is not supported yet
verify the validity of metadata attributes as documented in the
moves the cursor to the next row and returns
returns the value in the current row at the given column
unconditionally throw an exception since this functionality is not supported yet
returns the value in the given column as a string
sets all ordinate values
string representation for debugging purpose only
returns the value in the given column as an integer or
ensures that the given identifier has a
returns the value in the given column as an integer
validates the given axis
for each interface implemented by the given object invokes the corresponding
returns the value in the given column as a double
validates the given coordinate system
returns the value in the given column as a boolean
validates the given coordinate system
validates the given coordinate system
validates the given coordinate system
returns the authority factory tests backed by the object factories
validates the given coordinate system
validates the given coordinate system
validates the given transformation
validates the given coordinate system
validates the given operation method
validates the given coordinate system
validates the given coordinate system
validates the given formula
performs the validation that are common to all coordinate systems
for each interface implemented by the given object invokes the corresponding
validates the given prime meridian
validates the given ellipsoid
validates the given coordinate reference system
validates the given datum
validates the given datum
validates the given coordinate reference system
validates the given datum
validates the given datum
validates the given datum
validates the given coordinate reference system
validates the given coordinate reference system
validates the given coordinate reference system
validates the given coordinate reference system
validates the given coordinate reference system
validates the given coordinate reference system
for each interface implemented by the given object invokes the corresponding
for each interface implemented by the given object invokes the corresponding
transforms the given coordinates applies the inverse transform and compares with the
logs this message at the given level
for each interface implemented by the given object invokes the corresponding
ensures that iso 19103 or geo api restrictions apply
declares that all given operations are unsupported
returns the tolerance modifier to use for comparing coordinate values
validates the given citation
validates the given responsible party
validates the given contact information
validates the given telephone information
validates the given identifier
validates the given address
validates the given online resource
for each interface implemented by the given object invokes the corresponding
validates the geographic description
validates the bounding polygon
validates the vertical extent
validates the temporal extent
validates the given extent
a dummy factory for testing purpose
invoked by all
more dummy factories as extension of the existing ones
returns the result of
returns the parameters to use for creating the
generates an code input source code from a file name
exit the application
save the created or modified schematron into file
exit the system
two part method the first call should try and get an authentication token
watch the progress of the page
launch a login activity
retrieve the login cookie from the cookie manager and store it in
restore the login cookie from preferences into the cookie manager
connect to whereami json endpoint and request a ui update
connect to ping endpoint and request a get where ami i update
turns on or off drag handling
invoked when the target of the listener has changed its state
sets cut operation flag
returns whether the requested flavor is supported by this
gets the current dot separated key representation
gets the ui dot separated key representation
populates table data list with data from db
get focus component flag either tree or table
set focus component flag either tree or table
returns active row counts
creates export document and write to hard disk
releases application properties resource
sets jdbc driver file path for a given
visits all nodes using deepth first search
p invoked after nodes have been inserted into the tree
this tells the listeners the editor has ended editing
p invoked after nodes have been removed from the tree
called while a drag operation is ongoing when the mouse pointer enters
p invoked after the tree has drastically changed structure from a
called when a drag operation is ongoing while the mouse pointer is still
called whenever the value of the selection changes
this tells the listeners the editor has ended editing
invoked when a component loses the keyboard focus
invoked when a key has been pressed
invoked when a key has been released
called as the cursors hotspot exits a platform dependent drop site
get first column
set first column
get third column
set third column
get fourth column
set fourth column
get fifth column
set fifth column
get sixth column
set sixth column
dot separated key representation
returns true if and only if all the fields are the same
clears change flags
set whether the connection obtained from this data source can be close
checks whether key name has been changed
should we close this connection obtained from this data source
implementation for wrapper interface in order to compile in jdk 6
makes a copy of all fields
implementation for wrapper interface in order to compile in jdk 6
discards and changes for this attribute by restoring old values
returns true if any changes has been made to this attribute
slash separated key representation
returns true if this attribue is marked as delete
returns true if this attribue is a new attribute
sets this attribute as a new
sets attribute inheritance flag
checks whether key name or inherited has been changed
sets attribute inheritance flag
sets new data change time stamp
gets all system data from database
sets this attribute as a new
returns true if and only if all the fields are the same
sets changed flag
commit changes to database
returns a list of all keys from database
gets the lead portion of a dot separated keyname excludes the last keyname
gets attribute by key name attribute name
gets the parent key name
gets the last portion of a dot separated keyname
gets attribute by key name attribute name
convenient method to set full key name from last key name argument
gets the last portion of a dot separated keyname upto specified keyname
gets a list of attributes by key id
starts or restarts the timer
converts to minutes and seconds
converts to seconds
converts to miliiseconds
gets a list of attributes by key name
updates a specified key
gets a list of attributes by code dconfig key code argument
deletes a specified key
retrieves code dconfig key code by id
retrieves code dconfig key code by key name
gets a list of code dconfig key code start with given key token
gets an individual attribute by id
deletes a specified attribute
deletes all attributes for a given dconfig key
p callback method that is called whenever a page is navigated to
p callback method that is called after the component tree has been
writes the specified byte as a character to the
die auswahl nach propsoal anwendung
die kontextinformation nach anwendung
die naeheren information bei selektion eines proposals
beginnt keywort mit char
der text der praefixes
liefert den validator fuer die kontextinformation
liefert code true code wenn parameter destructuring parameter ist
die root node wird als root eingetragen
adds overrides the attribute with the name
appends the given
inserts the given
instanciates a new
sets the text before the first child
sets the namespace of this element by adding a
sets the namespace for elements with
returns the child at position
returns the first child
returns the last child
returns the parent element of this instance or null if none exists
returns the root element that is the one element with no parent
returns the first element for the
returns the text of the first element for the
returns the description
return the description meta data for the pipe described by this
writes the object as an xml output
writes the object as an xml output
reads the object from an xml input
starts a tag
starts a tag
update method updates the object from another entity
update method updates the object from another entity
writes the object as an xml output
reads the object from an xml input
writes the object as an xml output
reads the object from an xml input
returns a list based on its name
provides a summary when the object is displayed in a list
defines the default server
returns actor designed by a network id
returns an encryption key
creates an actor using network id
returns the server address
returns server designed by a name
returns the path to be used in order to store data
replicate the information
allow replication of the information
returns build number
true if the location is the default
returns the path used for code generation
indicates if code is generated
indicates if the specified day is a working day in this location
returns the path used for code generation
writes the object as an xml output
reads the object from an xml input
indicates if code is generated
sets all servers to dirty flag
writes the object as an xml output
reads the object from an xml input
indicates if any of the servers is dirty
starts a tag
update method updates the object from another entity
indicates if the object accepts a filter
returns true if the actor is member of the team
returns lead name
writes the object as an xml output
writes the object as an xml output
reads the object from an xml input
reads the object from an xml input
writes the object as an xml output
reads the object from an xml input
adds files to be opened
returns a summary to be displayed in a list
adds classes used for replication
starts a tag
update method updates the object from another entity
adds classes used for replication
returns a list based on its name
adds prerequisites to the list
returns a list based on its name
returns exception details on the error output stream
adds files to be opened
returns the network identification
returns the alternate network identification
save objects by file
defines the actor as the operator of the system server
save objects by file
save objects by file
provides a summary when the object is displayed in a list
creates a list based on category
writes the object as an xml output
returns the port to be used for the local server
reads the object from an xml input
starts a tag
update method updates the object from another entity
returns the encryption key
returns if the server allows replication
writes the object as an xml output
starts a tag
controls the actor is identified in the recipient
update method updates the object from another entity
indicates if the object accepts a filter
indicates if the object accepts a filter
writes the object as an xml output
returns true if the actor is in the same team as another
indicates the actor has a role
adds prerequisites to the list
true if the holiday schedule is the default
actor set default location
writes the object as an xml output
reads the object from an xml input
writes the object as an xml output
actor set default holiday schedule
reads the object from an xml input
writes the object as an xml output
writes the object as an xml output
reads the object from an xml input
reads the object from an xml input
starts a tag
indicates if the member is available at the instant
update method updates the object from another entity
indicates if the names must be unique in the system or not
writes the object as an xml output
reads the object from an xml input
sets the dirty flag to no
update method updates the object from another entity
writes the object as an xml output
compares two risks for equality
writes the object as an xml output
sends a trace message when the file is saved
sends an error message when the file is not saved
update method updates the object from another entity
provides a summary when the object is displayed in a list
writes the object as an xml output
reads the object from an xml input
adds files to be opened
returns a name
sets entity name
adds classes used for replication
writes the object as an xml output
reads the object from an xml input
saves all objects in file s
returns a list based on its name
compares two events for equality
add the adjustment in hours
compares this object with the specified object for order
writes the object as an xml output
compares two phases for equality
writes the object as an xml output
reads the object from an xml input
starts a tag
update method updates the object from another entity
writes the object as an xml output
reads the object from an xml input
writes the object as an xml output
reads the object from an xml input
starts a tag
update method updates the object from another entity
writes the object as an xml output
starts a tag
update method updates the object from another entity
initializes the project
indicates if the object accepts a filter
writes risks as an xml output
returns true if the actor is involved in the project
returns true if the team is involved in the project
update method updates the object from another entity
provides a summary when the object is displayed in a list
writes the object as an xml output
writes phases as an xml output
writes the object as an xml output
reads the object from an xml input
writes the object as an xml output
writes the object as an xml output
reads the object from an xml input
starts a tag
update method updates the object from another entity
adds prerequisites to the list
provides a summary when the object is displayed in a list
writes the object as an xml output
reads the object from an xml input
starts a tag
update method updates the object from another entity
adds classes used for replication
returns the latest active plan for the project
returns a list based on its name
adds files to be opened
save objects by file
save objects by file
save objects by file
save objects by file
save objects by file
returns the latest forecast for the project and plan
creates a list based on category
writes the object as an xml output
compares this object with the specified object for order
reads the object from an xml input
starts a tag
update method updates the object from another entity
indicates if the object accepts a filter
compares this object with the specified object for order
plan validate forecasts
plan validate trackings
writes the object as an xml output
compares two phases for equality
compares this anonymous to the specified object
initializes the business process
compares two events for equality
writes the object as an xml output
writes the object as an xml output
update method updates the object from another entity
writes the object as an xml output
reads the object from an xml input
writes the object as an xml output
writes the object as an xml output
reads the object from an xml input
rests the task
writes the object as an xml output
reads the object from an xml input
sets forecast name
writes the object as an xml output
reads the object from an xml input
starts a tag
update method updates the object from another entity
returns the application code
provides a summary when the object is displayed in a list
provides a summary prefix when the object is displayed in a list
writes the object as an xml output
reads the object from an xml input
writes the object as an xml output
reads the object from an xml input
provides a summary when the object is displayed in a list
update method updates the object from another entity
provides a summary prefix when the object is displayed in a list
compares this object with the specified object for order
writes the object as an xml output
reads the object from an xml input
sets tracking name
adds classes used for replication
returns a list based on its name
returns the appropriate parser in order to read an element
adds files to be opened
saves all objects in file s
save objects by file
creates a list based on category
returns the number of scheduled hours for the task at the specified date
provides a summary when the object is displayed in a list
starts a tag
update method updates the object from another entity
writes the object as an xml output
starts a tag
update method updates the object from another entity
returns the workload for the task
writes the object as an xml output
compares this object with the specified object for order
writes the object as an xml output
reads the object from an xml input
update method updates the object from another entity
returns the duration type for the workload for the task
compares this object with the specified object for order
writes the object as an xml output
reads the object from an xml input
writes the object as an xml output
reads the object from an xml input
returns the workload in hours for the task
update method updates the object from another entity
adds a duration with a sign
adds a duration with a sign
adds a duration
adds a duration with a sign
returns the last scheduled hours for the task
subtracts a duration
returns duration component in half days
compares this object with the specified object for order
writes the object as an xml output
writes the object as an xml output
adds prerequisites to the list
calculates the maximum between 2 durations
converts the duration to the best approriate unit
calculates a proration based on a percent
calculates a reversed proration based on a percent
converts the duration in hours
writes the object as an xml output
reads the object from an xml input
writes the object as an xml output
adds an element tag value into the current element
reads the object from an xml input
assigns a value based on a duration and a unit
set the server to be dirty after the end of parsing
assigns a new sub entity and a list
interprets a tag
updates the availability from another duration
ends the tag interpretation
starts a tag
adds an element tag value into the current element
interprets a tag
triggered after the end of the tag interpretation
starts a tag
resets the create and update time stamps and actors
adds a string to the string definition
provides a summary when the object is displayed in a list
adds a date into the current element
update method updates the object from another entity
indicates if the class is defined with an application flag
update method updates the object from another entity
provides a summary when the object is displayed in a list
update method security setup
indicates if the object accepts a filter
gets a name used as a method
adds an integer into the current element
update method updates the object from another entity
adds a double into the current element
class control find order number
writes the object as an xml output
reads the object from an xml input
class control assigns order number
class definition validate class codes
update last modified information
update method updates the object from another entity
class control validate after
writes the object as an xml output
reads the object from an xml input
class definition validate class controls
writes the object as an xml output
compares this entity to the specified object
writes the object as an xml output
writes the object as an xml output
reads the object from an xml input
class definition code generation
writes the object as an xml output
writes the object as an xml output
reads the object from an xml input
compares this object with the specified object for order
class definition controls
starts a tag
update method updates the object from another entity
class definition import classes
sets entity name
class definition loop on items
compares this object with the specified object for order
class definition loop on classes
provides a summary when the object is displayed in a list
class definition import class
provides a tip to be displayed in a list
class definition import core classes
class definition add comments
returns the application code
class definition declarations
compares this object with the specified object for order
class definition static values
indicates if the object accepts a filter
writes the object as an xml output
reads the object from an xml input
update method updates the object from another entity
indicates if the entity is visible for a
adds classes used for replication
writes the object as an xml output
returns a list based on its name
adds files to be opened
indicates if the entity matches with the search string
indicates if the package contains panels
saves all objects in file s
writes the object as an xml output
creates a list based on category
indicates if the package contains classes
starts a tag
indicates if the entity can be replicated
writes the object as an xml output
reads the object from an xml input
writes the object as an xml output
reads the object from an xml input
starts a tag
update method updates the object from another entity
writes the object as an xml output
reads the object from an xml input
writes the object as an xml output
writes the object as an xml output
reads the object from an xml input
provides a summary when the object is displayed in a list
update method updates the object from another entity
activates the entity
indicates if the object accepts a filter
transforms a string in a java compliant identifier
provides a summary when the object is displayed in a list
deactivates the entity
core entity defaults
writes the object as an xml output
reads the object from an xml input
update method updates the object from another entity
returns an equality test on the name
compares this object with the specified object for order
returns an inequality test on the object id
writes the object as an xml output
reads the object from an xml input
adds classes used for replication
returns a list based on its name
returns the appropriate parser in order to read an element
adds files to be opened
generates additional java code methods
indicates if the names must be unique in the system or not
saves all objects in file s
save objects by file
creates a list based on category
writes the object as an xml output
reads the object from an xml input
sets entity name
starts a tag
indicates if the actor is available at the instant
update method updates the object from another entity
writes the object as an xml output
starts a tag
reads the object from an xml input
interprets a tag
ends the tag interpretation
returns the root action not the answers
ends the tag interpretation
starts a tag
interprets a tag
returns the session
returns the server
returns a list based on its name
creates the list based on category
returns the xml streams
tells if its a delete transaction
indicates if the action has errors or not
creates the list based on class
tells if its a detail transaction
tells if its a save transaction
tells if its a summary transaction
tells if its a short summary transaction
tells if its an expand transaction
interprets a tag
ends the tag interpretation
indicates if the action is complete
tells if its an update transaction
trace on the console
returns forecast date
tells if its a replicate transaction
tells if its a load transaction
creates an object id
indicates if the action is for the actor
defines if the component can be enabled or not
returns true if the component can be enabled
defines if the component must be saved even if its disabled or not
returns true if the component must be saved even if disabled
indicates if the action is for the team members of actor
enables or disables the component
changes the object id
compares this item to the specified object
indicates if the action comes from the actor
indicates if the action is pending
indicates if the entity is demo data
indicates if the action has been sent or not
returns the object id
provides a summary when the object is displayed in a list
triggers a thread for redisplay of the diagram
returns who last updated the entity
provides a tip to be displayed in a list
enables or disables the component
sets action name
returns content prepared for display
returns a text formatted for html output
manages click on lookup button
resets the availability or the actor or anonymous
enables or disables the component
removes all messages used for display of diagram
sets the title for this frame to the specified string
add an item code and label
add an item code and label with no duplicate
add an item code label and icon file name
add an item code only
returns the diagram image for the referenced period
indicates if the entity can be replicated
returns the code associated to the given label
returns the item associated to the given code
returns the label associated to the given code
returns the icon associated to the given label
returns title to be used for the frame
returns the maximum number of displayed periods
creates the associated objects based on number of columns
returns the icon file name associated to the given label
attachs a lookup panel associated to a column and a class name
returns the code associated to selected item
returns the label associated to selected item
defines the column as a date with a lookup
returns the icon file name associated to selected item
manages selection changes in the table
returns the lookup button
selects the given code in the combobox
returns the number of attached lookup panels
returns the lookup panel at given column
activates or deactivates buttons based on current display
runs the lookup panel at selected column
manages change on search criteria
cleans the table
delete selected row
runs the lookup
clears the search string
associates the main frame to the looup
manages clicks on lookup button
returns the attached lookup button
returns the attached calendar panel
defines the search key
forces calendar dates refresh
hides the attached calendar
cleans the component
indicates if the button defines a menu bar
sets text with date conversion
manages clicks on buttons
returns text with date conversion
indicates if the button defines a menu bar
returns the text with no date conversion
manages click on lookup button
selects the button using current selected category from main frame
assigns a text with date conversion
sets associated panel
gets associated panel
saves the search parameters associated with the button
retrieves the search parameters associated with the button
returns content prepared for storage
returns content prepared for display
defines the filter string
defines the search string
assigns an icon
returns icon name filename
inserts a text into the label
inserts a text into the label
changes state to opened
changes state to closed
executes the thread
runs the lookup thread and wait for its completion
writes the object as an xml output
starts a tag
add the associated menu to the menu bar
interprets a tag
refreshs a menu item based on a button
ends the tag interpretation
manages clicks on the button
starts a tag
manages expand or collapse
interprets a tag
ends the tag interpretation
compares this entity to the specified object
interprets a tag
returns the attached lookup panel
hides the lookup panel
ends the tag interpretation
manages click on lookup button
interprets a tag
ends the tag interpretation
manages buttons and menus
creates an action based on the provided string
compares this object with the specified object for order
deselects any selected item in the tree
manages buttons and menus
manages clicks and selection changes in the calendar
returns the last message attached in the chained list
manages panel content after its populated from xml
reselects the previouly selected item in the tree
manages buttons and menus
displays current month
returns the search string
triggers a thread for redisplay of the calendar
clears the search string
displays next month
defines the search string
displays previous month
sets prefered sizes for all columns
stores a message defined for the calendar
locks or unlocks every search criteria
paints diagram image
removes all messages used for display of calendar
creates the associated objects based on number of columns
returns the filter defined for a specific category
action on a new button when pressed from a data panel
selects and displays a date in the calendar
defines a filter for a specific category
manages clicks on buttons
manages buttons and menus
manages panel content after its populated from xml
assign a name to server name
sets a color for the server name
attachs the latest created label to the new component
sets the focus on search box
converts the item into a string
compares this item to the specified object
returns the search key string
returns the item displayed string
assigns a name to the given column
compares this item to the specified object
assigns an xml tag to the given column
manages actions on the keyboard
manages panel content after its populated from xml
manages buttons and menus
adds buttons to action bar
refreshs extra menu items
manages buttons and menus
manages buttons and menus
assigns a prefered or default size to the given column
manages buttons and menus
creates an action based on the provided string
manages panel content after its populated from xml
manages panel content after its populated from xml
manages buttons and menus
manages buttons and menus
resets the progress bar to its initial state
increases value of progress bar and displays a message
creates an action based on the provided string
manages buttons and menus
defines a width to the given column
returns the human readable description of this filter
manages panel content after its populated from xml
writes a title
starts a tag
starts a tag
starts a tag
writes a title and value in table
interprets a tag
ends the tag interpretation
starts a tag
interprets a tag
ends the tag interpretation
writes a picture and includes it in document
starts a tag
interprets a tag
returns the counter of total elements
ends the tag interpretation
inserts a new row at the end with defaults
interprets a tag
indicates if the panel can be edited
ends the tag interpretation
starts a tag
interprets a tag
generates file footer
ends of the interpretation
starts a tag
returns the operator last update
starts a tag
closes the document
interprets a tag
ends the tag interpretation
returns the operator last revision
displays document in system browser
ends the tag interpretation
returns the operator password
copies a file from the application library
inserts a new row at the end with defaults or not
returns the list of files from the library
returns the number of elements in the internal list
returns operator name
writes in the output stream
indicates if the panel can be deleted
returns the class of the element stored in the internal list
returns operator last revision
returns operator password
returns operator network id
returns the element stored in the internal list
returns operator id
returns the element stored in the internal list
writes the object as an xml output
inserts a new row at the end or after the selected row
tells the server one actor is not authorized
cleans lists when some elements are identical
indicates if the session is authorized
increments the number of requests
compares this entity to the specified object
returns the server
creates a local server
returns the connection
starts a tag
indicates if the panel can be edited
interprets a tag
copies the content of the provided document in the document
ends the tag interpretation
deletes selected row
executes a query toward the server
copies the content of the provided document in the document
runs the parser based on an uri
runs the parser based on a query or string
generates an exception into the error stream
runs the parser based on a buffered reader
runs the parser based on an error stream stored in factory writer xml
manages an exception redirected to the error output stream
interprets a tag defined in the class attributes tag with the
deletes all table rows
opens a new window
executes a query toward the local server
returns the handler that runs the reader
returns a string representation
increases the level
sets the level to zero
indicates if the output contains errors
receives notification of character data inside an element
receives notification of the end of an element
receives notification of the end of the document
receives notification of a recoverable parser error
receives notification of a recoverable parser error
indicates if the server requires a trace
assigns a value at given row and column
removes listeners from extra menu items in order to
indicates role based access is activated on the server
assigns a value at given column and current row
returns the tag associated to the panel
shutdown client socket
highlights the given row and column
replaces labels defined with a tag by the appropriate label
highlights the given column and current row
executes a query and keep the results in the queue
reads preferences from server
attaches a local button to a menu item
writes the object as an xml output
refreshs menus attached to the panel
disconnects the client from the server
activates with appropriate labels the new buttons on the action bar
reads the object from an xml input
indicates is the client is connected to one server
adds a new data panel in the workbench
converts the table content into html
attachs a client to the server
detachs a client from the server
assigns a string value at selected row and column
responses to a window manager event
broadcasts a message to every client connected to the server
cleans the table
wait the initialization phase is finished
defines the column as a boolean
resets all the buttons in the tool bar in a standard mode
wait the initialization phase is finished for the main frame
defines the column as an action
activates three new buttons on the tool bar
defines the column as a date
de selects all the new buttons
defines the column as an integer
writes the object as an xml output
defines the column as a double
infinite loop data is saved using a timer
adds an object to the action bar
defines the column as a percent
attachs to the column a combobox
defines a default value for the column
shows or hides the save and revert buttons
defines the column as a reference in order to highlight the row
hides the save and revert buttons and hides the current data panel
defines the column as read only
de selects the close edit and delete buttons
defines the column as centered
shows or hides the close edit and delete buttons
sorts the table
indicates if the table is hierarchical
creates emails based on pending actions
sends a request to the server and interprets the answer
clears the list of recipient within sent actions
moves the selected row one level up
moves the selected row one level down
interprets the message stream and display messages
moves the selected row up
moves the selected row down
runs the transport
returns the current activated data panel in the workbench
defines if the table can be enabled
indicates if selected category is available
returns the icon used as sort indicator of given column
selects or de select the buttons in the tools bar
saves the properties attached to the buttons in the tools bar
hides navigation buttons
defines the column to be duplicated after an insert ot a new row
retrieves the properties attached to the buttons in the tools bar
forces the table to be not sortable
manages selection changes in the table
returns the list of messages as a long string
manages actions on navigation buttons
changes category reponse to a click on a category button
returns the number of columns in the table
appends the fault values to the output stream
creates a new row at the end with defaults or not
action on a new button when pressed from the tool bar
deletes specified row
action on a new button when pressed from a data panel
deletes all rows in the table
defines a name to given column
defines an xml tag to given column
returns column type
defines type to given column
removes messages loaded in calendar
changes the cursor
defines given column as hightlight
defines given column as read only
defines given column as centered
assigns a combobox to given column
restore database from file
returns value at given row and column
returns highlight indicator at gieven row and column
hides action bar
returns diagram image for the period
returns hierarchical level of given row
assigns a hierarchical level to given row
returns the number of periods defined in the diagram
indicates if the row is hidden in a hierarchical table
removes temporary files
indicates if the cell at given row and column is editable
goes to the product web site
assigns a value at given column and current row
goes to the development home page
assigns a highlight indicator at given row and column
assigns a highlight indicator at given column and current row
shows the license
assigns a hierarchical level at current row
submits bug information to developers
assigns an object id to given row
assigns a server name
assigns an object id to current row
returns the minimum selection index
assigns a server name
returns the maximum selection index
assigns a server name
writes the object as an xml output
converts the message into a string using html tags
compares this entity to the specified object
the session is saved when the application quits
reads the object from an xml input
converts the table content into html
returns direction of sort for given column
returns sort status for given column
assigns a sort status to given column
indicates if the table is sorted
returns the column used for sorting
sorts data in the table
tells the sorting status has been changed
resets sort indicators
defines the table as hierarchical
indicates if the table is hierarchical
adds a hierarchical level to given row
subtracts a hierarchical level to given row
defines if the table can be enabled
moves the given row up in the list
moves the given row down in the list
indicates if the given column is read only
manages mouse clicks
returns hierarchical level based on a delta number
hands over the master evaluator that maintains a list of judge objects
sets the annealing engine attribute of the sastochastic generator object
mutates the current structure s
sets the struct gen thread attribute of the sastochastic generator object
sorts the structures in descending order with respect to the score
sets the name of this dataset
sets the init objects attribute of the structure generator object
sets the random gent attribute of the convergence evolving engine object
toggles the debug variable that determines whether output is generated
sets the iterations attribute of the convergence evolving engine object
gets the annealing engine attribute of the sastochastic generator object
gets the init objects attribute of the structure generator object
returns a structure generator result object with the best structures
sets the max plateau steps attribute of the convergence evolving engine
returns the atom container based on which the structure generation is
returns the name of this dataset
sets the max uphill steps attribute of the convergence evolving engine object
sets a signal for this structure generator to stop
gets the struct gen thread attribute of the sastochastic generator object
sets the convergence stop count attribute of the convergence evolving engine
sets the current dataset number attribute of the seneca dataset collection
sets the start k t attribute of the convergence evolving engine object
sets the current dataset number attribute of the seneca dataset collection
gets the current dataset number attribute of the seneca dataset collection
sets the current temperature attribute of the convergence evolving engine
gets the current dataset attribute of the seneca dataset collection object
sets the cooling rate attribute of the convergence evolving engine object
description of the method
gets the random gent attribute of the convergence evolving engine object
gets the convergence counter attribute of the convergence annealing engine
gets the chief justice attribute of the convergence evolving engine object
sets a renderer2 dmodel which determins the way a molecule is displayed
adds a feature to the change listener attribute of the
description of the method
gets the initial acceptance probability attribute of the
description of the method
gets the frame attribute of the molecule viewer2 d object
randomly breaks a bond and forms another to mutate the structure the
gets the max plateau steps attribute of the convergence evolving engine
sets the lucy file location attribute of the seneca parameters object
gets the renderer2 dmodel which determins the way a molecule is displayed
gets the lucy file location attribute of the seneca parameters object
gets the max uphill steps attribute of the convergence evolving engine object
sets the seneca file location attribute of the seneca parameters object
gets the seneca file location attribute of the seneca parameters object
sets the log file attribute of the seneca parameters object
cool down according to the given evolving schedule
sets the result file attribute of the seneca parameters object
paints the molecule onto the jpanel
gets the server configuration directory attribute of the seneca parameters
sets the mol view dim attribute of the molecule list viewer object
gets the mol view dim attribute of the molecule list viewer object
adds a feature to the structure attribute of the molecule list viewer
adds a feature to the change listener attribute of the seneca dataset
adds a feature to the structure attribute of the molecule list viewer
sets the mol view dim attribute of the molecule list viewer object
description of the method
gets the mol view dim attribute of the molecule list viewer object
adds a feature to the structure attribute of the molecule list viewer
adds a feature to the structure attribute of the molecule list viewer
gets the parameters attribute of the parameters object
gets the titled border attribute of the judge configurator object
description of the method
description of the method
description of the method
description of the method
sets the pick precision attribute of the carbon shift assigner object
opens the content of the sml file
gets the pick precision attribute of the carbon shift assigner object
description of the method
return the number of individual frequencies in the heteroatom shift list
description of the method
adds the nmrsignal n to the spectrum bb dept135 etc
replaces the signal at position pos with the signal sig
adds an nmrsignal to the nmrspectrum
creates an empty signal with correct dimension
sets the status log file attribute of the toscaserver object
set the molecular formula for this dataset by assigning a set of nodes
sets the atom container attribute of the server configuration object
gets the atom container attribute of the server configuration object
returns an nmrsignal at position number in the vector
sets the sructure log file attribute of the toscaserver object
sets the molecular mass attribute of the seneca dataset object
returns the position of an nmrsignal the vector
sets the atom container attribute of the structure generator server object
gets the status log file attribute of the toscaserver object
sets the description attribute of the seneca dataset object
initializes the judges
gets the sructure log file attribute of the toscaserver object
sets the judges attribute of the chief justice object
gets the judges attribute of the chief justice object
sets the current attribute of the seneca dataset object
adds a feature to the judge attribute of the chief justice object
description of the method
description of the method
sets the dataset name attribute of the structure generator server object
sets the set of nodes attribute of the seneca dataset object
returns a vector with signals within the interval defined by
gets the task version attribute of the structure generator server object
here we assign the values for the experimental carbon shifts
sets the scores attribute of the two dspectrum judge object
sets the score attribute of the two dspectrum judge object
gets the molecular formula attribute of the seneca dataset object
sets the cut off attribute of the two dspectrum judge object
gets the cut off attribute of the two dspectrum judge object
sets the multiplicator attribute of the judge object
sets the enabled attribute of the judge object
sets the judge listener attribute of the judge object
sets the ring set required attribute of the judge object
gets the molecular mass attribute of the seneca dataset object
sets the has max score attribute of the judge object
sets the max score attribute of the judge object
returns a reference to the chart displayed in the panel
gets the multiplicator attribute of the judge object
gets the ident message attribute of the structure generator server object
gets the host address attribute of the toscaserver object
gets the ring set required attribute of the judge object
gets the has max score attribute of the judge object
gets the max score attribute of the judge object
gets the judge attribute of the seneca dataset object
description of the method
description of the method
description of the method
adds a feature to the change listener attribute of the seneca dataset
here we need to revamp the handling of
sets the data attribute of the annealing data source object
gets the data attribute of the annealing data source object
add the annealing data for a given host identified by number series
description of the method
updates an entry from a form to the database
starts off a timer
stops a timer
put some demo data in the database
populates the action with some beans for rendering the page
gets all the
the time on which this
is the timer running
populates the action with some beans for rendering the page
notify the deed change listener that this deed has been changed
generates a getter method on a given interface for a given type
generates code for the given interface from the given property
generates a setter method on a given interface for a given type
generates code for the given interface from the given property
facility method to retrieve the java bean convention getters name of a property
computes the name of a property
generates code for the given interface from the given property
generate source code for properties
generates code child elements for the given interface from the given property
facility method to retrieve the java bean convention setters name of a property
getter method for the source code generators holder attribute
getter method for the source code generators holder attribute
setter method for the source code generators holder attribute
extensibility point to add other property generators
setter for the attribute generators
generic accessor resolution method
getter for the attribute help formatter
this method generates a java5 generic getter for a given property
getter for the attribute cli parser
getter method for the id attribute
getter method for the balance attribute
setter for the attribute cli parser
getter method for the name attribute
getter method for the state attribute
this method generates a java5 generic setter for a given property
setter for the attribute definition processor
getter method for the zip code attribute
getter method for the first name attribute
getter for the attribute definition processor
getter method for the country attribute
getter method for the region attribute
setter for the attribute source code generator
getter method for the continent attribute
getter method for the last name attribute
getter for the attribute source code generator
setter method for the continent attribute
getter method for the name attribute
getter method for the account attribute
getter method for the street attribute
getter method for the billing address attribute
getter method for the number attribute
getter method for the floor attribute
setter method for the email addresses attribute
getter method for the is appartment attribute
setter method for the addresses attribute
getter method for the apartment attribute
setter method for the billing address attribute
getter method for the city attribute
setter method for the floor attribute
this method initializes the definition mapping
setter method for the is appartment attribute
getter for the attribute global config
setter for the attribute definitions
this method resolves a value object definition given its definition id
setter method for the apartment attribute
getter for the attribute reason
setter method for the city attribute
this method resolves a value object definition given its interface name
setter for the attribute reason
setter method for the definition by id map attribute
facility method for logging field access security exception
setter for the attribute invalid reason
facility method for logging field access security exception
setter method for the definition by ifmap attribute
this method resolves the type for the given value object id
setter for the attribute properties validator
validates that a given
getter for the attribute default package
getter for the attribute generate class
validates that a given
setter for the attribute message
setter for the attribute validators
getter for the attribute generate java
setter for the attribute definitions
facility method to populate the chain of validables
getter for the attribute global configuration parser
getter for the attribute output class dir
getter for the attribute output src dir
setter for the attribute validation status
setter for the attribute config file
setter for the attribute validators
setter for the attribute default package
adds a validator to the chain
setter for the attribute global configuration parser
setter for the attribute validator
setter for the attribute generate class
setter for the attribute generate java
processes the framework definition files global configuration portion
setter for the attribute output class dir
setter for the attribute output src dir
unmarshalls the given xml file and returns the root element
this is a dummy implementation for testing purposes
getter for the attribute definition resolver
setter for the attribute definition resolver
getter method for the property populators container attribute
setter method for the property populators container attribute
reflectively sets a given property on a given entity
setter for the attribute property map
this method puts the given properties into the proxy
resolves the name of the property under the value object
reflectively sets a given property on a given entity
this method retrieves the value of a given property from the given proxy
populates an entity given a proxy
setter for the attribute definition validator
delegates a setter call
setter for the attribute factory map
delegates a getter call
getter for the attribute config flie
getter for the attribute definition processor
getter for the attribute jaxb context
tells whether or not a given method is a setter or not
getter method for the property populators container attribute
setter for the attribute config flie
setter method for the populators attribute
setter method for the operation handler map attribute
moves forward into the hierarchy property entity and package and delegates the population
setter del atributo entity factory
getter del atributo entity factory
equivalent to code set negated true code but returns this code criterion code
value is not cloned
removes a code criterion code from this conjunction
let concrete comparison types overwrite equality evaluation of values
returns the validator of cache models
sets the ehcache cache manager to use
decorate the given cache if necessary
removes all the entries in the caches specified in the given flushing
check if the given java class implements the component interface
if the receptacle is connected provides a reference to the connected
pre interception code to be placed in this method
pre interception code to be placed in this method
post interception code to be placed in this method
post interception code to be placed in this method
pre interception code to be placed in this method
post interception code to be placed in this method
pre interception code to be placed in this method
post interception code to be placed in this method
pre interception code to be placed in this method
post interception code to be placed in this method
auto generated axis2 error handler
auto generated setter method
validates input parameters to be valid non empty and integers
clears view and model
add the two numbers
multiply the two numbers
divide the two numbers
clear the results
helper method used in edit controller
helper method used in remove controller
for injection of collaborator
for injection of collaborator
for injection of collaborator
removes specified contact
standard struts1 validation of input parameters
at startup create and show the main frame of the application
creates and shows the main frame
create and return the action manager to use
create and return the language manager to use
set the default look and feel
the default tree cell renderer reads the look feel specific attributes
creates and registers listeners with components
creates and registers listeners with components
update the monitor panel
returns the current bookmarks folder depending which tree node is selected
returns the current entry info if the selected node is a bookmarks entry
set the proxy settings into the java system properties using the preferences values
moves the frame into the screen center
this method will be invoked if you close the window or if you
creates and registers listeners with components
builds the dialog
builds the content pane
create and init the gui components
creates and registers listeners with components
build the component
builds the main panel
paint the colored background
builds the main panel
builds the button bar
builds the button bar
this method sets the dialog settings
sets the size
this method sets the dialog settings
sets the size
get the login mode that should be used
search the user specific group list if the user belongs
returns the url that should be used to connect to the portal
returns the company that should be used to login to the portal
returns the mnemonic character
load and add all key images specified by the properties object
add the key image pairs to the internal data structures
builds the main frame
builds and answers the content
add the image to the internal data structures
creates and shows the main frame
gets the image with the actual key identifier
updates all static component texts
create and return the action manager to use
create and return the language manager to use
check whether username exists
update a user information includes username enabled or authorities
remove a user by username
let current user change password
method to increment the human restricted resources requests count
verify that threshold is gt 0
if set to true the
rename a project group
rename an individual project
delete an individual project
add a new project to a project group
user closed the window save out and exit nicely
returns the code document id code property which corresponds to the
returns the code modifier user id code property which corresponds to the
returns the code document title code property which corresponds to the
returns the code document category id code property which corresponds
returns the code document template id code property which corresponds
returns the code dt last update code property which corresponds to the
returns the code dt created code property which corresponds to the
sets the code document id code property which corresponds to the
sets the code modifier user id code property which corresponds to the
sets the code document title code property which corresponds to the
the cite factory method cite that is used to create new
sets the code document category id code property which corresponds to
sets the code dt last update code property which corresponds to
sets the code dt created code property which corresponds to
sets the code document template id code property which corresponds to
not yet implemented
the cite factory method cite that is used to create new
returns the code template title code property which corresponds to the
the cite factory method cite that is used to create new
the code version major code property is currently unused
the code version minor code property is currently unused
returns the code creator user id code property which corresponds to the
returns the code description code property which corresponds to the
sets the code template title code property which corresponds to
returns the code search sub categories code property
the code version major code property is currently unused
generates a new document category id
the code version minor code property is currently unused
sets the code creator user id code property which corresponds to
sets the code description code property which corresponds to
sets the code search sub categories code property
sets the code dt created code property which corresponds to
generates a new document id
returns the code search created between code property
sets the code search created between code property
returns the code search modified between code property
returns the currently logged on user id
sets the code search modified between code property
selects all records in the code document template code table
sets the code dt created begin code property
makes a document xml structure out of a field name field value
sets the code dt created end code property
sets the code dt modified begin code property
returns the dt update history property
returns the inventory code property
returns the amount updated property
returns the notes property
sets the code dt modified end code property
sets the dt update history property
sets the inventory code property
sets the amount updated property
this factory method creates an instance of the related dao object
sets the notes property
returns the current amount property
sets the current amount property
the cite factory method cite used to create
returns the month part of the code dt created begin code property
this factory method creates an instance of the related dao object
this factory method creates an instance of inventory update history vo
not implemented yet
returns the year part of the code dt created begin code property
inserts a new record in the code inventory code table
updates an inventory item
adds an inspection entry for an inventory item
provides a list of inventory items in their last update
retrieves an inventory item
updates an inventory record
returns the month part of the code dt created end code property
retrieves an inventory item along with the last update status of the item
retrieves a list of inventory updates for the specified inventory
returns the year part of the code dt created end code property
returns the parent inventory code property
sets the description property
sets the parent inventory code property
returns the month part of the code dt modified begin code property
deletes all files that were uploaded by calling the
returns the year part of the code dt modified begin code property
retrieves an inventory item and placed it in the specified vo
returns the files property
returns the month parth of the code dt modified begin code property
sets the event name property
sets when the event start
sets when the event finish
factory method to create a new event dao object
sets the committee formation date property
sets the committee dismissal date property
sets the dt attend property value
returns the year part of the code dt modified begin code property
returns the event name property
sets the event name value
returns the dt attend property
returns when event start
returns when event finish
reads the privileges of the currently logged on user to determine whether
returns the committee formation date property
returns true if there are no search criterias set
returns the committee dismissal date property
deletes log entries before and on the specified date to save disk space
creates the default value for begin dates
inserts a new record in the organization table
creates the default value for end dates
factory method to
search an existing organization data
factory method to
returns true when the specified organization exists in the database false otherwise
factory method to
factory method that creates the underlying map object
same as the other but with a default error message
search an existing person data
returns the number of columns in this table
returns true when the specified person exists in the database false otherwise
returns the value for the cell at column index and row index
factory method to create list objects
factory method that is called by get table model to instantiate the
returns the connection object to the database opening a new one
cleans up things when this object is garbage collected
returns a list of groups for a particular user
returns a list of users that belongs to a particular group
factory method to
sets the dt last update property
p gets a hexadecimal string buffer representation of this objects data
p gets a literal string buffer representation of this objects data
utility method for converting literal strings to hexadecimal
gets the page reference specified by the destination
gets the zoom level specifed by the destination
p gets the link annotations highlight mode visual effect taht shouldbe
a destination to be displayed when the annotation is ativated
sets the stroke width of the border style
sets the border style type for this instance
gets the type of annotation that this dictionary describes
utility method converting name object hext notation to ascii
gets the annotation rectangle and defines the location of the annotation on
clears internal font list of items
this method returns a shape that represents the outline of this page
get the mapped value of code value code
get the bounding box that the page can occupy given the user rotation
gets a string summary of the reference objects number and generation number
gets all annotation information associated with this page
gets the media box boundary defined by this page
p gets a hexadecimal string buffer representation of this objects data
p gets a literal string buffer representation of this objects data
gets the art box boundary defined by this page
get the awt color value for for a given colours data
gets the bleed box boundary defined by this page
not applicable to a pattern colour space
gets the trim box boundary defined by this page
concatenates this transform with a translation transformation specified
concatenates this transform with a scaling transformation specified
gets a vector of images where each index represents an image inside
p gets the size value in user space associated with this text sprite
p paints all the character elements in this text sprite to the graphics
tests if the interior of the code text sprite code bounds intersects the
dispose this text sprite object
converts a 4 component cmyk colour to rgb
initiate the indexed colour object
gets the colour for the array of float values
updates the clip every time the tranformation matrix is updated
set the graphics state clipping area
initiate the name tree
initiate the page tree
add the trailer dictionary to the current trailer objects dictionary
gets the applicaiton to be launched or the document to be opened or
specifies whether or not ta new window should be opend
gets a copy of the entries that make up the dictionary
converts this object to a java
p gets the orgional two points that created the prectangle object
return a string description of the object
p converts the cartesian representation of the rectangle into rectangle in
gets the object specified by the reference
utility method for displaying debug info related to pdf object loading
returns the next object found in a content stream
gets a rectangle specified by the key
writes buffered imate to this object
dispose the librarys resources
called when a new glyph is selected
get the generation of this object
called when a key is typed
set the current glyph
utility method for fudging overprinting calculation for screen
get the image that this pdfimage generates
make sure that this object is dereferenced
get the next postscript word
create new canvas or reuse already created
add an image to the cache
get an image from the cache
perform the stroke and record the dirty region
perform the stroke and record the dirty region
get the type of this color space type rgb
push the current graphics state onto the stack
get the type of this color space type rgb
get the type of this color space type cmyk
get the pdfpaint representing the color described by the
get the type of this color space type cmyk
draw an outline using the current stroke and draw paint
create a graphics object only if it is currently null otherwise
fill a path with the paint and record the dirty area
draw an outline
fill an outline using the current fill paint
draw native text
add the path to the current clip
set the clip to be the given shape
get the current affinetransform
concatenate the given transform with the current transform
replace the current transform with the given one
get the initial transform from page space to java space
reset the pdftext format for a new run
set the last shape drawn
perform a carriage return by translating by x and y
get the last shape drawn
get the current transform
set the transform matrix directly
add some text to the page
append a rectangle to the total dirty region of this shape
return the number of pages in this pdffile
get the glyph for a given character code and name
get the shape of this glyph
add commands for this glyph to a page
get a glyph outline by character code
read a name sequence of non pdf delimiting characters from the
get an image producer which can be used to draw the image
read a floating point number from the stream
restore member variables from previously saved instance
get the bounding box of the page before any rotation
get the width of this page after rotation
get the height of this page after rotation
get the command at a given index
add a collection of commands to the page list
getter for property font bbox
setter for property font bbox
stop the rendering of a particular image on this page
get the file structure
get a glyph outline by name
concatenate a transform to the graphics state
set the end cap style
set the current path
notify all images we know about that a command has been added
p open a specific pdf file
build a shader from a dictionary
indicates whether this scroll views content is stretched to fill the viewport
get a rectangle2 d
indicates whether this scroll views content is stretched to fill the viewport
indicates this scroll view whether it should stretch its content height to fill
indicates this scroll view whether it should stretch its content height to fill
fill a path with the paint and record the dirty area
get the image that this pdfimage generates
add some text to the page
render a compound glyf
scrolls the view to the given child
set the line join style
p open a specific pdf file
get a rectangle2 d
p open a specific pdf file
get the type of this color space type rgb
p open a specific pdf file
get a given x coordinate
add a global message listener listens on all messages
remove a listener
remove all listeners
writes itself into a binary file
advances a turn in current loaded game
loads a game from the given directory
return the requested corner terrain layer
creates a new game
returns the terrain
returns the seed
sets the items
displays the help for this map field
reads a sector from file and store it in the cache
returns the platoon list
returns the round number
adds a platoon to the player
advanches in the round
returns the race
returns the race name
returns the race name plural
draw the small icon e
applies itself to the given stats object
returns the name plural
add the item to this platoon
add the item to this platoon
recreates the screen buffer after it became invalidate through member functions
returns whether the platoon posseses the specified item
draw all troops in formation
copies the back buffer into the screen buffer called blt
calculates the resulting stats for this unit taking modifiers due equipment
renders the armies of immortals onto the battlefield of doom
returns the xstart
returns the ystart
set path for template bundle definition file
this method stores a string property
this method stores a char property value
this method stores a int value associated with a given key
this method stores a boolean value associated with a given key
this method returns the string property specified by the key
this method returns the string property specified by the key or a default
this method returns the char resource specified by the key
specify if the type is number type group
this method returns the int property value specified by the key
check if type is string type
this method returns the boolean property value specified by the key
check if type is date type
convert capital in text to and lowercase but the first letter e
compare two byte arrays up to the length of the shortest array
convert sql field naming field name to java field naming field name
find a column from a list of column
java type mapping
full qualified java type mapping
attribute with default initial value
generate the code to set an attribute to the default initial value
constructs an app list table model
capitalize first letter
lower first letter
get column of type auto if any from a bean
return lenght of an array for used by velocity template
sql type mapping
adds required toolbar buttons to the given toolbar
calls the methods which collapses all tree nodes
sets the frame to be visible or not
this method is needed to update the preferences of every component of the
update the constraints for the springlayout of the
updates the constraints for the springlayout of this hi family panel
removes the given hi family panel from the container
adds the given hi family panel to the container
gets the super containing family panel
override this for fun profit
launches a dialog to set node edge colour
gets the top
gets the relevant colour preference
update the constraints for the springlayout of this hi graph panel
gets this panels controlling application
this performs the initialisation for the constructor
gets the relevant colour preference
this method initializes the text pane which
gets the relevant font preference
updates the display parameters for this text pane
gets the preferred font for this node
sets text and ensures view is updated
gets the preferred background colour for this node
override this for fun profit
syncs the node name with the display text
updates the node name when its text pane is edited
erases default text from node when focus is gained
replaces default text on empty nodes when focus is lost
this recursive application of invalidate calls followed by validate
removes a node from this view
gets the number of unsolved nodes in this view
checks whether a given view is the top level view of this graph
adds an unsolved node to the list
add a node to this graph
remove an unsolved node to the list mark it as solved
remove a node from this graph
gets this views superview i
add an edge to this graph
returns true if this view contains no information
connects the given edge as an inedge of the given node and
remove an edge from this graph
disconnects the given edge from the given node by removing it from the
removes this node and all children completely from its graph and view
connects the given edge as an outedge of the given node and
removes the view from the hi graph removing all internal edges and all
disconnects the given edge from the given node by removing it from the
returns true if the given node is contained in the set of
pastes as a new root node obliterating or adding to current graph
given an edge from
creates a copy of this edge with the same name as this edge
given an edge from
gets the view which contains this node
increments the number of hi graph frames belonging to this application
gets the contents of the clipboard
gets the subview of this node
blanks the internal clipboard without touching external data
sets the subview of this node
clears the clipboard if it is not already clear
tests if this node is solved
returns any string found on the system clipboard
adds a specific subgraph to this node
writes a string to the system clipboard
adds a default subgraph to this node if it does not already exist
something new on the clipboard
returns the value of this nodes solved flag
sets the solved satus of this node
tests if this node has a non empty subview
checks that this node is contained in the set of topnodes of its
checks if this node has any children
converts this code font code object to a code string code
loads a new frame with a specified file
sets the code x code property which controls the code x code
returns the value of the code x code property
writes to the string writer
writes to the string writer
writes to the string writer
accept directories and all files with given extension
changes the label text
sets the colour of this component
launch a colour chooser
gets the background colour of this component which is taken directly
launches the dialog to select the chosen font
sets the code y code property which controls the code y code
gets user selection as a font object
returns a correctly typed selected item
returns the value of the code y code property
adds root nodes to the graph table
adds all hi edges to the graph
adds all hi edges to the graph
sets the code width code property which controls the width of a
adds an edge to the table
adds a node to the table
adds an edge to the table
returns the value of the code width code property
adds a node to the table
gets a node with a specific id from the node table
gets the id of a node
gets an edge with a specific id from the table
sets the code height code property which controls the height of
gets the id of an edge
get correct name where applicable
create an xml object from the
create an xml object from a
create an xml object from a given
returns the value of the code height code property
updates elements of the graphs display when preferences change
checks if the object contains character data
sets the objects character data
gets the objects character data removing any escaping which has been performed
sets the objects character data escaping special characters automatically
return value on the top of the stack without popping it
sets a new sub object table for this object
gets the number of sub elements of a type
sets the spring controlling the specified edge
returns a member of the hashs vector entry at a position
returns the value of the specified edge
this method escapes all the special xml characters in the string s
sets the visibility of this nodes subgraph items
this method escapes all the special xml characters in the string s
gets the number of sub elements of a type
sets all to be open or closed
returns a member of the hashs vector entry at a position
returns a member of the hashs vector entry at a position
gets the data in unescaped form i
creates an xml string representing this object and its sub objects
creates the xml string representing this object and its subobjects
gets the node associated with this panel
opens closes an xml element
manages the indent and prints the required number of characters to represent
adds a subgraph to this node
retrieves the top node panel
sets this node to show as being solved or unsolved
prunes the graph from this node downwards placing the contents into
copies the graph from this node downwards to the clipboard
sets up hover colouring
removes hover colouring
removes hover colouring
gets the appropriate foreground colour depending on whether
gets the appropriate background colour depending on whether
updates this nodes view
returns the next random sample within minimum maximum
returns the next random sample
returns the next random sample
downloads file specified by the url to a temporary file in
return a temporary file name
sets the auto save interval variable to the given value
sets the delete auto save file boolean to the given value
returns whether this project exists is valid
returns the internal spreadsheet object
add a row to this table
returns the row header table
returns true if the project is modified since the last save
deletes selected cell in the spreadsheet
returns the changed status of the internal spreadsheet
returns the saved project file
returns the string representation of this cell
sets the contents to the cell to the specified string
clears the cell contents by setting to the empty string
returns true iff the given cell object is equal to this object
returns the index of the given variable name or 1 if not found
returns true if the cell contents represent a number
returns true iff this cell is non empty the contents is not equal
writes project file to the temporary file path
returns the row number from the given row label
returns the name of this project
returns the row number of the last non empty row
if the project is not yet saved prompts the user to save
deletes temporary file if it exists
returns the column number of the last column with data
returns the variable name at the given column
returns the column number of columns that contain data
gets all the column numbers
set the string value at the specified row and column
sets the contents of the given column to the given data vector
sets the contents of the given column to the given cell vector
sets the contents of the given row to the given data vector
sets the status to unchanged and removes any existing asterisk in
returns the table data as a string of tab dlimited values
returns the table data as a string of comma separated values
returns the changed status
clears the contents in the cell at the specified row and column
deletes the entire row at the specified row number
deletes the entire column at the specified column number
closes the file associated with this spreadsheet if any
deletes the cell at the specified row and column
sets the default widths of the table columns
inserts a blank row at the specified row number
inserts a blank column at the specified column number
inserts a blank cell at the specified row and column
returns the column number embedded in the constructed string
returns the column number represented by the given column label
returns the full column label cx variable name for the given column
return the row number represented by the given row label
returns the row number of the last row that contains data
sets the column at the given column number to the given vector of
sets the variables row to the given vector of strings
sets the variable label for the given column to the given string if
returns the row number of the last non empty row
returns the column number of the last non empty column
puts data in the tab delimited string in this spreadsheet
puts data in the tab delimited string in this spreadsheet
puts data in the given vectors of vectors of strings in this
sets the file that saves the data in this spreadsheet
clear the contents in all cells without moving surrouding cells
inserts a blank row at the end of the spreadsheet
inserts a blank row above the selected cell
inserts a blank row below the selected cell
inserts a blank column at the end of the spreadsheet
inserts a blank column to the left of the selected cell
return a string of html code representing the given condition
inserts a blank column to the right of the selected cell
return the comparison condition of the alternative hypothesis given the
inserts a blank cell above the selected cell
inserts a blank cell below the selected cell
adds one row to the end of the row header table
selects all the cells
sets the name of this dialog
sets the name of the help file to the given name
adds the first spreadsheet scrollpane object to this pane
updates elements on the dialog so that they have the most
updates the given combo box with available columns in the parent
adds a tab containing the given component title and icon
removes all the elements in the given mutable list
updates the given list with available columns in the parent
adds a blank spreadsheet to this tabbed pane
updates the given list with all columns in the parent spreadsheet
adds the given spreadsheet object to this tabbed pane
returns the inverse cumulative probability
returns the density of the distribution at x
returns the cumulative probabililty up to x
returns the inverse cumulative probability
returns the density of the distribution at x
returns the cumulative probabililty up to x
returns the cumulative probabililty up to x
returns the inverse cumulative probability
returns the inverse cumulative probability
returns the cumulative probabililty up to x
returns the inverse cumulative probability
returns the density of the distribution at x
returns true iff at least one of the datasheets is modified
returns the cumulative probabililty up to x
returns the density of the distribution at x
returns the cumulative probabililty up to x
returns the inverse cumulative probability
returns the density of the distribution at x
returns the cumulative probabililty up to x
returns the cumulative probabililty up to x
set the modified status of the current datasheet to changed
returns the inverse cumulative probability
returns the standard deviation
sets the title of the selected tab
returns the test statistics for the given sample mean x bar
returns the critical value corresponding to the given confidence
returns the number of data pairs
returns the p value corresponding to x bar in a z distribution
returns the margin of error
returns the critical value corresponding to the given confidence level
returns the degrees of freedom
returns the margin of error
resets the tab titles
returns the critical value corresponding to the given confidence level
returns the linear correlation coefficient
returns the coefficients of the regression equation
returns the title at the selected tab
returns the test statistic t using the linear correlation correlation r
returns the predicted y value given a vector of values of the
returns the slope of the regression equation b1
returns the y intercept of the regression equation b0
returns the average value of the dependent variable
returns the sum of all the x values
returns the total variation sst the sum of squared differences
returns the sum of all the y values
returns the sum of pairwise products between the x and y values
returns the sum of sqaures of the x values
returns the sum of sqaures of the y values
returns the explained variation ssr the sum of squared differences
returns the total variation sum of differences between the y value
returns the unexplained variation the sum of squared differences
returns the explained variation sum of differences between the
returns the unexplained variation sum of differences between the
returns the coefficient of determination r 2 the amount of the variation
returns the adjusted coefficient of determination
returns the critical value for r corresponding to the given significance
returns the standard error of estimate
returns the p value corresponding to the test statistic
returns the test statistics f
returns the test statistics for the given sample mean of
returns the p value of test statistics
returns the critical value corresponding to the given confidence
returns the p value corresponding to d bar in a t distribution
returns the margin of error
returns the critical value corresponding to the given confidence level
returns the lower limit of the confidence interval
returns the sample size
returns the upper limit of the confidence interval
returns the center of the interval
returns the test statistics for the given sample variance s2
returns the critical value corresponding to the given confidence
returns the number of independent variables
returns the p value corresponding to s2 in a chi square distribution
returns the lower limit of the confidence interval
returns the upper limit of the confidence interval
returns a string representing the confidence interval of the variance
returns a string representing the confidence interval of the
returns the test statistic for a test of independence between
returns the degrees of freedom of a contingency table
returns the degree of freedom
returns the critical value corresponding to the given confidence level
returns the critical value corresponding to the given confidence
returns the p value corresponding to the test statistic
returns the p value
returns the grand mean mean of all the treatment sample means
returns the p value in a z distribution
returns ss treatment sum of squares of treatments
returns the test statistics for the given sample mean x bar
returns ms treatment the mean of squares of treatment
returns the p value corresponding to x bar in a t distribution
returns the test statistics
returns ss error the sum of squares of means
returns ms error the mean of squares of errors
returns the degree of freedom 1
returns the degree of freedom 2
returns the total sum of squares ss treatment ss error
returns the critical value corresponding to the given confidence
returns the p value in a f distribution
returns the test statistics f ms treatment ms error
returns the margin of error
returns the critical value corresponding to the given confidence level
returns the numerator degrees of freedom k 1
returns the degrees of freedom
adds the given data to row i and column j
returns the denominator degrees of freedom n k
returns the critical value corresponding to the significance level
returns the p value corresponding to the given test statistic
returns the total degrees of freedom
returns the critical value corresponding to the given significance
checks if the data is valid for two way anova
returns the p value corresponding to the test statistic
returns the right tail critical value f r
returns the left tail critical value f l
returns the row sum a i sum j 1
returns the lower limit of the confidence interval
returns the upper limit of the confidence interval
returns a string representation of the confidence interval for
returns the total variation the sum of squared differences
returns a string representation of the confidence interval for
returns the column sum b j sum i 1
adds the given frequency to the location at row i and column j
returns the frequency at row i and column j
returns the explained variation the sum of squared differences
returns the percent at row i and column j
returns the unexplained variation the sum of squared differences
computes the correction of the mean sum of all observations 2 n
return the sum of the given row
return the sum of the given column
returns the sum of squares for factor a
return the total sum
creates a contingency table object using the cross tabulation data
returns the sample standard deviation
returns the contingency table
returns the sum of squares for factor b
returns the test statistic z g mu sigma where g is the
returns the sum of squares for interaction ab
returns the mean of the distribution of runs
returns the number of data pairs
returns the rank correlation coefficient
returns the standard deviation of the distribution of runs
returns the test statistic z r mu sigma where r is the
returns the critical value for r corresponding to the given significance
returns the mean of the distribution of rank sum
returns the p value corresponding to the test statistic
returns the total sum of squares
returns the p value
returns the standard deviation of the distribution of rank sum
returns the p value
returns the p value
returns sum of squares of error
returns the p value
returns the one tailed critical value
returns the margin of error
returns the test statistics for the given sample proportion p hat
returns the critical value corresponding to the given confidence level
returns the mean of squares of factor a ssa dofa
returns the density of the distribution at x
returns the p value corresponding to p hat in a z distribution
returns the cumulative probabililty up to x
returns the inverse cumulative probability
returns the mean of squares of factor b ssb dofb
returns the mean of squares of interaction ab ssab dofab
returns the mean of squares of error sse dofe
returns the degrees of freedom for factor a a 1
returns the function number corresponding to the given function name
performs a function call on the given computation unit
returns the degrees of freedom for factor b b 1
returns the degrees of freedom for interaction ab
restores the frame associated with this menu item
parses the given expression
prints the string remaining to be scanned
returns the degrees of freedom for the error
returns the total degrees of freedom
returns error message from the scanner
consumes the number at the next scan position
returns the f test statistics for factor a
parses a statement
returns the f test statistics for factor b
consumes the column at the next scan position
returns the f test statistics for interaction ab
parses an expression
returns the p value corresponding to the f test statistic for factor a
consumes the function at the next scan position
parses a term t f f
returns the p value corresponding to the f test statistic for factor b
returns the leaf unit used in this stem and leaf plot
consumes the constant at the next scan position
parses a powered term f p f
returns the p value corresponding to the f test statistic for interaction
reads and returns the next character to be processed without
adds a listener for the close button
consumes the next character by advancing the pointer to
returns the title of the frame
sets the parent frame of this object
restores the frame to normal size and brings it to front
sets the content of the clipboard to the given image
adds a dialog to the history list
consumes the current token by advancing the index to the next position
returns the dialog at the given position
gets the list model
initializes this object
adds the given data vector with the given label to the dataset
add the data values with the corresponding labels
returns the size of the dataset number of categories
attempts to parse a column label and returns the
cancels the timer
adds the given heading and text message to this object
shows the popup menu if the given mouse event should trigger
adds the given message to this object
returns the number of dimensions in this hash key
returns the key value of the given dimension
adds the given message as is to this object
attempts to parse a constant name and returns the
sats the save interval to the given value
adds the given message as a heading to this object
sets the status of this object to changed
returns the frequency of the given key value
sets the status of this object to unchanged
adds the given category to the counter
returns the next string delimited by single quotes
returns the category at the given index
returns the index corresponding to the given category or
returns the number of categories found by this counter
checks if all the frequencies are the same
returns the frequency of the given category
returns the double value at the current scan position
returns the integer value at the current scan position
gets the html source in this log pane and actually writes
clears the text in this log window and reintializes
adds the given string to the error string
replaces the contents of this log window with the given string
restores the status bar to the current status in the given amount of
displays the given string in the status bar
sets the status bar to the given status in the given amount of
clears the status bar
initializes java help help documentation module
enables help for the given menu item
sets the title of the log internal frame
returns the title of the log internal frame
sets the title of the active tab in the datasheet pane
returns the title of the active tab in the datasheet pane
ensures that the application is ready to be disposed and
add the given frame to the list of window frames
removes the given frame from the list of window frames
removes all frames from the list of window frames
returns the active spreadsheet
returns the datasheet tabbed pane
returns the log text pane
return a string of formatted current date and time
displays an error dialog with the given messages
adds the given message to the log text pane
adds the given message as a heading to the log text pane
adds the given heading and text to the log text pane
adds the given edit to the undo manager and udpates the undo redo
clears all edits in the undo manager and updates the undo redo
thread implementation for managing audio renderers looping
start session thread
shutdown procedure when run as an application
useful method for creating new instance of this interceptor and changing
add a sub profile
returns whether this traversal profile is a top level traversal profile
this method purges all the extent information
returns string representation of data in extent manager
simple test that should always succeed
test to show correct fetch profile is generated and executed when
test to show correct fetch profile is generated and executed when
test accessing address and checking extent statistics
load employee and traverse supervisor mentor associations and check
load employee and traverse mentor associations and check extent
load mentor association with same query and program state several times
test accessing the subordinates collection association and checking
access mentor for each element in the subordinates collection and check
builds principal widget button and associates it with the dialog
builds vfs widget button and associates it with the dialog
sets parameter flags for report dialog
registers with specified code tasks code instance a
calling this method overrides any value s set either via constructors or
explicitly set the indentation level
registers with specified code tasks code instance a
explicitly set the number of spaces per level
get the number of spaces per level
explicitly set the number of spaces per tab
registers with specified code tasks code instance a
get the number of spaces per tab
the one true place to set the number of spaces we indent
returns the absolute number of spaces the indent of this buffer is
indent by one level
registers with specified code tasks code instance a
registers with specified code tasks code instance a
registers with specified code tasks code instance a
registers with specified code tasks code instance a
append a string to the existing line
registers with specified code tasks code instance a
registers with specified code tasks code instance a
update the cached string we prepend to each line
returns the code tasks code instance used by the
registers the specified task factory for tasks with the specified name
resets clears the factory registry
add files to source if not imported
returns a list of code task code instances
adds a template as a child template to receiver
check if source file has already been imported
build a file path
returns the last part of a fully qualified class name string for the
sets the template array
sets the targets array
returns a shared instance
returns the minimum number of children allowed by the receiver
sets the method names array
returns the maximum number of children allowed by the receiver
sets the method types array
registers with specified code tasks code instance a
returns the code sources code instance used by the code top code
this method is used to recursively iterate through each parameter set
registers the specified source file factory for source files with the
convenience method for finding out java vm system properties
returns the top singleton
creates a code source file code instance for the specified file
returns the canonical file object from the specified file object
returns the style flags for the javascript pretty printer
returns the style flags for the html pretty printer
registers with specified code sources code instance a
replaces occurences of substring code sub code with string
registers with specified code sources code instance a
returns a list with all the available property keys that start with the
returns the ast of this receiver
tests if specified string ends with the specified suffix
returns the default pretty printer style that is specified by the jsl
returns code true code if the specified filename has wildcard
transforms a user wildcard into a java
resolves the specified url path to a file on the local file system
returns a map of web mappings
accept the visitor
accept the visitor
convenience method to write indentation chars
returns an unmodifiable list of input sources
write a single character
adds a source to the list of input sources
write a sequence of characters
adds list of sources to the list of input sources
writes a string
moves the passed in cursor passed the whitespace excluding newlines
determines if specified position in comment string is the end comment
returns an unmodifiable list of strings representing the comment body
returns the comment body
returns an unmodifiable list of javadoc tags instances of comment
returns code true code if receiver has a javadoc tag matching
returns the original comment string
returns the list of columns to sort by
returns the table of sort data
returns the null behavior for this object
updates the list of sort columns
returns a hash code for this object
set the null behavior for this object
sorts a custom component that implements the sortable component interface
returns a string object representing this objects value
updates the table of sort data
returns the order to sort the column by
this routine sorts the table of data
returns the name of a columns at the specified index
returns the data list for this class
this routine sorts the table of data using a comparator provided in the
returns the data value at the row and column position specified in the
sets the data list and column names for this class
sorts a combo box using sorter
initializes this object
this method loads data into a list which is later tested
sorts a combo box using sorter
validates the table of sort data
loads the test data
sorts the data
sorts a combo box model using sorter
initialize this object
initializes this object
sorts the data
sorts the data
sorts a list model using sorter
initialize this object
sorts the data
sorts a table using sorter
sorts a table using sorter
saves results to files
generates info about the structure
ulozi graf do souboru
returns value a of the vertex
sets value a of the vertex
returns information whether the graph is weighted or not
returns value b of the vertex
sets value b of the vertex
returns number of vertices
sets the parent of the vertex
returns number of edges
adds a new neighbour
computes number of edges
adds a new neighbour
returns a generated graph
returns degree of the vertex
returns a random vertex
returns number of vertexs neighbours
equals two vertices
returns loaded graph
increases in degree of the vertex
saves the graph
returns vertex a if the line contains an edge
returns vertex b if the line contains an edge
prints all lines to the file
adds a new unweighted edge to the graph
adds a new weighted edge to the graph
adds a new vertex to the graph
returns vertex having the given name
returns created graph
separate a book mark object apart from its embedded
bind a book mark object to a vtdnav object
this method returns the embedded vtdnav object
set the cursor position of vtdnav object corresponding to the internal reference
record cursor position of the vtdnav object as embedded in the
bind is to replace rebind and set vtdnav
get the int at the location specified by index
assigns a new int value to location index of the buffer instance
select the element name before iterating
select the element name name space version before iterating
select all descendent elements along the descendent axis without ns awareness
select all descendent elements along the descendent axis withns awareness
select all elements along the following axis without ns
select all elements along the preceding axis as defined in xpath
select all elements along the preceding axis as defined in xpath
select all elements along the preceding axis as defined in xpath
select an attribute name for iteration choose all attributes of an element
select an attribute name both local part and namespace url part
eval xpath to number evaluates the xpath expression to a double
total size in terms of of bytes
eval xpath to string evaluates the xpath expression to a string
eval xpath to boolean evaluates the xpath expression to a boolean
this method returns the next node in the nodeset
convert the expression to a string
get the object at the location specified by index
assigns a new int value to location index of the buffer instance
get the long val at given index value
get the lower 32 bit of the integer at the given index
modify the value at the index to a new val
return the upper 32 bit of the long at the index
return the attribute count of the element at the cursor position
test whether the input i is unique
clear all entries in the hash table
test whether a give token type is a text
start will set the pointer to the first node in node recorder
obtain the current navigation position and element info from vtdnav
clear will erase all the nodes internal buffers are reused
get total size in terms of of bytes
get the next char unit which gets decoded automatically
get the depth 0 of the current element
get the index value of the current element
get the encoding of the xml document
get the maximum nesting depth of the xml document 0
get root index value which is the index val of document element
get total number of vtd tokens for the current xml document
get the depth value of a token 0
get the starting offset of the token at the given index
get the xml document
get the token type of the token at the given index value
test whether current element has an attribute with the matching name
test whether the current element has an attribute with
test whether ch is a white space character or not
obtain the current navigation position and element info from vtdnav
this method print out the current state info of the navigation object
test if the current element matches the given name
clear internal states so vtdgen can process the next file
clear internal states so vtdgen can process the next file
write the remaining portion of lc info
get the next char unit which gets decoded automatically
removes content from the master xml document
remove an attribute name value pair from the master document
this method returns the vtdnav object after parsing it also cleans
match the string against the token at the given index value
get the next char unit which gets decoded automatically
this method parses the xml file and returns a boolean indicating
get the depth 0 of the current element
parse file with default mode set to in memory
get the index value of the current element
convert a vtd token into an int
get the depth value of a token 0
convert a vtd token into a long
get root index value which is the index val of document element
this method returns the vtdnav object after parsing it also cleans
get the starting offset of the token at the given index
get total number of vtd tokens for the current xml document
load the context info from context buffer
get the depth value of a token 0
this method parses the xml file and returns a boolean indicating
store the context info into the context buffer
get the starting offset of the token at the given index
get the xml document
get the token type of the token at the given index value
clear the context stack2 after xpath evaluation
test whether the current element has an attribute with
test whether the url is defined in the scope
separate a book mark object apart from its embedded
bind a book mark object to a vtdnav object
this method returns the embedded vtdnav object
set the cursor position of vtdnav object corresponding to the internal reference
record cursor position of the vtdnav object as embedded in the
compare the node positions of two book marks
bind is to replace rebind and set vtdnav
register the binding between a variable expr name and variable expr expression
sort the integers in the buffer
remove all namespaces bindings
test if the current element matches the given name
select all elements along the preceding axis as defined in xpath
select all elements along the preceding axis as defined in xpath
select the name space nodes as defined in xpath
select an attribute name for iteration choose all attributes of an element
select an attribute name both local part and namespace url part
eval xpath to number evaluates the xpath expression to a double
eval xpath to string evaluates the xpath expression to a string
eval xpath to boolean evaluates the xpath expression to a boolean
convert the expression to a string
this private method process the comment after the root document
set the value of at terminal
the buffer reuse version of set doc
get the value of at terminal
evaluate the namespace indicator in bit 31 and bit 30
set the xmldoc container
this method writes the vtd xml into an output streams
over write is introduced in version 2
load the context info from context buffer
set the cursor position of vtdnav object corresponding to the internal reference
compare the node positions of two book marks
remove all namespaces bindings
this method loads the vtd xml from an input stream
print lc for debugging purpose
this method loads the vtd xml from a byte array
select an attribute name both local part and namespace url part
this method loads the vtd xml from a file
store the context info into the context buffer
clear the context stack2 after xpath evaluation
bind a book mark huge object to a vtdnav huge object
this method returns the embedded vtdnav huge object
compare the node positions of two book mark huge objects
test whether the url is defined in the scope
test whether the url is defined in the scope
set the value of at terminal
test whether a give token type is a text
obtain the current navigation position and element info from vtdnav
get the value of at terminal
bind resets the internal state of auto pilot huge
register the binding between a variable expr name and variable expr expression
this method returns the next node in the nodeset
returns the total allocated capacity of this buffer instance
return the upper 32 bit of the long at the index
get the object at the location specified by index
assigns a new int value to location index of the buffer instance
clear all entries in the hash table
ask text iter to return character data or cdata nodes
ask text iter to return comment nodes
ask text iter to return processing instruction name
test whether a give token type is a text comment or pi name
get the depth value of a token 0
test whether current element has an attribute with the matching name
test whether the current element has an attribute with
remove a byte segment from xml
dump the in memory xml text into output stream
remove a segment of byte content from master xml doc
insert the byte content into xml
dump the in memory copy of xml text into a file
insert ns compensated element fragment into the document
get the next char unit which gets decoded automatically
this method returns the vtdnav huge object after parsing it also cleans
get the index value of the current element
this method parses the xml file and returns a boolean indicating
test if the current element matches the given name
duplicate the vtdnav instance with shared xml vtd and lc buffers
sync up the current context with location cache
match the string against the token at the given index value
convert a vtd token into an int
convert a vtd token into a long
generate the updated output xml document and write it into
this method resets the internal state of xmlmodify instance so
sync up the current context with location cache
out and reparse writes updated xml content into a new byte
test whether the url is defined in the scope
write vtdnavs vtd and lcs into an output stream xml not written out
match the string against the token at the given index value
get the starting offset of the token at the given index
clear internal states so vtdgen can process the next file
enable the parser to collect all white spaces including the trivial white spaces
enable vtdgen to generate location cache of either depth 3 or 5
write white space records that are ignored by default
write the remaining portion of lc info
format the string indicating the position line number offset of the offset if
clear all entries in the hash table
clear internal states so vtdgen can process the next file
convert the byte content segment in terms of offset and length to
this method returns the vtdnav object after parsing it also cleans
write white space records that are ignored by default
convert the byte content segment in terms of offset and length to
clear the context stack2 after xpath evaluation
write the remaining portion of lc info
duplicate the vtdnav huge instance with shared xml vtd and lc buffers
sync up the current context with location cache
load the separate vtd index and xm l file
clone the vtdnav instance to get with shared xml vtd and lc buffers
this method returns the vtdnav object after parsing it also cleans
get the next char unit which gets decoded automatically
convert a token at the given index to a string
convert a token at the given index to a string upper case chars
convert a token at the given index to a string lower case chars
convert a segment of xml bytes a into string without entity resolution
convert a token at the given index to a string entities and char
remove a segment of byte content from master xml doc
insert the byte content into xml and surround it with and
convert the byte content segment in terms of offset and length to
convert the byte content segment in terms of offset and length to
convert the byte content segment in terms of offset and length to
this method writes the vtd xml into an output stream
this method writes the vtds and lcs into an output stream
write vtdnavs internal structure into an output stream
write vtdnavs vtd and lcs into an output stream xml not written out
write vtdnavs internal structure into a vtd xml file
write vtdnavs internal structure vtd and lcs but not xml into a file
duplicate the vtdnav instance with shared xml vtd and lc buffers
clone the vtdnav instance to get with shared xml vtd and lc buffers
this function return the substring
this method returns the vtdnav object after parsing it also cleans
return the prefix of a token as a string if the token
sync up the current context with location cache
convert the byte content segment in terms of offset and length to
convert the byte content segment in terms of offset and length to
write vtdnavs internal structure into an output stream
write vtdnavs vtd and lcs into an output stream xml not written out
duplicate the vtdnav instance with shared xml vtd and lc buffers
clone the vtdnav instance to get with shared xml vtd and lc buffers
see this class javadoc comments to find out why this method is
this method synchronizes the newsservers declared in the configuration
thread run method that posts the message using the appropriate connection
will get the ejb local home factory
make this point equal the given point
add the given point to this point
reset the game
puts piece into stack
tells whether a given row is complete
reset the game
removes all complete rows from the stack
removes a row
calculates the location of the shadow piece and sets code shadow location code
rotate piece clockwise
paint an image of the given block
return the height of the stack at the given column
rotate piece counter clockwise
sets the selected file usually the first file that
sets the selected files usually useful when mult file
adds a decision to the scenario
checks if the first element of a trimmed line is decision caps
sets the current directory so that the chooser can reference
adds a picture to be displayed at the start of the scenario
gets the a given decisions to make within the scenario
sets the default file so that the chooser can enter a default
gets the situation statement
the current number of pictures
sets the file chooser
sets the owner which is usually the component that
gets the current directory so that the chooser can reference
gets the default file so that the chooser can enter a default
adds a new row to the table
removes the given row
removes the selected rows
allows the user to edit the name cell of the currently
sets the stop flag
allows the user to edit the name cell of the currently
adds a choice for the decision
adds a choice for the decision
adds a mouse listener to the table
gets the position number from the currently selected entry
gets the given decision choice for the decision
gets the decision choices index for the decision
aceepts the file if its name ends withe specified string
displays a file open chooser when the action is invoked
updates the graphics
clears all images and resets all their coordinates
resets all image coordinates
sets the equation randomly based on the number of equations available
sets the equations for the given number of images
sets the speed of the images which is the x increment
gets the flag of whether the image has flown off the screen
gets this object
gets the preferences panel object
applies the settings from the preferences panel
applies preferences from the general tab in the preferences panel
closes the round and calls the next round if appropriate
closes the scenario
load mp3s from the music folder
randomly chooses an mp3 file to play from the files loaded
plays mp3 music from the given path
plays music on a new music player
picks a scenario randomly from the scenario entries in the
loads the anatomy answer choices including both the
checks if an anatomy word has already been picked
checks if a scenario has already been picked
checks the typed anatomy name to see if the user
updates the game after a successful round
increments the round number by one
resets the lives to the default number
resets the cash to the default starting value
displays the given question
displays the feedback message which is similar to a question
switches the gui to typing mode a form of rounds mode
adds the gui components specific to the typing mode
adds the gui components specific to the answer choices mode
switches from scenario mode to bonus rounds mode
adds a music selection to the music menu
sets the current anatomy
sets the current anatomy question
starts the thread
allows for resuming the music
runs the player
changes the foreground and background colors to the
sets the component to flash
the component to flash
accept a given file to display if it has the extension currently being
accept a given file to display if it has the extension currently being
get the users public timeline
get the users own and friends timeline
get the users replies
get the users followers from the twitter rest api
load the theme for preferences
get the users own and friends timeline
get the users own and friends timeline
destroys the status specified by the required id parameter
favorites the status specified in the id parameter as the authenticating user
close the on screen keyboard
verify the users credentials
check api requests status
execute a get request against the twitter rest api
execute a post request against the twitter rest api
execute a post request against the twitter rest api
create a new query with the constraint search parameters
insert a record from a json object
prune old records from the database to keep the size down
load the user and friends timeline
load the user and friends timeline
insert a row from a jsonobject
remove old records to ensure that the database does not grow too large
return the number of new statuses
get the http digest authentication
return the number of new replies
get the last status id
destroy the status specified by id
parse the status code and throw appropriate exceptions when necessary
format a date in the twitter date format
returns the relative time passed since now
load the theme for preferences
sets the title with a left and right title
updates the activity title
retrieve the text that is currently in the editor
set the text in the text editor
initialize the user interface
check to see if the system has a hardware keyboard
initialize service and bind to it
disconnect and unregister the service
disconnects from the service and stops it
tweets changed callback method
data loading callback method
messages changed callback method
replies changed callback method
returns the shape of the clipping region
sets the border for the annotation
sets the border for the annotation
this returns a child instance of this graphics object
this returns a specific page
returns the shape of the clipping region
this is called by pdfpage when creating a graphcis instance
this returns a font of the specified type and font
this method is used internally by create and by the pdfjob class
sets a unique name to a pdfimage
this method creates an outline and attaches it to this one
this initialises the stream by saving the current graphics state and
sets the documents author
sets the documents creator usually the name of the application thats
this returns a pdfgraphics object which can then be used to render
this is used by the pdf and pdfpage classes to compare font names
sets the title of the document
internal method to actually construct the job
this writes the pdf document to the output stream finishing the
this returns a child instance of this graphics object
returns the pages dimensions in pixels
returns the pdf object for this document
this releases any resources used by this graphics object
this simply draws a white rectangle to clear the area
sets the keywords for this document
we overide graphics
this method adds a text note to the document
fills a rectangle with the current colour
adds a hyperlink to the document
this is not yet implemented
this is not yet implemented
this method attaches an outline to the current page being generated
this adds a page to the document
this is not yet implemented
this method attaches an outline to the current page being generated
this is not yet implemented
this creates a procset and sets up the page to reference it
draws a polygon linking the first and last coordinates
draws a polyline
fills a polygon
draws an image onto the page
draws an image onto the page
draws an image onto the page with a backing colour
draws an image onto the page with a backing colour
draws an image onto the page with scaling
draws an image onto the page with scaling
clips to a set of coordinates
clips to a set of coordinates
as my jdk docs say this may break with java 2 d
this extra method allows pdf users to clip to a polygon
returns the rectangle that fits the current clipping region
sets the colour for drawing
returns the font metrics for a font
returns the current font
this sets the font
this draws a string
all functions should call this to close any existing optimised blocks
functions that draw lines should start by calling this
this is unsupported how do you do this with vector graphics
draws a line between two coordinates
translate the origin
draws an arc
this moves the current drawing point
this moves the current drawing point
this adds a line segment to the current path
this adds a line segment to the current path
this extension allows the width of the drawn line to be set
this is used to add a polygon to the current path
this extension appends a bezier curve to the path
this extension appends a bezier curve to the path
this extension appends a bezier curve to the path
this extension appends a bezier curve to the path
this extension appends a bezier curve to the path
this extension appends a bezier curve to the path
converts the java space coordinates into pdf
converts the java space coordinates into pdf
converts the java space dimension into pdf
converts the java space dimension into pdf
converts the java space coordinates into pdf text space
open the books database
create a new book using the title provided
delete the book with the given row id
return a cursor over the list of all books in the database
return a cursor positioned at the book that matches the given row id
update the book using the details provided
open the notebook database
create a new page using the title provided
delete all pages for a given book id
delete the page with the given row id
return a cursor over the list of all pages in the database
return a cursor positioned at the page that matches the given row id
update the page title using the details provided
update the page body using the details provided
this method initializes s shell
this method initializes browser contents
this method initializes j list sites
this method initializes j list articles
this method initializes j text area contents
this method initializes j content pane
configures the shell
a cache for trellises during training
the cost of a transition depends upon the nature of the transition
whether were moving from an established position or pushing down from the left
update the word aligners new translation parameters
enter data into the histogram
checks if the given object passes the filter
destructively normalize this counter in place
set the count for the given key clobbering any previous count
increment a keys count by the given amount
increment each element in a given collection by a given amount
finds the total of all counts in the counter
returns a representation of the queue in decreasing priority order
returns the total number of substates
add an element to the indexer
returns a representation of the queue in decreasing priority order
how much capacity do we need for this type of map
format map type num key value pairs
return true iff interval ms has ellapsed since
how much capacity do we need for this type of map
format map type num key value pairs
generates an alignment for the same sentence pair according to the supplied posteriors
detects whether this is a soft or hard alignment and writes
writes the sure and proposed alignments in a modified
writes the posterior alignments in a modified version
reads a string of alignments generated by an output function or pharaoh
reads a string of alignments generated by an output function or pharaoh
the main function for handling all types of speech requests
initiate a connection with the server
set whether or not the tts engine should be blocking
the main function for handling all types of speech requests
sets carbon pitch
returns a string representation of the name of the engine
set the text to be processed
set the request type to be sent to the engine
get the request type
set the priority to be sent to the engine
get the priority to be sent to the engine
bind to the servers host and port
stop the daemon
gets the message
gets command from the user
gets the status before the errors occur
gets the string of the ip address of localhost
attempts to get an available port of local host for use
just returns the port to be used by local host
tests whether the echo is available
sets the username
gets echoes from the server
starts to connect with the server
initilizes the streams that input and output
sets transfer mode of transfer files
closes the connection with the server
sets a new host
sets the local file name
tests whether the mode is passive
sets a new port
sets the passive mode
sets the password
sets the active mode
prepares for active data connection
opens the data connection in active mode
opens the data connection in passive mode
counts the number of arguments
closes the data connection
gets command from the user
attempts to get an available port of local host for use
look up the commands list recognize which command matches
judges the command
closes the connection with the server
reads the input
closes the data connection
uploads a file in active mode
uploads a file in passive mode
shows the echo from server
determines whether the echo is valid
show the version
this method gets called when a bound property is changed
loads the list
saves the list
returns the nth server from the list
returns the index of the server in the list
returns the number of servers in the list
adds a server to the list
removes a server from the list
removes a server from the list
requeries all the data that has already been retrieved from the db
removes all servers from the list
returns the text to be disaplyed for the server list
returns true if the list has been modified and needs to be saved
empties the query caches and fires the property changes
detects the changes of the servers and marks the list as changed needs
registers authentication request listener to receive events from every server in
removes authentication request listener from all the servers in the list
resets the authentication so that it will the next get connection will
tells the dialog whether it should add a new server or it should
tests whether a connection to the db has already been opened
saves the list to the file
returns the path of the data on the host
buffers a master server pair during xml parsing
returns next buffered slave or 1 if none are found
returns the ip address of the server
this method gets called when a bound property is changed
returns the master server or null if the server is itself a master
changes the master server for this server
returns the host name port and ip address
changes the connection strategy used to authenticate and retrieve a
queries the database and returns an updated version of the list
returns the last queried list of processes connected to the db
queries the database and returns an updated version of the list
returns the las queried list of variables and settings
although tecnhically visible is false for a window by default the
returns whether the input is hidden as in a password field
set the expanded state of the item
associates the specified container to this layout
get the root item visible state of the tree
set the size of the first component in the container
set the root item visible state of the tree
sets whether the split is vertical components are left and right or
get the selected item of tree
gets the prior selected item of tree
returns an enum constant telling whether the first second or neither
set either the first or second component to be maximized
assigns a user defined code object code to this code radio button code
get a text representation of the key combo that will activate this item
set the key combo shortcut that will activate this item
sets the favourite icon for the browser
one and only one
adds a code action listener code that will be notified when the
unregister an code action listener code from all action event
sets the selected date in the component
sets the current tab sheet
this property is unsupported by the tab folder component
this property is unsupported by the tab folder component
this property is unsupported by the tab folder component
this property is unsupported by the tab folder component
set the title for the message box
writes the uploaded file to a new code file code at the
writes the uploaded file to the specified code file code
set the message for the message box
initiates the upload of the file from the users machine to the server
set the icon for the message box
gets the code frame code that represents the primary application
sets the buttons based on a string
returns the component that is displayed upon clicking the drop down button
makes the message box visible
returns whether you can type in the text field
make the message box visible and then block
close the message box
returns the code component code that previously had focus in the
this property is unsupported by the tab sheet component
this property is unsupported by the tab sheet component
add an action listener that receives click notification from this object
returns whether the dialog can be resized by dragging the bottom right
set whether the dialog can be resized by dragin the bottom right corner
returns whether the dialog can be drug around the frame
all keys in the file map must be upper case
set whether the dialog can be drug around the screen
set whether the dialog is modal
returns whether the dialog will block execution when visible
makes the dialog visible
sets the checked state of the row
set the developer user defined object for this tree
gets the id that is associated to the specified object
executes a xod file adding the created objects to the map and list
get this rows child grid box
sets whether this column is visible
sets the name of the column
sets the width of the column
sets the text justification left right or center
set the display format for this column
set the comparator for this column
returns the text to display in column headers
sets the text to display in the header of the column
get the selected state of the item
set the root item visible state of the tree
returns a boolean indicating if this grid boxs column headers are
sets whether the column headers are visible
returns a boolean indicating whether this grid boxs rows have visible
sets whether there are check boxes on each row
get a boolean indicating whether clicking anywhere on a row in this
get a boolean indicating whether this grid box can be sorted by clicking
sets whether the grid box can be sorted by clicking on column headers
returns the row that is currently selected
returns the prior row that was selected
gets the code frame code that represents the primary application window
sets the current tab sheet
writes the uploaded file to a new code file code at the
this method links a label with an onscreen component
initiates the upload of the file from the users machine to the server
assigns the component that is displayed upon clicking the drop down button
this property is unsupported by the tab sheet component
gets the id that is associated to the specified object
returns the grid box part of the drop down
sets the grid box for the dropdown to a differnt grid box
get the delimiter separating values in the text field in cases where multiple
sets the checked state of the row
chooses which columns value will be displayed in the text field
gets the grid that contains this row
gets the index for this row
set this rows child grid box
get this columns comparator
removes an existing action listener
programmatically signals an action which triggers the appropriate listener which calls
set the selected state of the item
set the comparator for this column
returns the name of the image file
associates an image file with this code image code object
returns a string representation of the image including file name and size information
assigns the component that is displayed upon clicking the drop down button
add an action listener that receives click notification from this object
sets whether there are check boxes on each row
sets the checked state of the row
make the message box visible and then block
returns the selected state of the row
sets the grid box for the dropdown to a differnt grid box
set this rows child grid box
sets whether this column is visible
sets the display name of the column
programmatically cause an action to occur for the given menu
set the comparator for this column
returns get checked
programmatically signals an action which triggers the appropriate listener which calls
get the selected state of the item
returns the text to display in column headers
set the selected state of the item
assigns this radio button to a specific group
programmatically fires an action which triggers the appropriate listener
returns the row that is currently selected
sets the current tab sheet
assigns the component that is displayed upon clicking the drop down button
sets the checked state of the row
returns the selected state of the row
set this rows child grid box
programmatically cause an action to occur for the given menu
sets the text justification left right or center
set the comparator for this column
programmatically fires an action which triggers the appropriate listener
returns any rows that have children
initiates the upload of the file from the users machine to the server
makes the dialog visible
provides a simple interface for adding folders to the mail box viewers
adds a button to the tool bar
places one component on the tool bar and aligns to to the right
retrieves a single field public private protected or package from the provided class
register a component handler instance for a key generally a class
get the class that will be responsible for handling a particular component
returns the next object that starts with code substring code
open and save codes
returns the grid square at the specified cordinates
gets the distance between two grid squares
checks if alien race is declared friend
checks if alien race is declared neutral
checks if alien race is declared enemy
checks the diplomatic status of an alien race
checks if alien race has previously been specified
checks if alien race is the same as the one calling the function
sets alien race to the specified status
sets alien race to the specified status in this race and if bidirectional
check that a new session is created
check that the session is destroied
check that the user login and password are set on session
test for getting the value of child text node from a element node
tests connect disconnect connect sequence for a group with two members
releases the resources associated with this connection
commits transaction and restarts a new transaction
rollbacks transaction and restarts a new transaction
closes this handle
sets the autocommit mode
returns true if the result of invocation is already known
gets the result of the preformed operation
returns true if the database with the associated url exists
returns true if the result of invocation is already known
waits a given time until the result of the operation is available
dums the error message
accept the visitor
dumps an error message
sets the value of the given variable
returns the value of the expression
returns a simplified node if possible usefull in expressions
dumps an internal error message
returns the value of the expression
sets the value of the given variable
returns the value of the variable
returns the value of the function executes subroutine
sets the value of the given variable
returns true if the following parameters can be the parameters of
returns a simplified node if possible usefull in expressions
associates the given reservation to the current value of the variable
returns the reservations associated with the given variable
returns the value of the variable
returns the value of the variable
sets the value of the given variable
returns the value of the expression
returns a simplified node if possible usefull in expressions
returns a simplified node if possible usefull in expressions
process a database definition syntax begin sql ddl statements end
sets the value of the given variable
displays the source code of the node
returns the value of the expression
sets the value of the given variable
returns the value of the expression
displays the source code of the node
the code execution has entered a new scope
the code execution has exited a new scope all names declared in this
returns the value of the expression
returns a simplified node if possible usefull in expressions
sets the value of the given variable
returns the value of the expression
sets the value of the given variable
sets the value of the given variable
returns a simplified node if possible usefull in expressions
sets the value of the given variable
accept the visitor
returns the value of the expression
process the given node interpreting the source code
returns a simplified node if possible usefull in expressions
returns the value of the expression
returns the value of the expression
displays the source code of the node
returns a simplified node if possible usefull in expressions
returns a simplified node if possible usefull in expressions
displays the source code of the node
returns the value of the variable
returns the value of the function executes subroutine
note returns the next token to be printed
sets the value of the given variable
returns the value of the expression
returns a simplified node if possible usefull in expressions
initializes internal structures related with transaction processing
initializes internal structures related with query processing
interpreter should be properly initialized defined only to
interpreter should be properly initialized defined only to
interpreter should be properly initialized defined only to
interpreter should be properly initialized defined only to
interpreter should be properly initialized defined only to
interpreter should be properly initialized defined only to
interpreter should be properly initialized defined only to
returns the value of the expression
should be called when some reservation has been associated with any variable
should be called when some reservation has effectively been used in the execution
the associated transaction has been commit used reservations must be updated
the associated reservations has been rollbacked used reservations must be updated
returns the used reservation that backs up the given conditions
returns the value of the expression
returns the used reservation that backs up the given conditions
process a mobile transaction
checks the given parameters are backed up by this reservation
the associated transaction has been committed
returns a readable representation of this reervation format br
the associated transaction has been rollbacked
updates the reservation and database according to the current usage processed
updates the reservation and database according to the current usage processed
checks the given parameters are backed up by this reservation
returns a readable representation of this reervation format br
checks the given parameters are backed up by this reservation
returns a readable representation of this reervation format br
updates the reservation and database according to the current usage processed
updates the reservation and database according to the current usage processed
checks if there exists a reservation that satisfies the given conditions
checks the given parameters are backed up by this reservation
checks if there exists a reservation that satisfies the given conditions
returns a readable representation of this reservation format br
checks which conditions the given node satisfies
increases the number of used instances in the given reservation
checks which conditions the given node satisfies
the associated transaction has been committed
returns a readable representation of this reervation format br
updates the reservation and database according to the current usage processed
checks that the user is logged in
process one received app msg that is part of a plsql program
render a result set as a text string
create a new socket process for a new connection
returns the connected remote address as a string
create a new user session
initialize the given command with the defined parameters if any
adds initial parameter values for the given class
adds initial parameter values for the given class
you must call this method to initialize this class mappings
reads mappings from the given xml config file name
return the initial parameters for the given class
read mappings from the given input stream
adds mappings for the received commands
process a new i mapping i element
util method that returns an element text value
extracts parameters initizing values from a list of elements i param i
starts listening for messages
the user session id
starts listening for messages
when was this message created
default beahavior simple call the execute method on command
adds a new listener for group events
return a list of the current group members addresses
return the local address
convert a jgroups view into a non specific implementation view
leave a group
short cut method
simply calls the notify method on the main class
simply calls the notify method on the main class
simply calls the notify method on the main class
returns a copy of the list of current group listeners
normalize three letter and full residue names to their one letter abbreviations
return the mutant residue for this point mutation
return the wild type residue for this point mutation
test the the constructor works for input of both ints and strings
test that the hashcode method functions as expected
test that the constructors returns without error
test the the equals method performs as expected
test that the amino acid normalization is working properly
test that no mutations are returned for text that contains no mutations
test extraction when there are multiple mutations and look ahead is required
test extraction for case insensitive matches
test extraction on mutations is varying numbers of digits
the regexes should disallow unacceptable word boundaries
the regexes should allow these word valueboundaries
test that mf identifies full name mentions of amino acids
test that mf finds things like ala64 to gly
ensure proper spacing for matched mutations
test if reading is invalid
return the pose of this particle
calculate the weight for this particle by comparing its readings with the
get a specific reading
return the number of particles in the set
get a specific range reading
get a range reading for a specific angle
get the angle of a specific reading
return true if the readings are incomplete
get the number of readings in a set
set the range reading
dump the readings to a data output stream
load the readings from a data input stream
get a specific particle
print the range readings on standard out
calculate the weight for each particle
apply a move to each particle
returns the compass angle in degrees cartesian increasing counter clockwise i
get the estimated pose of the robot
moves the nxt robot a specific distance
reset the estimated position to unknown
return the minimum rectangle enclosing all the particles
sets speed of both motors as well as move speed and turn speed
the highest weight of any particle
get the border where particles should not be generated
also sets motor speed
check if a point is within the mapped area
return the bounding rectangle of the mapped area
dump the map to a data output stream
set the standard deviation for the sensor probability model
load a map from a data input stream
set the distance noise factor
set the distance angle factor
set the maximum iterations for the resample algorithm
find the index of the particle closest to a given co ordinates
check that the given pose satisfies the conditions for this way point
serialize the particle set to a data output stream
load serialized particles from a data input stream
dump the serialized estimate of pose to a data output stream
moves the nxt robot forward until stop is called
load serialized estimated pose from a data input stream
find the closest particle to specified coordinates and dump its
moves the nxt robot backward until stop is called
rotates the nxt robot through a specific angle
get the distance traveled
get the angle turned by a rotate or an arc operation
get the type of the movement performed
get the radius of the arc
rotates the nxt robot through a specific angle
send a packet
returns an input stream for this rcxport
receive a packet
receive an ack
returns an output stream for this rcxport
check if a packet is available
resets sequence numbers for this port
check if an ack is available
closes this rcxport stopping the listener thread
set the source and destination for this connection
set or unset the listen flag to keep a pc serial tower alive
check if an ack is available
close this packet handler and all lower layers
get the last error
checks if there is any data avaliable on the input stream
receive a packet
check if a packet is available
stops the nxt robot
helper method to return a single register byte
sets a single byte in the i2 c sensor
send data top the sensor
helper method for retrieving string constants using i2 c protocol
set the address of the port
moves the nxt robot in a circular arc through the specified angle br
resets tacho count for both motors
moves the nxt robot in a circular arc through a specific angle br
moves the nxt robot in a circular arc through a specific distance br
moves the nxt robot a specific distance in an hopefully straight line
method to set an angle in a rc servo
set minimal angle
set maximum angle
method to set minimal angle
method to set maximum angle
method to set medium angle
method to set medium angle
moves the nxt robot a specific distance in an hopefully straight line
classic forward method for continous rc servos
classic backward method for continous rc servos
method to add a rc servo to current lsc
method to add a rc servo to current lsc
method to get an rc servo in a lsc
method to add a dc motor
method to add a dc motor
method to get an ldc motor
load all servos connected this this lsc
unload all servos connected in a lsc
this only needs the be run if you are changing the sensor
returns the distance from the object in millimeters
turns the sensor module on
get the number of objects being tracked
camera sorts objects it detects according to criteria either color size
turns power to the sensor module off
enables adpa auto detecting parallel architecture
choose either object or line tracking mode
get the color number for a tracked object
disables adpa auto detecting parallel architecture
get the rectangle containing a tracked object
returns the current distance in millimeters for the lsb
send a single byte command represented by a letter
returns the current distance in millimeters for msb
returns the current voltage level in millivolts for the lsb
returns the current voltage level in millivolts for the msb
used to determin the sensore module that is configured
gets the number of points that will be in the curve
sets the number of points that will be in the configured curve
gets the min value in millimeters for the lsb
sets the min value in millimeters for the lsb
this method set the pulse in a rc servo
gets the min value in millimeters for the msb
method to set an angle in a rc servo
sets the min value in millimeters for the msb
method to set the speed in a rc servo
gets the max value in millimeters for the lsb
sends command to pf ir receiver to apply changes made to the registers
sets the max value in millimeters for lsb
determines which motors are to be used buy default both are activated
gets the max value in millimeters for the msb
returns the current ir channel in use by the pf mate
returns which motors are activated
sets the max value in millimeters for the msb
gets millivolts value of the specific index for the lsb
each bit in the short byte represents the boolean pressed or
sets millivolts value of the specific index for the lsb
gets millivolts value of the specific index for the msb
sets millivolts value of the specific index for the msb
calculates the turn rate corresponding to the turn radius br
returns the current operating mode of the sensor
gets millimeter value of the specific index for the lsb
use adpa mode only if you are trying to connect more
sets millimeter value of the specific index for the lsb
selects channel two
selects channel three
gets millimeter value of the specific index for the msb
selects channel four
turns off all channels
sets millimeter value of the specific index for the msb
returns an integer value from the specified register
method to set the speed in a dc motor
compass readings increase clockwise from 0 to 360 but cartesian
returns the direction of the target 1 9
returns value of sensor 1 5
method to get an rc servo in from the nxtservo
starts calibration for mindsensors
read the battery voltage data from
send commands to both motors
send a single byte command represented by a letter
sleep the sensor
method to know if servo is moving to a determinated angle
by default the sensor is short range
wake up the sensor
changes the sensor to short range mode
set a delay in a motor
get the steering value
changes the port to long range mode
get the average value
load servo located in a position x
acceleration along x axis
this class set the pulse over a rc servo or a dc motor
acceleration along y axis
acceleration along z axis
read the gyro value
get status from each sensor in the raw
floats the motor
runs the motor forward
convert sensor value to fahrenheit value outside 4 158 is not accurate
runs the motor backward
stops the motor
sets the motors speed
returns the speed
add a lsc lattebox servo controller
returns the raw values from the rotation sensor instead of degrees
get a lsc lattebox servo controller
the nxt uses 6 batteries of 1500 m v each
the nxt uses 6 batteries of 1
get the light reading
get the normalized light reading
set the nxtcomm used to communicate with the nxt
sets the power of the motor
toggle the verify flag
block encoder count is the count used to synchronize motors
small helper method to send direct command request to nxt and return
resets the block tachometer
starts a program already on the nxt
forces the currently executing program to stop
connects to a nxt brick
name of current running program
paint the map and particles
paint the particles
draw the map using line2 d objects
paint the pose using ellipse2 d
opens a file on the nxt for reading
create a line that represents the direction of the pose
find the particle closest to the specified coordinates
get current state of the particles from the nxt
send a command to the nxt
close down the program and the nxt
find the closest particle to the mouse click
close the stream
paint the panel
closes an open file
clear the panel
connect to the nxt
print the error message and exit
delete a file on the nxt
connect to any nxt over any protocol in packet mode
connect to any nxt over any protocol specifying mode
connect to a specified nxt in packet mode
connect to a device by url in packet mode
get the battery reading
close the current device
call the close command when your program ends otherwise you will have
write bytes to the device
put the nxt into samba mode ready to update the firmware
close the connection
log an exception to all the log listeners
log a message to all the log listeners
write data to the file
return true iff x is between x1 and x2
return the length of the line
a nxj extension to defrag the file system
get the friendly name of the nxt
set the friendly name of the nxt
get the local address of the nxt
retrieves tacho count
used to request data from an inter integrated circuit i2 c sensor the
sends a message to an inbox on the nxt for storage
plays a tone on nxt speaker
stops sound file playing
resets either rotation count or block tacho
get the fimrware version
deletes user flash memory
take a single range reading
stop the robot and clear the queue
add a point to the path to move
take a set of 3 readings
make random moves until the estimated pose is good enough
called within the scope of a thread defined by button
reset the fsm to its initial state
the thread entry point
inform the coordinator that we have released the actuators
request control of the actuators
return true if the fsm is executing false otherwise
convenience function to make it appear to subclasses that
attempt to run this actuator
this is actually executed in a thread established by
this is actually executed in a thread established by
this is actually executed in a thread established by
returns true if the given timestamp passed
returns the address info associated with this location object
this method is not implemented by le jos and returns null every time
returns the coordinates of this location and their accuracy
calculates the azimuth between the two points according to
returns whether this location instance represents a valid location with coordinates
sets the terminals course ensuring that the value is always in the range
set the current ground speed of the location object in m s
returns the horizontal accuracy of the location in meters 1 sigma standard deviation
returns the discovery agent for this device
returns the friendly name of a bluetooth device
changes the friendly name of the nxt brick
indicates if the remote device has been properly paired authenticated
the bluetooth device class for the lego nxt brick
normally the mode values are found in javax
indicates whether the nxt brick is visible to other devices
returns the local bluetooth address of nxt brick
retrieves the major service classes
determines if two remote devices are equal
retrieves the major device class
removes the device from inquiry mode
update the robot position and apply it to all the particles
get the forward projection of the robot
get the particle set
get the estimated position and angle of the robot
return the input stream for this connection
return the output stream for this connection
return the data input stream for this connect
return the data output stream for this connection
close the stream for this connection
open the stream for this connection
get the signal strength of this connection
reset sequence numbers
executes an i2 c read transaction and waits for the result
executes an i2 c write transaction
executes an i2 c write transaction
internal helper function read a string from the device
set the address of the port
get the port that the sensor is attached to
causes motor to stop pretty much
set the sensor type and mode
set the sensor type
set the sensor mode
reads the boolean value of the sensor
reads the raw value of the sensor
returns value compatible with lego firmware
get the name of the remote brick
get the nxtcommand object used for remote access
test if i2 c is busy
get the bluetooth address of the remote device
get the free flash memory on the remote nxt
enable i2 c on the port null for remote ports
return the emulated lego firmware version on the remote nxt
return lcp protocol version
deletes all user programs and data in flash memory
delete a file from the nxt
starts a lego executable file on the nxt
stops the currently running lego executable on the nxt
retrieves the file name of the lego executable currently running on the nxt
send a message to a remote inbox
play a tone on the remote nxt
plays a sound file on the remote nxt
plays a sound file on the remote nxt
stops a sound file that has been playing repeating on the remote nxt
close the connection to the remote nxt
download a file from the nxt and save it to a file
set a new nmea sentence into the object
return if your nmea sentence is valid or not
method used to parse a gga sentence
get speed in kilometers
returns the last time stamp retrieved from a satellite
get date in integer format
returns the number of satellites currently in view
returns the number of satellites being tracked to
return compass value from gps
return a nmea satellite object
get gps quality data
return compass degrees
return a date object with data from gga and rmc nmea sentence
returns the number of satellites being tracked to
get longitude direction
get true course in degrees
the altitude above mean sea level
get magnetic course in degrees
get speed in kilometers per hour
get the course heading of the gps unit
helper method used by both constructors
selection type of 2 d or 3 d fix
get the 3 d position dilution of precision pdop
get the horizontal dilution of precision hdop
get the vertical dilution of precision vdop
method used to close connection
internal helper method to aid in the subclass architecture
return the location of the keypress
add a listener to manage events with gps
typematic rate is the rate characters repeat when a key is held down
typematic rate is the rate characters repeat when a key is held down
version of select without timeout
notify listener if present
reset the timeout period
indicates whether or not caps lock is enabled for the keyboard
determines which modifier keys are held down
set the number of lines to show in the screen
enable disabled if you need to show output with delay
set the delay measured in ms
show in nxt screen a message
show in nxt screen a message
returns the source of the key event
add a handler to the set of handlers associated with this event
remove a handler from the set associated with this event
test to see if the handler given as the parameter is associated with
create a release parameters object appropriate to the release characteristics of this event
binds this to an external event a happening
gets the maximum priority available for a schedulable object managed by
removes a binding to an external event a happening
fire this instance of async event
gets the minimum priority available for a schedulable object managed
gets the normal priority available for a schedulable object managed by
this method first performs a feasibility analysis using the proposed
this method first performs a feasibility analysis using the proposed
gets the initial number of elements the arrival time queue can hold
sets the deadline value
sets the behavior of the arrival time queue in the case where the
this method first performs a feasibility analysis using the new cost
sets the initial number of elements the arrival time queue can hold
inform this scheduler and cooperating facilities that the resource
inform this scheduler and cooperating facilities that the resource
trigger the execution of a schedulable object like an
sets the priority value
trigger the execution of a schedulable object like an async event handler
queries the system about the feasibility of the system currently being considered
gets the period
gets the start time
sets the deadline value
this method first performs a feasibility analysis using the new period
sets the period
sets the start time
this method first performs a feasibility analysis using the new
compares this high resolution time with the specified
gets the minimum interarrival time
for the comparable interface
set the minimum interarrival time
returns true if the argument object has the same type and values
sends a close escape sequence to the socket proxy
waits until there is a socket connection available
returns the data input stream of the socket
returns a hash code for this object in accordance with the general
returns the data output stream of the socket
returns the output stream associated with this socket
returns the input stream associated with this socket
write escape sequence to indicate end of file
sets the millisecond component of this to the given argument and the
sets the millisecond and nanosecond components of this
get the bounds as a rectangle2 d with float coordinates
test if this rectangle contains a specified rectangle
test if this rectangle intersects a specified rectangle
test if the rectangle is equal to a given object
get the bounds of this rectangular shape as a rectangle
get the bounds of the line as a rectangle2 d
get the square of the distance between two points
get the square of the distance of this point to a given point
get the distance from this point to a given point asa double
test if this rectangle2 d contains a rectangle defined by double coordinates
returns the millisecond value of this code date code object
pushes an object onto the queue
test if this rectangle2 d intersects a rectangle defined by double coordinates
test if this rectangle intersects a given line
method used to know if exists new tokens
method implemented by interface requirement
returns a random boolean in the range 0 1
returns the next pseudorandom gaussian normally distributed double value with mean 0
returns a convenient enumaration object to cycle through elements in vector
get the bounds of the line as a rectangle2 d
writes a string to the underlying output stream
writes a newline character
writes a string followed by a newline character
if the file is a binary executable begins running it
returns the length of the file denoted by this file name
closes this input stream and releases any system resources associated
write the buffer to flash memory and update the file parameters in flash
create a string from a character array
create a string from a byte array
create a string from a byte array
create a string from a byte array
create a string from a byte array
returns the index within this string of the first occurrence of the
returns the thread id
find the last occurrence of a string
appends a string with no null checking
find last occurrence of s string from a given index
appends a string with no null checking
special version of hash that returns the same value the same string values
run the utility
set the value
set the maximum value
update the data in the model
set the raw value of the sensor
set the maximum raw value
return the number of rows
set the scaled value of the sensor
set the maximum scaled value for the sensor
get the data in a specific cell
set the type of the sensor
delete a file on the nxt and update the model
get the number of rows in the model
close the connection
attempt to restart the nxt in sam ba mode
get the object at the specified location
set the value of a cell
check if a cell is editable
fetch the files from the nxt
get the file info object for a specific file
update the status field when usb or bluetooth radio buttons selected
return the number of files
format the nxt file system
verify the firware downloaded to the device
creates a new socket server if instructed by the nxt
causes a new thread to be invoked
causes a new thread to be invoked
execute tiny vm
create the tabs for lcp
create the tabs for lcp
create the tabs for lcp
set up the files panel
populate the other panel
set up the files table
return the number of motors selected
return true iff exactly two motors selected and show message if not
return true iff at least one motor selected and show message if not
download a file from the nxt
show a pop up message
update the sensor dials
clear the files tab
switch between nxts in table of available nxts
update connection status in the connections table
toggle connect button between connect and disconnect
get the selected protocols
get the application protocol
stop the motors on the nxt and update the tachometer values
retrieve the sensor and battery values from the nxt
convert a byte array to a string of hex characters
convert a character to a hex digit
connect to the data logger
append data item to the data log
delete selected files
choose a file and update it
download the selected file
run the selected file
change the friendly name of the nxt
move the motors
set the sensor type and mode
play a tone
reset the tachometer for a motor
play a sound file
read i2c reply
format the file system
returns true if this monomial divides the argument
returns true if this monomial equals the argument
returns true if this monomial is before the other in their lexicographic
returns the lexicographic ordering associated with this list
returns true if this monomial is before the other in the given lexicographic
formats the monomial into a string representation using the lexicographic
adds a variable to the order at the end of the ordering
returns the index in the ordering for the variable name
creates a string representation vector format of the monomial
projects the ordering by removing the first variable in the ordering
returns the right sibling of this entry
test of unmarshall marshall monomials
test of unmarshall marshall lex order
test of unmarshall marshall monomial ideal
test of unmarshall marshall monomials
returns the lexicographic ordering associated with this tree
returns the tree root
resets the tree and returns all the entries to the pool
indicates whether the tree contains a monomial
iterates all the paths to monomials leaves in the tree
iterates all divisors of a monomial in the tree
adds a monomial to the tree with associated data
adds a list of monomials with associated data to the tree
removes the divisors from the tree
interrupts the current method if possible
produces a string format of the tree very large
removes the maximal artinian powers from the tree
adjust the tree and reverse the deformation caused by making an ideal
retrieve the root object of the given data object
retrieve the root object of the given data list
this method was created in order to create new data
this method was created in order to retrieve existing data
this method was created in order to retrieve existing data
by default returns that sum of all works durations
returns a day a key in for days map for the given datetime
returns the number of individual workers in the given group i
uses only for optimization
returns null or specific calendar for the given day
finds the task performed by the given worker in the given slot
returns the finish of the last task completion time
performs the main work without the client problem
checks if the given time is working
returns cost of the work during the given time interval
returns rate for the given time
returns day of month for the given time
used to filter workers for the work not to create undoable tasks
fills schedule with information on slots capacities
returns time since the calendar day begins 12 p
set worker filter by default all the workers can do any work
returns the time moved to the beginning of this
return the length of the atomic interval equal to one min time unit
must be equal or less than time unit
converts time from model to real life with base datetime
converts time from real life to model with base datetime
returns the difference between the given datetimes as double
returns the given time interval in milliseconds as double
return the length of the interval equal to 1 unit
returns ratio between two units they must be supported by
allows iterations of units from minimum to maximum
allows iterations of units from minimum to maximum
adds the task and reserves the capacity for this task
returns true if each time slot of the given interval is working
throws exception is time is 0
does not set null start time to set it later
p is a problem for detailing and p
must be called by scheduler when no continuous sequence of slots is found
returns duration depending on category index for vector of max durations
returns weight depending on category index for vector of max durations
optimized for slot schedule horizon must not be null
for jobs schedule
for non jobs schedule
override if there is more efficient way to sum compared to getting
optimized for jobs schedule whose get jobs method works fast
by default returns slot duration for all workers
extracts int from the given slot number
uses number format so it should be set before
if remains default skill task
some conditions can be checked only after creating the task instance
returns true if some constraints is violated by current start finish times
return the start time of the interval for the given slot index
by default returns work
adds the work necessary to be done before this work
initializes by set tasks of tasks job
for creation tree structure
returns true if the given worker has skills with appropriate level
support for duration depending on worker
returns true if all skills are contained by other skill set
uses number format so it should be set before
if remains default skill task
should return own
creates number of the same type x such as x
returns fuzzified fuzzy preference relation with non zero error
returns the support interval where membership function of the number is not zero
overriden only for case of exact number
overriden only for case of exact number
every element of matrix r except diagonal add betta
extracts int value from any number
casts any number to int number or extracts int number from it
extracts long value from any number
casts any number to long number or extracts long number from it
returns euclidean vector norm sum of elements squares
be careful the result is not immutable
calculation of module of eigen value with min module
calculation of module of eigen value with max module
check of operator consistent
setting information about convergence of algorithm
initialization of information about convergence of algorithm
setting initial estimate of process of calculation eigen value
check of operand inside brackets
default vector that have simple property
check of function expression
default vector that have simple property
creates complex number
creates new lu decomposition
creates new lup decomposition
creates new eigen value decomposition
override if you extend this
inconsistent with equals
overriden not to create unnecessary scalar from a
overriden not to create unnecessary scalar from a
re initialization and notification about matrix change
check whether table is square one
creation of non null matrix
re initialization and notification about matrix change
called in marix product
all methods calling this were overriden so this is useless
all methods calling this were overriden so this is useless
removing all diagonals that are along the edges and have only zero elements
total width of a string for 1 number solution component with ending separator
override to optimize
with line feed
without line feed
without line feed
diagonal check on all zero elements
can be overriden e
used in copy submatrix etc
abs can take matrix argument so change this
can be overriden to override ln
filling vector with zero
deep copy and clone calls this
override to change precision
getting length of main diagonal the maximum length among all diagonals
setting all diagonals for banded matrix
for vectors performs element by element multiplication for matrices calls their method
override to decrease wastes
for performance does not set resulting elements to matrix
override to decrease wastes
element by element product for vector a matrix product for matrix a
allows to set the degree of chebyshev polynomial
a can be null
removing extreme diagonals
allows to set the degree of legendre polynomial
is needed only to use specific linear algebra library
override to set element by element if get elements works slow
for performance does not set resulting elements to matrix
function of probability density referencing apache commons
to use in string argument constructors compatible with
adjust iteration count to the precision of the function argument
computes empiric dependence of iteration count on numbers precision p
pi 2 pi 2 see constructor
calls process element operation in a loop
here control whether x is integer or not is checking
whether value is integer in real or not
power can take matrix first argument
this nethod should return integer value or throw some exception
exponent can take matrix argument
dont set true in this method in intermediate calculations because of
override to update some more between calls to calc
calls process element operation a in a loop
call this method if some of elements are differentiable multi functions
is useful to adjust numerical differentiator step method etc
returns the value of n th chebyshev polynomial at x
must be called to save 1 function when calculating not anly derivative
can be overridden to diminish arg count after differentiation
approximates derivative using function values in some points
approximates derivative using function values in some points
the order of must coinside with the order of y components
calls process element operation a in a loop
use to set one step for all derivatives
use to set one step for all derivatives
is needed only for the case of default vector function differentiation
if true default differentiate only by first f
if true default minimize calls to the function
it is better if a is row matrix
calculation of matrix determinant
by default the argument in formula is x
by default the arguments in formula are y1 y2
override if possible
override if possible
returns vector function filled with derivatives of the given elements
can be not called if argument count should be determined automatically
can be not called if argument count should be determined automatically
must be called in iterate
setting function via string formulas
override to optimize especially if multifunction depends not on all arguments
it is better if a is row matrix
returns 0 if all functions are not multivariable
sets a constant part of variables name to all dependence multi functions
can be not called if arg count should be determined automatically
is used in some cases
call before set dependence if your dependence contains arguments which
the same as set owned argument names list string but for array
prepare this object for calls of calc method
the same as set owned argument names list string but for array
sets the set of variable names corresponding to xs argument of calc number
returns the index in xs argument of calc number method
returns matrix function filled with derivatives
convert the last part of variable name to int
string representation of
is called by matrix on every operation changing this matrix state
if this is needed call this before set lookup table
setting function of many variables as string
to do replace by set extrpolator
getting value of function in case the function is constant one
check whether function is a constant
modified woth korchak anton
modified woth korchak anton
modified woth korchak anton
modified with korchak anton
check whether operand should be wraped with brackets
return shallow clone children etc
called for root context created with empty constructor
for performance does not call process element and sets resulting elements to matrix
whether list with open bracket contains neseccary bracket
setting algorithm of graphic formula renderer
whether list with close bracket contains neseccary bracket
getting dimension with max width and height among two dimensions
for compatibility with jlabel
adding one more else close bracket
whether list with root beginnings contains neseccary root
whether list with root ends contains neseccary root
adding child into list of this context
to lift all arguments with some value
call this method only after filling table with data
sift this context only with value
call this method only after filling table row with data
to shift all arguments with some value
returns height that is recommended to set to the given table row
to lift only this context with some value
getting max height over all arguments which are depended on this one
inverses all elements
factory method called for both re and im parts
returns copy which imaginary ppart has the opposite sign
getting full minimal height of argument
changes sign of all elements
overriden to support equality the same functions
adding new varable to dufferentiate by
remove varable from list of variables to differentiate by
adding formula for differentiation
remove formula from list of formulas to be differentiated
calculating real size of graphical formula
discarding result of differentiation
getting derivative of all formulas by all variable
adding new varable to dufferentiate by
remove varable from list of variables to differentiate by
returns determinant of this 2
setting formula for differentiation
discarding result of differentiation
getting derivative of dependence
getting derivative by name of variable
getting all derivatives as map where key is name of variable
getting second derivative of dependence
getting second derivative by concrete variables
setting name of variable to differentiate by
setting formula for differentiation
discarding result of differentiation
getting result of differentiation in string presentation
for performance does not call process element and set resulting elements to matrix
getting result of second differentiation in string presentation
getting result of differentiation as root of tree function
getting result of second differentiation as root of tree function
getting result of differentiation as dependence
getting result of second differentiation as dependence
getting derivative of dependence
getting second derivative of dependence
to consider pow function as function or operator
processing sqrt function
searches junior priority operator outside existing brackets
setting root of differentiating tree function
setting name of variable to differentiate by
discarding result of differentiation
getting derivative of tree function
call this method if argument cant be processed with ordinary
whether this variable is one to differentiate by
getting derivative of variable type of named argument
getting derivative of complex function
creating derivative of simple function
getting derivative of operator
returns false is term must be added true if iterations must be broken
getting derivative of plust operator
getting derivative of minus operator
gets diagonal of square matrix as vector
creating of mult dependent
drawing mult operator
diagonal domination check
drawing divide operator
through exception if parameter value is not reasonable
check matrix on whether it is symmetric one
creating pow operator not pow function
create square matrix of the same size
whether to create pow operator of pow function
create square matrix of the same size
the method must be overriden of not only parameters are used as arguments
draw one bracket
setting storage of dependence elements
getting storage of dependence elements
draw one root
default initialization of simplification methods list
modified with korchak anton
call this if you work with non double precision numbers
the default is 1
whether to check expression on exponential notation of number
getting contex that contains target bracket
many implementations requires number equal to one 1
to distingush calls from begin series end series use the following conditions
getting contex that contains target root
notify listner about some changes in formula
returns number of elements in the given dependence part
split of aruments into simplest part and sorting them into
getting graphical contex for drawing lines
method just to simplify method add and sub all posible
override if you can assume that 2 subsequent terms can be zeros
by default no more than 100 iterations should result in relative accuracy 0
checks number some part of solution if no use to proceed iterations further
calculation of condition number for given matrix and norm method
setting method to calculate bounds of spectrum of matrix
maximize not only deviation but iteration count too is needed
getting method to calculate bounds of spectrum of matrix
the same as compare to number number but for double
updating storage with new value
is called before
creates unnecessary object
is implementation needed it processes case of scalar number
searching of greatest common divisor
is implementation needed it processes case of scalar number
returns new number
returns new number
actually now works only with one variable first in list one
do nothing because should add independent terms returns false
overriden to prepare term procesing instead if real function evaluation
overriden to form fuzzy number from combination coefficients changed in super
returns clone with the same a and d 0 see add fuzzy
simply assigns double value to this
calculate through fuzzy function
y value is already calculated
sets x0 for ys conservative linear combination
removing list of variables
removing all variables
does nothing in this implementation
removing variable that wont be used
setting order of decomposing in taylor series
can be overriden for another algorithm
relative bases i relative error is absolute error relative bases i abs value
is it needed to create number get value method
setting function for taylor series decomposing
discarding result of differentiation
0 month 1 tav 2 tdev 3 tmin 4 c p ymin
getting whole taylor series as
should be called only in case of single calculation of sum
can be overriden
without line feed
template method for extending direction set in subclasses
used only by the problem
overriden to store result and use it in calc derivative
if true by default calc derivative tries to use value of
can be overriden if derivative can be calculated only numerically
it is posible to get simplified series here
can be called together with set x0 double
for non autonomous problem the last argument of the function is x
can be called together with set interval double
is not final to calculate when needed
returned matrix must remain unchanged
to get mathimaticaly exact function decomposition as string
if inner grid is defines then its nodes will be used
seting the vector of functional values for the grid
setting list of nodes to grid function
returns the degree of decomposition by functional basis if it is set
sets the degree of generalized polynomial
returns the functional basis in use
sets the functional basis to be used
warning index is according to internal grid if it exists
returns the solver
returns the grid used in approximation
getting value of grid function
sets the grid to be used in approximation
returns internal grid if it exist
sets the solver to be used
calculates the value of model function in the point given
getting global grid of function
returns the default solver which contains the default algorithm
setting grid to
creation of the grid with given nodes
prints string representation of function number code number code
getting size of grid function
getting the number of points in which value of some
important k is relative positiv index e
in this implementation summation simplification is not used because it moves 1
length must be
overriden to use newton iterative solver
do not forget to set identity matrix to newton aealgorithm if needed
override to return non null if you use specific non scalar numbers
override or set explicitely to iterative nonlin aesolver this
returns y next can fill f next if it is not null
according to current implementation of init context context stores either y or f
direct gauss solver is used for linear tasks of small dimension
sets the given elements for parts simplifier if it is needed and differentiator
result is used as factor for y1 y2
if remains true returns best solution for smaller step
gets y1 y2 from step algorithm context
if false does not extrapolate but compute error only
sets the problem supplier
method must contain either coefficients of butcher table or solver of algebraic equations
used in store point and combine solutions
overriden to store only selected components
overriden to change solution component count
sets the solution components to be saved equals for all problems
sets one solution component to be saved equals for all problems
4 th order method with k 4
can be overriden for another rool of total inexactitude calculation
called only if is numerical derivative false
direct gauss solver is used for linear tasks of small dimension
copies this solution to some mutable odesolution
method must contain coefficients of butcher table
returns formatted time of computation in milliseconds
if the butcher table is not set default will be created
to be called by subclasses
semi implicit 2 stage 2 order a steady l steady monotonic
to be called by subclasses
to be called by subclasses
sets ys as a part of initial values vector for initial values problem
should return null
can be overriden
total width of a string for 1 number solution component with ending separator
can reduce solution back
can be overriden called before exponentiation
array length should coinside with the problem size or at least be 1
coefficients must already be set here
additional step decrease must be 1
overriden because our delta is not small and accuracy is not needed
returns algorithm to use at all iterations except the first
returns right part time derivative
step is fixed
returns empty context
the power of this method is the subject of change
should be called if relative derivative matters
should be called if absolute derivative matters
should be called from get scale base
doubles solution length by default
can be set instead of overriding init solution
is often overriden
if true creates final point solution if false by default default odesolution
overriden to clear old solution
implementation of both fixed and unfixed step
used both in init step algorithm assuming fixed time step and subclass
no step method by default if subclass does not override
getting parent stopper in chain
mustnt be called before setting a problem
getting mode of calculation whether it step mode or not
by default full scale for step method
setting some stopper to manager
getting link to stopper with ability to have access to all
if adapt step algorithm is already set its maximum step will be changed
to stop calculation through stopper
whether there is even one stopper that in waiting state
setting state of stopper in term of wait
can be null
can be null
set all three steps the given one become initial minimum initial 100
is needed when recomputation is needed
this method is called for i 1
symmetry and positive definiteness checks
empty methods is needed only for nonlinear implementations
whether to check given problem
setting parameter defining whether to check problem before calculation
return true if iterations should be stopped due to reached accuracy
the size of this vector must coincide with the number of null elements
checks if no use to proceed iterations further
diagonal domination check
solution interpolation to x by known x0 and x2 points
empty implementation by default most iterative solvers calculate new vectors without
doing the following l tau l u tau u
complicated method of calculation main part of xn 1 row
calculation of deviation vector
getting simple iterative parameter method
is required to call only if listener null stopper null
setting trivial parameter value
setting iterative parameter value
calculation of second iterative parameter of three layers chebyshev method
calculation of parameter ro
to do self adjoined check instead of symmetry check
called in the beginning of solve
ability to calculate second iterative parameter alfa
ability to calculate first iterative parameter tau
realization for chebyshev method
setting constant parameter value
modulus values of all eigen values should be less than 1
getting number of iterative parametes that will be used for creation iterative process
called in the end of solve
to do self adjoined check instead of symmetry check
steepest descent method or gradient descent method parameter calculation
setting spectrum bounds for system matrix
calculation of discrepancy at current iteration
converts error from convergence algorithms form square to client listener inexact solution form
symmetry and positive definiteness checks
setting number of iterative parametes that will be used for creation iterative process
getting matrix of system
minimal discrepancies method parameter calculation
positive definiteness check only
setting method to calculate spectrum bounds for system matrix
getting method to calculate spectrum bounds for system matrix
getting precision the set of iterative parameters is calculated for
three layers iterative method
modified with korchak anton
calculation of iterative parameter
setting precision the set of iterative parameters is calculated for
usually not needed see init d
setting maximum module of eigen values of system matrix
getting maximum module of eigen values of system matrix
setting precision the set of iterative parameters is calculated for
setting minimun module of eigen values of system matrix
getting minimum module of eigen values of system matrix
setting problem to be solved
whether to check entered eigen values on convergence
solution of linear problem
returns whether check of entered eigen values on convergence will be done
getting number of diagonals of supported matrix
calculation of system matrix condition number
doing some check of parameters on convergence
getting method of calculation of all necessary iterative parameters of algorithm
calculation of solution by fulfilling of two stage forward and backward runs
it is non trivial method
getting iterative parameter with number code parameters number code in successive
check of diagonal domination of matrix as diagonals
setting second iterative parameter value
replacing two columns in matrix
if associate matrix in extended matrix plays crucial role then its columns
initialization of array storer of current order of variables
exchanging variables places
getting iterative parameter with number code parameters number code in successive
setting second iterative parameter
call at the end of solve
returns false always
getting number of current iteration
actualy are variables reordered returns always false so this method return the same
getting iterative parameter method to calculate second iterative parameter
getting index of max element in noted row
replacing two rows in matrix
solving simple ae system with extended matrix b
engineering reset of method
to subtract row with row index from all others rows
getting operator b for iterative process
incrementation the value of counter
must be called before set solution
different realization via
synchronization inner counter with outer one
always call this method before solve because we copy problems contents here
different realization via
very complicated realization
empty we always create exact solution
newton algorithm by default
calculation estimate step using formula x x s dx
getting default min problem solver
can be called for operations with non scalar numbers
setting second initial estimate that is the end of segment x0 x1
calculation xn 1 using the secant method
calculation next solution estimate
calculation of rn factor
gauss algorithm by default created in direct aesolver
checks if no use to proceed iterations further
in real this method
newton algorithm by default
setting concrete method of calculation of simple iteration parameter
getting concrete method of calculation of simple iteration parameter
determining the type of equations system
checking initial estimates
all cases are considered
setting function matrix of parameter s
setting function of many variables as parameter s
engineering reset of method
some check of jacobi matrix of system g x 0
setting parameter s in some mathematical representation it is determined by parameterized type
getting parameter s in some mathematical representation it is determined by parameterized type
setting constant value of parameter s
setting constant matrix of parameter s
setting constant value of parameter s
override to avoid cloning often x next x is known for subclass
if problem to be set is not type of
first estimate of argument of function f s f x s dx
here simple solution is realazed
calculation value of function f argument f argument
getting function which norma will be calculating
delegation to clac step vector x boolean will calc deviation
to use different policy
setting the policy method of calculation performance
getting the policy method of calculation performance
setting of all diagonals of system matrix
both own interface and vector function method implementation
getting diagonal of system matrix with some number
getting system matrix as whole matrix
setting banded matrix as laternative way to set diagonals
call not to create solution in each solve
returns the number of diagonals
returns a x b
returns the dimention of slae
called when function and jacobi is set or jacobi is initialized here
if jacobi is numeric differentiator set function to it by itself
overriden to check size
the same as set jacobi
calculation will be done just once
values before and after
the 2 dimensional case
the many dimensional case
right part only
to convert row and column indexes
cutting boundary conditions
calculation of factor a at given point
overridden to return
calculation of factor b at given point
getting the top boundary condition
getting the bottom boundary condition
calculation of factor c at given point
creation of the default right part that is 0
getting the right boundary condition
setting right part of poisson equation as function of x and y
getting the function decribing the first factor a of the boundary condition
getting the left boundary condition
setting right part of poisson equation as string function of two variables
getting the function decribing the second factor b of the boundary condition
delegating to two dimensional case function
getting the function decribing the right part factor c of the boundary condition
getting a boundary condition corresponding to given coordinates
setting grid of numerial soluion
setting initial estimate as function of many variables
getting initial estimate as a function of many variables
creates default vector
setting nodes of grid
setting step of grid in x dimension
creation of problem for linear ae solver
the number of all grid nodes
creation of default solver of ae system
setting storage of pde solution
common method to set step of grid
setting the same step for both directions
getting infomarion about boundary
getting step of grid in x dimension
setting boundary of some type
setting step of grid in y dimension
getting default grid of numerical solution
getting beginning point of rectangle with respect to some dimension
setting number of nodes of grid over x
getting width of rectangle with respect to some dimension
boundary condition type check
getting step of grid in y dimension
realization for rectangle domain
setting grid of numerical solution
getting number of nodes of grid over x
setting number of nodes of grid over y
getting the domain as a rectangle
a scheme treated as algorithm
there is no check of grid property correctness
getting number of nodes of grid over y
default scheme of poisson problem solving
getting value from problem
some check of grid property correctness is doing
there is no check of grid property correctness
matrix of one element
getting x coordinate of point of given node
default scheme may be used
default scheme approximating the boundary conditions
getting problem to be used
setting grid to scheme
getting y coordinate of point of given node
getting pattern for current scheme
defining grid parameters
getting the function decribing the boundary condition
for 2 dimensions
setting top coorinate of boundary
setting boundary condition of some type for this boundary
setting right coorinate of boundary
setting left coorinate of boundary
boundary condition type check
getting boundary part the point belongs to
you can use get grades
very slow realization
note this implementation is inefficient but allows for possible equal assessments
is not used if method was set
can be overridden
this method can be called several times for the same arguments pair
see scores grouping algorithm for description of this responsibility
you can use get criteria info
use this for simplicity if you are not interested in grades sense
recommended method of filling criteria
normalizes the assessment with info of the given criterion
in many places alternative index can mean id
can be called if there is no need to load problem from file
often used to implement get object alternative
removes all groups added
see constants of this class
call this method if a single transformer for all criteria must be used
returns pairs alternative group sorted by alternatives
call this method if different transformers must be used for different criteria
returns the same problem
applied to problems assessments
you can use get grades
override for non default problems for non full grade problems
overrides alternatives methods not only of virtual but of default solution
returns matrix with two columns row index is alternative index
returns matrix with two columns row index is alternative index
used to identify group in map map collects alternative indices
by default groups should contain group scores
used if groups was null and should be determined by alternatives scores
override to support
can be overriden for performance only
final step of the solution creation process
factory method but is not called in this class
returns true if get preference method returns non normalized value
returns class name without algorithm word in it
interface method for convenience only
if is consistent calls this only with element2 element1
called only if consistent array is not rectangle element2 element1
overrides alternatives methods not only of virtual but of default solution
recommended method of filling criteria info
the main interface method
the main interface method
sets the contents of the problem by data loaded from the source
copies the contents of the given genome into this one
determines if the given object is equal to this dimension
determines if the given dimension is equal to this dimension
duplicates the contents of this genome
compares one genome to another
assign a ga to this genome
retreives the ga assigned to this genome
returns the number of evaluations which this genome has undergone
gives this genome a raw objective function score
returns this genomes current objective function score
performs common construction tasks
gives this genome a fitness score
performs common construction tasks
returns this genomes current fitness score
copies the given genome into this one
copies the given genome into this one
assigns a new global data object for all genomes that exist
copies the given binary bit string genome into this one
retreives the global data for all genomes
copies the given 2 dimensional binary bit string genome into this one
assigns a new custom data object to this genome
copies bits from the given genome into this one
retreives the custom data assigned to this genome
duplicates this genome by creating a clone
duplicates this genome according to the supplied cloning method
sets the evaluation handler for this genome
sets the chromosome i
returns the evaluation handler being used by this genome
sets the chromosome i
initialises the state of this genome
sets the initialiser handler of this genome
returns the initialisation handler being used by this genome
mutates this genomes chromosomes using the mutation probability supplied
sets the mutation handler of this genome
returns the mutation handler being used by this genome
retreives the value of the chromosome i
compares the given genome to this one to determine how similar they are
sets the comparison handler of this genome
returns the comparison handler being used by this genome
sets the sexual crossover handler of this genome
sets the asexual crossover handler of this genome
the actual size of the genome
returns the sexual crossover handler being used by this genome
returns the asexual crossover handler being used by this genome
determines if the object is equal to this genome
sets the width of the binary bit string of this genome
determines if the given genome is equal to this genome
evaluates the genome to determine its raw objective score
mutates a genome according to the supplied mutation rate
initialises the given genome
initialises any data before a test case is executed
tests genome initialisation using the no initialisation handler
tests comparison of two genomes using the no comparison handler
tests genome evaluation using the no evaluation handler
tests genome mutation using the no mutation handler
initialises any data before a test case is executed
tests genome duplication
retreives the value of the chromosome i
sets the height of the binary bit string of this genome
copies the given scaling handler into this one
creates a cloned copy of this scaling handler
defines the resizing behaviour of the genome
sets the value of the multiplier to be used by this scaling handler
defines the resizing behaviour of the genome
copies the given scaling handler into this one
creates a cloned copy of this scaling handler
copies the given scaling handler into this one
creates a cloned copy of this scaling handler
sets the value of the multiplier to be used by this scaling handler
reads the value of the current multiplier being used by this scaling handler
returns a value which represents the resize behaviour of this genome
copies the given scaling handler into this one
creates a cloned copy of this scaling handler
sets the value of the power to be used by this scaling handler
reads the value of the power currently being used by this scaling handler
returns a value which represents the resize behaviour of this genome
creates a cloned copy of this scaling handler
copies the given population initialisation handler into this one
creates a copied clone of this population initialisation handler
initialises the given population of genomes
copies the given population evaluation handler into this one
creates a copied clone of this population evaluation handler
evaluates the population of genomes if necessary
able to force the evaluation of the population of genomes
creates a new duplicate of this population
a string representation of this genome
initialises the given genome
returns the size of the population
initialises the given genome
adds the given genome to the population
removes the individual with the worst raw objective score in the population
initialises the given genome
removes the given genome from the population
replaces an individual in the population chosen at random with the given genome
replaces the nth best individual in the population by the given genome
replaces the given genome with the new genome
gets the individual with the best raw objective score in the population
gets the individual with the best raw objective score in the population
gets the individual with the worst raw objective score in the population
copies the attributes of the given statistics handler into this one
creates a cloned copy of this statistics handler
assigns a population to this statistics handler
gets the individual with the nth worst raw objective score in the population
swaps the positions of two genomes in an array of genomes
reads the maximum raw objective score for the last generation of the population
reads the minimum raw objective score for the last generation of the population
reads the maximum scaled fitness score of the last generation of the population
reads the minimum scaled fitness score of the last generation of the population
reads the value measuring diversity between two given genomes
reads the value measuring population diversity
sets the way in which the population is ordered
copies the given attributes of the selection handler into this one
returns a duplicate version of this selection handler
selects a genome according to the handlers selection scheme from the assigned population
returns a duplicate version of this selection handler
selects a genome according to the handlers selection scheme from the assigned population
copies the given attributes of the selection handler into this one
assigns a population to this selection handler
sets the basis for selection
retrieves the basis for selection that this selection handler is currently using
copies the given attributes of the selection handler into this one
returns a duplicate version of this selection handler
selects a genome according to the handlers selection scheme from the assigned population
returns a duplicate version of this selection handler
retrieves the sorting handler for this population
copies the given attributes of the selection handler into this one
returns a duplicate version of this selection handler
returns a duplicate version of this selection handler
selects a genome according to the handlers selection scheme from the assigned population
assigns to this population the genetic algorithm which will be operating on it
retreives the class of the value of the parameter defined
gives this parameter a new defintion to adhere to for setting its value
gives this parameter a new defintion to adhere to for setting its value
retreives the current definition of this parameter
retreives a reference to the previous definition in the collection
retreives a reference to the next definition in the collection
loads the default parameters into memory
assigns the given value to the named parameter
assigns the given value to the parameter defined by the supplied definition
determines if this definition has the same values as the supplied object
assigns the code int code value to the named parameter
evaluates all members of this population if need be
determines if this definition has the same values as the supplied defintion
assigns the code float code value to the named parameter
evaluates all memebers of this population if need be according to the
assigns the code boolean code value to the named parameter
retreives the parameter denoted by the given key
tests if this enumeration contains more parameters
retreives the parameter denoted by the given definition
returns the next parameter of this enumeration object
returns the next parameter of this enumeration object
returns an enumeration of all the parameters of the ga
sets the evaluation handler for this population
an enumeration of the keys for all parameters of the ga
executes any initial configuration based on loaded properties
tests the default setting of system parameters
tests the setting of system parameters from a parameter file
tests the setting of system parameters from a parameter resource
initialises the library configuration
tests the basic random number generator
tests the random number generator implementing the lecuyer algorithm
tests the random number generator implementing the knuth algorithm
executes the test by instantiating and throwing a jai system exception
loads all property files containing system message string tables
performs initialisation of member variables used within the test cases
tests the default constructor of
tests the copy constructor of
tests the setting of an arbitrary bit in the binary string
initiates the system with the default rng
tests thge comparison of two binary string objects
tests the setting of a range of bits in the binary string
tests the setting of a range of bits in the binary string
tests the unsetting of a bit in the binary string
tests the unsetting of a range of bits in the binary string
gets the value of a named property
tests the partial copy of bits from one binary string into another
this test case loads the default configuration properties via the
initialises this population for use in a genetic algorithm
sets the activation function handler for this neuron
retrieves the activation function handler being used by this neuron
sets a connection which comes in to this neuron
retrieves all input connections to this neuron
retrieves all connections leaving this neuron
set the value of the output signal of this neuron
retrieves the output signal of this neuron
determines if the given object is a neuron and equal to this one
appends the given layer to this network
sets the initialisation handler for this population
determines if the given neuron is equal to this one
sets the number of neurons in the given existing layer
replaces the layer designated by the given index by the supplied layer
retrieves the layer given by the specified index
used to determine if the delimited input data file has been processed
creates a connection between two existing neurons in the network
sets the string to be used as a delimiter in this file handler
retreives the delimiter to use in this file handler
writes the given 3 dimensional output data to an output data file
adds the given connection to the network
determines whether a connection exists between the designated neurons
evaluates the given inputs through this network
copies the given connection into this connection
duplicates this connection
trains the given input against the given targets
sets the value of the weight for this connection
randomises all the connection weights in the network
retrieves the value of the weight of this connection
creates a directed connection between the two given neurons
randomises all the connection weights in the network using the given seed
sets the neuron from which this connection originates
retrieves the neuron from which this connectino originates
sets the neuron to which this connection terminates
determines if the given network is equal to this one
retrieves the neuron to which this connection terminates
finds the connection between the two given neurons
determines if the given connection is equal to this one
determines if the given connection is equal to this one
determines if the given neuron exists in this network
assigns a selection scheme to this population
returns a list of the ranom numbers currently in the sequence
returns a list of the ranom numbers currently in the sequence
retrieves the selection scheme being used by this population
a call to this method will set a new seed for the rng
returns a list of the ranom numbers currently in the sequence
sets the new size of this binary bit string
scales the entire populations raw objective scores into fitness scores
logs this exception in syslog if it is configured or to
retreives the value of the bit at the desired index
assigns a scaling scheme to this population
retrieves the scaling scheme being used by this population
copies the given binary bit string bit for bit into this one
copies the given binary bit string bit for bit into this one
randomises the values of all bits in this binary bit string
a string representation of this binary bit string
resets internal flags of the population without completely initialising its state
returns the statistics handler being used by this population
determines if the given population is equal to this population
determines if the given population is equal to this population
may contain error
counts the days inbetween inclusive of two dates
returns the upi
sets the upi
writes a message to the security log
gets the rights of the user for that center
returns a string
issues a synchronous ping
detaches the node from the graph it belongs to
returns true if we didnt iterate through all attributes in the filter
returns the next attribute
returns true if we didnt iterate through all objects in the ideal
returns the next object
adds a concept to the filter
adds a concept to the ideal
calculates the intent size based on the contingent sizes in the filter
calculates the extent size based on the contingent sizes in the ideal
advances and then return the token current before
find the number of objects in this diagram
removes all subscriptions the listener has
stores the placement of a window in the preferences
retrieves the element in a certain dimension
find the number of attributes in this diagram
restores the placement of a window from the preferences
distributes a new event to the listeners
stores a list of strings in the preferences
processes the current event queues until they are empty
stores a color in the preferences
override to return true if logging is needed
returns true iff the given concept is in the filter of this one
sets the graphic format to be used when exporting
returns true iff the given concept is in the ideal of this one
sets the size of the image to be created
registers our graphic formats and sets up the instance
registers a new graphic type
sets the auto mode
returns a format supporting the given file name
returns true if there is a canvas position stored inside
returns a format matching the given name
returns true if there is a screen position stored inside
convenience method calling the string version
returns the position of the event in the canvas model
returns the starting position in the canvas model coordinates
get the current image format
returns the position of the event in the screen model
returns the starting position in the screen model coordinates
returns the end position in the canvas model coordinates
returns the end position in the screen model coordinates
returns true if the item should be raised on clicks
changes the content of the background
returns true if settings should be updated automatically
sets the paint used for drawing the grid
returns true if the history comments are to be saved to a file
returns the controller object for this canvas
returns true if the history comments are to be saved to the clipboard
registers our graphic format and sets up the instance
sets whether to save the history comments to a file
implements iterator interface by throwing an exception
checks if more tokens are available
sets whether to save the history comments to the system clipboard
paints the canvas including all canvas items on it
returns the next token and advances the pointer
returns the next token as string
gets the last exported image file
registers our graphic format and sets up the instance
sets the last exported image file
raises all items that have been requested to raise
if this flag is set no transparent backgrounds should be used
registers our graphic formats and sets up the instance
if this flag is set no transparent backgrounds should be used
returns the canvas item representing the background
changes the transformation used for displaying the canvas on screen
returns the transformation currently used for displaying the canvas on the
this prints the canvas onto the printer defined by the graphic context
show an error dialog that gives the option to show a more detailed
gives the uppermost item at the given position
makes the given item the uppermost in its layer
maps the given point from screen coordinates into the canvas coordinates
saves the current configuration
removes all canvas layers and items from the canvas except the
stores the size and position of a window
restores the size and position of a window
stores an int value
adds a canvas item to the uppermost layer in the canvas
stores a string value
retrieves a string value
stores a list of strings
retrieves a list of strings
adds a canvas item to a specific layer
removes an item from the canvas
creates a new layer with the given name
removes a whole layer from the canvas
returns true if there is a layer with the given name
return the width of a single cell in the current grid
return the height of a single cell in the current grid
sets the grid used for the canvas
turns the grid function on or off
returns true iff the grid function is enabled
returns the closest position on the current grid
returns preferred behavior according to substitution map in tt preferences
span endpoints assumed valid just moveq reformatting and repainting
given an offset into a leaf return corresponding subcomponent geometric point
removes span from document and its layer
build the menu bar
check that all leaves are valid and bbox
given esis subtree pluck class specific information from attributes call super
build the tool bar
open a schema using the file open dialog
enlarge content root to media box
open a file and parse it to create conceptual schema
shows the dialog to change the image export options
prints the diagram using the current settings
prints the diagram using the current settings
test method for
select resource for loading
select resource for saving
get loading ability
get source identificator
get icon index
display and wait for user input
get user password
check if local store exists
get form result
sets the locale of the l10n resources instance
gets the value for the specified key
wait for user
gets the value for the specified key
get icons manager
show form and wait
get selected icon index
release loaded icons
get image by index
try get and unserialize last data sources
show form and wait for user
try serialize data sources and store as last used
display and wait for user command
add source to list or move to top
get size of list
remove source from list
append list item
append list item
get tag by item index
get tag by item index
get tag by item index
set selected item by tag
set selected item by tag
get tag of selected item
get tag of selected item
get tag of selected item
save database to data source
push displayable in stack and display
set directory for browsing
push splash in stack and display
remove current displayable from stack and display previous
redisplay last in stack
replace last displyable in stack with new and display
replace last displayable with splash and display
wait for user
display browser and wait for user
reset watchdog timeout
get current directory
changes to the given subdirectory
get instance of record store db
get records in database
enumerate records names in database
get selected record name
check record with name
returns the url of the parent of the given directory
delete record by name
return database object
get encryption rounds
get create time
save group to database
delete group from database
get access time
proxy method for setting progress state
reset all fields
create empty database
change password key file encryption rounds
get user name
command listener implementation
enable or disable autosave when set any config parameters disable need for batch
get last opened kdb path
set last opened kdb path
get timeout for kdb browsing
set timeout for kdb browsing
get status icons show dont show
save entry to database
set icon status show dont show
set search flags
set last opened data source
is last opened sources known
get default encryption rounds
set default encryption rounds
gets the value for the specified key and current locale
get database header
get group by id
get parent group of child group identified by id
get page number on which the group is
search for entries with the title beginning with substring
enumerate entries in search result
get entry by index in search result
get group by index in group
get entry by index in group
get group data length in database
test db creation locking and unlocking
get entry data length in database
mark groups and entries as deleted recursively
delete group from database recursively
delete entry from database
add entry to database
replace group data with updated data
replace entry data with updated data
create a unique group id
reset change indicator
reset watch dog timeout
decrypt database content
this method must be added to all public methods
get database status locked unlocked
get database size
returns an inputstream used to read the data
utility method to populate a javabean style object with values
chart type change listener
p this method is bound to the input file component and is executed
callback method that is called if any exception occurs during an attempt
sets the selected panel to the specified panel
action listener for the changes the selected panel stack in the
from command listener
starts listening for incoming messages
stops listening for incoming messages
checks to see if a given class interface exists in this java
asynchronous callback method for receiving incoming messages
retrieves the system property and returns it or unknown if it is
adds a given string as a new line to the given form
processes the received message according to its type
signals the midlet that it has entered the active state
processes a binary message
signals the midlet to terminate and enter the destroyed state
indicates that a command event has occurred
returns an initiliazed instance of exibe imagem component
returns an initiliazed instance of back command component
returns an initiliazed instance of exit command component
returns an initiliazed instance of form component
returns an initiliazed instance of ok command component
returns an initiliazed instance of telefone component
returns an initiliazed instance of ok imagem component
returns an initiliazed instance of mensagem component
returns an initiliazed instance of task component
returns an initiliazed instance of task1 component
returns an initiliazed instance of ok exibe imagem component
a serializable subclass of a non serializable superclass
at startup create and show the main frame of the application
changes the state of clicked field
sets the fields name
sets the width of a frame an area that may be highlighted eg
sets the frame
sets whether the frame is highlighted
sets whether the frame is highlighted
adds the change of the fields states
moves and resizes this component
moves and resizes this component to conform to the new bounding rectangle r
resizes this component so that it has width width and height height
resizes this component so that it has width d
makes a string from the names of source and target fields
loads the board image
converts the record of games moves into string
checks whtether there is a tied flank the position like
checks whtether there is a lagging piece on the left flank
copies one fields states map into another
gets the information if there are whites or blacks to move
sets whether there are whites or blacks to move
copy the map of changes
simple query subsumption similar to standard concept subsumption
another example of subsumption
validates input parameters
request method to get data from geoapi service
returns string representation as in the specification
exit the application
returns the value contained in the combo box
returns true if the list contains the currently selected item
marks selects the entire text that is displayed inside the text component
sets the text of this document to the given text
selects the given item using the abstract component adaptor
searches for an item that matches the given pattern
returns true if code string1 code starts with code string2 code ignoring case
short table short zin int offset zin short zout int offset zout
short temp1 short temp2 short zout int offset zout
ensure the system state before the test
process ui input but do not return for the
assert that the two arrays are equal
perform post test cleanup
ensure the system state before the test
perform pre test initialization
perform post test cleanup
shows the dialog
creates the tcl shell
creates the package text box
creates the directory text box
tests if the current workbench selection is a suitable container to use
uses the standard container selection dialog to choose the new value for
ensures that the text fields are set
adding the page to the wizard
make changes to the template file
this method is called when finish button is pressed in
creates the global
creates file text box
make changes to the template file
creates author text box
creates the package text box
updates the the coloring rules according the prefernces
check if the preferences have changed
change background color of the editor
override to make use of soft tabs
override to set the initial color of the backgound
we will accept the selection in the workbench to see if
verify if a tab is used
return the source viewer for testing purposes
uses the standard container selection dialog to choose the new value for
preferences have changed
see if a soft tab is to be used
width of a soft tab
method declared on iauto indent strategy
set the completions based on the string
returns the end position a comment starting at pos
check what the string starts with
a change to the color has occurred
define the tcl content assist processor
updates the scanner according the prefernces
updates for content assistance
return the label provider
notifies this content provider that the given viewers input
return the content provider
because the domain model does not have a richer
because the domain model does not have a richer
answer the total number of items the
returns the jdbc connection
closes the jdbc connection
runs validation by setting auto commit to check for connectivity
starts this thread
clears jdbc connection warnings
stops this cleaning thread and timer
locks the given index in this array by setting the parallel boolean array
unlocks the specified index in this array by setting the parallel boolean
starts the timer thread
indicates whether or not a thread has a lock on the given index
gets a node from the array
cleans the pool nodes depending on the cleanup style rotate or refresh
sets a node into the array
tests if a pool node needs to be cleaned
gets a connection from the pool with the given identifier
returns a connection to the pool with the given identifier
increments the pointer in a circular fashion and returns the pointer
closes the connection and nulls out the node node
closes the given pool in the pool map map
gets the pooling resource from this node
closes all of the pool map in the pool map map
returns a resource to this pool by expiring its nodes lease
kills this nodes resource
prints the current state of the pool with the given identifier to the
validates the nodes resource
closes the pool with the given identifier
returns the next available leasable resource from the pool
leases node by setting the timestamp and marking it as inuse
verifies that the pool with the given identifier exists in the pool map
expires the lease of this node resetting it to initial state
closes nodes in pool unloads the driver and cancels cleaning thread
returns an instantiated connection
gets the lease time for this node
cleans a node by re initializing it
prints the current state of the pool
gets the last time this node was inuse
returns the result of wether or not this node is inuse
starts the pool by initializing nodes and the cleaner thread
initializes a node by clearing any leasing and use
resets the nodes state to initial values
returns the result for whether or not a nodes resource can be leased
initializes the pool nodes and resources
returns a string of the current state of the pool
initializes a logger with properties
checks and spins a development logging thread
checks and spins a production logging thread
checks and spins a logging thread
shuts down the output stream for this logger
sets up mailing for this logger
opens output stream to logfile
returns the stacktrace of a java exception
add criterion to junction
get parent criteria
get criteria alias
add a code criterion code to constrain the results to be retrieved
add an code order code to the result set
set a limit upon the number of objects to be retrieved
set the first result to be retrieved
get the results
get name of property in given criteria context
test the constructor with a null resource factory
try passing null into the constructor
ensure that an exception is being thrown when we attempt to release a
try passing null into get resource
try passing a null store into release resource
try passing null into the constructor
try passing a null into the constructor
try passing a null into the constructor
try passing a null resource into release resource
try passing a null into the constructor
ensure that an exception is being thrown when null is passed into
test the resource allocation
try calling release resource with a resource that wasnt allocated from
ensure that an exception is being thrown when null is passed into
try releasing the same resource twice in a row
ensure that an exception is being thrown when an unregistered name is
test the normal conditions using release resource
test set connection with a null connection
test the normal conditions using release all resources
try passing a null into the constructor
test the string constructor
set the name
set whether or not to allow reinitialization of resources
allocate and return a resource
test the constructor with a null delegate
return the name
return a count of the allocated resources
try passing a null class into the constructor
release a resource which had been previously allocated from this factory
try passing a null method list into the constructor
release all resources that had been allocated from this factory
pass in a class that is not a subclass of test case
test adding a null collection
test constructor good path
try to reinitialize the specified resource to a known state
test that the ordering is correct
test adding a new collection at a specified index
test order with one method that doesnt start with test
set the name of the resource factory
test ordering with one bad method name
get the name of the resource factory
create a proxy object that tracks what methods were called
test remove int
test that the string passed into the constructor gets set as the message
test that the parameters get set to message and enclosed exception
test passing in a subclass that has a badly implemented equals method
test constructor with valid parameters
create an instance with a null object
test the string constructor with a class that isnt a component
create an instance with a null method name
test the string constructor with the name of a class that doesnt exist
the junit setup method
create an instance with a bad method name
test the string constructor with a null class name
test the class constructor with a null class
test the constuctor with legal values
create an instance with legal values
test the class constructor with a class that doesnt have a default constructor
test the constructor will negative parameters
the teardown method for junit
create the action performed method
test the class constructor with a class that has a private constructor
test a negative row
test a negative row span
make sure that everything works ok if there arent any children
code that will run on the worker thread
code that will run on the ui thread
test joining ints together
test upper case document with mixed case inputs
test with no children but with insets specified
test the constructor with a null starting directory
test upper case document with null document
test an illegal horizontal alignment
test split at first
test length limited document with a negative length
test the constructor with an empty string as a starting directory
test length limited document with a zero length
test make constraints with bad input
test length limited document with a null document
test split with a null line
test length limited document to ensure that you cant enter more than the
test split with a null separator
test make constraints with bad input
insert the specified string at the end of the document
test split with an empty separator
test replace with a variety of inputs
return the full text of the document
test make constraints with legal input
test the constructor that just takes a class by passing in null
the layout should always be called by the same container
test the constructor that takes just a class
test the two arg constructor with a null class
test the two arg constructor with arguments
test the constructor with a file rather than a directory
execute the command
test make constraints with stretching
test the dispatching logic
test the constructor with a directory that doesnt exist
test calling execute when no commands have been registered
try passing null into the constructor
test calling execute when some commands are registered but an unregistered
try to dispatch a command for which we havent defined a store
test that exceptions are being wrapped in an object store exception
try to register something that isnt a command class
make sure that find store is being called
try registering a method that doesnt exist
test that exceptions are being wrapped in an object store exception
ensure that an exception is thrown if null is passed in as
test the string constructor
test the exception constructor
test the string exception constructor
ensure that object store exceptions are not being wrapped
test the equals method
ensure that object store command not supported exceptions are not being
test set locale with a null locale
ensure that an exception is being thrown when null is passed into
make sure you cant add the same component twice
simple test for the string constructor and accessor
simple test for the constructor that takes a command and accessors
the keys in the map must be strings
the keys in the map must be strings
test the accessors for resource manager
make sure you cant pass in a null component
make sure that the layout doesnt accept constraints that
sets the designated parameter to the given code java
make sure you cant remove the same object twice
sets the designated parameter to the given code java
make sure you cant remove a null component
sets the designated parameter to sql code null code
retrieves the number types and properties of this
sets the designated parameter to the given java code boolean code value
moves to this code statement code objects next result deals with
test removing a component
sets the designated parameter to the given java code byte code value
wrap the specified result set
retrieves any auto generated keys created as a result of executing this
sets the designated parameter to the given java code short code value
regression test exception was being thrown when a component was added
executes the given sql statement and signals the driver with the
updates the designated column with a code java
sets the designated parameter to the given java code int code value
executes the given sql statement and signals the driver that the
retrieves whether this database supports savepoints
executes the given sql statement and signals the driver that the
executes the given sql statement which may return multiple results
updates the designated column with a code java
retrieves whether this database supports named parameters to callable
sets the designated parameter to the given java code float code value
executes the given sql statement which may return multiple results
sets the designated parameter to the given java code double code value
executes the given sql statement which may return multiple results
updates the designated column with a code java
retrieves the result set holdability for code result set code objects
retrieves whether it is possible to have multiple code result set code objects
sets the designated parameter to the given
updates the designated column with a code java
regression test for a bug where adding and then removing a component followed
sets the designated parameter to the given java code string code value
retrieves whether auto generated keys can be retrieved after
updates the designated column with a code java
sets the designated parameter to the given java array of bytes
sets the designated parameter to the given code java
updates the designated column with a code java
sets the designated parameter to the given code java
return the number of statements that are currently open
sets the designated parameter to the given code java
changes the holdability of code result set code objects
updates the designated column with a code java
retrieves the current holdability of code result set code objects
sets the designated parameter to the given input stream which will have
creates an unnamed savepoint in the current transaction and
creates a savepoint with the given name in the current transaction
sets the designated parameter to the given input stream which will have
undoes all changes made after the given code savepoint code object
sets the value of the designated parameter with the given object
removes the given code savepoint code object from the current
sets the value of the designated parameter with the given object
sets the value of the designated parameter with the given object
sets the designated parameter to the given code reader code
creates a default code prepared statement code object that has
retrieves the major version number of the underlying database
creates a default code prepared statement code object capable
sets the designated parameter to the given code java
creates a default code prepared statement code object capable
sets the designated parameter to the given code java
retrieves the minor version number of the underlying database
sets the designated parameter to the given code java
test the equals contract
retrieves the major jdbc version number for this
test insert with a default document
return a string containing the expected version of the method name
test insert with a default document
test the default constructor
test the class constructor with a class that doesnt have a default constructor
test the class constructor with a class that has a private constructor
sets the designated parameter to sql code null code
set the values to be returned from
test the paint method with no style set
return the localized string
test specifying a line colour in hex
test the opaque property
test the error handling when a custom error panel has been specified
test the sizes
test the standard error handling
throw the specified exception if it isnt null
a test method that takes no parameters
retrieves the minor jdbc version number for this
test the constuctor with legal values
a test method that takes an action event
another test method
retrieves the value of a jdbc code char code code varchar code
another test method
indicates whether the sqlstate returned by code sqlexception
retrieves the value of a jdbc code bit code parameter as a
test make constraints with spanning
test make constraints with alignment
test the default constructor
test the constructor that takes an exception
check that we are currently running on the ui thread
test the main logic
test the main logic
test the default constructor
test the constructor that takes a basename but pass in null
test the small icon code during localization
test the constructor
test the constructors
try null in the constructor
the default implementation of run on uithread should do nothing
test set locale with a null locale
retrieves whether this database supports statement pooling
create a mock object for the specified type
add the specified method name and arguments to the list of collected events
wrap an int as an integer
callback that will be invoked if an exception is thrown during the
test new text field with a document
wrap a float as an float
wrap a double as an double
wrap a boolean as a boolean
set the vertical alignment
test new frame
set the horizontal alignment
test new menu action
test setting and getting parent controllers
retrieves the value of a jdbc code numeric code parameter as a
test localize when a parent has been set
override the painting logic to draw the gridlines
returns an object representing the value of out parameter
set the background color for the specified row
set the padding in pixels
set the margin in pixels
set the border style
set the border thickness in pixels
retrieves the value of a jdbc code ref lt structured type gt code
return the current locale
a callback that will be invoked when an exception is thrown during the
retrieves the value of a jdbc code blob code parameter as a
set the new component loader
a callback that will be invoked when a task completed successfully
remove the specified listener
return the component that is displayed during loading
set the key that will be used to localize
set the key that will be used to localize
the current locale has changed update all locale specific information
retrieves the value of a jdbc code clob code parameter as a
set the key that will be used to localize
set the key that will be used to localize
return true if this row can be expanded beyond its preferred size
return a localized value for the specified key
set the key that will be used to localize
set the key that will be used to localize
return the key that will be used to localize
return the localized value for the specified key
return a string representation of input accounting for null input
return true if this column can be expanded beyond its preferred size
retrieves the value of a jdbc code array code parameter as an
process a border attribute
process a margin attribute
process a padding attribute
return the print stream being used for logging
load an icon from the specified path
return the border style that matches the specified name
return a point size value
return the color that corresponds to the specified string
registers the out parameter named
return the total insets for the specified edge
set the resource bundles that will be used when resolving locale
registers the parameter named
p create a new jlabel that will display localized values using the specified
p create a new
registers the designated output parameter
return true if the currently logged on user has the specified role
load the component
create a new
add a button configured with the specified action
remove the specified component from the layout
add a gap in the layout
perform ui related work in this method
create a new
perform the locale change
localize this action
localize the contents of this object
create a new jframe that will be automatically localized as needed
create a new button that will be localized automatically
create a new button that will be localized automatically
set the print stream for logging
return a new jcheck box that will be localized automatically
return a new jcheck box that will be localized automatically
add rows for all the items in the list
remove rows for all the items in the list
return a new jmenu that will be localized automatically
log a diagnostic message to the print stream
return a new jmenu that will be localized automatically
return a new jmenu item that will be localized automatically
position the specified window in the center of the screen
return the minimum row height
return the screen size
return the minimum column width
return the parent controller or null if there isnt a parent
return true if the currently logged on user has the specified role
return the table layout constraints object that corresponds to the
execute the specified controller
remove the specified controller from the list of child controllers
return an immutable collection of child controllers
return the minimum size of the specified component
return the application that this controller belongs to
return the minimum size of the specified component
return the minimum size of the specified component
fix up all the headers such that minimum preferred maximum
return the first table entry that matches the specified row and column
get king at
this method initializes checkers main frame
hacked up compare to
get king at
this method initializes checkers content pane
this method initializes start button
this method initializes j scroll pane
this method initializes history text area
detects if the given message is an opponent move
detects if the given message is a move prompt
recuperation de lenseignant par son id
chargement des d partements d j pr sents en base
chargement des professeurs d j pr sents en base
suppression dun departement par son id ici le booleen cascade permet de
sauvegarde dun enseignant
suppression dun enseignant
suppression dun enseignant partir de son identifiant
returns the file location of the item
returns the number of found class files
returns the total size of all found class files
returns the total code size of all found class files
compares this item with another item based on their code sizes
gets the body image
gets the gun image
gets the radar image
return the page property value
shows a web page using the browser manager
packs centers and shows the specified window on the screen
return the back button
return the cancel button
return the finish button
return the next button
return the jscroll pane1 property value
initialize the class
return the content pane
return the table
returns the dialogs content pane
returns the console scroll pane
returns the button panel
return the new battle dialog content pane
return the rules tab property value
initialize the class
returns the paint button
return the page property value
returns the pause button
returns a new button with event handler and with the specified text
is called when the clear button has been activated
is called when the kill button has been activated
is called when the paint button has been activated
is called when the sg check box has been activated
is called when the pause resume button has been activated
gets the team package
handle battle new menu item action
initialize the class
rather than use a layout manager for the battleview panel we just
return the main panel which contains the battle view and the robot
return the battle view main panel which contains the battle view and a
return the jframe content pane
return the side panel
return the pause button
return the next turn button
return the stop button
return the restart button
return the tps label
return the tool bar
sets the iconified
cleans all static field references on a class
cleans a static field reference class even when it is private static final
returns the current mixer selected from the robocode properties
iterates over the available mixers looking for the one that matches a given
performs shutdown by liberating the sound table
plays a specific sound at a given panning with max
plays a robot sound depending on the robots state
plays the theme music once
plays the background music which is looping forever until stopped
stops the background music
plays the end of battle music once
determines volume based on the bulletss energy
function for counting the sum of the scores gathered by the robots
sets the selected robots
gets the initial robot positions and heading
function for counting the sum of the scores gathered by the robots
compares two alphanumeric strings
this method blocks the execution until receives a connection on port specified in
push a copy of the actual matrix4f on the internal matrix stack
converts this matrix into an identity matrix
multiply this matrix for a scaling matrix where sx sy and sz are
multiply this matrix for a rotation of an angle alpha in radians
multiply this matrix for a rotation of an angle alpha in radians
multiply this matrix for a rotation of an angle alpha in radians
multiply the vertex v for this matrix and override v with the result
cleen up the scene
primaries are children of field like tanks and bullets
primaries are children of field like tanks and bullets
sets the graphic listener and the animator
this method is called periodically by
returns true if the enemy names are hidden i
checks if your robot was moving towards the robot that was hit
returns the direction the bullet is was heading in degrees
returns the name of the robot that fired this bullet
returns the velocity of this bullet
returns the name of the robot that this bullet hit or
sets the speed the robot will move forward in pixels per turn
returns the speed the robot will move in pixels per turn
sets the robots clockwise right rotation per turn in degrees
gets the robots clockwise rotation per turn in degrees
sets the robots clockwise right rotation per turn in radians
gets the robots clockwise rotation per turn in radians
sets the guns clockwise right rotation per turn in degrees
gets the guns clockwise rotation per turn in degrees
sets the guns clockwise right rotation per turn in radians
gets the guns clockwise rotation per turn in radians
sets the radars clockwise right rotation per turn in degrees
returns the direction that the robots body is facing in radians
gets the radars clockwise rotation per turn in degrees
returns the direction that the robots body is facing in degrees
sets the radars clockwise right rotation per turn in radians
returns the direction that the robots gun is facing in radians
gets the radars clockwise rotation per turn in radians
returns the direction that the robots gun is facing in degrees
returns the direction that the robots radar is facing in radians
returns the direction that the robots radar is facing in degrees
moves this robot forward by pixels
returns the angle remaining in the robotss turn in radians
moves this robot backward by pixels
returns the angle remaining in the robotss turn in degrees
returns the angle remaining in the radars turn in radians
returns the angle remaining in the radars turn in degrees
returns the angle remaining in the guns turn in radians
skips a turn
returns the angle remaining in the guns turn in degrees
skips the specified number of turns
returns the distance remaining in the robots current move measured in
returns the battle results
returns the current heat of the gun
fires a bullet with the default power of 1
fires a bullet with the specified bullet power which is between 0
broadcasts a message to all teammates
sends a message to one or more teammates
returns the name of this condition
returns the heading of the bullet when it hit you in degrees
returns the heading of the bullet when it hit you in radians
sets the colors of the robot
sets the colors of the robot
moves this robot forward by pixels and turns this robot left by degrees
moves this robot forward by pixels and turns this robot right by degrees
compares this event to another event regarding precedence
moves this robot backward by pixels and turns this robot left by degrees
moves this robot backward by pixels and turns this robot right by degrees
turns the gun left by degrees
returns the name and version of this robot or team
returns the full class name of this robot or team
turns the gun right by degrees
returns the jar file containing this robot or team or
returns the link to the web page for this robot or team
returns the name of the author of this robot or team
returns id of the team in current battle
immediately moves your robot ahead forward by distance measured in
checks if the robot is alive
turns the gun to the specified angle in degrees
checks if the robot has hit another robot
checks if the robot has hit the wall i
returns the rules that will be used in the battle
returns the number of robots participating in the battle
immediately moves your robot backward by distance measured in pixels
turns this robot left by degrees
checks if this battle is a replay or a new battle
returns a snapshot of the turn that has ended
checks if the battle was aborted
returns the start snapshot of the participating robots initial starting positions etc
turns this robot right by degrees
returns the width of the current battlefield measured in pixels
turns this robot to the specified angle in degrees
returns the height of the current battlefield measured in pixels
returns the battlefield size for this battle
returns the direction that the robots body is facing in degrees
returns the distance remaining in the robots current move measured in
returns the height of the robot measured in pixels
returns the angle remaining in the robotss turn in degrees
returns the width of the robot measured in pixels
returns the angle remaining in the guns turn in degrees
returns the robots name
returns the angle remaining in the radars turn in degrees
returns the x position of the robot
sets the robot to move ahead forward by distance measured in pixels
returns the y position of the robot
sets the robots body to turn left by degrees when the next execution
sets the robots body to turn right by degrees when the next execution
immediately turns the robots body to the left by degrees
sets the gun to fire a bullet when the next execution takes place
returns the total score of this robot in the battle
returns the survival score of this robot in the battle
returns the last survivor score of this robot in the battle
returns the bullet damage score of this robot in the battle
returns the bullet damage bonus of this robot in the battle
immediately turns the robots body to the right by degrees
returns the ram damage score of this robot in the battle
returns the ram damage bonus of this robot in the battle
sets the gun to fire a bullet when the next execution takes place
returns the turn that was skipped
immediately fires a bullet
registers a custom event to be called when a condition is met
immediately fires a bullet
returns the rate at which the gun will cool down i
removes a custom event that was previously added by calling
returns the direction that the robots gun is facing in degrees
clears out any pending events in the robots event queue immediately
returns the current heat of the gun
executes any pending actions or continues executing actions that are
returns the number of rounds in the current battle
returns a file representing a data directory for the robot which can be
returns how many opponents that are left in the current round
returns a file in your data directory that you can write to using
returns the direction that the robots radar is facing in degrees
returns the data quota available in your data directory i
returns the current round number 0 to
returns the current priority of a class of events
checks if the gun is set to adjust for the robot turning i
returns the velocity of the robot measured in pixels turn
checks if the radar is set to adjust for the robot turning i
checks if the radar is set to adjust for the gun turning i
sets the priority of a class of events
sets the maximum velocity of the robot measured in pixels turn if the
sets the robot to resume the movement stopped by
this call is identical to
sets the robots gun to turn left by degrees when the next execution
scans for other robots
sets the robots gun to turn right by degrees when the next execution
sets the gun to turn independent from the robots turn
sets the radar to turn independent from the robots turn
sets the robots radar to turn left by degrees when the next execution
sets the radar to turn independent from the guns turn
sets the robots radar to turn right by degrees when the next execution
does not return until a condition is met i
this method is called if your robot dies
returns the direction that the robots body is facing in radians
sets the robots body to turn left by radians when the next execution
sets the color of the robots body
sets the robots body to turn right by radians when the next execution
sets the color of the robots gun
immediately turns the robots body to the left by radians
immediately turns the robots body to the right by radians
sets the color of the robots radar
returns the direction that the robots gun is facing in radians
sets the flag specifying if painting is enabled for the robot
sets the color of the robots bullets
returns the direction that the robots radar is facing in radians
sets the snapshot of the output print stream for this robot
returns the scan arc snapshot for the robot
returns the object with queued calls for graphics object
sets the robots gun to turn left by radians when the next execution
sets the color of the robots scan arc
sets the robots gun to turn right by radians when the next execution
immediately stops all movement and saves it for a call to
sets the robots radar to turn left by radians when the next execution
immediately resumes the movement you stopped by
sets the robots radar to turn right by radians when the next execution
immediately turns the robots gun to the left by degrees
immediately turns the robots gun to the right by degrees
immediately turns the robots gun to the left by radians
immediately turns the robots radar to the left by degrees
immediately turns the robots gun to the right by radians
immediately turns the robots radar to the right by degrees
immediately turns the robots radar to the left by radians
returns the robots current energy
returns a graphics context used for painting graphical items for the robot
immediately turns the robots radar to the right by radians
sets the debug property with the specified key to the specified value
returns the angle remaining in the guns turn in radians
returns the angle remaining in the radars turn in radians
returns the angle remaining in the robots turn in radians
gets the active robots
informs on whether the battle is running or not
when an object implementing interface
on scanned robot what to do when you see another robot
painting robots run method seesaw
fire when we see a robot
paint a red circle around our painting robot
on hit robot set him as our new target
go corner a very inefficient way to get to a corner
on hit by bullet turn perpendicular to the bullet and move a bit
on hit robot aim at it
this is not showing any aditional qualities over normal my first robot
creates a view from the given structural element of a
event handler for the menu item
returns the undo handler
listens for changes on the document in its associated text pane
listens for changes on the document in its associated text pane
listens for changes on the document in its associated text pane
handles selection in the text pane due to gestures on the line numbers
clean things up removing all references to the robot
write data to the back end
returns the string associated with a resource
returns the resource associated with a string
extract the base name from a uri discarding the namespace and extension
parse a list of vocabulary class names into the vocabulary catalog
generate a list of uris for ontologies in an ont model
generates a class that is responsible for registering all of our
get time based media for reference if any
unfreeze and set offset
get current pattern
set current pattern
find local files for unknown missing files
set activation window
initialise view identity properties default implementation just gives classname assumes a singleton
initialise view identity properties for an iviewer
handle set analysis zero time
hanlde removal of child including metadata
hanlde add of child including metadata
map gui view coordinates sizes to pixels
map screen coordinates sizes to gui view
map screen coordinates sizes to gui view
stand in for jinternal frame
stand in for jinternal frame
stand in for jintenal frame
pre shutdown closing
is dead has been shut down
used by qtarea to place always on top
used by qtarea to place always on top
used by time control frame
used by track viewer
unregister the tmsv as an observer of the tmstatus view
changes the tmcompute draw object used to compute
returns the node containing the mouse event
returns the tooltip to be displayed
paint the component
test if this tmcompute size could be used
sets the updater for this node
returns the size of the node
returns the tmnode encapsulated
returns the size of this node
sets the dirty size and dirty drawing flags
switch the axis and return the new axis
register shutdown on close
show main frame and start update thread
position and show
get selected track area if any
set selected track area if any
get time at which to insert a timestamp that has just been pressed
subclass sync stuff this does nothing
annotation set listener method
track canvas gets focus
subclass sync stuff this does nothing
show main frame and start update thread
start clock watcher
overridable create annotation area
add episode time listener with specific min interval
fire return time to next delayed call
fire return time to next delayed call
refresh properties table
this method returns the track number of this waypoint if it exists
refresh properties from object
explore window for current selection
explore one rdfnode value of property
add a waypoint in the data structure
add a track
returns 0 if both objects are equals 1 if this object
returns this time value in milliseconds
add a waypoint to the track
returns a waypoint at the specified index
order by rank smallest first then title name
text to check
matches start of text
if matches return index of first char after timestamp
description of the method
internal display update thread
map rate of media to rate slider value
map to rate of media from rate slider value
play at default rate
play at given rate
jump to position
default play rate
default play rate
background thread update method
if matches return time in ns
time to string
request to set mdeia time within timeframe of one particular file media
play from media time
play from media time
sets the media time of the time model object
gets the start media time
set playback rate
get the identifier for media being viewed e
get worst case startup latency nanoseconds
force display of current time
stop the playback
wait for prefetch
get media time for timebase time
get a hopefully globally unique base uri
get authentication token
re create drsuser authentication token for user
remove drsuser authentication token if any
check if drsuser authentication token is valid time
show concordance tool from persistent view
use this method to get an actual file object for a given log
returns a filename of a particular file by its file id
set the url to the login page
set the ticket validator
this method allows you to set an ldap factory
determine whether the cache file is current or not
serves the file
create a filename for the cached copy of this transform
set the date format to use
sets the xsl file to use
set the dir to use
add a tab to the list of tabs
clear up state when told to
having finished the tag we iterate over the tabs printing them out correctly
print out the body of the selected tab if any
delegates down to date format
return a comparision based on the build time
create a formatter for us
create a formatter for uk
create a formatter for other
returns an initiliazed instance of exit command component
returns an initiliazed instance of help command component
returns an initiliazed instance of help component
returns an initiliazed instance of string item component
returns an initiliazed instance of back command component
returns an initiliazed instance of change pin component
returns an initiliazed instance of ok command component
returns an initiliazed instance of cancel command component
returns an initiliazed instance of old pin component
returns an initiliazed instance of new pin1 component
returns an initiliazed instance of new pin2 component
returns an initiliazed instance of pin tip component
returns an initiliazed instance of file list component
returns an initiliazed instance of back command1 component
returns an initiliazed instance of add command component
returns an initiliazed instance of remove command component
returns an initiliazed instance of wait screen component
returns an initiliazed instance of pin changed alert component
returns an initiliazed instance of change ping command component
returns an initiliazed instance of pin form component
returns an initiliazed instance of spacer component
returns an initiliazed instance of pin form string component
returns an initiliazed instance of pin component
returns an initiliazed instance of ok command1 component
returns an initiliazed instance of exit command1 component
returns an initiliazed instance of hide me logo component
returns an initiliazed instance of hide me browser component
returns an initiliazed instance of back command2 component
returns an initiliazed instance of file added alert component
returns an initiliazed instance of empty list component
returns an initiliazed instance of error hidding component
returns an initiliazed instance of success hidding component
add a key to the hash but not the list
returns a mime header
reads a dictionary from the stream
open the application
adds a new resource to the skin with the given name and location
adds a new resource to the skin with the given name and location
this will initialize the context by configuring the current resolution and application
initializes the the hdapplication with the context
sends a request to change the receivers resolution
gets the current resolution information about the receiver that this application is
gets called when the root bounds changes
this event handler snoops on resolution changes and reinitializes the
get the xml rpc client
execute a xml rpc request
make a new post
sets the date on which the post is created
delete a post
get a post
set the categories
edit replace an existing post
creates the menu for the action
setter for property d fecentraimp
setter for property d fecentralev
setter for property d fecmod
setter for property d fecnot
setter for property d fecnotresol
setter for property d fecreg
setter for property d fecresol
setter for property d fecsal
setter for property d fecvisordeninsp
setter for property d fecvisreinsp
setter for property f confresol
setter for property f impord
setter for property f impordsi
setter for property n numdep
setter for property n numsujresp
setter for property v anho
setter for property v anhoexpsan
setter for property v anhoordeninsp
setter for property v anhoreinsp
setter for property v anioimp
setter for property v aniolev
setter for property v codusumod
setter for property v codusureg
setter for property v hostmod
setter for property v numdepexpsan
setter for property v numentraimp
setter for property v numentralev
setter for property v numexpsan
setter for property v numordpar
getter for property coddep
setter for property coddep
getter for property codpro
setter for property codpro
getter for property coddis
setter for property coddis
setter for property d conanu fecent
setter for property d conanu fecnot
setter for property d conanu fecres
setter for property d conanu fecsal
setter for property d fec aper
setter for property d lev fecent
setter for property d lev reins fec
setter for property d ordins fec
setter for property d ordins fecnot
setter for property n dniruc
setter for property n expsan numdep
setter for property n ordpar numdep
setter for property v conanu anhoent
setter for property v conanu conres
setter for property v conanu estnot
setter for property v conanu flgimp
setter for property v conanu flgimp si
setter for property v conanu nument
setter for property v expsan anho
setter for property v expsan num
setter for property v lev anhoent
setter for property v lev reins anho
setter for property v ordins anho
setter for property v ordins num
setter for property v ordpar anho
setter for property v ordpar num
setter for property v ordpar numsuj
setter for property flg ins upd
setter for property v codtipvin
getter for property numruc
setter for property numruc
getter for property numdoc
setter for property numdoc
getter for property nroexp
setter for property nroexp
getter for property fecini
setter for property fecini
getter for property fecfin
setter for property fecfin
getter for property codsec
setter for property codsec
sets the classes
sets the charge seminaire
sets the contenu
sets the charge theorique
sets the prerequis
sets the titre
sets the menu
sets the destination
sets the rang
sets the menus
sets the orientations
sets the affectation principal
sets the addresse
sets the categorie
sets the conges
sets the ecole component
sets the illustrations
sets the informations
sets the personne
sets the regime travail
sets the type contrat
sets the super infrastructure
sets the adresses
sets the prioritaire
sets the agenda
sets the fonctions
sets the annee
sets the cours
sets the inscriptions
sets the addresses
sets the editeur
sets the agenda
sets the conges
sets the publications
sets the debouches
sets the super organe
sets the organes
sets the objectifs
sets the sigle
sets the diplomes
sets the deces
sets the sous titre
sets the diplomes
sets the super publication
sets the formations
sets the illustrations
sets the illustration
sets the ecoles
sets the informations
sets the infrastructures
sets the matricule
sets the naissance
sets the observation
sets the infrastructures
sets the organes
sets the contacts
sets the sexe
sets the numero
sets the publications
sets the activite
sets the activite groupe
sets the debut
sets the diplome
sets the ecole component
sets the fin
sets the rang
sets the roles
sets the seances
sets the statut
sets the heure debut
sets the jour
sets the nb heure
sets the super information
sets the entreprise
sets the debouches
sets the cycle
sets the locale
sets the locale id
sets the super orientations
sets the unites
sets the nb jour
sets the addresse id
sets the domaine
sets the classes
sets the orientations
sets the maitre
sets the destination
sets the prerequis
a reimplementing of object
add a new lexical state
this is a symbol table that contains all named tokens those that are
convenience method to retrieve integer options
convenience method to retrieve boolean options
convenience method to retrieve string options
determine if a given command line argument might be an option flag
help function to handle cases where the meaning of an option has changed
the consumer calls this method to get the next token
returns true if s1 starts with s2 ignoring case for each character
find the lookahead setting
find the choice ambiguity check value
find the other ambiguity check value
to avoid right recursive loops when calculating follow sets we use a
find the debug parser value
find the debug lookahead value
find the debug tokenmanager value
find the error reporting value
find the ignore case value
find the user tokenmanager value
find the user charstream value
find the build parser value
find the build token manager value
find the token manager uses parser value
find the sanity check value
find the force lookahead check value
find the cache tokens value
return the tokens factory class
find the output directory
check options for consistency
find the multi value
find the node factory value
find the node uses parser value
find the visitor value
find the node prefix value
find the visitor exception value
find the visitor data type value
find the visitor return type value
counts one url to the statistics
start the timer
stops the timer
allows the default role prefix of code role code to be overriden
registers the private message listener
appending server name and database to url string
connects to database
executes the given statement which may be an insert
executes the given statement which may be an insert
executes the given statement which returns a result set
set some oauth 2
since some oauth providers expect multiple scopes to be delimited with
returns a comma delimited list of scopes
set the oauth window url to use to authenticate
sets the height of the oauth 2
clears all tokens stored by this class
update list box highscore list
distinguish between start of level no buttons show at start
change to next tutorial page
change to next tutorial page
focus continue button for key listener
init game component
timer for a peas life duration
timer for a peas life duration
return the height of the springs top box
update statement in verify component for both map type instances
update statement in verify component for both map type instances
get all the ids which were already verified
method for creating veri links database and tables
init method for at least 1 text type instance
init method for at least 1 text type instance
init method for 2 map type instances
add new enemies into game world
remove and of an image url
add verification to lists
if called from kongregate page no login needed
get selected radio button
remove and of an image url
must refer to a valid module that sources this class
template parse method
player sends his score to server
fired when the user clicks on the verify button
initialize 2 d platform game
initialize start menu for selecting linkset
is input listening from game component blocked
is input listening from game component blocked
show highscore popup
add money to players budget
asynchronous call of highscore request method
request for list of interlinked ontologies
request list of pending tasks from server
update verify components tables
set key cache
connect to server to get linkset
timer for sending verification
is verification mechanism locked
disconnect user from server
this method must be used by subclasses to set a
this method must be used by subclasses to set a
beanshell script does not support using
sets the instances to the class variables held in here
tells whether or not the given character is in view of this
thrown when an exception has been thrown by mina
gets the maximum life of this character
when someone disconnects and the session closes
notification that a session has been created
called when a session has been idle and nothing has been sent received
when someone disconnects and the session closes
called when a session has been idle and nothing has been sent received
loads all data needed for the server
called when a player disconnects gets kicked or needs to leave the
retains all its old player object details
when someone disconnects and the session closes
notification that a session has been created
called when a session has been idle and nothing has been sent received
called when a session has been idle and nothing has been sent received
loads all data needed for the server
we start the measurement of how much memory gets used
we finish the measurement of how much memory gets used returns the used
we load up all the usernames allocated store them
closes the server
sets up the npc scripts
we finish the measurement of how much memory gets used returns the used
dispatches a thread to run this npc script
this method loops through the various methods that perfom
method called to set the number of categories in the problem
method used to determine the position of a string of text
method called to set the number of items per category
method used to set the name of a category given its
method used when displaying the textual value of the clue
method used to get the name of a category of items given its
the purpose of this method is to determine if another relationship
sorting operation called when constructing the relationship
method used when displaying a relationship at the screen in
method used to set the name of an item given its category
method used when no other typical information is required beside
method returning the name of an item given its category
method converting the relationship indexes into screen relative
this method returns the selected look and feel button
method used to add a relationship to the relationship vector
method used to obtain the dimensions of the image
method returning the item index of a given item
responds to user actions when the ok button is clicked
used to set the look and feel attached to this particular
method used to remove all relations and redraw a plain grid
method used to set the window parameters in this class
method used to set the message string
method returning the current message string
method used to clear the textfield
method returning the minimum size of this empty box
method returning the current input string
method used to add a relationship to the squares array and
loads and parses the ini file
initialize the actions
create a new ini file
method defining the edit menu its keyboard accelerators and
reads lines filling in subjects variables and values
sets the text passed as parameter in the applications status
method defining the help menu its keyboard accelerators and
gets the text displayed in the applications status
since the popup is built before the laf is loaded an explicit
method used to obtain the relationship between two items
method used to save permanent information in the ini file
this method creates a new event to simulate a save action
sets a specific subject variable combination the given value
method used to obtain a reference to the aye vector
method used to check if there is a recorded answer
sets the preferred minimum and maximum size of a button on the toolbar
method used to obtain the number of categories
method used to obtain the number of items
invoked when the user selects or the saved preferences indicate
invoked when the user selects or the saved preferences indicate
method used to obtain the vector containing the special
takes care of changing the applications title bar in order to reflect
method used to find which border of the inner panel contains the
method used to return the grid object
method used to add a clue in the clues vector
method used to reset the squares and redraw the new grid
method used to return the canvas which is the graphic
constructor for the window adapter
handles properly the closing of the window by calling owners quit method
delete a subject and all its variables
save the lines vector back to the ini file
saves the current worksheet
saves the current grid information in the specified file
assigns the specified file to this grid
add a body to the list
draw a circle in the world
demo customisable gui render
registers a probe
types of statistics that can be provided
calculates multiplier to apply to cardinality for the new inner left partition
table column that was found or not in expression
resets the state of visitor excluding its m partition
maximum number of ranges in each dimension
maximum number of ranges in each dimension
or expressions are not supported by ogsadaidqp
threshold that defines maximum difference in cardinality of two
threshold that defines maximum difference in cardinality of two
threshold that defines minimum ratio between slice cardinality and
checks if this partition contains another one
checks if this partition intersects with another one
returns m cardinality of this partition
ranges of values of table columns that constitute this partition
calculates the number of distinct values that can be placed inside this
checks if this range contains passed constant
determines if this partition has both min and max limits in all
checks if this range contains another range
threshold that defines minimum ratio between slice cardinality and
minimum maximum values for this range
minimum maximum values for this range
inclusion exclusion of m min m max values
inclusion exclusion of m min m max values
minimum maximum values for this range
minimum maximum values for this range
minimum maximum values for this range
minimum maximum values for this range
inclusion exclusion of m min m max values
inclusion exclusion of m min m max values
returns an object representing the number of distinct values that can be
session factory configuration
used internally by
gets the maximum size of the mru list
enforces the max size of the map
gets the average execution time of an operation
puts a value in this mru map
gets the number of registered invocations to the specified cache operation
gets the max size of this map
creates a new user around the given socket channel
returns the client pool with the least amount of users
sends the message of the day
sends the public key to the user
this is called when the client sends a game message
this is called when the client requests to join a game
leaves the game
notifies the server game that the client wants to load the game window
gets the number of users registered in this client pool
changes the main lobby the user is in
indicates the username the client is when he logs in
requires decoding of the name field
sets message delay strong message delay strong
binds a new topic connection factory
binds a new topic
if we are pinged return a pong
returns 1 if unknown
returns 1 if unknown
returns the number of visible users on the network
returns the number of invisible users on the network
if we are pinged return a pong
returns the sender of this message
explicitly appends the last parameter
returns true if there is an explicit last parameter
waits for a connection
gets a user on this network
sends a message to all the servers on this network
sends a message to this channel excluding a specified user
start the application
initialize all the management systems
start the basic components
destroy the basics components
register and start the given connection
remove and close the connection with given address
set the connection type of the communication system
check the connection type of the communication system
retrieve the connection with given address
retrieve all the registered connections
destroy the communication manager by closing down all registered connections
notify all the registered message listeners
create a private connection with given address and notify the given listeners
remove a private connection with given address and notify the given listeners
notify the registered channel listeners with the updated private connection
retrieve the original type of the message that triggered the auto acknowledgment
callback for when the scalar input value goes above or below
notifies all listeneres of a button status change
default constructor for virtual tri color led
display the gui
initialize the frame basic properties
retrieve the command text area
retrieve the action text area
notify the clients to start dance
notify the clients to close connection
buffer a new action command
flush the buffered commands to clients
check if the given direction is the correct one in the sequence
reset the number of commands entered
end the application
retrieve the required command count
check if the commands have been flushed
set the unit of the code abstract motion device code
get the unit of the code abstract motion device code
helper function that converts a radian value to degree
notify the accelerometer listener with the updated direction
reset the values
register the given motion device unit
retrieve the imotion device instance
remove the imotion device unit with given name
makes sure that the given rgb value is in the range 0 255
display the given value on all registered display units
register the given display unit
remove the display unit with given name
obtain the display unit with the given name
initialize the application
initialize all the management systems
makes sure that the given percentage is in the range 0
start the application
public void set cell black even point v t method
public void set map length even point v t method
private void set array even point v t method
add a passenger to the list passenger and decrement the counter of remaining
a wrapper to optimize getting the static mapping file and loading it
converts a given kml stream into an internal java format and returns the
converts from a kml object to the given outputstream which is a kml
return operations table current selection
acrescenta outra lista a this
this method calls the file chooser dialog
this method displays public information about this application
if an exitbutton is pressed or the corresponding menu item is choosed
at startup create and show the main frame of the application
start a fresh game this should clear out any old data and
calculate profit from layoutdate to to date
get all deposits for user sergiy doroshenko
get list of all exists deposit
creates a new instance of hill curve
returns the requested number of outgoing connections
set the requested number of outgoing connections
close the session ignore future query hits
get the requested number of incomming connection
set the requesting number of incomming connections
close the session discontinue monitoring
added by daniel meyers 2004
generates and returns the router thread for the gnutella connection
added by daniel meyers 2004
return the maximum number of hosts to have cached
get the port to used for incoming connections
query how many hosts are cached
set the port to used for incomming connections
edited by daniel meyers 2003
implement to receive a message reply the default implementation
get the value for shared file count
implement to receive a query message from the network
implement to receive a push request
set the value for current number of shared files
edited by daniel meyers 2003
check if connection history exists for guid
get the current code host cache code
set the value for shared file size
produce a hashcode for this guid
returns a guid as a raw string
get the connection handshake greeting
returns a guid as a string
query if we are online with the network with at least one active
get the source of a previously received query hit message based on the
set the connection handshake greeting
add a payload to the message
get the code connection data code settings
added by daniel meyers 2004
added by daniel meyers 2004
returns a string containing the flattened message
updates a message for sending
added by daniel meyers 2004
get a search monitor session to monitor query requests
get the connection that was the source for this message
set vendor code for use in query reply messages
creates a file serving session
calls one of the message handler functions depending on the type
sets the maximum number of failed connections attempts that will be made
utility method for common send
checks if a specified sub network identifier is served by this node
adds a listener to the connection list
query the number of files found for the search
replaces the list of served sub networks with the specified set
fetches the sub network identifier for this query
get the minimum download speed for responses
get the connection list
generates and returns the router thread for the gnutella connection
sends a search message to listeners
query the port for this search reply
query the sub network identifier for this message
cleans dead connections from the connection list
converts the message into a standard search message discards the sub network
query the ip address for this pong message
closes the session
attempts an outgoing connection on the specified host
an application should call code query hit code to indicate that
edited by daniel meyers 2004
returns the replying hosts connection bandwidth
adds a listener to this connection manager
adds a file record
added by daniel meyers 2003
added by daniel meyers 2003
reurn the shared file size
adds an uncompressed xml block to the message
retrieve the client guid targeted by this push request
retrieve the index of the file to push
increments the number of failed connection attempts by 1
get the ip address to push to
sets the number of failed connection attempts to this host
checks if any incoming connections have yet to provide a listen ip
get the port the connection should use
use the ip address for the hashcode
get text based host information
gets a count of the active connections of the given type
the user types something in the input box
a search message arrives
this should be a response from an input search
retrieve the client guid for the replying servant
stops the get hosts from cache instance from running
adds a host to the host cache
method to determine the ending for file data
handles failure regarding the access of webcaches
performs a search on the gnutella network responses by callback of this
added by daniel meyers 2004
send a priority message
get local ip address
sends a message through this connection
sends a message down the connection and sends any response
get the connected host
get port for the connected host
get the message output count
get the message input count
get the number of messages dropped on this connection
get the lenght of time the connection has lived
get the message
sets the image
sets the start time
sets the resource
performs a smooth synchronous animation beginning with animation state start and
spawns a new thread and performs a smooth asynchronous animation beginning with
interpolates smoothly from one face vector to another
computes the euclidean distance between two chernoff face painters
general applet information
initialize the applet
draws a chernoff face
runs the applet in an endless animation loop
the implementation of the animator method
draws a scaled and translated circle
draws a scaled and translated oval
draw a scaled translated and filled oval
draws a scaled and translated line
cherche ordre de vente
creates a chart
creates a dataset
creates a chart
this validation method check if the all mandatory fields on a
set the value of the translated text to search
set the value of the translation state to search
originating from a weird case in mop project via chromattic
controls wether or not a type will be visited
signals that a type has been visited
returns the lineseparator
returns the newlines
sets the lineseparator
sets the newlines
sets the default values of the preferences
remove builder and markers
add plugin specific options not original tidy options
add default boolean preference
add default string preference
we need to implement create contents method
checks whether the text input field contains a valid value or not
open file in editor if necessary and tidy the file
convenience method creating a radio button
test if the selection contains resources that can be tidied
returns in case of property pages the overlay store otherwise the
fills this field editors basic controls into the given parent
enables or disables the controls of this page
enables or disables the controls of this page subclasses may override
tidy the selection
we override the perform ok method
we override the perform defaults method
creates a new preferences page and opens it
sets a status bar message
returns the field editors value
we override the perform ok method
returns this field editors text control
only increase visibilty to improve performance
returns whether an empty string is a valid value
sets whether the empty string is a valid value or not
sets this field editors value
sets this text fields text limit
sets the strategy for validating the text
shows the error message set via code set error message code
informs this field editors listener if it has one about a change to
fronts the execution for this thread pool
gets the amount of time that has elapsed since we have started measuring
this method initializes this
this method initializes j menu item
this method initializes j menu item
this method initializes this
tries cursor if not advance until
this method initializes this
this method initializes image root browse
this method initializes okay button
this method initializes this
this method initializes j content pane
this method initializes slider panel
this method initializes action panel
this method initializes image root panel
this method initializes image root display
this method initializes browse
this method initializes this
this method initializes cancel button
this method initializes back button
this method initializes play pause button
this method initializes next button
this method initializes this
this method initializes prefs button
return the string representation of the places names
init config with path to config
encodes the job in all formats given by seminar presets
encodes the job in all formats given by seminar presets
begin user doc
returns the indexer
index the files in the data directory using
index the passed in file using
returns the number of times that the class is loaded
process the input using
returns an instance of validator parser for the input
returns true if the string passed in true
parses the data
get the number of records in the csv file
returns the number of integers in the list
parses the data and returns an integer
calls the function
returns an instance of csv parser for the input
process the input using
sets the persons age in the builder
sets the persons sex
returns true if the list contains the specified data
builds the person object
returns the item that contains the specified data
some additional attribute thats we are adding in this sub class test of
returns string representation of the persons sex
returns the item before the specified index
creates a chart
this method initializes this
this method initializes j content pane
this method initializes j jmenu bar
this method initializes j menu
this method initializes j menu1
this method initializes j menu item
this method initializes j dialog
this method initializes j content pane1
this method initializes j button1
this method initializes j menu item2
this method initializes j dialog2
this method initializes j content pane3
this method initializes j scroll pane
this method initializes j button3
this method initializes j scroll pane1
this method initializes j menu item1
this method initializes j dialog1
this method initializes j content pane2
this method initializes j scroll pane2
this method initializes j menu2
this method initializes j dialog3
this method initializes j content pane4
this method initializes j button4
this method initializes j text area
this method initializes j menu item3
this method initializes j popup menu
this method initializes j popup menu1
this method initializes j menu item7
this method initializes j dialog4
this method initializes j content pane5
this method initializes j dialog5
this method initializes j menu item8
this method initializes j dialog utilidad
this method initializes j content pane utilidad
this method initializes j button6
this method initializes j popup menu
this method initializes j scroll pane4
this method initializes j text area1
this method initializes j dialog6
this method initializes j button2
this method initializes j scroll pane5
this method initializes j menu item5
this method initializes j popup menu
this method initializes j editor pane keys
this method initializes j scroll pane keys
implements the standard ejb session test code
implements the standard ejb entity test code
called by framework before the actual test code is executed
called by framework just after the actual test is
execute the encapsulated command
execute the encapsulated command
undo the last invocation of execute
execute the encapsulated command
execute the encapsulated command
execute the encapsulated command
execute the encapsulated command
handles the runtime element
handles all test suite elements
handles the harness input element
execute the encapsulated command
execute the encapsulated command
returns the appropiate properties element depending on the
handles the classpath element
implements the actual test code
generate a null pointer exception and test framework
generate a null pointer exception and test framework
generate an illegal access exception and see how framework
sets up the ejb environment
parses the command line
initializes the log4 j logging system
parse the input file setup the output file create a copy
implements the actual test code
implements the actual test code
implements the actual test code
implements the actual test code
implements the actual test code
implements the actual test code
implements the actual test code
creates a new validate xml element
creates a new validate xml element
creates a new validate xml element
creates a new validate xml element
creates a new validate xml element
returns an object representing the content of encapsulated
returns an object representing the content of encapsulated
unmarshalls an object from an xml instance document
marshalls an object into an xml instance document
marshalls an object into an xml instance document
unmarshalls an object from an xml instance document
creates a new validate xml element
get a file input stream resource
validates the subscriber against his pin code
resets the pin code
activates a deactivated or newly created authentication profile
adds a subscriber authentication to the auc
deletes an authentication profile
deactivates an authentication profile
returns the current authentication status
test method for
test method for
test method for
test method for
test method for
test method for
test method for
test method for
creates a new account in the billing system
deletes an existing account if the arent any unpayed bookings for that account
returns the accoutn for a given equipment id imei
changes an existing account
books a single sms on an existing device
transfers a certain amount of money to an account
returns the device number associated with the given code and number
class needs to overrite this method to read context
list iterator delegate object constuction to child read context function
checks if this commlayer is online i
this sample function for reading class implementations reads
gets the methods count attribute of the reference descriptor object
gets the name attribute of the reference descriptor object
description of the method
gets the write attribute of the reference descriptor object
sets the name attribute of the reference descriptor object
unlike ordinary exceptions this method calls the code to string code
sets the write attribute of the reference descriptor object
gets the global name attribute of the object info object
description of the method
gets the ping method attribute of the pinger object
gets the owner attribute of the object info object
gets the time stamp attribute of the object info object
gets the writer attribute of the object info object
description of the method
gets the lockable attribute of the object info object
gets the locked attribute of the object info object
main processing method for the pinger object
this method returns a set with the clients logged in
sets the ping method attribute of the pinger object
sets the wait time attribute of the pinger object
gets the comm layer attribute of the server object
sets the lockable attribute of the shared entry object
returns the exception contained in this instance
sets the time stamp attribute of the shared entry object
gets the host id attribute of the server object
description of the method
description of the method
description of the method
description of the method
gets the global name attribute of the storage event object
gets a set with all clients who shared at least one object
gets the new value attribute of the storage event object
gets the old value attribute of the storage event object
gets the add event attribute of the storage event object
gets the change event attribute of the storage event object
gets the plain socket url attribute of the server object
gets the lock event attribute of the storage event object
gets the remove event attribute of the storage event object
gets the unlock event attribute of the storage event object
description of the method
gets the private key attribute of the server object
accesor for the data of the object
this method delegates to sr equals so references can be equal to
default shared references use the hash code of ther global names
sets the debugging attribute of the server object
adds a storage listener to this references listener list
this method should not be called
tests for reference equality
tests for object equality
acessor for the global name
accesor for the time stamp of the object
checks if the corresponding object is updated i
checks if this comm layer is logged to the global server
remove a previously added storage listener from this references listener
returns a string description of this reference
description of the method
returns a string description of this reference
gets the data attribute of the shared reference object
gets the can write attribute of the shared object descriptor object
gets the lease time attribute of the shared object descriptor object
gets the reference class name attribute of the shared object descriptor object
description of the method
adds a storage listener that listens on the cached objects storage
description of the method
adds a storage listener that listens on the owned objects storage
this method always returns true
sets the locker attribute of the storage lock object
main processing method for the plain socket listener object
main processing method for the signed socket listener object
gets the class loader attribute of the shared object object
gets the descriptor attribute of the shared object object
gets the cached names attribute of the shared space object
checks if this objects lease has expired
sets the can write attribute of the shared object object
sets the last updated attribute of the shared object object
this method should not be called by user applications
sets the lease time attribute of the shared object object
sets that the object was lost
gets the data attribute of the shared object object
description of the method
adds a feature to the all attribute of the lisp list object
description of the method
description of the method
description of the method
gets the logger attribute of the shared space object
description of the method
gets the cdr attribute of the lisp list object
gets the tail attribute of the lisp list object
this method should not be called by user applications
description of the method
gets the empty attribute of the lisp list object
description of the method
description of the method
description of the method
description of the method
checks if this shared space instance is connected to a server
sets the car attribute of the lisp list object
sets the cdr attribute of the lisp list object
description of the method
description of the method
description of the method
description of the method
this method should not be called by user applications
description of the method
removes a storage listener that listens on the cached objects storage
removes a storage listener that listens on the owned objects storage
sets the logger attribute of the shared space object
description of the method
description of the method
gets a class loader who can load classes for the given global name
main processing method for the signed socket listener object
this method should not be called directly
this method should not be called
description of the method
description of the method
description of the method
description of the method
this method should not be called directly
description of the method
create a server socket on the specified port port 0 indicates
method to close the connection to database
to use create jdbc connector object
to use create jdbc connector object
gets the drivers major version number
get the drivers minor version number
whats this jdbc drivers major version number
whats this jdbc drivers minor version number
whats the version of this jdbc driver
returns the name of the database server
get a comma separated list of all a databases sql keywords that are
checks for errors in the reply packet and if none returns the reply
in some cases it is desirable to immediately release a connections
destroys this connection and any underlying resources
starts the barber running as a separate thread
creates the customer queue the doorman and the barbers
starts the doorman running as a separate thread
stops the doorman thread
starts the next process from cpu queue
ends current process
simulates a process switch
ends the active process and deallocates any resources allocated to it
updates the statistics collected by the given statistic object adding
processes an event signifying that the active process needs to
processes an event signifying that the process currently doing i o
creates a new instance of solvere file filter
connects to the database defined in the constructor
disconnects from a database
metadata of the datasource as rdf
setting the rdf configuration bean operation
convert this object to an editable data source bean
returns the subject of this
sets the subject of this
returns the predicate of this
sets the predicate of this
returns the object of this
sets the object of this
returns true iff the resource uri is not fully specified but starts with
adds all the triples from the given collection to this
returns the literal type
adds all triples from another
adds one triple to this
returns the n triples representation of this
sort in decreasing order
retrieves the value for the given subject predicate pair as a
see above at a href sorting sorting a
retrieves the value for the given subject predicate pair as an
sets the value for the given subject predicate pair assuming an object
retrieves the value for the given subject predicate pair
sets the value for the given subject predicate pair letting the system
sets the value for the given subject predicate pair
return the node representing this resource
returns the id of the repository which should be used for querying
sets the id of the repository which should be used for querying
returns the expand radius around a specific resource typically 0
sets the expand radius around a specific resource
returns the maximum number of results to retrieve 1 means no limit
sets the maximum number of results to retrieve
returns the number of results to skip before returning
sets the number of results to skip before returning
returns the order criterion
returns the sort order for a given criterion
returns the namespace uri for a given prefix
registers a specific prefix for a namespace uri
merges all query options from another instance to this one
the hostname for xml rpc normally localhost
the port for xml rpc
the port for xml rpc as string
the base of the middelware
set the xml rpc port as string
sets the value of the users property
sets the value of the tags property
sets the value of the resources property
look for the message resource in the current model
serialize this message as an rdf string
set this to true if the nepomuk message should close the model
return a copy of this message but with its own model
get the language tag only valid for type literal
sets the rdf predicate of this triple to the provided string value
sets the rdf object of this triple to the provided string value
checks the applications settings to determine if the splash screen should be displayed
checks the applications settings to determin if a default domain has been set
create the activitys menu
this method an user
if this thread was constructed using a separate runnable run object
if this thread was constructed using a separate runnable run object
this method is invoked each time a message is received
returns the blocked unblocked state of the device
sets the blocked unblocked state of the device
returns the house id
returns the devices code which identifies it in a specific house
returns the device identified by device code
sets the house id
sets the devices code which identifies it in a specific house
sets the devices name
returns the devices type
sets the devices type
returns the house name
sets the house name
set the string url to the server and the string post containing
returns the houses mobile number
sets the houses mobile number
close the connection and relases the resources
this method returns the list animated focus
stops the connection process
the number of fields in the result
send the request to the server
receive the response from the server
get a specific registry indicated by the code index code
get a specific registry indicated by the code index code
closes the connection to the data base
this method constructs a sql statement to authenticate users name
returns a connection to the data base
this method constructs a sql statement to get a specific users data
this method constructs a sql statement to get the devices in a
obtains a prepared statement from code query structure code which
part of the first step in the third party verification process
part of the second step in the third party verification process
obtains a prepared statement from code query structure code which
part of the third step in the third party verification process
part of the third step in the third party verification process
obtains a prepared statement from code query structure code which
art of the fourth step in the third party verification process
this method receives a code result set code object with the data
obtains a prepared statement from code query structure code which
first step in the third party verification process
second step in the third party verification process
third step in the third party verification process
third step in the third party verification process
fourth step in the third party verification process
this method is invoked each time a message is received
looks for bluetooth devices in the surroundings
description copied from interface discovery listener
called when a service search is completed or was terminated because
description copied from interface discovery listener
establish the connection with the server and sets some properties to
returns a code boolean code indicating the outcome of the request
at startup create and show the main frame of the application
inserts a row at code row code in the model
moves one or more rows from the inclusive range code start code to
removes the row at code row code from the model
replaces the column identifiers in the model
adds a column to the model
returns the column name
returns an attribute value for the cell at code row code
sets the object value for the cell at code column code and
returns the list of task used to configure the service
add a configuration task to the service
the service name
the mbean name
name of the configuration file
adds a new uri to the to be visted list
adds a parser listener to listen to parsing events
removes the parser listener from listening to events
stops the stop watch
resets the stop watch to 0
converts a byte to hex
retrieves the crawler origin of this event if one was specified
filters links which was specified in the constructor only these would be filtered
filters links which matches the pattern
add a new client update shares and price
determine if this resource is not being used by any client or
determines if this client is using this resource
determines the percentage of this resource has been allocated to the client
determines if this client is idle
this methode remove the resource from the collection of allocated resources
finds an idle client
check the event queue and process the events due at the time tick
loads the default networked module that will handle all unknown message types
loads the core client modules manual loading
shows the main window
hides the main window
finds out if this function returns an integer
gets the base value for this value
executes the function
gets the details for this expression
gets the number of elements returned by this function
rolls any dice in this expression
rolls any dice found in the expression
sets minimum and maximum rolls for this dice expression
determins if function is an integer
adds some values to be rerolled if they come up
gets the number of elements returned by this function
gets the size of the group for this expression
tells whether or not this expression has an integer value
determines if this expression is an integer or not
gets the labels on the sides of the dice
rolls all the dice in this expression
gets the name of this die
gets the value associated with this expression after rolling any dice in it
gets the details of this expression
determines if this expression is an integer
whether or not this expression is an integer
rolls the dice found in this expression
gets the details of this expression
rolls all the dice in this expression
gets a string version of this expression
gets the details for this expression
gets the base value for this expression
gets the integer value of this expression after rolling the dice
rolls any dice in this expression
gets the string form of the value for this expression after rollind dice
gets the details for this expression
evaluates whether or not the expression is an integer
gets the details of the last roll
sets the modules name
rolls all dice in this expression
creates a new dice expression
this method works around an java versioning issue
sets the modules author
returns a string containing the authors name
sets the modules version string
returns a string containing the version string
sets the modules short description
appends a new address token to a message address instance
clears all address tokens from a message address instance
returns a string containing the short description
accesses the raw address tokens of this message address object
adds a type of die to the parsers symbol table
returns a string containing the long description
generate an encoded representation of a message address instance as a string
internal method to handle the threaded send operation
sets the internal excluded flag state
this method manages the actual message processing by a specific module
adds a function to the parsers symbol table
gets the state of the exclude flag of this address token
starts an internal unamed thread to delegate tasks to route thread pool threads
sets the target of the address
uses user preferences or defaults to determine witch loaded available gui to start
retrieves the target of this address token
transfers an orpgmessage to the network and does route resolution if required
removes a symbol from the parsers symbol table
pass though method to service menu manger
pass though method to service menu manger
this method resolves the supplied orpgmessage address and loads the messages
pass though method to service menu manger
pass though method to service menu manger
pass though method to service menu manger
pass though method to service menu manger
generates the default system quit menu
merges two integer vectors without duplicating elements
generates an encoded address string for this object
responds to action lister events
resets the addressing information in this object to its default state
sets the guimanager callback reference to provide access to the menu manager
sets the menu bar for the main frame
internal method to validate target constants
registers the given module with the gui using the supplied jpanel
removes the given module from the gui
returns a human readable address string representation of this object
cleanup method to ensure resources are properly released upon object death
allocates or reallocates a new directly allocated byte buffer of the given size
returns the currently active buffer prepared by prepare buffer
true if the active buffer is currently dynamically allocated
instructs this managed buffer object to attempt to reuse dynamically allocated byte buffers
sets the time when the connection was established
marks a moment in time for later calculations
retrieves the length of time the connection has been active
informs the connection stats object of a socket message it should track
informs the connection stats object of a socket message it should track
sets the socket and ip address from which to host network connections from
clears all internal byte counters and reinitializes times to the current time
returns the contents of the outbound byte counter
returns the contents of the inbound byte counter
increments the inbound message counter
increments the outbound message counter
retreives the current outbound message count
retreives the current inbound message count
retreives the total message count by summing both the inbound and outbound counters
announces to all registered observers that a client has connected to the network
announces to all observers that a client has disconnected from the network
attempts to establish a network connection to the default server localhost
attempts to establish a network connection to a specified server
sets the connection id of the socket where this message originated
check if this network client is connected to a server
start outbound monitor creates a thread that monitors for new orpgmessages
associates the given char as the header segment data for this network message
associates the given string as the header segment data for this network message
instruct the thread to service a connection in write mode
converts the supplied hastable using header encoder
instruct the thread to service a connection in read mode
determine if any orpgmessage objects have been retrieved from the server and
associates the given byter as the data segment data for this network message
retrieves orpgmessages from the internal queue
retrieve the header segment of this network message as a string object
initializes the network server object
constructor helper for initilization of common objects
called by the module manager to load all modules
updates the id number of this connection
module manager in client mode
resets the default directly allocated network buffers for the connection
module manager in server mode
sets the module managers operational mode
open the default connection
retrieve first available orpgmessage object
registers a network callback hook with the module manager
stops the network functions of the network server
registers a module loader with the module manager
check if orpgmessage can be retrieved with get orpgmessage method
open a connection with the server on a specific ip port
registers a guimanager with the module manager
send an orpgmessage to the network
do registration is called by the module manager when loading this module to
registers a group manager with the module manager
handle a message from the server that contains complete
handles a message that deals with changes to the group
handles messages that pertain to changes in clients
registers a route manager with the module manager
called to initialize the module manager
internal method used to set the initialized flag
handle a message from clients that requests complete
module manager initialized
handles a message that deals with changes to the group
returns the socket channel this object contains
initializes the module manger to service client side modules
compare to supplied group instance for equality based on id number
sets the default message handling module for all unknown messagetypes
gets the name associated with this group
registers a module with this module manager
sets the name of this group object
write a given network message to the socket channel
gets the short description of this group
locates the handler for a given message type
sets the short description for this group to the given string
gets the default handler for unknown message types if present
gets the long description for this group
registers a specific message type with the given handler reference
adds a new group to the group manager with a specified name
sets the long description for this group to the given string
deregisters a message type from being serviced
tries to empty the oubound buffer through the network socket
checks if a group should be removed or not
sets the persistance flag on this group
registers a graphical module component jpanel object with the loaded guimanager
check the group id number of this group against a supplied id number
deregisters a graphical module component jpanel object from the loaded guimanager
send an orpgmessage to the network subsystem
obtain a reference to a specific member of this group
determine if this orpgmessage queue has at least one message available for pulling
places an orpgmessage into this queue
retrieve the first available orpgmessage from the queue
builds the dev console menuitem if required
gets the current role of a specific member of the group
get the group client object associated with a specific id number
retrieve first available orpgmessage object
collects and posts to the developer console basic system information
sets the role of a member within a group
collects and posts to the developer console system information about the current user
posts a new line of text to the developers console window
show the developers console
creates a new group member object tied to a specific client id
sets a specific members role to the default role
hide the developers console
creates a new jmenu item object with appropriate listeners
responds to action lister events
check if orpgmessage can be retrieved with get orpgmessage method
get a group reference for a specific group id number
required for implementation of network connection notifier interface
required for implementation of network module provider interface
get the group client module
get the group server module
update the vehicle
add a vehicle to the street
draw the gui content
act all vehicles and traffic lights
creates a new map view
check if the array has as many empty position as i need
return the start connection of the street
set the player direction according to the key inputs
set selected unselected depending on the actual state
return the end connection of the street
delete the vehicle from this street
return true if the vehicle is at the end of the street
use this method to get a localized string
you can use this instead of b localize b
load all languages from xml file and set selected language to first
set needed language
save given languages into xml file
save given document into a xml file
checks validity of event event id and returns result
returns all party members
get random member from party
true if player is party leader
returns reference to region this object is in
broadcasts packet to every party member
checks if current object changed its region if so update referencies
overloaded method broadcasts packet to every party member but player
removes player from party
finds a player in the party by name
oust player from party
oust player from party
distributes xp and sp to party members
refresh party level
checks var against res both parameters passed as string
checks var against res
returns updated var with rule in res both parameters passed as string
returns updated var with rule in res
implemented from doc handler
checks if player has activated quest id
returns all variables associated with quest id
sets variables associated with quest id
true if player is collecting quest item id
player will start collecting quest items contained in hash map start
player will no longer collect quest items contained in hash set stop
player has collected ques item id should be called only from l2 atatckable
this method sets the correlation id and the nmb of messages soap headers
check whether everything for this correlation id has been processed
fill the ctx with the response message
send to user service
send to hotel service
send to reservation service
this method resolves the reference endpoint if present and
test the point to point example
test the point to point example
test the message sequence example
get a serviceclient that we can use to invoke methods on the
this test does the following
return a service client that can be used for testing
we use an eventing client to register listeners to the publisher
start the axis2 and synapse environments
create an axis service where we host the publisher and the listeners
send the updates to the registered clients
start a synapse server and an axis2 server
stop the running http server
create an synapse service where we host the publisher and the listeners
test the content router example
start the axis2 and synapse environments
create an axis service where we host the publisher and the listeners
stop the running http server
we use an eventing client to register listeners to the publisher
create an axis service where we host the publisher and the listeners
create an axis service where we host the publisher and the listeners
creates a new code password authentication code with the user name and
returns the string representation of the 128 bit uuid object
retrieves the connection id that is being used in the present connection
called when this object attempts to authenticate a client and the
called when a connect request is received
called when a delete request is received
determines if this is a trusted device according to the bcc
called when a get request is received
returns the discovery agent for this device
called when a put request is received
called when a setpath request is received
sets the connection id header to include in the reply packets
removes the device from inquiry mode
this method must be used to get connection handle from server side
christian lorenz added this for the byte parsing process
determines if two code remote device code s are equal
retrieves the name of the local device
attempts to authenticate this code remote device code
retrieves the code device class code object that represents the
cancels the service search transaction that has the specified
retrieves the local devices discoverable mode
inserts a code data element code at the specified location
determines if this code remote device code has been authenticated
retrieves the bluetooth address of the local device
returns the number of code data elements code that are present
gets the service record corresponding to a code btspp code
christian lorenz this method is called from code bluetooth stack
removes the first occurrence of the code data element code
this method sets the state of this channel to closed and calls
christian lorenz resolves a bluetooth address to a remote device
sends an abort message to the server
returns the headers that have been received during the operation
returns the response code received from the server
this command will cause the bluetooth device to enter inquiry mode
constructor for obexclient it is used for establish and close connection
christian lorenz added this
clears all event filters
returns the response code received from the server
creates an javax
performs an obex delete operation
adds connection setup filters for connections from all devices
retrieves the connection id that is being used in the present connection
adds inquiry result filter for all new devices responding to the inquiry process
adds inquiry result filter for devices with a specific bluetooth address
sets the code authenticator code to use with this connection
sets the connection id header to include in the request packets
retrieves the name of the local device
this command will write the value for the scan enable parameter
this command will write the value for the class of device parameter
this command writes the lap s used to create the inquiry access code
this command will read the value for the bd addr parameter
receives information attached to connection complete event
adds a new message to the end of the queue
reads without removing the message from the queue
reads and removes the message from the queue
used to validate incoming requests
adds an object if it is not already present
removes an object
returns the first element
returns a iterator of the elements
returns true if the iteration has more elements
returns the next element in the interation
removes and returns the first element from this list
inserts the given element at the beginning of this list
appends the given element to the end of this list
clones the list
remove all mapping from this hash map
returns the accurate iterator
this method is called every time an code inform code
this method is called when all the result notification messages
this method allows to register a user defined code behaviour code
this method allows to register a user defined code behaviour code
this method is called whenever a message is received that does
this method allows to register a user defined code behaviour code
reset this behaviour
this method can be redefined by protocol specific implementations
redefine this method to call prepare response
utility method to register a behaviour in a state of the
redefine this method to call prepare result notification
redefine this method so that the handle cfp state is not registered
this method is called to handle the initial cfp message
this method is called when an accept proposal message is received from the
this method is called when a reject proposal message is received from the
this method is called whenever a message is received that does
register the bounding between an handler and a key
this method allows to register a user defined code behaviour code
this is invoked when a message matching the specified template
this method allows to register a user defined code behaviour code
reset this behaviour possibly replacing the receive templatt
this method allows modifying the template
this method allows to register a user defined code behaviour code
create and initialize the sessions and sends the initiation messages
this method allows modifying the key in the ds where to put the
signal an interruption to this receiver and cause the ongoing
re initialize the internal state without performing a complete reset
redefine this method to call the overloaded version with 3 parameters
check whether a reply is in sequence and update the appropriate session
check the status of the sessions after the reception of the last reply
this method resets the protocol and allows to change the
this method must return the vector of aclmessage objects to be
this method is called when a subscription
this method is called every time a code propose code
this method allows to register a user defined code behaviour code
this method is called every time a code refuse code
this method is called every time a code inform code
this method allows to register a user defined code behaviour code
utility method to correctly create a new code subscription code object
this method is called when all the responses have been
utility method to correctly retrieve the
this method is called when all the result notification messages
utility method to correctly retrieve the
utility method that retrieves all subscription s done by a given agent
this method allows to register a user defined code behaviour code
this method allows to register a user defined code behaviour code
retrieve the acl message with which this
this method allows sending back a notification message to the subscribed
this method allows to register a user defined code behaviour code
this method removes the current subscription object from the subscription responder internal tables
this method is called every time a code not understood code
this method allows to register a user defined code behaviour code
this method is called every time a code failure code
this method allows to register a user defined code behaviour code
this method is called internally by the framework and is not intended
attach a behaviour to the code prepare initiations code
reset this behaviour
this method allows to register a user defined code behaviour code
re initialize the internal state without performing a complete reset
check whether a received message complies with the protocol rules
this method allows to register a user defined code behaviour code
this method can be redefined by protocol specific implementations
this method allows to register a user defined code behaviour code
this method allows to register a user defined code behaviour code
this method can be called typically within the handle all responses method to
this method must return the vector of subscription aclmessage objects to be
this method is called every time an code agree code
this method is called to handle the initial request message and
this method is called when a cancel message is received from the
re initialize the internal state without performing a complete reset
this method allows to register a user defined code behaviour code
this method allows to register a user defined code behaviour code
utility method to send an optional agree message back to the
override the on start method to initialize the vectors that
reset this behaviour
close the ongoing session as soon as the next inform will
this method allows to change the code message template code
reset this protocol behaviour
override the set data store method to propagate this
this method is called when all the responses have been
this method is called when the initiators
this method allows to register a user defined code behaviour code
this method allows to register a user defined code behaviour code
create a new conversation identifier to begin a new
this method allows to register a user defined code behaviour code
add a new parameter to this event
get the parameter in the given position
get an iterator over all the parameters
this method must return the vector of aclmessage objects to be
return true if received aclmessage is consistent with the protocol
remove the element pointed to by this iterator
reset this behaviour using the same message template
this method is called every time an code accept proposal code
this method allows to change the code message template code
this method is called when the protocol initiation message matching the
this method is called every time an code reject proposal code
inserts the code element code before the current element
returns the current code element code in the list and updates the pointer
removes the first occurrence of the specified element in this list
returns true if this list contains the specified element
returns an iterator over the elements in this list
returns a string representation of this collection
this method must return the vector of aclmessage objects to be
this method allows to register a user defined code behaviour code
this method is used to fill the code content code slot
this method allows to register a user defined code behaviour code
this method should be called when the notification of a
load a set of key value pairs from a given storage element
retrieve the exception message text
store the set of key value pairs held by this properties object
add a parameter to this code event code object
retrieve an element of the event parameter list
initialize the data store
reset the status of this code event code
this placeholder method is called every time a thread actually
this placeholder method is called every time a thread actually
this method allows to register a user defined code behaviour code
retrieve the position of the first valid key value separator character or in
this method allows to register a user defined code behaviour code
this method allows to register a user defined code behaviour code
this method actually implements what the agent has to do in this
specifies whether or not this is a termination state
this method is invoked just before leaving this life cycle state
return true if the received performative is valid with respect to
set the imtp protocol used to reach the described
override get property in base class so all occurances of
retrieve a string identifying the described container
equality operation over container ids
hash code operation compliant with identity by name
perform substitution when a value is fetched
add a new parameter to this command object
remove a parameter from this command object
set the name of the class of this specifier
set property value
set the argument list for this specifier object
this method is used by boot profile impl and rma in order
set property value only if its not set already
equality operations between agent states
compares two agent states
reset this behaviour
fetch property value for key which may contain strings
reset this behaviour
retrieve the configuration properties as they were passed to this profile object i
use this method to fetch a property ignoring case of key
assign the given value to the given property name
assign the given property value to the given property name
called by get property key default to perform any post processing of the
retrieve a string value from the configuration properties
extract a string value and convert it to an integer
return true if the received performative is valid with respect to
retrieve a boolean value for a configuration property
store an int as a string with the specified key
creates a string representation of this profile
notify the platform that an agent has just died
extract a string value true or false and convert it to
access the platform service manager
store a boolean as a string true or false with the specified key
access the platform service finder
notify the platform that an agent has just suspended
change key string associated with existing value
add a new filter to the filter chain
remove a filter from the filter chain
process an outgoing command object carrying out the action it
process an incoming command object carrying out the action it
replace all substrings of the form xxx with the property value
notify the platform that an agent has just resumed
this method returns the current number of slices known to this
this protected method allows subclasses to define their own
notify the platform that an agent has just moved
add properties from reader
this protected method is used by code get slice code to
this should be properly implemented
this should be properly implemented
get a logical line
this should be properly implemented
notify the platform that an agent has just frozen
this should be properly implemented
read one line from the reader
this should be properly implemented
list properties to provided print stream
notify the platform that an agent has just thawed
this method permits to set the symbolic name of an agent
this method permits to set the symbolic name of an agent
this method permits to add a transport address where
to remove a transport address
change the name if any of the described node
to remove all addresses of the agent
change the described node if any
retrieve the id of the container if any hosted by the
returns an iterator of all the addresses of the agent
set the principal of the described node
retrieve the principal of the described node
set the principal of the owner of this node
retrieve the principal of the owner of this node if any
set the credentials of the owner of this node
retrieve the credentials of the owner of this node if any
to remove a resolver
to remove all resolvers
returns a boolean to indicate if the event type is either
returns an iterator of all the resolvers
returns a boolean to indicate if the event type is either
causes the local jvm to be closed when the last container in this
issue a notify received vertical command
allows setting a code runnable code that is executed when
wraps a normal jade behaviour code b code into a threaded behaviour
interrupt all threaded behaviours managed by this threaded behaviour factory
interrupt a threaded behaviour
returns the hap of the agent or null if the guid of this
suspend a threaded behaviour
resume a threaded behaviour
this method must be called to reset the behaviour and starts again
this method must be called to reset the behaviour and starts again
register a code behaviour code as a state of this
register a code behaviour code as the initial state of this
propagate the parent to the wrapped behaviour
register a code behaviour code as a final state of this
deregister a state of this code fsmbehaviour code
register a transition in the fsm defining the policy for
propagate a restart call typically this happens when this
register a transition in the fsm defining the policy for
propagate a downwards event typically this happens when this
register a default transition in the fsm defining the policy for
register a default transition in the fsm defining the policy for
deregister the transition from a given source state and identfied by a
deregister the default transition from a given source state
redefine the root method so that both the dummy parent behaviour
check if a default transition exits from a given source state
retrieve the child behaviour associated to the fsm state with
retrieve the name of the fsm state associated to the given child
retrieve the exit value of the most recently executed
override the on end method to return the exit value of the
actual behaviour implementation
prepare the first child for execution
resets this behaviour
this method allows the caller to get the received message
prepare the first child for execution
sequential policy for children scheduling
check whether this code sequential behaviour code must terminate
get the current child
return a collection view of the children of
add a sub behaviour to this code sequential behaviour code
remove a sub behaviour from this code sequential behaviour code
check whether this code fsmbehaviour code must terminate
get the current child
read event source
return a collection view of the children of
retrieve the enclosing composite behaviour if present
temporarily disregards the fsm structure and jumps to the given
get the previously executed child
put this fsmbehaviour back in the initial condition
change the ownership of an agent
returns the root for this code behaviour code object
blocks this behaviour
this method is used internally by the framework
blocks this behaviour for a specified amount of time
restarts a blocked behaviour
this method is used internally by the framework
associates this behaviour with the agent it belongs to
schedules a restart for a behaviour after a certain amount of
this method is invoked when the deadline defined in the
this method must be called to reset the behaviour and starts again
this method must be called to reset the behaviour and starts again
this method must be called to reset the behaviour and starts again
this method is used internally by the framework
this method is used internally by the framework
notifies this agent that one of its behaviours has been restarted
associates this behaviour with the agent it belongs to
prepare the first child for execution
get the current behaviour
check whether the current behaviour is the last in the list
get the current child
actual behaviour implementation
process a command before it is processed by successive
post process a command object after it has been processed by the
sets the blocking state of this filter
sets the skipping state of this filter
inquires the skipping state of this filter
add a sub behaviour to this code parallel behaviour code
remove a sub behaviour from this code parallel behaviour code
resets this behaviour
deregister an agent from the white pages service of this platform
developer can override this method to provide an alternative message queue creation mechanism
activate the asynchronous delivery of a generic message
the method decreases the value of size and eventually
searches the white pages for agents whose description matches a given
if a topic has the form foo
method to retrieve the location this agent is currently at
return all mtps in a given container
return all agents living on a container
return the topic management helper for a given agent
set message queue size
performs the passive initialization step of the service
retrieve the name of this service that can be used to look up
this method retrieves the current length of the message queue
retrieve the interface through which the different service
access the command filter this service needs to perform its
reads message queue size
change the name if any of the described service
access the command sink this service uses to handle its own
change the described service if any
retrieve the described service
start the monitoring
return the monitored target node
return the id of the container an agent lives in
serves an incoming vertical command locally
return the node a container is deployed at
this constructor builds a new behaviour id describing the
return the ams description of an agent
the active life cycle handles different internal states initiated
set the class name for this behaviour id
set the kind of behaviour described by this behaviour id
adds a new behaviour id as a child of this one
retrieve the list of all the children behaviour ids as an
tells whether this behaviour id has children
equality test on two behaviour ids
add a listener of platform events
hash code operation compliant with identity by name
read current agent state
returns the descriptive name of the state
determines if an object is equal to this object
compares a given object to this state object for the purpose of
returns the hash code for this state
a string representation of this state
remove a listener of platform events
get the name of the platform
start the platform after its been initialized
suspend the agent platform
activate the agent platform
kill the agent platform with all its agents
get agent proxy to local agent given its name
returns an instance of platform state
get agent proxy to local agent given its name
creates a new jade agent running within this container
shuts down this container terminating all the agents running within it
installs a new message transport protocol that will run within
removes a message transport protocol previously running within this
retrieve the name of the platform the container wrapped by this
retrieve the name of the wrapped container
retrieve a controller for the platform the container
make this agent move to a remote location
register a conversation creating a new unique id
register a conversation with a given id
deregister a conversation with a given id
make this agent be cloned on another location
deregister all conversations
return a template that matches only messages that do not belong to
print the stack trace for this exception on the standard
decode and parses the next message from the reader passed in the
parse an agent identifier without it being included within an
make a state transition from em active em or em waiting em
matches an acl message against this code message template code
encodes the message and writes it into the writer passed in the
retrieve a string representation of this message template
recovers an code aclmessage code object back from raw data
make a state transition from em suspended em to
append to the passed string buffer the slot name and value separated
check whether a given value for the slot this facet applies
get the schema associated to this facet
check whether a given value for the slot this facet applies
check whether a given value for the slot this facet applies
get the permitted values as string associated to this facet
check whether a given value for the slot this facet applies
writes the code sender code slot
access the command filter this service needs to perform its
creates an abstract descriptor to hold a content element of
make a state transition from em active em to em waiting em
creates an abstract descriptor to hold a variable
return true if
check whether a given abstract descriptor complies with this
creates an abstract descriptor to hold a ire of
check whether a given abstract descriptor complies with this
a variable can be put whereever a term of whatever type is
creates an abstract descriptor to hold an aggregate of
return true if
creates an abstract descriptor to hold a term of
adds a value to code receiver code slot
the difference between types of aggregates such as set and
creates an abstract descriptor to hold a content element list
add a mandatory slot to the schema
add a slot to the schema
add a mandatory slot to this schema
add a slot with cardinality between code card min code
add a slot to this schema
add a slot with cardinality between code card min code
removes a value from code receiver code
adds a super schema to this schema
add a code facet code on a slot of this schema
adds a super schema to this schema
make a state transition from em active em to em waiting em
creates an abstract descriptor to hold a concept of
access the command sink this service uses to handle its own
check whether a given abstract descriptor complies with this
creates an abstract descriptor to hold a predicate of
check whether a given abstract descriptor complies with this
removes all values from code receiver code
add a mandatory slot of type predicate schema to this schema
add a slot of type predicate schema to this schema
creates an abstract descriptor to hold a primitive of
creates an abstract descriptor to hold an agent action of
check whether a given abstract descriptor complies with this
check whether a given abstract descriptor complies with this
return true if
add a slot to the schema
make a state transition from em waiting em to em active em
adds a value to code reply to code slot
add a mandatory slot to the schema
add a slot with cardinality between code card min code
check the structure of a java class associated to an ontological element
removes a value from code reply to code
add a super schema to this schema i
make a state transition from em active em em suspended em
add a code facet code on a slot of this schema
removes all values from code reply to code
write this agent to an output stream this method can be used to
set the performative of this acl message object to the passed constant
retrieves the schema of a slot of this code schema code
indicate whether a given code string code is the name of a
writes the code content code slot
indicate whether a given code string code is the name of a
this method reads a previously saved agent replacing the current
adds a schema to this ontology
indicate whether a slot of this schema is mandatory
writes the code content code slot
creates an abstract descriptor to hold an object compliant to
check whether a given abstract descriptor complies with this
for each slot
retrieves the schema associated to a given class in this ontology
writes the code reply with code slot
redefine the code get schema code method to take into
check if this schema is compatible with a given schema s
redefine the code get schema code method to take into
converts a java object into a proper abstract descriptor
writes the code in reply to code slot
this method picks an object if present from the internal
note that we dont want to keep 22 different schemas for the 22
return true if
retrieves the concrete class associated with element code name code
set the value of this abs primitive to the given string
writes the code encoding code slot
set the value of this abs primitive to the given boolean value
get the abstract template of aggregate element
return true if s is a super schema directly or indirectly
retrieves the ontology actually containing the definition of a given schema
set the abstract template of aggregate element
set the value of this abs primitive to the given int value
this method is here just for debugging
set the value of this abs primitive to the given long value
set the value of this abs primitive to the given float value
sets an attribute of the object held by this
gets the value of an attribute of the object held by this
set the value of this abs primitive to the given double value
tests if the object is grounded i
writes the code language code slot
this method declares this agent attitude towards object to agent
set the value of this abs primitive to the given date value
this method is here just for debugging
returns true if the attribute is equal to
set the value of this abs primitive to the given byte value
returns an integer hashcode calculated from the
sets the name of this variable
sets the value type of this variable
gets the name of this variable
gets the value type of this variable
writes the code ontology code slot
sets the variable of this ire
sets the sequence of variables of this ire
sets the variable term of this ire
sets the proposition of this ire
gets the variable of this ire
gets the sequence of variables of this ire
gets the variable term of this ire
gets the proposition of this ire
sets the behaviour responsible for managing objects passed to the agent by
writes the code reply by code slot
this method is here just for debugging
writes the code protocol code slot
decodes the content to an abstract descriptor
writes the code conversation id code slot
encodes a content into a string using a given ontology
when an action expression is parsed if it is an abs concept then
reads code receiver code slot
encode the slots of an abstract descriptor by order i
encode the slots of an abstract descriptor by name i
encodes a content into a string
this production rule represents the more general expression that can
reads code reply to code slot
encode a string taking care of quoting separated words and
decodes the content to an abstract description using a
left brace in all of the possible states of the token manager
reads code sender code slot
right brace in all of the possible states of the token manager
this method allows to check if the content of this aclmessage
reads code content code slot
return the next sl token i
check that the next character after eventual spaces is
return the next sl element i
instruct this ontology to support usage of concept slots as functions
decodes the content to an abstract description
encode the slots of an abstract descriptor by order i
encode the slots of an abstract descriptor by name i
restore parser after deserialization
reads code reply by code slot
reads code reply by code slot
add a new user defined parameter to this aclmessage
searches for the user defined parameter with the specified key
replace all user defined parameters of this aclmessage with the specified properties object
test if a given content element is contained in this
removes the key and its corresponding value from the list of user
this grammar rule is an extension to the fipa sl grammar
removes the key and its corresponding value from the list of user
retrieves a previously registered code codec code
retrieves a previously registered code ontology code
fills the code content code slot of an
attaches an envelope to this message
fills the code content code slot of an
translates the code content code slot of an
translates the code content code slot of an
writes the message envelope for this message using the
reads the envelope attached to this message if any
merge the reference ontology with the inner ontology of the
convert an acl message to its string representation
redefine the put method so that keys must be string and
utility method to put a value of type code int code in this
utility method to retrieve a value of type code int code from this
utility method to put a value of type code boolean code in this
utility method to retrieve a value of type code boolean code from this
transform a frame into a string encoded according to the
transform a string encoded according to the sl
retrieve the whole list of intended receivers for this message
delete an exisiting connection based on position
get the socket of the connection when addr make matching
get the socket of the connection when addr make matching
get the capacity of vectors
entry point for the master server thread
actual method to activate the http mtp
call the proper method of the df and prepare the notification
avoid conflicts between the main message template and that used
when the protocol terminates deregister the conversation
set the code mobile agent description code slot of this
retrieve the value of the code mobile agent description code
set the code system code slot of this action
retrieve the value of the code system code slot of this
set the code language code slot of this action
retrieve the value of the code language code slot of this
set the code new name code slot of this action
set the code os code slot of this action
retrieve the value of the code os code slot of this action
set the code name code slot of this action
set the code major version code slot of this action
retrieve the value of the code name code slot of this event
retrieve the value of the code major version code slot of
set the code destination code slot of this action
set the code minor version code slot of this action
set the code agent profile code slot of this action
set the code dependencies code slot of this action
retrieve the value of the code agent profile code slot of
set the code agent version code slot of this action
retrieve the value of the code agent version code slot of
set the code signature code slot of this action
this method is executed when blocking receive is called
scan the facts and remove those whose lease time has expired
set the code debugger code slot of this action
set the code container code slot of this action
retrieve the value of the code container code slot of this
retrieve the value of the code debugger code slot of this
remove all agent identifiers from the
add an agent identifier to the code debugged agents code
set the code agent code slot of this action
retrieve the value of the code agent code slot of this
remove an agent identifier from the
set the code class name code slot of this action
access all agent identifiers from the
set the code sniffer code slot of this action
retrieve the value of the code sniffer code slot of this
remove all agent identifiers from the
add an agent identifier to the code sniffed agents code slot
remove an agent identifier from the code sniffed agents code
access all agent identifiers from the
set the code agent identifier code slot of this action
set the code agent name code slot of this action
retrieve the value of the code agent identifier code slot of
set the principal of the owner of the agent to be created
set the initial credentials to be granted to the agent to be created
add an object to the code arguments code slot collection of
remove all objects from the code arguments code slot
this method adds a new behaviour to the agent
retrieve the acl message whose content is represented by this
method to handle code not understood code replies
method to handle code refuse code replies
iterated search is only supported in a db based kb
method to handle code agree code replies
this method removes a given behaviour from the agent
method to handle code failure code replies
set the code description code slot of this object
method to handle code inform code replies
set the code constraints code slot of this object
retrieve the code constraints code slot of this object
method to handle out of sequence replies
retrieve the lease time for the registration of this
add a service to the code addresses code slot collection
remove a service from the code addresses code slot
add a protocol name to the code protocols code slot
add a service description to the code service code slot
retrieve a string representation for this platform service
remove a protocol name from the code protocols code slot
remove a service description from the code services code
remove all protocol names from the code protocols code slot
remove all service descriptions from the code services code
regenerate the value of search id as a globally unique identifier
this public method allows to get the inform message received in the final
access all protocol names from the code protocols code slot
set the code search id code slot of this object
access all service descriptions from the code services code
set the code by code slot of this object
add an ontology name to the code ontologies code slot
set the code max depth code slot of this object
retrieve the code by code slot of this object
cleanup em df em on exit
remove an ontology name from the code ontologies code slot
set the code from code slot of this object
set the code max results code slot of this object
remove all ontology names from the code ontologies code slot
access all ontology names from the code ontologies code slot
add a content language name to the code languages code slot
remove a content language name from the code languages code
set the code via code slot of this object
retrieve the code via code slot of this object
remove all content language names from the
retrieve a string representation for this received object
access all content language names from the
set the code ownership code slot of this object
set the code ownership code slot of this object
set the code state code slot of this object
retrieve the code ownership code slot of this object
add a property to the code properties code slot collection
add a service to the code ap services code slot collection
remove a service from the code ap services code slot
remove a property from the code properties code slot
remove all services from the code ap services code slot
access all services from the code ap services code slot
remove all properties from the code properties code slot
retrieve a string representation for this platform description
access all properties from the code properties code slot
set the code sender code slot of this event
set the code what code slot of this event
retrieve the value of the code what code slot of this event
set the code observed code slot of this action
retrieve the value of the code sender code slot of this
retrieve the value of the code observed code slot of this
set the code message code slot of this event
add an event name to the code events code slot collection of
retrieve the value of the code message code slot of this
remove all event names from the code events code slot
set the code receiver code slot of this event
set the code behaviour code slot of this event
retrieve the value of the code receiver code slot of this
set the code container code of this event
retrieve the value of the code behaviour code slot of this
add an agent identifier to the code to code slot collection
set the code where code slot of this event
set the code to code slot of this event
set the code what code slot of this event
retrieve the value of the code where code slot of this
retrieve the value of the code what code slot of this
set the code when code slot of this event
remove an agent identifier from the code to code slot
we broadcast the search request to all children federated dfs in parallel
retrieve an sl0 like string representation for this object
set the code where code slot of this event
retrieve the value of the code where code slot of this
remove all agent identifiers from the code to code slot
set the code buffer container code slot of this event
retrieve the value of the code buffer container code slot of
access all agent identifiers from the code to code slot
set the code from code slot of this object
set the code address code slot of this event
retrieve the value of the code proto code slot of this
retrieve the code from code slot of this object
set the code from code slot of this event
retrieve the value of the code from code slot of this event
set the code to code slot of this event
set the code comments code slot of this object
retrieve the value of the code to code slot of this event
set the code platform code slot of this event
retrieve the value of the code platform code slot of this
set the code state code slot of this event
set the code from code slot of this event
retrieve the value of the code from code slot of this event
set the code to code slot of this event
set the code acl representation code slot of this object
retrieve the value of the code to code slot of this
retrieve the code acl representation code slot of this
set the message envelope
retrieve the message envelope
set the representation of the message payload
retrieve the representation of the message payload
set the code from code slot of this event
set the payload i
set the code payload length code slot of this object
set the code to code slot of this event
set the code payload encoding code slot of this object
retrieve the code payload encoding code slot of this object
add an agent identifier to the code intended receiver code
remove an agent identifier from the
remove all agent identifiers from the
access all agent identifiers from the code intended
start listening for internal platform messages on the specified port
set the code received code slot of this object
subclasses may re define this method to return their own
subclasses may re define this method to return their own
retrieve the code received code slot of this object
called by the jicppeer ticker at each tick
run length encoding write
run length encoding read
release all resources of this leapimtpmanager
retrieves the agents service helper
called by the jicppeer ticker at each tick
retrieve a configuration property set in the code profile code
set the session id of this packet and adjust the info field
set the recipient id of this packet and adjust the info field
set the terminated info flag in the info field
asynchronously restore the out connection
subclasses may overwrite this to provide their version of a jicpconnection
writes an aid object to this data output stream
reads an object of type string from this data input stream
writes a string object to this data output stream
reads an object of type date from this data input stream
this method is used to interrupt the agents thread
reads an object of type string buffer from this data input stream
writes a date object to this data output stream
reads an object of type vector from this data input stream
writes a string buffer object to this data output stream
add a transport address to the list of addresses of the remote
writes a vector object to this data output stream
start the asynchronous reconnection process implemented in the run method
writes an array of string to this data output stream
note that when delivering messages to agents we never deal with aclmessage objects
note that normal command dispatching and postponed command
re define the get protocol method to return the httpprotocol
re define the get connection factory
send a keep alive packet to the be
send a keep alive packet to the be
note that when delivering messages to agents we never deal with aclmessage objects
deserializes a tt command tt object from a tt byte tt array
builds a command that carries an exception
returns the id of the specified remotized object
returns the list of local addresses
this method returns the current description of this df
returns the list of urls corresponding to the local addresses
converts an url into a transport address using the transport
return the ownership of a container
shuts the command dispatcher down and deactivates the local icps
return the ownership of an agent
write the ap description in a text file
return a list of all mtps in the platform
check if this search must be served i
initialize the data store
load a set of key value pairs from a given storage element
store the set of key value pairs held by this properties object
prints the stack trace of this exception
initialize the data store
assign the given property value to the given property name
retrieve a list of specifiers from the configuration properties
this method permits to add a transport address where
to remove a transport address
to remove all addresses of the agent
returns an iterator of all the addresses of the agent
to remove a resolver
to remove all resolvers
returns an iterator of all the resolvers
adds a value to code receiver code slot
removes a value from code receiver code
removes all values from code receiver code
adds a value to code reply to code slot
removes a value from code reply to code
removes all values from code reply to code
the active life cycle handles different internal states initiated
redefine the code get schema code method to take into
make a state transition from em suspended em to
reads code receiver code slot
reads code reply to code slot
writes the message envelope for this message using the
this method is used to interrupt the agents thread
checks if the current level is loggable
list boot properties to provided print stream
get boot properties
set boot properties
this method must return the vector of aclmessage objects to be sent
this method allows to register a user defined code behaviour code in the
this method allows to register a user defined code behaviour code in the
this method is called every time a code propose code message is received
this method is called every time a code confirm code message is received
this method is called every time a code disconfirm code message is received
initialize the data store
return true if received aclmessage is consistent with the protocol
initialize the data store
return true if received aclmessage is consistent with the protocol
this method is called when the initiators
this method is called after the code query if code has been received
this method is called after the code reject proposal code has been received
this method is called after the code accept proposal code has been received
this method allows to register a user defined code behaviour code
set the field of the gui
to set the field with the valued of a given apdescription
this method must return the vector of aclmessage objects to be sent
return the string relative to service description fields if not empty null otherwise
this method allows to register a user defined code behaviour code in the
this method allows to register a user defined code behaviour code in the
this method allows to register a user defined code behaviour code in the
initialize the data store
inserts the specified element at the specified position in this list
fill this list with the content of a given
a customized write object method is needed to ensure
return true if received aclmessage is consistent with the protocol
this method initializes this
removes and returns the first element from this list
inserts the given element at the beginning of this list
appends the given element to the end of this list
this method initializes j content pane
this method initializes j panel
print a java object to the two streams
print a string to the two streams
print a new line to the two streams
print a java object and a new line to the two streams
this method initializes j button ok
print a string and a new line to the two streams
store the set of key value pairs held by this properties object
update this access control list object
this method initializes j table
print a java object to the proper file replacing the file
print a string to the proper file replacing the file every new
print a new line to the proper file replacing the file every
print a java object and a newline to the proper file replacing
print a string and a new line to the proper file replacing the
a customized write object method is needed to ensure compatibility with
this method is used by boot profile impl and rma in order
add a newly born node to the persistent storage
remove a dead node from the persistent storage
mark a node as unreachable in the persistent storage
remove the unreachable mark from a node in the persistent storage
check whether this code fsmbehaviour code must terminate
event triggered when an agent is registered to the code locator
event triggered when the associated agent class loader is updated in
event triggered when an agent is cloned
event triggered when an agent is removed from the code locator
method which close the jar file
get the jar filename
get a class from within the jar file used in this classloader
clean up the jar class loader
an agent has just died on the front end
an agent on the front end has sent a message
start monitoring a given node
returns all child nodes of the targeted node
returns the time when the last ping message has been received
this method is re defined to avoid null pointer exception
start sending udp ping messages to the node failure server
this method is re defined to avoid null pointer exception
registers a code udpnode failure monitor code
deregisters a code udpnode failure monitor code and all
start the front end synchronization process
subclasses may implement this method
adds to the ontology the schema built from the class code clazz code
adds all the ontological beans the ones which implement either
adds to the ontology the schema built from the class code clazz code
adds all the ontological beans the ones which implement either
retrieve the names of all concepts defined in this ontology including extended ontologies
retrieve the names of all predicatess defined in this ontology including extended ontologies
dump ontology to specified print stream
return the properties collection which resulted from the arguments
fetch and verify a boolean attribute
check if http addresses are equivalent same port same host same proto
returns the memory based knowledge base which will be used by the df
returns the database based knowledge base which will be used by the df
drops a db table or does nothing if the table doesnt exist
check whether a database table already exists
creates a new db table
loads an jdbc driver
cleanup em df em on exit
builds an error message for a code batch update exception code
stores the information of an aid of a resolver
returns all resolver aids for the given aid
remove the dfd object corresponding to the indicated aid
add an agent to the list
removes an agent from the list
clears the agent list
verifies if an agent is present on the canvas
gives back the position inside the agents
given an agent name sniff it
adds a sniffed message to the list
removes a message from the vector
clear all messages in the vector
returns the messages vector
the body of the server thread
try to clean up on gc
send and receive acl messages using java
validate all the agent names of the recipients in the acl message
validate a single agent name
fix any receiver names which are missing the
private function to read configuration file containing names of agents to be
removes df registrations and subscriptions whose lease time
description of the method
gets the its msg attribute of the test agent frame object
gets the platform request attribute of the test agent object
description of the method
sets the its msg attribute of the test agent frame object
removes df registrations whose lease time has expired
sets the frame icon attribute of the test agent frame object
removes df subscriptions whose lease time has expired
description of the method
description of the method
description of the method
description of the method
removes an agent from the canvas agent then repaints it
description of the method
removes all the agents and messages from their lists then repaints the canvas
description of the method
sets the progress attribute of the splash screen object
return all known subscriptions at the df
sets the editable attribute of the aclproperty list object
looks if an agent is present on agent canvas
removes a registration from the database
sets the editable attribute of the aclcombo box object
part of observer interface
returns an handler to the agent list
closes an open result set and logs an appropriate error message
description of the method
returns an handler to the message list
description of the method
description of the method
gets the list cell renderer component attribute of the
register the aclmessage
closes an open sql statement and logs an appropriate error message
gets the user action attribute of the aclproperty dialog object
set the message list handler as the parameter passed then repaints the canvas
gets the ok attribute of the aclproperty dialog object
description of the method
gets the itskey attribute of the aclproperty dialog object
description of the method
description of the method
gets the itsvalue attribute of the aclproperty dialog object
serializes any serializable object to a base64 encoded string
description of the method
this method starts the em rma em behaviours to allow the agent
returns the entire text of this text area
description of the method
sets the editable attribute of the aclproperty dialog object
description of the method
cleanup during agent shutdown
gets the its address attribute of the acladdress dialog object
sets the user action attribute of the aclproperty dialog object
sets the itskey attribute of the aclproperty dialog object
sets the input handler
deserializes any serializable object from a string
sets the editable attribute of the acladdress dialog object
trim off known prefixes
sets the edit attribute of the aclproperty dialog object
sets the its address attribute of the acladdress dialog object
sets the itsvalue attribute of the aclproperty dialog object
gets the user action attribute of the acladdress dialog object
returns an md5 hash value for an object
sets the user action attribute of the acladdress dialog object
description of the method
sets the frame icon attribute of the aclframe object
gets the column name attribute of the statistics table model object
description of the method
gets the value at attribute of the statistics table model object
this method must be used when inserting text values into a db
description of the method
description of the method
update text field
triggered when focus lossed
process focus event listener
gets the list cell renderer component attribute of the some label renderer
description of the method
description of the method
sets the line displayed at the text areas origin without updating the
returns if the copy area should not be used
description of the method
replaces all occurences of a code pattern code in code str code
returns the painters preferred size
description of the method
sets the horizontal offset of drawn lines
sets the font for this component
callback method for platform management em gui em
disables the use of the copy area function which is broken in jdk
a fast way of changing both the first line and horizontal offset
returns true if italics is enabled for this style
callback method for platform management em gui em
marks a line as needing a repaint but doesnt actually repaint it until
reparses the document by passing the specified lines to the token
returns the specified font but with the styles bold and italic flags
returns the font metrics for the styled font
adds a aclmessage node to the list
returns a string representation of this object
description of the method
description of the method
gets the list cell renderer component attribute of the
description of the method
description of the method
gets the its aid attribute of the aclaiddialog object
callback method for platform management em gui em
sets the editable attribute of the aclaiddialog object
sets the document this text area is editing
sets the its aid attribute of the aclaiddialog object
adds a token to the token list
gets the message attribute of the message node object
gets the performative attribute of the message node object
adds a aclmessage to the list
gets the send to attribute of the message node object
gets the ontology attribute of the message node object
callback method for platform management em gui em
sets the message attribute of the message node object
sets the direction attribute of the message node object
sets the aclmessage of the frame
disable editing of aclmessage
callback method for platform management em gui em
sets the entire text of this text area
gets the its msg attribute of the aclpanel object
register an aclmessage with the accompagnied membername
callback method for platform management em gui em
delete the current selected aclmessage from the list
sets the read only attribute of the aclpanel object
callback method for platform management em gui em
register aid and fieldname from aclmessage
replaces the selection with the specified text
show about screen
sets the disabled attribute of the aclpanel object
looks up a key
callback method for platform management em gui em
description of the method
callback method for platform management em gui em
callback method for platform management em gui em
gets the list cell renderer component attribute of the
description of the method
description of the method
description of the method
description of the method
description of the method
description of the method
description of the method
private method to read the message
shows the message not authorized and does nothing
returns df that is the name of the default df
callback method for platform management em gui em
this method requests the df the dfagent description of a specific agent
callback method for platform management em gui em
show the current aclmessage
this method is invoked just after the generic agent
this method is invoked just before the generic agent
retrieve the code subscribe code acl message with which this
retrieve the code cancel code acl message with which this
retrieve the code request code acl message with which this
the description of this filter
use this method to show a message on the df gui
called by the jicppeer ticker at each tick
similar to code set selected text code but overstrikes the
called by a mediator to notify that it is no longer active
called by the pdpcontext manager if any
subclasses may re define this method to return their own
the description of this filter
shutdown self initiated or forced by the jicpserver this
refresh the search result
this is called by the jicpserver when a jicp packet addressing this
places the selected text into the clipboard
this is called by the jicpserver when a jicp create mediator or
return a stub of the remote front end that is connected to the
inserts the clipboard contents into the text
make this back end dispatcher terminate
called by the awt when this component is removed from its parent
shut down this jicp server
request the fe to refresh the connection
close the connection
retrieve the id of this mediator
termination self initiated or forced by the mediator manager we are attached to
retrieve the startup properties for this niobedispatcher
this is called by the jade runtime when this service is deinstalled
kill the above container
retrieve the helper of this service
notify this niomediator that an error occurred on one of the
executes a wrap on the sslengine prevents threads from calling this method concurrently
closes the sslengine tries to send a ssl close message
passes to this mediator a jicppacket received by the
termination initiated by the back end container i
generates handshake data and calls
wait until a connection to deliver commands to the front end is ready
encrypt application data does not write data to socket
wait until the response to the last outgoing command is received
return a stub of the remote front end that is connected to the
description of the method
make this niobedispatcher terminate
handle a key typed event
move from the connection dropped state to the disconnected state
request the fe to refresh the connection
description of the method
description of the method
move from the connection dropped state to the disconnected state
called by a mediator to notify that it is no longer active
description of the method
description of the method
description of the method
get the rmiregistry
shutdown self initiated or forced by the mediator manager this
handle an incoming connection
description of the method
clean up this httpbedispatcher
creates the client socket factory which will be used
build up renderer
gets the list cell renderer component attribute of the
specifies the entry uri
specifies the relationship between the containing entity and the contained location
specifies a user readable label to distinguish this location from other locations
brief title for the event
location of the event or nearby necessities such as parking
used by some apis to specify where the extended property applies
contents of the entry
describes when the event ends
specifies the name of the property expressed as a uri
describes when the event starts or for zero duration events when it occurs
protege name transparency
specifies whether the contained entry is read only
longer description of the event
protege name when
protege name timeslots
protege name visibility
protege name extended property
person who created this event
protege name original event
convert um when da ontologia para um timeslot
people associated with the event organizer attendees speakers performers etc
represents the dates and times when a recurring event takes place
method that performs command event handling of the start screen
schedules the execution of a background operation
schedules the execution of a background operation
schedules a cancel in the async operation
gets whether a cancellation is pending in the background worker
reports asynchronous work progress
removes a knowledge source with the given url independant of its type
sets the reasoner component and creates the corresponding
adds a knowledge source to the client session
update horizontal bar
update this option panel by completely rebuilding its
add new entry and make a new jcheck box
convenience method returning a jlabel with the name of
subclasses should call this method if a configuration option
get a percent string like this 10 5
special layout returns true if 2nd layout should used
updates the option panel
method performing actions when panel is activated
make a string from list every entry in new line
method is called when algorithm has terminated successfully
add base directory value to beans which need it
get component manager
get knowledge source
creates a knowledge source and makes it the active source
setup the testing
validate the configuration
validate the learning result
creates reasoner reasoning service and makes it active
change the reasoner and notify the depending components
get learning problem
creates learning problem and makes it active
change the learning problem and notify the depending components
get learning algorithm
returns whether the corresponding tab needs to be initialised
returns whether the corresponding tab is enabled e
tests whether components can be enabled
return the short form local name for a uri identifier
maximum distance coordinates and actual position of
returns the current axioms being whose explanation is being rendered or
returns the current smart indent value
returns the current line wrapping value
sets the smart indent option which will align the elements of
sets the line wrapping option which will print the elements of
returns a reference to the editor component
when an action is performed editing is ended
when an items state changes editing is ended
this method returns the graphical coverage panel
this method returns how much the old concept must be shifted
this method returns how much the plus in the middle must be shifted
this method returns how much the new concept must be shifted
this method returns how much the new concept must be shifted
unsets the panel after plugin is closed
returns the currently selected evaluated description
add the evaluation for the current class to the result map
this method returns the min accuracy chosen in the slider
this method returns the max execution time chosen in the slider
this method returns the number of concepts chosen in the slider
this method returns the owlradio button
this methode returns the elprofile button
this methode returns if the allquantor box is selected
this methode returns if the some box is selected
this methode returns if the not box is selected
this methode returns if the value box is selected
this methode returns the profile panel
this methode returns the int of the cardinality restriction
this methode returns if the cardinality restiction box is selected
this methode sets the the checkboxes enable that are needed for
show a red colored warning if adding the selected class expression would
this methode sets the the checkboxes enable that are needed for
this methode sets the combo box for the cardinality restriction
this method handles the actions to be taken if a
this method returns the x axis coordinate
this method returns the y axis coordinate
this method returns the name of the individual
this method returns an ellipse of the individual for the graphical coverage panel
render an n ary axiom with special handling for the binary case
this method returns the dllearner individual
nothing happens here
this method returns the suggest class panel
this method returns the pos and neg select panel
nothing happens here
this method sets the right icon for the advanced panel
this method sets the status bar visible when learning
this method changes the hint message
resets the toggled button after the plugin is closed
this method returns the hint panel
sets the panel to select deselect the examples visible invisible
returns the add button
this methode handles what happens when a hyperlink is clicked
this method unsets all results after closing the plugin
destroys everything in the view after the plugin is closed
this method returns the panel for more details for the chosen concept
this method sets if ontology is inconsistent or not
this method returns if the ontology is inconsistent
adds actionlistener to the run button
adds actionlistener to the add button
returns the graphical coverage panel
adds actionlistener to the advanced button
unsets the panel after plugin is closed
this method returns the view of the plugin
this method sets the help button visible
check whether a tree is an auxiliary tree
clears all results of this instance of parser
increases the total frequency with 1
stops the algorithm
changes how long cached results will stay fresh default 15 days
convert a jena model to an owl ontology
filters out certain namespaces
low level executes query returns result set
variable must be count
low level executes query returns json
a string helper which constructs the limit clause of a sparql query
sends a sparql query using the jena library
stops the execution of the query
gets the string representation of the sparql query
return the result in json format
get the ontology to byte converter associated with this object
set the ontology to byte converter associated with this object
converts the result set to an xml string
needed for expanding subclasses if store does no reasoning
todo this function is still used somewhere but should be replaced
by default the operator does not specialize e
get a string to save into a configuration file
returns whether the uri can refer to a file or not e
specifies whether setting this option requires that the
returns whether the uri can refer to a class in a loaded
implements a subsumption check using the hierarchy no further
checks whether the description is contained in the hierarchy
convenience method which adds an axiom to abox rbox or
add another knowledge base to this one
calculate the number of nodes for this description tree each
selects a sub tree
calculates the description tree depth
adds a description as child of this one
adds a child description at the specified index
remove the specified child description its parent link is set
registers a component instance in the pool
unregisters a component instance
add a config entry change for the specified component
method to exchange the reasoner underlying the learning problem
this method returns an instance of code reasoner component code
reset all statistics
the code component manager code factory methods produce component
notify the reasoner component that the underlying knowledge base has
call this when you want to change the learning problem but
call this when you want to change the reasoning service but
the reasoning service variable which must be used by
returns the name of a component
method to exchange the reasoner underlying the learning
returns a sparql query to get instances of this description
this convenience method can be used to store and exchange evaluated
gets the owl api ontology manager
constructs a role hierarchy using dig queries
method which minimzes the input description
transforms context r s to exists r
initialise all components
returns true if the class hierarchy was computed before
makes neg ex from classes the pos ex belong to
just takes all other instances from the ontology except the ones
not implemented yet do not use
add a number to this object
prints time needed and resets the clock
prints time needed and resets the clock
gets the mean of all numbers
entires should be in latex if the target is latex
gets the mean of all numbers as percentage
prints time needed
resets the clock
resets the clock
returns the needed time up to now in ms
pretty prints the results under the assumption that the input
same as select int int
passes it one by one to add table row column
calculates precision based on the test set removes all training data from
calculates recall based on the test set
a simple recursive implementation of a tree to string conversion
is used important when removing nodes from sub classes sorted set
returns the label for the monitor
returns any object that has a named key
used to set any arbitrary object into the key
sum of training and test data
gets first tree
gets second tree
adds a tuple to the simulation
removes a tuple from the simulation
traverses the el description tree upwards until it finds
traverses the tree until the root node and counts how
internal method for updating the node set and the level node mapping
replaces an entry in the node label
adds an entry to the node label
gets the node at the given position
returns a string of the tree description without the overhead of converting
used to detect whether one node is more accurate than another one
size of tree number of nodes sum of cardinality of node labels
add a description into search tree
calculate score for a node which is used as the searching heuristic
get number of positive examples covered by a description
get number of negative examples covered by a description
calculate predictive accuracy of a description pred accuracy d
calculate the correctness of a description
calculate the completeness of a description
returns the program tree corresponding to this program
gets the score of this description
let c be the considered class description and a the class to learn
true if min execution time reached
sets the probability that crossover is performed
sets the probability that an individual is mutated
switch for turning elitism on or off
this method controls how many individuals will actually be selected and
computes whether a hypothesis is too weak i
computes whether a hypothesis is too weak i
this allows to set the number of individuals in the whole population
the algorithm converges if it doesnt find a fitter individual after a
this method switches the type of selection which is performed
this switch controls which type of algorithm is used
close the window
functions related to task monitoring
functions related to task monitoring
update the cutoff in the data
return the pattern tree
return the amplitude tree
return the gene ontology annotations data
print the tree nodes on the standard output
return the experiment ontology annotation data
rules of acceptances
return the description of this filter
called to find out how much work needs
called from progress bar to find out how much has been done
called from progress bar demo to find out if the task has completed
returns the most recent status message or null
task that reads the data
functions used for monitoring
clear the branch persistence
recursive method of node search from string
search a node recursively
print nodes recursively used from print tree
print the full tree nodes on the standard output
give the branch persistence
return the head of the tree
return the tree depth
return the number of heads
get total number of nodes for sons
convert the whole tree into a comma delimited string
this convert the id to a unique color
give the branch persistence
built the value persistence with fathers and sons
set the cutoff value on the nodes
update the cutoff and values bin variables
set the full count matrix and p values matrix
get the number of elements cutoff
change cur node
return method in out
test if the directory content is readable by this module
return the number of clusters found in this directory
count the number of files
update method to be called when curnode curlevel or display options are changed
procedures of graph coordinates conversion
test if the directory content is readable by this module
return the number of clusters found in this directory file
read data and populates matrices in the basic data class
test if the directory content is readable by this module
return the number of clusters found in this directory
export svg graphics
test if the directory content is readable by this module
close the window
test if the directory content is readable by this module
return the number of clusters found in this directory
used by compare interface
standart output printing of attibutes
compare two lines of the binary table
export to a picture
return the node corresponding to the coords x y
set the current level to be highlithed
set drawing options
set the step plot mode
return the ontology list
return the total number of ontological terms in the data
return the number of ontological terms in the data
return the total number of annoted genes
used by the hypergeom test
update list of row col according to an indice
update list of row col according to an interval
update list of row col according to an indice
update list of row col according to an interval
write the full gene table onto a file
update gp cs and and lg
write the current table id into a file
erase data for a new session
export the current members into multiple files
write the current ontology table onto a file
set the column widths
init the variable display cols for ontologies
update on count bin
highlight a cell and translate the viewport if necessary
compare based on type followed by description
gets data from server using the library settings as a url
gets data from server using the library settings as a file path
public method to retrieve node without setting internal variables should really
parse page content to check whether users input are valid
utility ro parse pubmed page
get the result of the editable evidence at the end of operation
loop through both hash tables and reset everything
when user clicks unclicks node this method is called
start the applet
stop the applet
get applet information
get applet information
invoked when the frame is resized
returns if node and or its parent fall in the viewport
in this directory obo idw expects to find a file named perspectives
components that wish to be notified of progress events
components that wish to be notified of gene annotation change events
components that wish to be notified of aspect change events
components that wish to be notified of gene node color change events
components that wish to be notified of annotation drag events
inform the components that have registered an interest that an event has occurred
inform listeners that annotations in a gene have changed
inform listeners that the aspect has changed
inform listeners that gene node color has changed
inform listeners that an annotation drag event has occurred
from vetoable shutdown listener interface this method is called from plus obo bbop
gets the node which is currently displayed at the top of
set up and show the dialog
this is called when the remove term button is clicked
public method to retrieve node without setting internal variables should really
centers component on screen put in a util class
user has to login to be gouser and have go user group name
gets the node which is currently displayed at the top of
given a node determines if node can become subfamily
loop through and reset everything
called by set value at
set up and show the dialog
returns an image icon or null if the path was invalid
first tries to get user name from system
i think this only works for unix
queries user for name with a dialog box
called when the application starts
lets the control classes exit orderly in reverse order of creation
loads the css file required by kuix
necessary to have overwritten method of abstract class kuix midlet
closes a record store so no further operations can be made
enables network to remove a buddy e
deletes a record store completely
enables network to remove a buddy e
receives new buddy from network adds it to the buddylist object
adds an array of records to the record store managed by the actual
looks for an address and if its found the corresponding name is returned
removes a buddy based on its unique address and notifies gui
saves a string into the given id number of a record
looks for a name and if its found the corresponding address is returned
opens a record and returns the content as a string
notifies gui of multiple new buddys in the network
send a keepalive packet to all neighbors
set output form
format the string
called by network to give core the friendly name read of the bluetooth
wait for notify or timer and flush the queue
listens for incoming connections
addes a packet to the queue
changes name to bluetooth adress
returns the stored buddylist object
send packet via this connection
saves the device name to a record store
loads the device name stored in a record store
constructor of device connector
sends incoming message to networkinterface
wait for notify and initiate device connection
only takes effect when toothfairy is started for the first time
stores all the settings from the settings menu
this method initiates the connection to a device
resolves a given unique address into the corresponding device name
initiate device scanning
resolves a given name into the corresponding address
main loop of scanner
destroys all network services
notifies gui when a buddy comes leaves or changes the own name
check of progress state
update record attributes
called when the device os pauses the midlet
check if address is on ignore list for whatever reason
closes and destroys necessary things before the midlet terminates
invoked for every single discovered device
invoked when discovery on one device completed
sends a keepalive packet to all interfaces
invoked when device search is finished
converts the constant into its string representation
returns the buddys address
compares two buddys lexicographically by their names including the
initializes the network control object
sends incoming message to core
the singleton doesnt know the reference of the gui control class object
the singleton doesnt know the reference of the core control class object
computes next hop
add or update one buddy
notifies gui when a buddy comes leaves or changes the own name
remove one buddy
int core has received a new message and calls this method so it
called by network control to propagate the read friendly name to core
called by core to propagate the custom friendly name read from record store
returns the friendly name stored by core
called by network as they read the friendly name of the bluetooth device
sends changed settings to be stored at core
gets the own devices bluetooth address
gets the numer of maximum connections possible for the device
sends a debug message to be displayed by gui
checks if address is reachable
core calls this to set the friendly name changed by name resolution
used to remove the frame after user pressed the back button
forwards a debug message to be displayed by gui
method to load the specific help xml file for each language after
changes the nickname to the devices bluetooth adress
after removing closes the current help frame and goes back to the
receives multiple new buddys in the network
allows the user to skip the start frame or to close toothfairy
gets the own devices bluetooth address from the core
adds the start frame and sets the duration how long it is shown
gets the own bluetooth adress from the network
removes the start frame
gets the maximum number of connections
sends an alert message to the screen
notifies network and gui that we have loaded the friendly name from the
only used for debug
errorcode to specify the incoming message type
core control stores the buddylist as a buddylist object
initializes variables loads the xml file and sets the current screen
errorcode for the buddy status message when a buddy comes leaves or
uses the built in j2 me function to let the mobile device vibrate
method to save changed settings
errorcode for the outgoing message
errorcode for an outgoing message and their receivers
called when the friendly name has been changed by user
when the discovery agent discovers a new device it calls this method to
manages the action and title of the left functions keys menu
errorcode for updating the settings
get interface of a neighbor
called by network to remove a buddy not in the network anymore
updates the statistics with new values and update the screen
method to show the main screen
stores changed settings sent by gui
sets all settings except for the user name
initializes the shut down of the application
forwards a debug message to be displayed by gui
errorcode used for the debug screen
sets creates a language for the midlet
cancels active tasks closes the active window and loads the main screen
notifies gui of multiple new buddys in the network
errorcode to set the friendly name of the user
sets the font size according to the string representation
notifies gui when a buddy comes leaves or changes the own name
errorcode to send the actualized friendly name to the other users in the
gets the maximum number of connections
errorcode to initialize the frames of the application
adds the current screen
shows an alert on the screen
manages whether or not own messages appear in broadcast chat tab
quits the application
returns the visibility of own messages in the broadcast chat tab
gets the devices bluetooth address from the gui interface
gets the maximum number of possible connections from the gui interface
manages whether or not join and leave messages appear in broadcast chat tab
sends an alert message to the screen using predefined alert numbers
returns the visibility of join and leave messages in the broadcast chat tab
manages wether or not own messages shall be highlighted
manages incoming messages that have been sent to all users broadcast
returns if own messages are highlighted or not
manages incoming messages that have been sent specially to one user
manages the length of the vibration after getting a private message
returns the length of vibration in msec as a string
provides the bluetooth adress of the own device
the output of the debug frame
returns the own bluetoothaddress as saved by the data provider
provides the max number of connections of the own device
shows the active tab
returns the max number of connections as saved by the data provider
will close the currently selected tab except for buddylist gruppenchat
returns the language object
returns the string identifier of the language object
sets the list of files associated with this folder
sets the md5 hash for this files
gets the task type
returns the last check date for this file
sets the task type
sets the last check date for this file
rerurns he folder containing this file
sets the task state
sets the associated folder to this file
gets the watched file state
sets the watched file state
string representation of the task
rerurns he folder containing this file
sets the associated folder to this file
sets the number for watched files
gets the number of watches files
returns the total number of files watched
the watched files dao used in this service
sets the watcher task dao
sets the file system dao
sets the watched folder service
sets the watched file service
the watched folders dao used in this service
the service used to create new task
periodically launched job
sets up the tests
test the number of files found in a test directory
test the md5 sum
logs to stdout
logs to stdout
terminates the virtual machine
starts the cli
updates the status
adds a value to the chart
adds a value range to the chart
not implemented yet
fetches a line of metadata
returns the chart size
calculates the number of seconds since the epoch for a given
creates a help file containing all the wizard step help texts
returns the reason why a string is invalid
checks if a value is valid
returns why a value is no valid string
re loads these options
internal loader function
loads options from a different project into this options object
saves all modified options
loads all options from the config file
sets the value of this option
gets an option by its property name
loads the value from the project settings
saves the value into the project settings
creates a new site type option
saves all modified options to the config file
sets the value of this option
checks if a value is valid
returns why a value is invalid
loads the value from the project settings
saves the value into the project settings
does not return the next key
checks if verifyflags allow verifying in a given
overrides the superclass method to prevent repetition of the check
converts an int array to a string
adds the charset into the content type if applicable
checks if a job with name tt progress name tt has already
determines the file class responsible for a given file name
creates a new job
initializes the thread producer
returns the only dependency of this job or code null code
returns a redirect to the splitfile
checks if the pool has an idle thread and used that one if
destroys all threads in the pool
returns a redirect to the splitfile to be used in mapfiles
checks if this job is ready to run
runs the job
starts this job
returns the metadata after the replacements
runs the job
returns the md5 hash
determines if the job should run at all
returns the sha1 hash
checks whether an indirect mapfile is necessary
runs this job from outside a job scheduler
returns the redirect to this indirect mapfile or the mapfile
checks if this job should be run
runs the job
checks if this file needs to be fecced
returns the file that contains the check chunks
returns the next job to be scheduled
checks if this metadata must be inserted
runs the job
runs the job
checks whether this file must be inserted
returns a masked metadata all chars have to be replaced
creates a new thread and runs the job in it
runs the job
builds a buffered file input stream for this file
gets the metadata from the given job
produces the metadata to redirect to this file
checks whether this chunk must be inserted
builds a buffered input stream for that chunk
produces the metadata used in a mapfile to redirect to this file
sets a key fallback
starts the scheduler in a new thread
returns an empty input stream
returns the new splitfile
reads a byte
sets this job to only calculate the chk not do an actual insert
reads multiple bytes
starts the scheduler and waits until all threads are scheduled
called by a job to notify the scheduler that the job is not
specifies that key collisions are no errors on that non chk
checks if all jobs have been scheduled
sets the warning that should be shown in case of a key
requests the scheduler to stop its jobs as soon as possible
waits until all jobs have been scheduled
does the actual scheduler task maybe in a new thread
creates a new thread counter
increases the number of threads
waits until all threads have finished
called by the thread to notify this counter that a thread has
sets the progress name
gets the progress name
sets the data
gets the fingerprint hash of metadata and data of that key
returns if earlier parse processes caused errors
gets the resulting public key of this insert
checks whether there was a key collision
parses all files that must be parsed for the current project
checks if a given string is an integer literal
escapes a string especially code lt code code gt code
return if all nodes tried to reach have been unreachable
releases this singleton instance
return the reason why the route could not be found
calculates the sizes of check and data chunks for a given file size
does the actual fec encoding
does the actual fec encoding
return the int value of a field
creates an unconnected fcp connection every operation will
return the current fcp port
return the messages head
return the current fcp host
return all current fcp hosts
this method tries to catch connect errors and to solve them
f0 one line
f0 one line
f0 one line
f0 one line
this method initializes this
this method initializes j content pane
this method initializes j text area
this method initializes risultati drop down combo box
this method initializes j button
this method initializes j content pane
this method initializes j panel input
this method initializes j panel output
this method initializes results main pane
this method initializes algorithm steps results split pane
this method initializes closed form panel
this method initializes implic reducer panel
this method initializes neg reducer panel
this method initializes var rename panel
this method initializes quant ahead panel
this method initializes cong prenex panel
this method initializes skolem panel
this method initializes closed form split pane
this method initializes clodes form text field
this method initializes implic reducer split pane
this method initializes logci connector reduction text field
this method initializes neg reducer split pane
this method initializes negations reduction text field
this method initializes var rename split pane
this method initializes variable renaming text field
this method initializes quant ahead split pane
this method initializes quantifications ahead text field
this method initializes cong prenex split pane
this method initializes prenex normal form text field
this method initializes skolem split pane
this method initializes skolem text field
this method initializes log text area
this method initializes remove for all panel
this method initializes remove for all split pane
this method initializes remove for all text field
this method initializes j split pane2
this method initializes j scroll pane1
this method initializes log panel
this method initializes log split pane
this method initializes clear log button
this method initializes log area scroll pane
this method initializes j jmenu bar
this method initializes j menu file
this method initializes j menu item1 exit
this method initializes j menu1 history
this method initializes j menu item clear history
this method initializes j menu item default example
this method initializes j menu item clear input text area
this method initializes open file dialog
this method initializes open file panel
this method initializes closed form button
this method initializes logic connectors reduction button
this method initializes negations reducion button
this method initializes variable renaming button
this method initializes skolem button
this method initializes remove unneeded bracketj panel
this method initializes single operations pane1
gets the localized string for this enum
set all zero lines to 1 where the solution conditions are 0
set all fields to 1 where no tent can be fields
increments the variable possible solutions
checks if the playing field is solved
the private constructor singleton
get the actually selected turn of the turn history
gets the index of the last marker in the history
counts the trees on this field
adds a game marker
undos all user actions of the history to a clear version
checks if there is a tent around every tree
undos turns to the index in history turn
helpmethod for print play field to console
builds the game with the last marker information
clear the whole marker history
this function set the layout of the window
gets the number of markers in the marker history
this function returns the size of all turns per game
checks if a placed tent is placed correct
sets the layout
sets the layout
this function initializes the commands for the gui elements
checks if solved the playing field is equals to the created playing field
sets the layout
sets the text of the history count label
this function initialize the commands for the gui elements
this function checks if the forward button have to enable or disable
set the forward button enable or disable
this function checks if the reverse button have to enable or disable
sets the width and heigth of the gui component field
set the reverse button enable or disable
this function set the retry class to a clearly mode
set the play button enable or disable
set the stop button enable or disable
refreshes all the texts of the buttons and their labels
this function initializes the commands for the gui elements
this function sets the layout of the window
refreshes all the texts of the buttons and their labels
sets the text of the marker count label
this methods adds the right commands to the buttons
this function return the path of the html document
this function initializes the commands for the gui elements
enables or disables the save menu item
save the current game
save a gameboard game template
refreshes all the texts in the current gui
sets the dimension of the game board
checks if the main panel is a panel with a gameboard
this function return the refernz game board to identify the solution
initialize the commands which are used to change the field state
this function set the refernz game board to identify the solution
this function get the flag fisrt draw
checks if the main panel is a choose game panel
this function set the flag first draw
returns how the game were won
this function replaces and repaints the main panel
adds a marker to the history
build and draw the play field of the last marker
checks if the game has mistakes in it
changes the text of the panel in the north
checks if this board is solved
this function returns the puzzle type
build and draw the play field of the forward history
this function set the puzzle type
this function change the factory back to the original state
this function change the factory back to the original state
build and draw the play field of the all steps
this function returns the game mode erstellmodus or spielmodus
rebuilds the last know clear gameboard without mistakes
build and draw the play field of the all reversed steps
this function sets the puzzle type
build and draw the play field of the reversed steps
this function create and returns the fieldmanager relating to the specific puzzletype
build and draw the play field of the all steps
this function create and returns a gameboard relating to the specific puzzletype
this function create and returns a xml prozessor relating to the specific puzzletype
called when the filter process finishes running
called as the filter process makes progress notably for each character
called when the filter process begins running
estimate the size of a filter output by counting the number of characters
run the filter on text and return the filtered output
interrupt the running process if it exists
returns the toggle button
returns the string typed into this input dialog
validates the input
this method initializes this
this method initializes this
remove the previously registered adapter class for class code adapted code
this method initializes this
this method initializes j split pane
this method initializes painel botoes
this method initializes split botoes
this method initializes nome
this method initializes button send msg
this method initializes tf msg
this method initializes file save
this method initializes button quit
this method initializes button vez
this method initializes load
this method initializes ta msgs
obtiene la expresi n del where
restarts the timer
basic implementation for those types created in this way alter table
performs the pending deletions and removes the spatial index
removes all associations between names and data sources
inserts a geometry at the end of the theme
removes the association between the name and the data sources
creates a data source defined by the data source creation object
deletes the geometry at the specified index
changes the geometry at the specified index
registers a data source by name
inserts an empty row in the spatial index
gets the data source passed by adding the automatic data source decorator
associates the gdbms name table name with the underlaying dbms view
executes the sql instruction
gets a connection to the driver
gets a connection to the driver
gets the value of the primary key just before the begin trans call
frees all resources used during execution
returns true if the datasource is opened and false if its closed
gets the url of a file in the temporary directory
gets the only strategy to execute custom queries
gets a string representation of this datasource
redoes the last undone edition action
undoes the last edition action
sets the row selection
tests the data source
tests the data source factory
tests the naming of operation layer datasource
access to the pk field
test a union query
tests a simple select query
get a string from the underlying resource bundle
get a string from the underlying resource bundle and format
get a string from the underlying resource bundle and format it
get a string from the underlying resource bundle and format it
hook for subclasses
looking for better implementation of translator
this method is called by the discovery listener event handler after intial
creates a new code advertisement event code
this routine performs initialization of the communications interface
this routine is used to start the communication handler processes that
when an object implementing interface code runnable code is used
note the result of this method must be cast into its proper type
returns a clone of the current object
this methods stops the communication hander processes that receive
initializes the jxta platform and joins the default net peer group
this method initializes the graphical components that display the
generates the name of the object instance based on the type of
get a reference to the creature object
test of adding and retreiving participants of class org
test of has more participants method of class org
test of get next participant method of class org
this method is called by the discovery listener event handler after intial
get the creatures current armor class modified by flattfootedness and
get the string representing the alignment
test of get fort method of class org
test of get will method of class org
get the creatures current hit points
test of get ref method of class org
test of constructor method of class org
compares this object with the specified object for order
test default values of class org
this method calls any cleanup routines that need to be called before the
test of player name method of class org
decrease a critters hit points
test of description object of class org
increase a critters hit points
test of ability scores object of class org
remove all adjustments to a creatures stat
test of get name method of class org
compare two aligments
test the weapon interaction with creature base
initialize the values for the code stat code object
test default values of class org
test of to string method of class org
initializes the values for this code hit point code object
test of equals method of class org
test of zero method of class org
test of adj methods of class org
test of get acmod method of class org
test of stat class of org
test of is lawful method of class org
calculates the ability score modifier based on the base stat
test default values of class org
test of set size method of class org
test default values of class org
test of is order neutral method of class org
test default values of class org
same as code get stat code with a better name
set all of the creatures ability scores at once
test of set by total method of class org
set the size for this creature
test of is chaotic method of class org
get the base hit point value
test of get stat method of class org
compares one creature object to another
returns the adjusted armor class while a character is flat footed
current adjusted hit point value
set the strength base
test of is good method of class org
test the default values of the class org
get subdual hit points
test of get stat method of class org
test of get ac method of class org
test of get flat footed ac method of class org
get temporary hit points
test of is moral neutral method of class org
test of test dex cap method of class org
sends the passed code message code to the message handler which
test of constitution dependency of class org
get the creatures current strength
test of inflict method of class org
get the string representation of the creatures size
make an adjustment to the creatures subdual hit points
test default values of class org
alternate dependency score this is useful for monks who add thier wisdom bonus
increase a creatures stat
test of is evil method of class org
test of get stat method of class org
test of zero method of class org
decrease a creatures stat
adjust temporary hit points
get the creature as index idx
test ability score change method of class org
remove all adjustments to a creatures stat
set the sheild value
set the creature object at an existing index idx
test defaults of class org
test die roll adj adj method of class org
sets the ability score that this dc check is bassed on
set the armor value
test defaults of class org
set the subdual hit points
apply damage to a creature
increase a creatures stat
returns the adjusted stat
test defaults of class org
remove all adjustments to a creatures stat
test of benefit method of class org
set the dexterity object
test defaults of class org
set temporary hit points
a method to set all of the base ability scores
test defaults of class org
test of zero method of class org
set the dexterity base
test defaults of class org
set the dexterity cap
remove all adjustment and subdual damage from the character
test defaults of class org
test defaults of class org
get the creatures current dexterity
test defaults of class org
determines the current health of the creature
set the constitution base
set the size of the weapon
get the creatures current constituion
set the inteligence base
get the creatures current inteligence
set the wisdom base
get the creatures current wisdom
set the charisma base
get the creatures current charisma
set the name of the creature
get the creatures name
set the players name
get the players name
set the creatures total hit points
get the creatures current hit points
get the hp status
the string representing the creatures hit point status such as dead or
set the creatures bonus to armor class from armor
set the creatures bonus to armor class from a shield
set the dexterity cap
set the base ac for the creature
get the current adjusted armor class for the creature
get the creatures flatfooted ac which is the creatures ac without the
set the base saving throws of all three saving throws
set all three saving throws from their total
get the current adjusted fortitude saving throw
get the current adjusted will saving throw
get the current adjusted reflex saving throw
set the creatures level
same as the creatures level
gets the current level
current hit dice same as level
set the hit points from a total value
get the current adjusted hit points
set the favored weapon based on its index
set the favored melee weapon by the weapon object
set the favored weapon based on its index
set the favored ranged weapon by the weapon object
sets the name of the creature
sets the class of the creature
sets the race of the creature
sets the string of other details about the creature
sets the creatures size
sets the creatures size object
set the creatures speed in feet
name of creature
creatures class such as sorcerer or beast
race of a creature such as elf or dragon
get the speed that the creature can move in a round
get all of the weapons that the creature is carrying
get a particular weapon
add a weapon object to the list of weapons this creature is carrying
pick random pair
turning a byte seq into an object
publishes saves an object on to the network
for testing take a command line argument in base32 decode print in hex
evaluates an operand based on the contents of the stack
adds all internal lookups
bencodes the given rational number to the given output stream
initializes the route table
adds a key with data that should be compressed
adds a key with raw byte value
adds a key with string value using the default character encoding
adds a key with integer value
adds a key with long value
adds a key without any value
keeping private access modifier until necessary to
returns the value for a key as an integer
returns true if the bucket can be split
compute common prefix length of two kuids
returns the value for a key as a long
purge database makes sure the originator of all local dhtvalues
an implementation of code dhtvalue code that has no payload
reads a string from the input stream
writes the given socket address to the output stream
see handle tick
prints an error
prints an error
reads data from a socket
closes the connection between the pep and the pdp client
disconnect from a pdp
adds a request state to the connection manager
deletes a request state
gets the connection clients handle table
initialize a request state
handles an open new request state
finalize a request state
handes a synchronize state request message
processes a new open request state
deletes a request state
processes a synchronization request state
processes a closed connection
notifies all request states that no ka was received
processes when no keep alive is received
sends a keep alive message through the socket
processes an accounting report
notifies all with a accounting report
sends a synchronization state completed message to the pdp
gets the report type object length
sends the report type object throught a socket
writes to an output stream all the object relative data
sets the data
gets the object length
sends the pepid object throught a socket
writes to an output stream all the object relative data
sends the context object throught a socket
gets the context object length
gets the request type flag
transforms reason code to a string
sends the reason object throught a socket
writes to an output stream all the object relative data
sends the katimer object throught a socket
writes to an output stream all the object relative data
writes to an output stream all the object relative data
sends the in interface object throught a socket
sets the ipv4 address
gets the hostname
gets the ipv4 address
checks if the flag is set
gets the ifindex
sets the ifindex
sets the data
gets the handle object length
sends the handle object throught a socket
writes to an output stream all the object relative data
sends the acct timer object throught a socket
writes to an output stream all the object relative data
gets the decision object length
converts the error code to a string
sends the error object throught a socket
writes to an output stream all the object relative data
gets the command
sends the provisioning object throught a socket
transforms the s num to a string
sets the command
sends the decision object throught a socket
transforms the command type c type to a string
transforms the command to a string
transforms the flags to a string
sends the client specific information object throught a socket
writes to an output stream all the object relative data
writes to an output stream all the object relative data
gets the hostname
sets the ipv4 address
sends the pdpredir addr object throught a socket
writes to an output stream all the object relative data
sets the ipv4 address
gets the host name ipv4 address
gets the ipv4 address
parse a byte
get ipv4 address length
sends the ipv4 address trough a socket
gets the c num string
sends the object header throught a socket
writes to an output stream all the object header relative data
adds a header to the message
adds a katimer to the message
adds a acct timer to the message
sets the message length
adds a header to the message
adds a pepid to the message
adds a last pdpaddr to the message
adds a client si to the message
sets the message length
adds a header to the message
adds a error to the message
adds a pdpredir addr to the message
sets the message length
synchronizes with a pep
gets a message from the socket and processes it
removes a pep from the client table
closes the connection between the pdp and the pep client
sends a keep alive message through the socket
sets request state manager status has synchronization completed
initializes a request state
sends a message to the pep asking for a new synchronization request state
fail report received
processes a report message
success report received
accounting report received
notifies a closed connection
notify a keep alive not received
process a closed connection to a pep
notify a closed request state
process when a keep alive is not received
synchronize all request state
process when receiving a delete request message
notifies all request states that no ka was received
deletes a request state
synchronizes with the pep
creates a new request state
notifies all request states to close connection
closes the link
writes data to the socket
creates figure for this edit part
creates flow palette tool group
the run function to use the resources of being a thread
sets the receiver sender listener to t listener
initializes the input output streams
sets the user interface to the new user interface
english attaches the listener the main program to the interface br
english generates the form used for private messages br
english determines if the specified channel has been created br
english constructs a new chat channel br
english used to set the topic of a channel br
english deletes a channel from the list of channels br
executes this threaded class
adds the specified key element pair to the command
is this a valid xml command to be dispatch
get a list of values in ordered list separated by commas
checks the specified command for errors
re draw the icon in this swing app
remove all the data in the spreadsheet
load the given sheet
start new process from command details
opens the specified logfile with read write access
closes the logfile
appends data to the log file
new search thread
write it all to disk as comes in and time stamp it
take a command from buffer and turn it into a batch request
show all the devices seen
launch a new process on mac linux
sets the particular cell at row col to the specified value
ftp given file to host web server
update graphs with incoming xml packets
do the work
send all state info for this api connection
find and attach to serial port profile for this device
called by the blue tooth control as devices are found
called by the blue tooth control as devices are found
this is called by the blue tooth control when the inquiry has completed
add new data to the bottom of the text are
find a bluetooth serial port service for this device
update graphs with incoming xml packets
call back for timer task
add new data to the bottom of the text area
not used but required for api
manage button events open web browser
re draw the graph only the current tab
write the search device props file to disk
returns an instantiated api as specified by the command parameter
loads the api table with api classes
loads the api table with api classes
create the gui and show it
lookup values from props file
lookup values from props file
lookup values from props file
p write a line to common log file in format
try to connect and read from device
used by watch dog thread
try to search and connect to the device
loop on bt input
shutdown the server
send needed info about the state of this api
terminate the application but clean up first
terminate the application but clean up first
re draw the icon in this swing app
opens the specified logfile with read write access
returns the contents of this command as an xml string without any whitespace
load the given sheet
write it all to disk as comes in and time stamp it
start new process from command details
send this command to the output channel
ftp given file to host web server
do the work send status update if debugging enabled
new xml command incoming
re draw the graph only the current tab
update graphs with incoming xml packets
write the search device props file to disk
returns an instantiated api as specified by the command parameter
loads the api table with api classes
configure the framework with defaults
lookup values from props file
lookup values from props file
try to connect and read from device
lookup values from props file
poll device with message g1 enter
loop on com input
turn debugging messages to log file and standard out
turn debugging messages to log file and standard out
send a kill command to the given device
send a kill command to the given device name
terminate the application but clean up first
terminate the application but clean up first
increment usage by one
load defines given at a commandline from a command line define object
return macro name at given index
check if macro with a given name exists in structure
get info object for a given element
return string representation of the object
make string finish with appropriate separator char for a given platform
show message about wrong parameter other one is expected and raise exception
show ameba engine header title
write dump to a given file
open input file
get one line from source file opened by
close source file
find first occurence of pattern in the source string
replace all occurences of pattern with s in the source
if line contains pragma definition then this
helper method for code eval java
method used to check if expression is true
get current line number of the source file
return string containing current file name and current line number
create path that is a valid java string
check if given define exists in given string
get substring from string that is embraced by bounder string
get substring from string that is embraced by
create output file
close output file
put one line of text into output file
check if string begins with another string
this is a wraper function for system
this is a wraper function for system
get the list of podcasting of a subscription
prevents 2 instances of the application to run
add a podcast feed and save the feeds list
remove the podcast feeds in the list from the feeds list
add a rss feed and save the feeds list
remove the rss feeds in the list from the feeds list
builds the columns headers
creates the initial layout for a page
build the tree listeners
build the menus for this tree
removed the item from the items list
set the listeners for the menus
set the listeners for the menus
set the listeners for the menus
called whenever playback is started or information about the current track changed
checks whether the currently playing track in i tunes
creates a com connection to i tunes
disconnects from i tunes
triggered by i tunes listener when i tunes is about to quit
stops this thread and disconnects from i tunes com interface
constructs a condition that tries to match the passed bundles location
return the rbac manager password
constructs a new snmp v3 handler by instantiating the snmp target object
check if a user with parameters name and password exists
makes a standard single set request
makes a standard single get request
makes a standard single getnext request
return the rbac manager login
delete an entry in vacm access table with the given index
this function saves the jaxb tree
create an entry in vacm security to group table with the given values
delete an entry in vacm security to group table with the given index
displays the list of active roles for this session
return the rbac user list
instantiates code jmgmt
retrieve an rbac user from his login
set the table attributes as defined in target
retrieve an rbac user from its id
create a new rbac user
change rbac user attributes
return the list of rbac roles
retrieve an rbac role from its name
retrieve an rbac role from its id
create a new rbac role with role name as a name
change the name of an rbac role
retrieve an rbac scope form its path and mibns
retrieve an rbac scope form its id
create a new scope and return the id of the scope added
return the list of permissions
return the id of the permission associated with this property
adds xml elements code gt snmp data lt gt context
return the permission searched
adds an xml element code gt context
adds an xml element tp code parent code
this function get the sessions stored in the rbac policy
this function get the session id from the user id
this function return the session object
this function deletes a given session with a given owner user
this function returns the set of roles assigned to a given user
this function returns the set of permissions grant to a given role
find a new id for the newly created user
starts a compound edit that can be undone in one operation
ends a compound edit that can be undone in one operation
adds an undoable edit to this documents undo list
validate the parameter types for this operation
validate the parameter types for this operation
decodes a k2 t format range image as an rendered image with
decodes a cyberware echo format range image as an rendered image with
sets the calibration matrix
returns a subset of the original range image with a new origin width
sets the calibration matrix
decodes a sri format range image as an rendered image with
returns a subset of the original range image with a new origin width
returns a subset of the original range image with a new origin width
rotates the range data orienting the y axis vertically x axis
returns the name of the format handled by this codec
compute the mean of the elements
compute the covariance of the elements
compute the cross covariance of this vector and another
returns code true code if the header bytes indicate sri format
sets a x value in the range image
sets a y value in the range image
sets a z value in the range image
sets the pixel value in band 0 at the given position
sets the pixel value in band 0 at the given position
sets the pixel value in band 0 at the given position
sets the pixel value in band 0 at the given position
returns the pixel value in band 0 at the given position
sets the pixel value in band 0 at the given position
returns the pixel value in band 0 at position west of the given
returns the pixel value in band 0 at position east of the given
returns the pixel value in band 0 at position north of the given
median filter the z dimension data in place
returns the pixel value in band 0 at position south of the given
returns the blue pixel value in band 2 at the given position
returns the green pixel value in band 1 at the given position
returns the red pixel value in band 0 at the given position
returns the minimum pixel value in band 0
returns a subset of the original range image with a new origin width
returns the minimum red pixel value in band 0
returns the minimum green pixel value in band 1
returns the minimum blue pixel value in band 2
returns the maximum red pixel value in band 0
returns the maximum green pixel value in band 1
returns the maximum blue pixel value in band 2
returns the mean red pixel value in band 0
returns the covariance of the red pixels in band 0
returns the mean green pixel value in band 1
returns the covariance of the green pixels in band 1
returns the mean blue pixel value in band 2
returns the covariance of the blue pixels in band 2
returns the mean pixel value in band 0
returns the covariance of the pixels in band 0
gets a x value from the range image
gets a y value from the range image
gets a z value from the range image
get the 3 d camera location focal point
determines whether a given range value was a noisy sample
get the calibration information scanner dependent
get type uri value for the specified attribute alias
sets the optional policy url
sends rest request to put user data
returns the request token
returns the access token for the user
sets the access token to use for subsequent rest api calls
returns the request token
returns the id of the user for whom we have an access token
returns the oauth server object associated with this object
returns the current user as an object
returns the person in the security context associated with this object
returns the friends of the current person
returns the friends of the current person
sets the access token to use
generates request url with a given path i
generates request url with a given path i
returns global app data for this app
returns global app data for this app under the given keys
sets the given key value pairs into the global app data
does an http request with customizable method type
clears the global app data with the given keys
sets the given key value pairs into a users app data
returns app data for specified user
returns app data for specified user
sets the given key value pairs into the global app data
this apparently has a bug on the server side
this method is untested
returns a user given an id
returns comments for a user
returns indicators for a user
returns preferences for a user
returns the albums of the given user
returns the albums of the given user
returns an album of the given user
returns a photo in an album of the given user
returns an albums info for the given user
returns the friends of the given user
returns the specified friends of the given user
returns the specified friends of the given user
returns the friendship of the given user with other users
returns the mood of the given user
returns the moods available to the given user
returns the photos of the given user
returns a photo of the given user
returns the profile of a given user
returns the profile of a given user
returns the status of a given user
returns the status history of a given user
posts a status update
posts a mood update
posts a mood update
posts a status update
posts a status and mood update at the same time
returns the status of a given users friends
returns the videos of a given user
returns a video of the given user
returns the activities of the user
returns the activities of the user
returns the activities of the users friends
returns the activities of the users friends
returns the source portal
sets the source portal
sets the start column
adds a portlet to the portal
adds a portlet to the portal
returns the column of the given porlet
returns the index of the column for the given portlet
inserts a portlet
inserts a portlet
removes a portlet from the portal
true to adjust the layout for a vertical scroll bar defaults to true
sets the columns width
sets the spacing between portlets defaults to 10
adds the id of the given subtask to the list of subtask
generates body of the get bean function
generates destructor method deleting beans depending on managed property
generates a get xxx function for given bean
copy the file content from url to local tmp file
prints the license info to the logger output stream
strip the version number if the plugin parameter strip version is set to
this methods tests the
starts the module extraction process
starts the module extraction process
calculates the difference between the two times
pos size move buffer
guid is equal if location is equal
equality by domain port and path
equal when domain and title are equal
processing needed at the start of a transaction
processing needed at the end of a transaction
images are equal when their locations are equal
check if we are already in the middle of a transaction
reset transaction used during error handling
certain hibernate calls require the session
update hibernate update some object
hibernate delete some object
may throw runtime hibernate exception
returns a string representation of the object
returns a hash code value for the object
returns a string representation of the object
gets hibernate session object if jdbc code connection code was
gets a a new session whilst using an existing jdbc connection
sets the default jdbc connection object
reloads group for use in new session
reloads item for use in new session
returns the number of documents that were in the index last time
returns the number of news items found from the previous
returns a string representation of the object
hashcode like equals is touchy and critical for proper functioning of
return the ttl in order of preference wanted ttl if exists default ttl
loops through and notifies each observer if a new item was
invoked by scheduler when time to process channel information comes
loops through and notifies each observer if a new item was
creates new worker thread object
invoked by poller when poller of the channel failed
invoked when poller detected changes in channel information title and etc
invoked by poller when checking of the channel started
invoked by poller when checking of the channel finished
reads decoded data into an array of bytes and returns the actual
returns input stream for url
sets cancel status of record
returns input stream for url
checks if the channel is not currently in processing
sets the queue of tasks
unconditional scheduling of single record
the action to be performed by this timer task
do nothing if etag null otherwise add a if none match property
returns channel record
resets the state as if no problems ever occurred
increases the count of problems occurred so far and put out an error
should the channel be deactivated
has the feed been grabbed for the first time and successfully parsed
invoked when cleanup engine finds unwanted item
invoked by cleanup engine when cleaning of the channel has started
invoked by cleanup engine when cleaning of the channel has finished
checks single item in matcher and notifies observer if its unwanted
invoked by cleanup engine when cleaning of the channel has finished
adds new matcher to the list
removes matcher from the list
creates new worker thread object
creates new group of channels in persistent storage
deletes group from persistent storage
updates data in storage with data from the group object
return in order of preference feed producer ttl if exists and wanted ttl
return in order of preference feed producer ttl if exists and wanted ttl
updates data in database with data from channel object
updates data in database with data from item object
returns the ttl in order of preference feed producer ttl if exists
based on the update period and update frequceny and on the optional
returns a hash code value for the object
determines if the feed is out of date
returns a string representation of the object
loops through and notifies each observer if a new item was
minimum number of milliseconds between updates of channel
return number of items currently in specified channel
loops through and notifies each observer if a new item was
interrupt the thread and return
interrupts execution of task
adds one new channel object instantiated with the help of the
given a stand alone channel i
gets the channel builder used by the feed entries
determines if the manager is handling the feed
process the channel information
gets all the channels in the registry
adds the specified feed to the manager
removes the specified feed from the manager
retrieves the feed being managed
removes a channel from the registry
returns wether the channel update task is still active or not
gets the scheduled time of the next channel update
returns the ttl value corresponding to update period and update frequency
set number of channel parser errors acceptable after channel is not
common setup for every single test
basic stress test
a battery of empty groups
create a group and add some channels and see if all is well
add delete stress test
test the functioning of the has channel method
create and start the indicated number of article deleter threads
test activation and deactivation with thread handling too
forget all the informa state
create n manager test channel groups of n channels channels each
helper to add a certain number of channels to a group
create the persistent channel groups and restore their state from the database
helper to create an empty group
sleep until the indicated n items have been logged
helper to add a channel to an existing group
set active semaphor to new value and return old value
start the background processing of channels
stop the background processing of channels
regenerate the empty datanase
make a simple copy of one file to another
close the database fully
invoked by poller when new item is approved for addition
invoked when poller detected changes in channel information title and etc
decides whether its possible to add item to the channel or no
generate a fake name for a generated channel
returns the name of the testcase inclusive the class
returns manager to be tested
initialize logging lists back to zero
creates new group of channels in persistent storage
updates data in storage with data from the group object
deletes group from persistent storage
creates new channel object and persists it into storage
updates data in database with data from channel object
adds code channel code to the code group code
deletes code channel code from the code group code
called when a channel is retrieved from the internet
creates new item in the channel
creates new item using specified object as ethalon
updates data in database with data from item object
deletes the item from the persistent storage
tests how group is deleted from storage
called when an item is retrieved from the internet
called to indicate start and end of actual poller of feeds by informa
tests simple channel creation
called when an item is retrieved from persistent informa state
tests parsing of feed with no version specified 0
convert to a string helpful for logging
convert to a string helpful for logging
tests parsing of titles and descriptions with cdata objects inside
runs the task and throws our any exceptions
returns true if thread failed to do the job
gets the item for the given row index in the table
adds a new item at the beginning of the existing array of items
rss back end handle identical to override method so that we apply hibernates
activate persistent channels4 cg
activate memory channels4 cg
the following getters return null values
init transient state after reading this in from persistent state
create main frame
set selected guide
set selected channel
action handler interface
set selected channel
get selected cge
get element at
get item at
initialization that has to happen after the ui has been built
get the channel
set the channel
get global model
get channel tree
set channel tree
get chan tree model
log action returns a null action which simply logs that the action
update the user interface after a channel gets selected
locate feed stats for a given feed key return the feed stats object
select guide action returns an action which calls global model
set channel stamp view
get channel stamp view
un persist from xml counterpart of persist as xml
lookup feed stats given a feed stats object locate the corresponding
get channel item list model
set item detail view
set state db jdbc connection to database that contains the informa state
get item detail view
open state database open the database that will be used by informa
run produces a single file in the preferences area which will
cmd simple del channel delete specified channel in specified guide
returns the gui
set the current jgraph
initialises the columns width
adds a new node to the table
removes a node from the table
eliminates all the nodes from the table
updates an existing node of the table
apply the current topology
checks whether the ip and mac addresses are unique or not
stops mac kill in all nodes of the current scenario
hook from graph ed to set attributes of a new cell
used by the ioc to to set the data
spring will automatically inject dao object on startup
checks if the given user name is unique in the database
spring will automatically inject dao on startup
spring will automatically inject employee dao object on startup
spring will inject this attribute
spring will inject this
spring will inject this
get an employee
create or update a member
validate the member
save an employee
clock in an employee
save an existing or new site
clock out an employee
validate the site
validate the employee
get an activity
save an activity
validate the activity
current string value stored in the enum
creates the event instance
returns the affected queue
the manipulated incident
returns the new content of the property
returns the affected code attachment code
creates an exception with the given message
creates an empty exception
creates the swing action
creates the reporting adapter and the rest of the widgets
creates the swing action
creates the swing action
just makes the code application frame code visible
creates the panel initially adding the code info panel code instance
returns the created code queue inspector pane code expecting a
creates the ready to embed progress bar
returns the splash window or code null code if not specified in constructor
returns the progressbar component
iterates the progressbar
repaints the progress bar every 300 ms
resets the progressbar to 0 hides the optional splash and
sets the progress maximum
sets the progressbar description
sets the progressbar maximum shows the description string again
stops the repainting thread and disposes the splash
creates the application frame
creates a ready to use panel
creates a simple status bar without an embedded progressbar
returns the user stated project group which will be assigned to the
returns the user stated project name which will be assigned to the
creates the statusbar with a progress bar on the left
sets a new normally highlighted status label text
sets new red and bold highlighted status bar
creates the main panel initializing all widgets
returns the incident message stated by the user
resets the status bar by removing the text
returns code true code if the statusbar is alerted
returns the incident component stated by the user
returns code true code if the statusbar doest n show any text
shows the progress kit
hides the progress kit removes all listeners
returns the subpanel that contains the incident message textfield
returns the subpanel that contains the incident component textfield
returns the subpanel that contains the additional properties textfields
returns the subpanel that contains the incident reporting button
creates an exception upon the given details
creates a client that is bound to the given code url code
creates a client that is bound to the default service address given by
returns the url of the service endpoint
populates the new code incident code with the configured system properties
ignored as the worker only processes new code incident code s
returns the service endpoint code url code
passes the code ticket code to the webservice client thus reporting it
returns currently always code true code
returns code true code if code buffer size code is reached
returns code true code if the code ticket code is distributable i
setup creates a unique temporary directory under code java
setup creates a unique temporary directory under code tmp queue dir code
returns the code url code of the configured mta
returns a code html email code
sets quot ticket component signature incident count quot as subject
returns a code multi part email code instance
returns a formatted textrow for a key value pair
calls process queue due to activity on the queue
adds the default headers to the mail
adds the zipped code ticket code to the mail
calls process queue due to activity on the queue
calls process queue due to activity on the queue
returns the distribution trigger
calls process queue due to activity on the queue
calls process queue due to activity on the queue
returns code true code when the ticket has not the code ticket
creates the exception using the provided details
create the exception using the provided code message code and code throwable code
creates the exception using the provided details
creates the event
manually triggers the distribution of cached code ticket code s
empty constructor nothing to be done
returns an identifier based on a internal counter and the creation
registers a code ticket queue listener code which will be informed about
removes the specified listener from the set of listeners
iterates through all registered code ticket queue listener code instances and notifies
iterates through all registered code ticket queue listener code instances and notifies
fires an event that informs all listeners about an added attachment
fires an event that informs all listeners about an removed attachment
an internally used constructor
fires an event that informs all listeners about a changed incident property
removes the given incident from the ticket
returns code true code if the given key belongs to a property that
checks whether the adapter
please note that this property setter is only used for optional properties i
creates the tab pane with top tab layout
adds a tab for code incident code
removes the tab of code incident code
returns the tab index at which code incident code is displayed
results in the removal of the corresponding incident tab
results in the appendage of a display tab for the new incident
results in an update of the base data tab
results in an update of the corresponding incident tab
results in an update of the corresponding incident tab
results in an update of the corresponding incident tab
creates the model upon the given ticket
re reads the ticket as it has changed
returns an empty string no column headers used
returns code string
creates the table displaying the given code ticket code
updates the ui notifies the model to reread the changed code ticket code
updates table model and ui
updates table model and ui
creates the model
returns the column name at position code col code
updates table model and ui
re reads all tickets from the queue
updates table model and ui
returns always code false code as you cannot listen at this worker
returns the ticket at row code row number code
updates table model and ui
returns code string
initialises the model
creates the table
re reads the tickets from the ticket queue
updates table model and ui
updates table model and ui
updates table model and ui
does nothing as you cannot listen to this queue worker
does nothing as the table is not editable
does nothing as you cannot listen to this queue worker
creates the renderer registers at the shared code tool tip manager code
initialises the model using the content of code incident code
re reads the incident as it has changed
declares the queue that is to be displayed
returns the number of properties number of attachments
creates the table upon code incident code
updates the table model repaints the ui
sets opaque and registers at the code tool tip manager code
updates the table model repaints the ui
updates the table model repaints the ui
creates a persistency worker that saves tickets at code queue dir code
creates a persistency class that will save artifacts within code queue directory code
returns the fs persistency location
adds the new code attachment code to the fs
removes the removed code attachment code from the fs
adds the new code incident code to the fs
saves the modified code incident code on the fs
removes the code incident code from the fs
stores the added code ticket code
saves the modified code ticket code on the fs
removes the removed code ticket code from the fs
ignored as this worker only gets active upon changes on the ticket queue
deletes a folder recursivly
returns the attachment index file of code incident code
required creation method for message driven beans
required creation method for message driven beans
required creation method for message driven beans
implements the business logic for the mdb
returns code true code when a directoy has been given that contains a
performs the job
well fetch the user using the get user by filter method
well fetch the user using the get user by filter method
performs the job
creates the necessary inner facades
returns the active application configuration
starts the mbean by scheduling registering the underlying job
stops the mbean unregisters the underlying job
returns the cron tab
sets a new cron tab
performs a login with the credentials given in the configuration
performs a logout for the job
performs the job
all subscribers are asked to remove items associated with the referenced project
required removal method for message driven beans
performs the job
performs the job
returns the number of active recipients associated with the notification subscription
performs the job
performs the job
performs the job
sets the node as root for the pane
add the pane to the container
add error dialog as listener
clear all keys
contains the server named
contains reference to the identical unique as400 object
number of elements
all service records
enumeration of elements elements
returns a string representation of the url
returns a string representation of the hash and its members
clear all keys
map in an object
get a server by name
remove a server by name
contains the server named
contains reference to the identical unique as400 object
find a server if we have already created it
create a new service record
this function accepts a url like request from a
a qcservice client uses this function to inform the qcmgr that the
extract protocol portion of the representation of a service request
extract server portion of the representation of a service request
extract service portion of the representation of a service request
extract service portion of the representation of a service request
services the request
return the as 400 system object
return a string representing an as400 service from its integer value
return a string illustrating all current service records
return a string listing the servers active
fires a busy active status event
fires a idle active status event
returns the attribute meta data for a specific attribute
returns the event id
compares the specified object with the credential
returns the user profile name
adds a property change listener
returns a hash code for this principal
adds a vetoable change listener
initializes a principal for the local ibm i system
returns the name commonly used to refer to the principal
sets the user profile name
returns a string representation of the object
returns the as400 system object for the principal
destroy or clear sensitive information maintained
returns the number of seconds before the
returns the name of a user profile associated with
returns the version number for the implementation
compares the specified object with the credential
indicates if the credential is still considered valid
removes the specified listener from the internal list
updates or extends the validity period for the
removes the specified listener from the internal list
sets the credential delegating behavior to
sets the as400 system object for the principal
attempts to swap the ibm i thread identity based on this
compares the specified object with the credential
returns a hash code for this credential
sets the handle based on the current thread identity
sets the actual bytes for the handle as it exists
returns the number of seconds to expiration assigned
invoked when a service has been connected
invoked when a service has been disconnected
called when garbage collection determines that there are
destroy or clear sensitive information maintained
returns the as400 message causing the exception
instructs the thread to stop any automatic refresh in progress
returns a string representation of the object
returns an integer indicating the type assigned when
returns a hash code for this credential
retrieves any extended information used during the creation of the profile token credential
destroys the credential by destroying or clearing
sets the extended information used during the creation of the profile token credential
called when garbage collection determines that there are
indicates if the credential can be refreshed
indicates if the credential can be used multiple
sets the raw bytes for the token represented
returns the number of seconds before the
updates or extends the validity period for the credential
sets the number of seconds to expiration when the
sets the actual bytes for the token as it exists
updates or extends the validity period for the credential
sets the principal associated with the credential
sets the as400 system object for the credential
sets the type of token
attempts to swap the current thread identity based on this credential
returns a string representation of the object
specifies the starting date and time for messages and jobs to be listed
specifies the end date and time for messages and jobs to be listed
returns the ending date for messages and jobs to be listed
converts the specified date object to a string in the format cyymmddhhmmss
returns the database connection
returns a copy of this identity token vault
constructs a dboriginal data format object
returns a copy of this gsstoken vault
constructs a px exception rep cv object
constructs a psserver socket container adapter object
this method sets concurrent access resolution
factory method for creating struct objects
returns the entire blob as a stream of uninterpreted bytes
factory method for creating array objects
factory method for creating struct objects
returns the job identifier of the host server job corresponding to this connection
initializes the refresh threshold
unconditionally disposes of the existing profile token
determines if it is time to refresh the profile token
returns the system object which is managing the connection to the system
returns the index of the default property
indicates if the value was a data mapping error
deletes the user index
this method sets concurrent access resolution
method shape seen at end
method deshape seen auto
method deshape yeh hamza two cell near
method shape yeh hamza at begin
method handle tashkeel auto
factory method for creating struct objects
constructs a px accept rep sv object
sets the user id list filter
indicates whether lam alef ligatures should get decomposed into lam and alef characters
sets whether lam alef ligatures should get decomposed into lam and alef characters
returns the elapsed time since the connection was assigned
queries the vault to see if it contains a credential
disposes of the credential thus emptying the vault
convert data from the ibm i layout to the java layout
convert data from the java layout to the ibm i layout
processes a request and sends the reply if any
sends a reply
gets the maximum block input rows
returns the number of seconds before the credential is due to expire
attempts to swap the thread identity based on this credential
sets the designated parameter to a code reader code object
constructs a px finalize req cv object
adds an as400 certificate listener to receive as400 certificate events
adds the vetoable change listener
removes this listener
removes this vetoable change listener
can this be used
sets the layout length and layout alignment of this field
updates a column in the current row to the sql unassigned
updates a column in the current row to the sql unassigned
updates a column in the current row to the sql unassigned
updates a column in the current row to the sql unassigned
sets the native statement type to one of the valid types
processes the request
returns a copy of this profile token vault
sets the output queue list filter
returns the job identifier of the host server job corresponding to this connection
normalizes the list of peers from the string list
can this be used
constructs a psload object
sets the balance threshold
constructs a px socket container adapter object
returns a copy of this password vault
factory method for creating struct objects
clears an operation result from the operation result bitmap
returns a stream that an application can use to write to this blob
returns the text
returns the default action
returns a property value
returns the description text
removes a property change listener
returns the child node at the specified index
returns a property value
clones the program call document and the objects contained in it
returns a property value
returns whether or not this element is defined as a service program entrypoint
returns an int return value for the named service program element
returns the index of the default event
gets the system on which programs are to be called
sets the position to the last row in the list
returns the form text interpretation direction
returns the language of the form
sets the form text interpretation direction
sets the language of the form
sets the system on which to call programs
returns an image for the icon
returns the net server share name
returns the net server share path
sets the name of the net server share
sets the net server share path
sets the pattern matching behavior used when files are listed
return the net server share point
set the net server share path
set the name of the net server share
perform the requested action
creates a string representation of this ipv6 address
returns the length of this header
returns the next header in the packet
returns a printable representation of this header
returns the length of this header
returns the next header in this packet
returns a printable representation of this header
returns the address of this target lla header
returns a copy of the raw data that makes up this field
returns the packet contained by this frame
sets the color used to paint the text
returns the frame number
returns a clone of a bit buf casted as an object
returns 64 bit time of day
returns a boolean representing one bit at offset bit of the bit buf
returns a byte representing one bit at offset bit of the bit buf
return the time of day in hh mm ss
returns the length of the bit buf in bits
returns the frame type
returns the length of the bit buf in bytes
returns the pdu length
returns the frame status
returns the timestamp as a string in calendar
efficient left shifting of entire buffer
returns the sdlc slot
returns the next header in the packet
returns the type of this icmpv6 header from the trace
returns the sdlc port
returns the code of this icmpv6 header
efficient right shifting of entire buffer
returns the checksum of this icmpv6 header
returns the next header in the packet
returns the length of this header
returns the code determining if the lan fame is llc
returns a printable representation of this header
returns the target address of this redirect message
returns the destination address of this redirect message
returns a printable representation of this header
returns the lan routing length
returns the identifier of this echo request header
returns the sequence number of this echo request header
returns a new bit buf consisting of l bits starting with offset s
creates a string representation of this hexadecimal field
returns the length of this header
creates a string representation of this flag
returns if the frame is tcp y n
returns the length of this header
returns a printable representation of this header
returns the max response delay of this mlmessage
returns a binary string representing the bit buf no spacing
returns the ipv6 address of this mlmessage
returns a boolean indicating if the frame is tcp
returns a binary string representing the bit buf
adds the button to the specified panel
returns a binary string representing the bit buf
converts a hexadecimal string into an integer string
converts this ip address from numeric to presentation
perform the requested action
returns the rightmost 8 bits of the bit buf as a byte
converts the ipv4 portion of this address from numeric to presentation
returns a hex string representing the bit buf no spacing
returns a hex string representing the bit buf
returns the length of this header
returns a hex string representing the bit buf
returns the source port for this tcp header
works like to hex string grouplen separator except that if the bitlen
returns the destination port for this tcp header
returns the length of this header
sets the type of this address
returns the sequence for this tcp header
returns the rightmost 32 bits of the bit buf as an int
returns the version of this header
returns the traffic class of this header
returns the ack number for this tcp header
returns the flow label of this header
returns the rightmost 64 bits of the bit buf as a long
returns the payload length of this header
returns the data offset for this tcp header
returns the next header identifier
returns a printable representation of this packet
returns the hop limit of this header
returns the cwr flag for this tcp header
returns the source ipv6 address of this header
returns the rightmost 16 bits of the bit buf as an int
returns the destination ipv6 address of this header
invoked when a window is in the process of being closed
returns the ece flag for this tcp header
returns a printable representation of this header
returns the urg flag for this tcp header
returns the byte at which the rest of this packets header starts
returns the number of bytes that have been read off this stream
returns the internet header length of this ipv4 header
returns the type of this icmpv4 header from the trace
returns the frame type of this packet
returns the thread that this read process is executing under
returns the ack flag for this tcp header
sets the thread this process is executing under
returns the destination mac address of this packet
returns the type of service of this ipv4 header
returns the psh flag for this tcp header
returns a string with the tokenring routing data
returns the currently running format thread
returns the dscp of this ipv4 header
returns the length of this header
sets the thread
returns the rst flag for this tcp header
returns the ecn of this ipv4 header
the name of this header
returns the lan routing length
returns the total length of this ipv4 header
returns the syn flag for this tcp header
returns the length of this header
returns the ethernet2 destination mac of the lan header
returns the hardware type of this packet
returns the indentification of this ipv4 header
returns the fin flag for this tcp header
returns the protocol of this packet
returns the ethernet2 source mac of the lan header
returns a printable representation of this header
returns the first flag of this ipv4 header
returns the byte length of each hardware address of this packet
returns the ethernet destination mac of the lan header
returns a printable representation of this header
returns the window for this tcp header
returns the byte length of each protocol address of this packet
returns the second flag of this ipv4 header
returns the ethernet source mac of the lan header
returns this header as a hexadecimal string
show the previous page
returns the opcode of this packet
returns the fragment offset of this ipv4 header
returns this headers payload as a hexadecimal string
returns the service access points of the lan header
returns the checksum for this tcp header
returns the hardware address of the sender of this packet
returns this headers payload as an ascii and hexadecimal string
returns the frame type of the lan header
returns the ip address of the source of this packet
returns the time to live of this ipv4 header
returns the urgent pointer for this tcp header
returns the tokenring destination mac of the lan header
returns the hardware address of the destination of this packet
returns the tokenring source mac of the lan header
returns the ip address of the destination of this packet
returns the options for this tcp header
attempts to send the find dialog to the front of the screen
returns the tokenring routing information of the lan header
returns the tokenring service access points of the lan header
invoked when a key has been pressed
returns the header check sum
returns the first 8 bits of the options for this tcp header
creates a string representation of this field
returns the tokenring frame type information of the lan header
invoked when a window is in the process of being closed
returns a printable representation of this header
returns a printable representation of this header
returns a printable representation of this header
returns the maximum segment size option for this tcp header
closes the find dialog
returns the target address of this neighbor solicitation message
returns the prefix length of this redirected header header
returns the data for this flag as a hex string
returns the redirected ip6 header
returns a printable representation of this packet
sets the ipaddress filter to the given ipaddress
sets the second ipaddress filter to the given ipaddress
returns the segment size option for this tcp header
sets the port filter to the given port
invoked when a key has been pressed
returns a printable representation of this header
sets the broadcast filter
returns the length of this header
returns the router flag of this neighbor advertisement message
sets the start time filter in milliseconds since the epoc
returns the next header in the packet
returns the solicited flag of this neighbor advertisement message
returns the length of this header
returns the override flag of this neighbor advertisement message
returns the neighbor discovery type of this ndoption header
sets the end time filter in milliseconds since the epoc
returns a printable representation of this header
returns the length of this ndoption header
sets if the progress monitor should be displayed or not
perform the requested action
returns a printable representation of this header
add the end banner
updates the progress bar
gets the ipaddress filter
returns the currently running format thread
gets the second ipaddress filter
sets the thread
returns a printable representation of this header
returns the on link flag of this prefix info header
gets the port filter
returns the autonomous address configuration flag of this prefix info header
returns the raw data of this record
returns the currently running format thread
returns the valid life time of this prefix info header
gets the broadcast filter
sets the thread
returns the preferred life time of this prefix info header
returns a printable representation of this header
gets the start time filter
returns the mtu of this packet too big message
returns a printable representation of this header
returns the prefix of this prefix info header
gets the end time filter
returns the length of this header
creates a string representation of this decimal field
returns a printable representation of this header
creates a string representation of this ip address
returns a printable representation of this header
property set if progress should be displayed
returns the current hop limit of this router advertisement message
returns the pointer of this parameter problem
returns the next header in this packet
returns the managed address configuration flag of this router advertisement message
returns a printable representation of this header
return the number of records in this communication trace
closes the output window and ends the thread
returns the other stateful configuration flag of this router advertisement message
returns the router life time of this router advertisement message
returns the reachable time of this router advertisement message
returns the retrans time of this router advertisement message
return the title of this communication trace
sets the properties for this format
returns if there was an error parsing the data provided
creates a find object to search our text area
returns the number of bytes collected during this communication trace
sets the output file to open a output stream on
copies the selected text
this function adds result sets to the internal data structure
returns the trace description
clears the text area
sets the input stream to read the data from
returns the nd object name
cuts the selected text
sets the system to use for all ibm i connections
returns the object type and subtype br
pastes the copied text into the text area
returns the protocol br
perform the requested action
returns the buffer size in bytes
returns the data direction br
returns stop on buffer full
returns the save menu item
returns the beginning bytes
returns the close menu item
returns the ending bytes
returns the find menu item
returns the controller name
returns the copy menu item
returns if traced all user data
returns the clear menu item
returns the lan filter option
returns the cut menu item
returns the remote controller name
returns remote mac address
returns the paste menu item
returns remote sap address
returns the next button
returns local sap address
returns the previous button
opens an object input stream and file input stream on the outfile
returns address filtering for ipv6
returns the length to be specified in the written ibm i byte structure
returns ip address ipv4
returns the main frame for the display of records
returns the object containing all attribute information associated with the entry
returns the offset of ccsid information in the structure when the receiver
returns the total length of the corresponding structure when this object is
returns the offset of the length of the translated bytes when the receiver
returns the information to encrypt when the entry is subsequently inserted or updated
returns the information currently encrypted for the entry in the validation list
returns the system assigned to the attribute
returns ip protocol number
returns the translated data containing the entry identifier
returns the attributes parameter structure when written to ibm i bytes
returns the unencrypted data for the entry
initialize a validation list entry from a structure stored as ibm i bytes
returns the total length of the corresponding structure when this object is
sets the object containing all attribute information associated with the entry
returns the data associated with the attribute
returns trace lmi data br
sets the information to encrypt when the entry is subsequently inserted or updated
sets the information currently encrypted for the entry in the validation list
reads a frame from the input stream
sets the translated data containing the entry identifier
sets the unencrypted data for the entry
returns status of trace br
returns the maximum length of the value associated with the attribute
sets the system assigned to the attribute
reads in an int from the input stream
returns start time of trace in 8 byte tod clock value
sets the data associated with the attribute
sets the identifier of the attribute
returns stop time of trace in 8 byte tod clock value
close the current list of entries maintained on the system
indicates where the attribute should be stored
sets the maximum length of the value associated with the attribute
formats the prolog
creates the validation list on the ibm i system
returns bytes collected
deletes the validation list from the ibm i system
returns max frame allowed by protocol
retrieves the next record from the given trace
returns an entry from the validation list with the given identifier
returns max frame allowed by user
returns the total length of the corresponding structure when this object is
returns the total length of the corresponding structure when this object is
sets the attributes assigned to the receiver
converts this object to a structure usable by the system apis
returns number of x
returns the total length of the corresponding structure when this object is
returns the coded character set identifier used to encode the translated bytes
returns the text description for the validation list object
returns the offset of ccsid information in the structure when the receiver is
returns if buffer wrapped y n
returns the offset of the length of the translated bytes when the receiver
returns the structure used to convert values for a list information parameter
returns record timer length 2 4 bytes
reads len bytes of the file starting at off offest
returns the length to be specified in the written ibm i byte structure
returns the offset of ccsid information in the structure when the receiver
returns the type
sets the list of associated system messages
returns the offset of the length of the translated bytes when the receiver
returns a string representation of the object
set the as400 classpath to opimize
returns the location library context of the validation list
if true the optimize method will wait for all crtjvapgm commands to end
sets the ibm i bytes comprising the translated data
if true run each crtjvapgm in a separate job
sets the coded character set identifier used to encode the translated bytes
returns the structure used to parse entries returned by the list apis
sets the value to use on the crtjvapgm licopt parameter
set the level to optimize classes to
converts this object to a byte structure usable by the system apis
returns the number of records that have been formatted
returns the prolog of this trace
deletes the entry from the validation list
run the given ibm i command
returns the number of tcp records in this trace
sets the location library context of the validation list
returns the hashcode for the super class
converts the specified date object to a string in the format cyymmddhhmmss
sets bidi string type of the connection
returns bidi string type of the connection
disposes of the credential thus emptying the vault
this method will free the internal memory that this object holds
retrieves the jdbc type of the elements in the array designated by this
retrieves the contents of the sql code array code value designated by
retrieves array result set that contains the elements of the sql
retrieves a result set that contains the elements of the sql
update the exception so that when it prints the return code
block the thread to refresh profile token credential from the vault
notify the wait thread to refresh profile token credential from the vault
queries the vault to see if it contains a credential
disposes of the credential thus emptying the vault
provides a minimal amount of tracing information about the credential
converts the data to string object
sets a valid time to run the program
gets a valid time
end program call if the time exceeds the specified time
retrieves this code connection code objects current schema name
sets the given schema name to access
is sql cancel used for the query timeout mechanism
returns true if datastream debugging is currently enabled
if i debug i is true enables datastream debugging for this
used to note the end of a datastream when debugging is enabled
return the version level
creates the meta model objects for the package
creates a new adapter for an object of class
creates the meta model objects for the package
this just records the information
create a new model
returns the label for the specified type name
this adds a property descriptor for the title feature
this adds a property descriptor for the source feature
this adds a property descriptor for the type feature
this adds a property descriptor for the id feature
this adds a property descriptor for the name feature
this adds a property descriptor for the owner feature
this returns the root adapter factory that contains this factory
this sets the composed adapter factory that contains this factory
this adds a listener
this removes a listener
this delegates to
this disposes all of the item providers created by this factory
this adds a property descriptor for the name feature
handles activation of the editor or its associated views
sets the fixture for this domain test case
returns the fixture for this domain test case
sets the fixture for this content test case
returns the fixture for this content test case
returns a diagnostic describing the errors and warnings listed in the resource
this accesses a cached version of the property sheet
modifie le type mime
retourne lobjet principal b display de bingoo
retourne larborescence de fichiers
modifie le thread charg de la recherche
retourne le thread charg de la recherche
execution de la recherche dans un nouveau thread
components were already created were just resetting column sizes and stuff
set the dot attributes for a class
set the dot attributes for a specific field
set the dot attributes for all fields with this name
pretend the given field does not exist
pretend that no fields with this name exist
pretend this class has no fields
treat objects of this class as primitives i
treat objects from this package as primitives i
starts a region server thread running
cause a region server to exit without cleaning up
wait for the specified region server to stop
wait for mini hbase cluster to shut down
shut down the mini hbase cluster
call flush cache on all regions on all participating regionservers
grab a numbered region server of your choice
basic test of timestamps
for hadoop 2579
for hadoop 2579
for hbase 2156
test we can migrate a 0
change the value of the row key
change the value of the column key
change the value of the timestamp field
set the value of this hstore key from the supplied key
tests that logs are deleted
test if a key value is in the lists of deletes already
test memstore snapshots
compare the hregion info we read from hbase to what we stored
use get to retrieve the hregion info and validate it
tests to do a sync flush during the middle of a scan
tests to do a concurrent flush using a 2nd thread while scanning
getting data from memstore only
run after dfs is ready but before hbase cluster is started up
run after hbase cluster is started up
use this utility method debugging why cluster wont go down
runs all of the tests under a single junit test method
test url transformations
asserts that the passed scanner is exhausted and then closes
test of factory method
test equals method works as expected
test equals method works as expected
test equals method works as expected
test equals method works as expected
test hash code method works correctly
test hash code method works correctly with primitive arrays
test hash code method works correctly with object arrays
tests the the pair class serializes and deserializes without a problem
test empty hfile
make sure the orginals for our compression libs doesnt change on us
test for hadoop 1581 hbase unopenable tablename bug
test a map reduce against a multi region table
create a table of name code name code with
interface used by tests so can do common operations against an htable
test region info serialization
test server info serialization
figure out how many regions are currently being served
tests identification of the stop row
test page size filter
test filter serialization
tests identification of the stop row
tests the the
since this object is a registered updater this method will be called
add a node to the cluster
add a node to the cluster
remove a node from the cluster
remove a node from the cluster
deletes a table
shut down the client
deletes a table
send a head request
send a get request
send a get request
send a get request
send a get request
send a delete request
send a delete request
add a row to this cell set
add a column to the column set
add a dead node to the cluster representation
add the table name model to the list
add a region model to the list
add an attribute to the column family schema
adds a cell to the list of cells for this row
return a table descriptor value as a string
add a column family to the table descriptor
retrieve the column family at the given index from the table descriptor
signal that a previously calculated maximum cache age has been
get the num runs
called to start a transaction
method for getting data from a row
abort a s transaction
creates a new indexed table
remove an index for a table
get the key generator
check if this scan range contains the given key
ask if this put could apply to the index
add a write to the transaction
create a key by concatenating multiple column values
returns the region location
restart from survivable exceptions by creating a new scanner
commit the transaction
build the scanner
sets the hbase table
sets the scan defining the actual details like columns etc
allows subclasses to get the
allows subclasses to set the
gets the scan defining the actual details like columns etc
allows subclasses to set the
stop a rpc client connection
register metrics for all know rpc methods ahead of time
push the metrics to the monitoring subsystem on do update call
compression types supported in hbase
get all columns from the specified family
get the column from the specified family with the specified qualifier
parses a combined family and qualifier and adds either both or just the
adds an array of columns specified using old format family qualifier
convenience method to help parse old style or rather user entry on the
brings a table on line enables it
get versions of columns with the specified timestamp
set the start row
set the stop row
get up to the specified number of versions of each column
set the number of rows for caching that will be passed to scanners
apply the specified server side filter when performing the scan
set an old style filter interface to use
setting the family map
get a reference to the specified table from the pool
get a reference to the specified table from the pool
puts the specified htable back into the pool
get the old style filter if there is one
call this when the next invocation of call should close the scanner
get the number of rows that will be fetched on next
set whether blocks should be cached for this scan
get all columns from the specified family
get whether blocks should be cached for this scan
get the column from the specific family with the specified qualifier
adds an array of columns specified the old format family qualifier
get versions of columns with the specified timestamp
get up to the specified number of versions of each column
apply the specified server side filter when performing the get
method for retrieving the gets row lock
method for retrieving the gets lock id
method for retrieving the gets maximum number of version
method for retrieving the gets time range
flush a table or an individual region
method for retrieving the number of families to get from
method for checking if any families have been inserted into this get
flush a table or an individual region
compact a table or an individual region
compact a table or an individual region
set the handler for calling out of rpc for error conditions
get the lock id from this row lock
method to check if the family map is empty
delete all versions of all columns of the specified family
delete all columns of the specified family with a timestamp less than
delete all versions of the specified column
delete all versions of the specified column with a timestamp less than
split a table or an individual region
delete all versions of the specified column given in
delete the latest version of the specified column
called by zoo keeper when an event occurs on our connection
delete the specified version of the specified column
split a table or an individual region
delete the latest version of the specified column given in
method for retrieving the deletes timestamp
add the specified column and value to this put operation
add the specified column and value with the specified timestamp as
add the specified column and value with the specified timestamp as
a convenience method to determine if this objects family map contains
gets the number of rows that a scanner will fetch at once
a convenience method to determine if this objects family map contains
a convenience method to determine if this objects family map contains
a convenience method to determine if this objects family map contains
checks for existence of the specified column
sets the number of rows that a scanner will fetch at once
returns this result in the old return format
returns the raw binary encoding of this result
method for setting the timestamp
check if the underlying key value is empty or not
set whether this put should be written to the wal or not
since this object is a registered updater this method will be called
returns a scanner on the current table as specified by the
checks to see if the file system is still accessible
gets a scanner on the current table for the given family
extracts certain cells from a given row
interrupt thread regardless of what its doing
adds the hsi to the rs list and creates an empty load
compute the average load across all region servers
wakes up threads waiting on servers to server info
executes all the buffered
releases any resources help or pending changes in internal buffers
utility method that verifies put is well formed
get the zk wrapper object
perform a single row get on the and snapshot placing results
stop the root and meta scanners so that the region servers serving meta
block until meta regions are online or were shutting down
get the heap usage of kvs in this mem store
get the maximum size in bytes of the write buffer for this htable
get an estimate of the number of key values stored in this store
set the size of the buffer in bytes
set a meta region as online
count of online meta regions
get all the data for the specified row at the latest timestamp
check if a meta region is online by its name
get all the data for the specified row at the latest timestamp
set an online meta region offline remove it from the map
does this server have any meta regions open on it or any meta
is this server assigned to transition the root table
is this server assigned to transition a meta table
remove a region from the region state map
run and wait on passed thread in hrs context
set a region to unassigned
set the hdfs shutdown thread to run on exit
check if a region is on the unassigned list
called when we have told a region server to close the region
flush the cache
add a meta region to the scan queue
check if the initial root scan has been completed
checks to see if the file system is still accessible
check if the initial meta scan has been completed
get the sequence number to be associated with this cache flush
get the root region location
block until either the root region location is available or were shutting
return the number of meta regions
bump the count of meta regions up one
set the root region location
set the number of meta regions
completely delete the rows cells
high performance merge scan
completely delete the rows cells
send messages to the given region server asking it to split any
if matcher returns seek next col you may be able
called after reading each section memstore snapshot storefiles
resets the current columns and deletes
set current row
checks if any stamps is long
cause the server to exit without closing the regions it is serving the
adds a value to the memstore
adds a value to the memstore
check to see if needed to fetch more versions
get the currently available memory for this lru in bytes
get the maximum memory allowed for this lru in bytes
get the currently used memory for this lru in bytes
get the hit ratio
the total memory usage of this map
enforces key constraints
enforces value constraints
returns the minimum memory usage of the base map structure
evicts based on lru
moves the specified entry to the most recently used slot of the
adds a new entry with the specified key value hash code and
clears all the entries in the map
add a msg report process open to the outbound queue
gets the hash code for the specified key
return hstore instance
compares two objects for equality
determines the index into the current hash table for the specified
calculates the capacity of the array backing the hash
make sure this is a valid row for the hregion
calculates the threshold of the map given the capacity and load
set the initial heap usage of this class
get the head of the linked list least recently used
obtain a lock on the given row
get the tail of the linked list most recently used
see if row is currently locked
see if theres too much store files in this store
replace the value of this entry
returns true is the specified entry has the same key and the
sets the previous pointer for the entry in the lru
sets the next pointer for the entry in the lru
returns the pre computed and deep size of the entry
called by region server to wake up this thread if it sleeping
test for the existence of a row in the table
done when there are no more columns to match against
called at the end of every store file or memstore
performs a get operation across multiple store files
gets the next row of keys from the top most scanner
compares two key value
seeks all scanners at or below the specified seek key
reset both the filter and the old filter
delete this file
this utility method creates a new thrift column descriptor struct based on
this is a convenience method that computes a new filename with a given
reset state and move to the next row
shut down the log and delete the log directory
shut down the log
obtain a log sequence number
gets the edit
gets the key
called to verify that this server is up and running
for internal use in forcing splits ahead of file size limit
checks every store to see if one has too many
return the total size of all memstores in every region
originally this method factored in the effect of requests going to the
creates a region server
returns to string with the number of requests divided by the message
block until the region server has come online indicating it is ready
wait for the specified region server to stop
wait for mini hbase cluster to shut down
start the cluster
shuts down this lease instance when all outstanding leases expire
shut down this leases instance
renew a lease
client explicitly cancels a lease
checks soft references and cleans any that have been placed on
if currently asleep stops sleeping if not asleep will skip the next
verifies that dfs is available and that hbase is off line
open or return cached opened meta region
closes catalog regions if open
scans the root region
check if directory exists
checks soft references and cleans any that have been placed on
increments the weight of i this i key with a specified value
increments the weight of i this i key by one
adds a false positive information to i this i retouched bloom filter
performs the selective clearing for a given key
chooses the bit position that minimizes the number of false negative generated
chooses the bit position that maximizes the number of false positive removed
removes a given key from i this i filer
method added by phil
computes the ratio a fp
adds a new row to i this i dynamic bloom filter
returns the active standard bloom filter in i this i dynamic bloom filter
flushes bloom filter to disk
change the value of the row key
change the value of the column in this key
set the value of this hstore key from the supplied key
delete store map files
compares the row and column of two keys
compares the row and timestamp of two keys
compares the row and column family of two keys
define the sort order of the bytes writable
compares the bytes in this object to the specified byte array
check if the key can be found in this row result
get the row lock associated with this update
set the lock to be used for this update
get the cell that corresponds to column
get the cell that corresponds to column using a string key
block has been accessed
delete the value for a column
get a cell using seperate family column qualifier arguments
comparing this row result with another one by
attempt to add the specified cached block to this queue
cache the block with the specified name and buffer
cache the block with the specified name and buffer
check if the specified timestamp is within this time range
check if the specified timestamp is within this time range
check if the specified timestamp is within this time range
get the buffer of the block with the specified name
add a new timestamp and value to this cell provided timestamp does not
multi threaded call to run the eviction process
get the current size of this cache
add a meta block to the end of the file
get the current size of this cache
get the size of this cache number of cached blocks
get the number of eviction runs that have occurred
get the number of blocks that have been evicted during the lifetime
get counter statistics for this cache
adds a column family
checks to see if this table contains the given column family
clones a key value
change the value of the row key
change the value of the column in this key
change the value of the timestamp field
set the value of this hstore key from the supplied key
compares the row and column of two keys
compares the row and timestamp of two keys
compares the row and column family of two keys
this is for testing keeper exception
read location of server storing root region
read address of master server
read master address and set a watch on it
watch the state of the cluster up or down
set a watcher on the master address znode
create a scanner on this file
delete znode containing root region location
write root region location to zoo keeper
write address of master to zoo keeper
check if were out of safe mode
write in zk this rs start code and address
update the rs address and set a watcher on the znode
method used to make sure the region server directory is empty
close this zoo keeper session
get the path of the master election znode
build the scanner
allows subclasses to set the
deletes table table name
if the thread is currently sleeping trigger the core to happen immediately
override to run a task before we start looping
because stop row filter does not examine column information this method
returns the internal filter being wrapped
returns true once the nested filter has filtered out a row returned true
change filter all remaining from false to true if value is true otherwise
get whether entire row should be filtered if column is not found
set whether entire row should be filtered if column is not found
get whether only the latest version of the column value should be compared
set whether only the latest version of the column value should be compared
returns the group id
set the group id
set the password
returns the login name
set the login name
returns the password repeat
set the password repeat
returns the e mail
set the e mail
returns the first name
set the first name
returns the last name
set the last name
removes meta names of groups from regex and corrects groups ids
test of get line of sight method of class engine
test of get speed method of class engine
test of get damage method of class engine
test of get name method of class engine
test of is accesible method of class engine
test of set line of sight method of class engine
test of set speed method of class engine
test of move method of class engine
test of draw method of class engine
test of set damage method of class engine
test of get x method of class engine
test of set name method of class engine
test of set accesible method of class engine
test of get height method of class engine
test of retrieve method of class engine
test of create worker method of class engine
test of set x method of class engine
test of set height method of class engine
test of create warrior method of class engine
test of get food store method of class engine
test of get terrain method of class engine
test of get ant workers method of class engine
test of get y method of class engine
test of get ant warriors method of class engine
test of get color method of class engine
test of set food store method of class engine
test of is borning method of class engine
test of set color method of class engine
test of set y method of class engine
test of set borning method of class engine
test of get food name method of class engine
test of set food name method of class engine
test of get food method of class engine
test of get ant method of class engine
test of get food weight method of class engine
test of set ant method of class engine
test of pos x method of class engine
test of request food method of class engine
test of get food method of class engine
test of get food nutrients method of class engine
test of set food method of class engine
test of set food nutrients method of class engine
test of recive food method of class engine
test of update method of class engine
test of pos y method of class engine
test of get color method of class engine
test of get ant eater method of class engine
test of remove died ant method of class engine
test of set ant eater method of class engine
test of set color method of class engine
test of get terrain method of class engine
test of get new instance method of class engine
test of update pos method of class engine
test of set terrain method of class engine
test of draw method of class engine
test of draw method of class engine
test of draw method of class engine
test of update method of class engine
test of get energy life method of class engine
test of get alive colonys method of class engine
test of set energy life method of class engine
test of play match method of class engine
test of place food at method of class engine
test of get max lift method of class engine
test of paint ants method of class engine
test of get war representation method of class engine
test of set max lift method of class engine
test of remove ant killed method of class engine
test of generate method of class engine
test of close treasure room method of class engine
test of match statistics method of class engine
test of get edad method of class engine
test of calculate internals path method of class engine
test of open treasure doors method of class engine
test of move ant eater method of class engine
test of open maze doors method of class engine
test of update method of class engine
test of grow method of class engine
test of get atack power method of class engine
test of set atack power method of class engine
test of get max speed method of class engine
test of set max speed method of class engine
test of move method of class engine
test of get hunger method of class engine
test of set hunger method of class engine
test of draw method of class engine
test of get dx method of class engine
test of set dx method of class engine
test of get dy method of class engine
test of set dy method of class engine
test of get cell data method of class engine
test of set cell data method of class engine
test of get my queen method of class engine
test of set my queen method of class engine
test of get eat method of class engine
test of get ant color method of class engine
test of get food lifted method of class engine
test of drop food method of class engine
test of update experience method of class engine
test of get max energy life method of class engine
test of get line of sight method of class engine
at startup create and show the main frame of the application
initializes the annotations for b teneo
adds a new annotation to the results that belongs to a special line
adds an annotation concerning the whole file
checks if a line is allready annotated
returns a property from the local store
checks if a given annotation is allready present
convenience method creating a radio button
adds a new listener to this file checker
removes a listener from this file checker
checks the specified file for checkstyle errors
reports a checkstyle error to al registered listeners
reports a checkstyle error to al registered listeners
checks that includes and requires always appear as include once and
tests wether the the file ends with a newline
tests wether the input file uses short tags for php or not
checks if line comments use the right char
checks wether a file uses correct indentations
tests wether file contains tab characters
checks if a line contains whitespaces at the end
checks lines for length
enables or disables a tree of controls starting at the specified root
checks if control structures are surrounded by whitespaces
deletes all previous checkstyle markers for the specified file
writes all preferences to the local property store
checks the file for newlines before the opening brace of function
manages a full build of the project
writes a specified property to the local store
assert next word in the line is the one we want
get the next integer in the line
this function must be called before we can do anything with our estimator
print some statistics to system
print some statistics to system
call this function when the represented state int state
dump this state
dump the whole path ending with this state starting from the initial state
grow the cache and invalidate everything since the hash function hash chagned
returns true if assignment is in the set
fast membership test
grow the cache and invalidate everything since the hash function hash chagned
returns true if assignment was in the set
returns true if assignment was not alread in the set
number of bdd bits variables allocated by this universe
just wipe the cache
just wipe the cache
check if a cached answer is a valid node
just wipe the cache
try to grow the cache
get the approximate memory usage of this object
grow the cache and invalidate everything since the hash function hash chagned
either partially wipe the cache or try to grow it
removes the elements that are garbage collected
this is the correct way to insert something into the cache
this is the correct way to insert something into the cache
just wipe the cache
this is the correct way to insert something into the cache
grow the cache and invalidate everything since the hash function hash chagned
either partially wipe the cache or try to grow it
just wipe the cache
removes the elements that are garbage collected
this is the correct way to insert something into the cache
grow the cache and invalidate everything since the hash function hash chagned
this function is called at exit cleans up and frees allocated memory
for debugging install a debugger
removes the elements that are garbage collected
if this function returns true we should wipe the cache entirely instead
this is the correct way to insert something into the cache
stop the running debuggers otherwise they will keep collecting data
this is the correct way to insert something into the cache
this is the correct way to insert something into the cache
this is called when the table ha grown and we might need to
setup assignments returns false if it is trivially unsat
chosoe the clause with largest allocated bdd ratio between its used literals
chose the clause with the least new bdds reduced
number of bdd variables already allocated in this clause
number of changes in satisfiability if this var flips
returns treu if clause is a tautology removes already defined literals otherwise
call this functio to enable the fast variant of the mark node function
this function is called after the garbage collector hash changed some internal data
simple validity check more stuff to be added
chose a var to branch on the important part of dpll
mk operator as defined in andersens lecture notes
count the number of root bdd nodes
setup the variables needed for the board
make the initial state predicate
make renaming pair and current state variables
do the forward iteration
free used memory
forward from the initial state
forward from a given initial state
cleanup the conjunctive partitions and free memory
find the next state from from with event e
get number of partitions
get the tt i tt th cojunctive partition of the transition relation t
return the cube for the from state in partition tt i tt
find if event eligable from from put the next state in to
get the bddautomata object for these automata
cleanup the disjunctive partitions and free memory
get the tt i tt th disjunctive partition of the transition relation t
cleanup and free the used memory
extract the order of the current order
return the bdd automaton that was created for an automaton tt a tt
get the cost of the computed order
we must start with some initial order
get the pcg graph that describes
given a node in the pcg graph get its bdd automaton object
given a bdd automaton object get its corresponding node in the pcg
compute the toal span
find an event that has this id returns null if not found
find an event that has this label returns null if not found
internal find an event by its declaration order in the alphabet
copy the attributes of this node
copy attributes of this transition to me
show some statistics
returns the number of automata that havethis event in their alphabets
set the weight cost for this event in the alphabet
get the weight cost for this event in the alphabet
check if all nodes are ok
create a new automaton by this name
number of events in the global alphabet
returns the number of nodes in the largest automata
returns the theoretical maximum number of states in the global automata
create a new state
find an state by label
remove the state and all associated transitions
return the zdd variable for that event notethat 0 index num events
extended version of subset1 works on unate cubes instead of single variables
extended version of subset0 works on unate cubes instead of single variables
extended version of change works on unate cubes instead of single variables
concatenation of two strings or two langaues
check if some node is ok
reduce a language representation to its optimal form br
expend a language representation to its maximal
given a language l compate its prefix closure overbar l br
compute forward reachables
empty the pool
get an object from the pool
insert an object back to the pool
find the next element in the set
total number of classes islands in this set
print some statistics
this target send everything to stdout system
how many bytes have we seen so far
set the 32 bit flags variable in one operation
reset the chi 2 start all over
get all the 32 flags variable in one operation
copy from the tt f tt object
clear reset the flag tt flag tt
get the value of tt flag tt
get the chi2 value
compare to matrices
get the standard deviation
write a single byte
free the memory occupied by this objects
is more data available
re start from the start of the file again
load the contents of a file
read one byte from the stream
dump the matrix to console
save the contents of this stream to a file
insert a new byte in this chunk
are there any elements in the queue
returns the size of the chunk list strating from here
get the first object in the queue
number of elements in the heap now
simplify at top level
copy attributes of this edge to me
very inefficient for debugging small partitions only
binary bi implication double implication equivalence whatever
computes the degree of the node i
copy the attributes of this node
makes a copy of this node which have the same attributes
make sure to has same attibutes as from
add an edge and make sure it has same attibutes as e
make sure to has same attibutes as from
remove edge ed from the forward chain of n
is this number better than any other numbers if any in the set
remove edge ed from the backward chain of n
is this number better than any other numbers if any in the set
insert a new raw
find the index in times and memories for this tt id tt
save the profiling database to disk
find a specific dataset
write the data to stdout for debugging
get the differnce in time or since between two runs
return the next avialable id
get a profiling info set by its id
comment on a change to a label
find profiling data by its id
set the descrption of the current run
get the descrption of the current run
insert a new post
write the profiled data to stdout
save the results to file
get a profiling info set by its id
save the xml database to disk
dump the current database to the console
cleanup this zdd to release its memory and help gc
return the amount of internally allocated memory in bytes
create a new zdd variable
this prepares the varset vec s
union of cubes each represented by a string token
intersection of cubes
same as varset but this time bdd is not a positive cube
helper function to compute set set union add derefs the old set
helper function to compute set set add derefs the old set
show zdd statistics
check if the variables to be used are ok
return the amount of internally allocated memory in bytes
binary for all universal quantification
bdd trace driver doesnt count nodes the same way as we do
this is the relational product of i clarke et al
create a permutation vector for a given variable permutation
given a permutation this function will re label some nodes in a bdd
the bdd restrict operation
is this bdd tree a bdd variable
returns the number of satisfying assignments for this bdd
return a satisfying assignment for this bdd as a unary cube
returns true if the given minterm is a included in the bdd
the operation bdd1 bdd2 is equal to bdd1 or to bdd1 bdd2 br
the operation bdd1 bdd2 is equal to bdd1 and to bdd1 bdd2 br
says hello to given name
returns the appropriate background color for the given row
table context menu listener method
used by scan start stop to en disable whole user interface
also used by file filter
build the star shape
add a point to a polygon using polar co ordinates
shape should be centered in the rect 0 0 100 100
clears folderpath files size format attribute manipulating visible gui components only
shape should be centered in the rect 0 0 100 100
method not yet in use
interface method iexporter html for html column class
this method initializes this
this method initializes tea jmenu bar
this method initializes file menu
this method initializes run menu
this method initializes about menu
this method initializes tea split pane
this method initializes tea document split pane
this method initializes tea document list
this method initializes tea document scroll pane
this method initializes new menu item
method from imanaged window interface
this method initializes open menu item
opens a new document
fills the contents of the window with the contents imanaged window method
overwritten imanaged window method
writes the contents of the window to the contents
this method initializes close menu item
this method initializes save as menu item
this method initializes exit menu item
this method initializes run menu item
this method initializes tea sub split pane
this method initializes j tabbed pane
this method initializes j text pane
this method initializes tea text pane1
this method initializes tea console scroll pane
this method initializes tea console text pane1
this method initializes tea bottom split pane
this method initializes j tool bar
this method initializes j progress bar
this method initializes tea cursor location text field
sets a service dao a href http www
configura el parser handler i el course manager
configura el parser handler i el course manager
closes the socket without on disconnect being called subsequently
adds an object to the end of the queue
adds an object to the front of the queue
returns the object at the front of the queue
returns true if the queue is not empty
clears the contents of the queue
closes the dcc chat connection
returns the buffered reader used by this dcc chat
returns the buffered reader used by this dcc chat
returns whether or not the user represented by this object is an
returns whether or not the user represented by this object has
returns the nick of the user complete with their prefix if they
returns true if the nick represented by this user object is the same
returns true if the nick represented by this user object is the same
returns the hash code of this user object
returns the result of calling the compare to method on lowercased
adds a line to the log
returns true if the file transfer is outgoing we are sending the
sets the delay time between sending or receiving each packet
this method starts the thread consuming from the outgoing message
returns the delay time between each packet that is send or received
returns the progress of the file transfer as a percentage
stops the dcc file transfer by closing the connection
returns the rate of data transfer in bytes per second
adds an entire documents to the brain
generate a random sentence from the brain
this method is called whenever we receive a version request
this method is called whenever we receive a ping request from another
the actions to perform when a ping request comes from the server
this method is called whenever we receive a time request
this method is called whenever we receive a finger request
this method is called whenever we receive a line from the server that
a convenient method that accepts an ip address represented by a byte
sets the encoding charset to be used when sending or receiving lines
returns the encoding used to send and receive lines from
returns the inet address used by the pirc bot
returns the inet address used when sending dcc chat or file transfers
returns true if and only if the object being compared is the exact
returns a string representation of this object
input the value into the derivative of the activation function and return
returns a value between minimum and maximum
sets the maximum value for the interval
sets the minimum value for the interval
calculates the neurons output by activating the current input
shrinks the value to one between 0 and 1
returns the neurons activation function
returns the neurons input
gets the neurons type
gets a specific synapse attached to the neuron
gets the neuron at the end of the synapse
returns the neuron positioned at the synapses source
returns the specified layer
resets the neurons values
sets the synapses weight
resets the neurons weights
returns the number of neurons in the input layer
sets the activation function for the neuron
initializes the outgoing synapses delta parameter
returns the number of neurons in the output layer
sets the neurons input value
sets the neurons type
sets the output of the neuron
calculates the deltas for all the neurons
computes the number of incoming synapses a node in this layer should
resets the neural networks values
resets the neural networks weights
calculate the alpha or modified momentum value from the quickprop
calculates the layers derived error via the next layers neurons error
sets the activation function for the whole network
calculate the alpha tilde or unmodified momentum value from the
sets the list of neuron layers
calculates the neurons error via the error of the next layers neurons
sets the values of the given list as weights in the synapse layer
mutates the neural network
gets the crossover operator the algorithm is using
gets a random member from the roulette wheel with respect to their slice
calculate the learning rate for this synapse according to the schiffmann
gets the members fitness
sets the size of the roulette
returns the crossover rate for the algorithm
sets the population member
returns the population member assigned to the slice
sets the fixed value to use in the mutation operator
gets the current fixed value used by the mutation operator
gets the mutation operator the algorithm is using
adds a member to the roulette wheel
returns the mutation rate for the algorithm
returns the best fitness in the roulette wheel
calculates the neurons outputs by passing their inputs by the activation
returns the best member in the roulette wheel
add a new hidden node into the network
returns the total fitness of the members present in the wheel
calculates the neurons error and stores it in the delta variable
returns the specified neuron
returns the roulette wheel that manages the genetic algorithms
sets the new population in the roulette wheel erases the previous one
returns the number of neurons of a certain type
sets the test set to evaluate the roulette wheels members fitness
gets the selection operator the algorithm is using
resets the layers neurons values
sets the learning rate for the backpropagation learning algorithm
returns the size weights can take up or down example 20
returns the current error for the a vector of patterns
resets the layers neurons weights
sets the momentum rate for the learning algorithm
sets the crossover operator for the genetic algorithm
adds a synapse to the synapse layer
sets the values of the given list as weights in the synapse layer
sets the activation function for the whole neuron layer
sets the patterns input
sets the mutation operator for the genetic algorithm
sets the patterns output
sets the selection operator for the genetic algorithm
adds a pattern to the pattern set
sets the size weights can take up or down example 20
gets an object in from the specified position
moves the value in each synapses partial derivative field into the
returns the weights delta
shuffles the stored patterns into another random order
returns the matrixs height
sets an object in the specified position
returns the matrixs width
returns the partial derivative for the error function in respect to a
sets the input range for the data included in the training set
sets the output range for the data included in the training set
sets the list of patterns for the training set
gets the minimum error for the training algorithm
sets the test set for the list of patterns
shrinks the values contained in a pattern set to the given input and
train the weights of the incoming synapses for the candidate node by
returns the neural network that the learning algorithm is wrapping
introduce the synapse layer into the network so that it comes after all
returns the old partial derivative for the error function in respect to a
returns the old weight update for the given synapse
returns the weight update for the given synapse
returns the mean squared error between the networks output and the
resets the partial derivative field of all synapses
scrambles a list of patterns
sets the neurons delta weight
sets the maximum epochs the learning algorithm can do
sets the minimum error the learning algorithm must reach to end the
returns the mean squared error for a input output pair
write snobject type get xmlmime type to out with
write snobject n to out with
pop a string from the arg list expanding the macros as appopriate
sets time last seen to be right now
this method prints out the task id being executed
add a new task to this schedulers structures
add the task to the waiting list of this scheduler without
decrement resources by given amount
should always be called after try re use
increment resources by given amount
execute an opcode
round robin does not need an init string
ri each task scheduled by this scheduler must be in one of
ri max num tokens current active tokens and sum for all
run the opcode return if it is blocked or not
terminate this opcode task
because we are a leaf of the scheduling hierarchy this method
insert a task into the runqueue
get the opcode this task is wrapping p
set if this opcode is to behave like it is in the sxe
add a new task to this schedulers structures
assign the scheduling policy for this task
simply for use to recalculate concurrency level not update for a child
return the scheduler associated with this task
when this task is activated do all that is involved in
add a new task to this schedulers structures
terminate this task and all of its children
terminate a specific child
remove a given task from the schedulers structures
this is a call from our child specifying its concurrency
set the parent task or the scheduler that schedules this task
add a new task to this schedulers structures
retrieve this tasks parent task
add a new task to this schedulers structures
limited debugging tracing support
terminate this scheduler by deallocating all of its data and
set the root scheduler to that passed in as an argument
remove a given task from the schedulers structures
receive requests and concurrency levels from the root scheduler
not defined to be purposeful
terminate a child of this task which can only be the root
add an opcode to later be enabled
remove the task from the runqueue
start executing the system
add a task to the runqueue
assigns all the variables to values obtained from properties
update the concurrency given a child and its new concurrency
return the string s with quotes around it if it
simply for use to recalculate concurrency level for this
tries to remove the entity stored under key id
returns the value stored at key id
returns and removes the value stored at key id
if tl current tracelevel then a line is
prints the given string to the output trace file emph regardless
prints the input string only if trace is enabled and
log an exception to the trace file
prints the stacktrace only if trace is enabled and
updates trace and uses second level granularity to log
ensure that last trigger evals are
records time of call of this method at microseconds level
records time at the granularity level of seconds
records time at the granularity level of milliseconds
records time at nanosecond granularity
backdoor to evaluate for alternate execution models
some nodes triggers consts ltes need to override this method to
inserts an opcode into the library
tests if the specified object is a key in this opcode library
increase the number of children this node
tests if this opcode library maps no keys to values
removes the key and its corresponding value from this opcode library
like grow children but for parents adds a slot to the
creates a view component containing the specified text
effects returns true if this file type should be accepted by the dialog
sets the status bar message with a color
sets the default message
sets the status bar message with a color for a specified duration
the order of elements in the parents array has no semantic meaning
add a reference to the parent array
remove any references to n in this
remove any references to the node n in
shrinks the parents array around a node
this function is used by sxe
add a child parameter node
adds the child node to the end of the children array
adds a flow type to the map of flowtype data for this node
call this to re draw the current graph from scratch
update this nodes parent links such that if they have
removes all contents and starts over with a graph
update this nodes children links such that if they have
disconnect a node from its neighbors and remove it
this should be called to let the node that it should prepare itself
a trivial graft merely adds
performs a full flush and reload of the jgraph based on the
run time property sets this node as garbage and indicates the
mark this node as garbage as well as its parents
override this to customize the server
some nodes e
send a color to color this node sending null
some nodes triggers consts ltes need to override this method to
check if a node w id specified is a child of this
check if a node w id specified is a parent of this
disconnect its node from both its parents and children
sets the value of this node to the passed argument and
call when the shutdown process has begun
produces a valid uuid based on the prefix given
mjo split adding nodes to scheduler from
locate a particular mac address in the client activity and return
return a single sn struct of the kismet message
set the uri of the sxe hosting this resource
effects returns blob descriptor if given during constructor otherwise null
this method sets up the graphical user interface elements
this method destroys this applet
effects clears the memory region
this method starts this applet
this method stops this applet
this method processes awt events generated by this applet
effects returns the number of blobs in this blobbag
effects deletes the blob passed as an argument from the blobbag if found
effects returns most recent blob of seqence
requires frame is non null
this method sets up the graphical user interface elements
this helper method makes a second pass through the image and replaces equivalent
a method useful for debugging
save all the data already gathered
wraps the argument packet as the body of this packet
returns true always
returns the packet size of this packet
prints the packet header
returns the installed
returns the maximum buffer size of this traffic shaper byte
installs a packet wrapper to this traffic component
enables disables outputting of unshaped traffic through the timer
returns the installed packet wrapper
returns true if outputting of unshaped traffic through the timer
enables disables timestamping generated packets
returns true if looping the trace is enabled
returns true if timestamping generated packets is enabled
returns the looping period
sets the looping period
sets the maximum buffer size of this traffic shaper byte
returns the maximum buffer size of this traffic shaper byte
sets the maximum buffer size of this traffic shaper byte
returns the maximum buffer size of this traffic shaper byte
returns the current buffer length of this traffic shaper of packets
returns the output time of next packet
returns the available buffer size of this traffic shaper byte
removes the equipped down port code down
removes the equipped up port code up
removes the equipped timer port code
returns ns neighbor node thru this link
returns the interface id of this link on node n
sets the link cost
sets the length of the link
mark unmark this link
returns true if it is a directional link
returns true if the argument is a multicast address
returns true if the argument is a unicast address
returns true if the argument is a broadcast address
returns true if the argument is a null address
returns the code string code representation of the address
returns the code long code representation of the address
returns code null code this class does not provide packet type information
sets true to enable accounting of each type of event
returns true if accounting of each type of event is enabled
sets true to enable component message feedback through this
prints the configuration information of this hqs
prints out the configuration information associated with
returns true if component message feedback through this components
not applicable to this class
sets the token bucket size bits
sets the token generation rate bps
returns the token bucket size bits
returns the token generation rate bps
intalls the marker and meter to this profile
intalls the marker to this profile
intalls the meter to this profile
returns the installed meter
resets this marker
prints out the content of this marker
returns the operation mode of this marker
enables disables the receipt notice
enables disables inspection of individual flows
enables disables directing all outputs to stderr
returns true if inspection of individual flows is enabled
returns true if directing all outputs to stderr is enabled
picks packet for early congestion notification ecn
pause the current code sneak an exception raiser into
returns the maximum number of lines that can be buffered in this
sets the maximum number of lines that can be buffered in this
returns true if the terminal is enabled to output to
enables disables output to the
creates a new terminal in the ruv system
enables disables output via the output port
returns true if the terminal is enabled to display output
exits the terminal
quits the application
interface for user to supply parameters
returns the binary representation of this map key
returns the hex representation of this map key
minimizes the display of the terminal
restores the display of the terminal
returns the normal distribution mean for the lognormal distribution
returns the normal distribution std for the lognormal distribution
printout for diagnosis
this method does not check overflow
this method does not check overflow
this method does not check overflow
sets the normal distribution mean for the lognormal distribution
sets the normal distribution std for the lognormal distribution
appends data to circular buffers
inserts data to circular buffers
removes bytes from the circular buffer to the specified buffer
sets the real part of the complex number
sets the imaginary part of the complex number
returns the conjugate of this current complex
returns the number of long integers in this space
returns the number of integers in this space
returns the iterator that iterates the intervals in this space
returns the iterator that iterates the gaps in this space
returns the iterator that iterates the intervals in this space
prints out for diagnosis
returns true if this queue is overflowed with the addition of
returns true if the interface exists and is the upstream
generic response interval
default maximum number of retransmissions
message retransmission time
remove child interface from forwarding cache
time to send a quit notification to the non responding parent
not heard from child base time to remove child interface
base interval between sending echo request to parent routers
not heard from child time to remove child interface
interval between sending echo request to parent routers
echo request rtx timer
removes a route entry via
retrieves matched route entries via
removes the lsa from the area database
adds the lsa to the area database
functions to set or get information for a event
return the header size
check the correctness of the header type
returns the command of this packet
retrieves the destination field from an rte
retrieves the next hop field from an rte
remove one new neighbor to this interface
disable the routing entry
return the size of the payload in the rrep packet
rt update update the routing entry
rt update update the routing entry
return true if it really modifies rt expire
sets the set of the interfaces that this protocol is operated on
enables disables the route purge option
retrieves the source field
retrieves the group field
retrieves the source network mask field
retrieves the prune lifetime field
if calling this function in the script that means the underlying link layer
initiates a trace route with trace route packet of size 0
if the component was stopped this will resume its periodic sending
sets the type of the timer
gets the type of the timer
sets the object that the timer carries
gets object that the timer carries
sets the metrics on the interfaces that this protocol is operated on
sets the sample rate with which the target node generates stimuli
sets the broadcast rate with which the target node generates stimuli
sets the noise strength
sets the target power
gets the target power
called when we receive explicit notification that a neighbor
data arriving from underlying mac layer
publish interest out to neighbors over wireless channel
prints the data cache entry
inserts a gradient in the gradient list
handles a timeout event
prints all interest cache entries in the interest cache
constructor for unicast packets
constructor for broadcast packets
sets the seed of the random number generator
sets the dimensions of the terrain
sets the dimensions of the terrain of the sensor network
sets the dimensions of the terrain of the sensor network
sets the minimum value of the distance between two nodes
sets the attenuation factor
sets the mean of the microphone gain
sets the number of nodes in the sensor network
attaches a node to a port
sets the bandwidth in bps for all the interfaces
sets the buffer size in bytes for all the interfaces
sets the maximum transmission unit mtu for all interfaces
when installing more recent lsa must detach less recent database copy
sets the buffer mode of all the interfaces
returns the global emulated link propagation delay
sets the global emulated link propagation delay
returns the propagation delay of the link
sets the propagation delay of the link
builds up the node structure inside the specified containers
builds up the node structure inside the specified containers with a
total number of packets sent by ch to base stations
builds the node structure inside the specified container
builds the node structure inside the specified container with a node
builds the node structure inside the specified container
builds the node structure inside the specified container
with listen message
a getter method to obtain total number of times
a getter method to obtain the total number of chs
data unit is a reference value to display the sending progress
xxx specify the area id for this router needed to be modified
receives whatever is currently available through the down port
receives code size code bytes of data through the down port
receives a buffer of data through the down port
receives a maximun of code size code data through the down port
retrieves the peer address from the datagram
retrieves the peer port from the datagram
retrieves the content in the datagram
enables link emulation and sets the propagation delay of the emulated
returns the bandwidth of this network interface
clears the neighbor database
sets the interface information for all interfaces
sets the default mtu value
retrieves but not remove the object at the position specified
retrieves but not dequeue the first object in the queue
retrieves but not remove the last object in the queue
return true if the queue is empty
returns the capacity of the queue
returns the current size of the queue
sets the capacity of the queue
return true if the queue is full
returns the capacity of the queue
returns the current size of the queue
returns true if the interface is ready to transmit more packets
sets the replacement probability
returns the replacement probability
sets the maximum dropping probability
returns the maximum dropping probability
grafts the interfaces to the entry exactly matched by the given key
grafts the interfaces to the entry exactly matched by the given key
prunes the interfaces from the entry exactly matched by the given key
prunes the interfaces from the entry exactly matched by the given key
sets the switching cross connect table
sets the label switching incoming label map
returns the cost of the link from node i through interface if
creates and returns a port to use with the
creates and returns a port to use with the
sets up unicast routes for the network
sets up unicast routes for the network
creates and returns a port to use with the
creates and returns a port to use with the
creates and returns a port to accept the unicast queries from the core
returns the interface index in the event object
returns the neighbor address in the event struct
creates and returns a port to accept the multicast queries from the core
creates and returns a port to accept the packet arrival events from the
creates and returns a port to accept the identity changed events from the
creates and returns a port to accept the unicast routing entry changed
creates and returns a port to accept the multicast routing entry changed
returns true if the message is a join event
returns true if the event struct is a leave event
creates and returns a port to accept the interface neighbor events from
creates and returns a port to accept the virtual interface neighbor events
creates and returns a port to accept the multicast host join leave events
called back when a link broken event is received
creates and returns a port to accept the link broken events from csl
calculate the path loss
calculates the path loss using free space model
start the timer
start the timer
handles rx timer timeout event
set topology parameters
set topology parameters
sets the initial position of the node
return arp contract as its name
gets an instance of arpcontract class which is a static field
set the number of sampling points between transmitter and receiver
set the source mac address of the beacon frame
get the source mac address of the beacon frame
set the tsf timer of the beacon frame
starts the timer
get the tsf timer of the beacon frame
creates a llpacket
creates a llpacket
set n grids variable
sets the address information
get frame control order field
handles the timeout event
starts the backoff timer
pauses the backoff timer
resumes backoff timer after difs time
set energy consumption
public double get cpuactive cur return cpu active cur gets the active current
public double get cpuidle cur return cpu idle cur gets the idle current
public double get cpuoff cur return cpu off cur gets the off current
sets the channel bandwidth
set the rts threshold size of packet to transmit rts
this should be override by its sub class
calculates path loss according to tworay ground model
calculates path loss according to tworay ground model
returns the source port number of the udp packet
returns the destination port number of the udp packet
detaches the port from in ports
data processing has come to an end
this method is invoked in a new thread context when
starts all the active components under this component hierarchy
returns more detailed information of this runtime for diagnosis
asynchronous version of
returns the system current time in second
sets the initial value of srtt in second
returns true if the runtime is either inactive or suspended
set the rts threshold size of packet to transmit rts
returns true if the runtime is suspended
returns the initial value of srtt in second
returns true if the runtime is stopped inactive or suspended
sets the initial value of rttvar in second
set the length of beacon interval
returns the initial value of rttvar in second
set the size of atim window
sets the initial value of base rtt in second
sets the channel bandwidth and calculates all related variables
returns the informational name of the component
returns the initial value of base rtt in second
sets the maximum retr timeout in second
returns the maximum retr timeout in second
returns of bytes retransmitted
enables disables showing ports that have no connection
sets a timer
enables disables showing the root component
returns of coarse grained timeouts
sets the output interval in second
returns the output interval in second
sets the size of the measurement window in second
returns the size of the measurement window in second
returns true if the object mode is enabled
returns true if the size mode is enabled
returns true if desired to show the component and its inside structure
returns true if desired to show the port and its connections
returns the underlying testing engine
starts a test
calls the dot program with the description generated by the
adds a sending rr reply event
adds a rr reply event corresponding to last event
adds a receiving event
adds a receiving rr request event
returns an unconnected port from the default connection port group
adds a receiving event
adds a finish event
adds a message event
adds a message event
enables disables showing the hidden components ports
enables disables showing the info ports
removes the indexth event
dont show the internal structure of the components of the same class
if limit redraw is enabled plots are redrawn according to
show the internal structure of the components of the same class
inserts a sending event
adds the object to the pass list
removes the object from the pass list
returns true if limited redraw is enabled
inserts a receiving event
clears the pass list
inserts a receiving event
inserts a finish event
inserts a message event
resets this object to the initial state
enqueues the object at the position specified
dequeues the object at the position specified
retrieves but not dequeue the object at the position specified
retrieves but not dequeue the first object in the queue
retrieves but not remove the last object in the queue
returns the current size of the queue
return true if the queue is empty
returns the available size of the queue
returns the current length of the queue
returns the current size of the queue
returns the rxt timeout value by multiplying base value and back off
initializes sliding window variables
returns the maximum workforce managed by this runtime
returns statistics of this runtime
enables disables copy of data when relaying the data to all the ports
returns true if copy of data is enabled
enables disables echo of data to the port where the data come
returns true if copy of data is enabled
sets the time to live value 1 to generate numbers forever
sets the counter value
sets the delay
returns information regarding this component
sends code len code bytes of data thru the down port
sends a buffer of data from code buffer code thru the down port
returns the number of worker threads being created
sends code len code bytes of data from code buffer code thru the
asynchronized version of get time for diagnosis
returns the number of idle worker threads in the recycling pool
this method is called upon to determine the transmission
returns the number of requests for worker threads
receives whatever is currently buffered from the lower layer protocol
receives code size code bytes of data from the lower layer protocol
receives a buffer of data from the lower layer protocol
receives a maximun of code size code data from the lower layer
interrupts a blocked sending with the default io exception
interrupts a blocked receiving with the default io exception
returns the event processing rate of this runtime
a flow must be activated before its packets can be scheduled by the
sets the info flag of this component
returns true if the trace flag is on
returns the admission object wrapped in this scheduler component
adjusts the rspec at a hop toward the sender
returns true if the flowspec is activated
returns the efficiency index of thread recycling
returns true if the runtime is in resetting
returns the buffer size available for reservation
handles nav timer timeout event
handles rx timer timeout event
sets the to s mask
enables disables graceful qo s degradation
handles tx timer timeout event
handles beacon timer timeout event
returns the percentage where events are processed in real time
returns the bandwidth of the interface
returns the remaining buffer for qo s flow reservation
the backoff timer might have been paused if the channel
returns the remaining buffer for packet allocation
returns the buffer ratio qo s portion
return a string describing this applet
cancels a fork event
draw a line using the current color between the points x1 y1
display basic information about the application
return a string describing this applet
fill the specified rectangle and draw a thin outline around it
return a string describing this applet
open a format control window as a top level modal dialog
read the specified stream
returns the runtime associated with this component
total number of sensors in simulation
specify whether the x axis is wrapped
set the visibility of the fill button
puts this connection in read only mode as a hint to enable
sets a catalog name in order to select
attempts to change the transaction
this is the entry point method
sets the creation time of the worblehat object
adds a condition to the and condition
it creates a part of the sql query
sets the filter condition
appends a new property to the properties list
sets the target property
it creates a part of the sql query
returns a string representation
returns a string representation
sets the time
returns a string representation
sets additional information e
it returns a prepared statement which one can use for deleting a
it returns a prepared statement which one can use for insert a record
sets the city
it returns a prepared statement which one can use for updating a record
it returns a prepared statement which one can use for querying a record
sets the continent
sets the county
sets the house number
sets the state
sets the street
sets the longitude
returns a string representation
initializes the objects xproperties table
stores all properties from a given worblehat object into
stores a complete worblehat object into database
test whether an worblehat object possesses a property
removes a worblehat object completely including properties
set editor height
get editor height
attach a load listener
returns dropped piece instance of move
method that sets the size of pieces
method that gets the size of pieces
processes info from line containing information about examined game
method that returns name of console diplayed in the title of console container
overriden from free
returns the name of the plugin
starts the plugin
creates ui for setting preferences for tray manager
method that readies all icons needed for this plugin
returns preferences panel in which user can set preferences for this plugin
registers all listeners for this plugin
gets plugins ui container according to the current type of di
method called when one of the users makes the move
method overriden from channels listener
removes tray icon from system tray notification area
gets called when a connection attempt is made
gets called when the connection to the server is established
gets called when the connection attempt failed
gets called when the login procedure is successful
gets called when the login procedure fails
gets called when the connection to the server is lost
removes icon from tab when it is selected
adds the specified bughouse listener to the list of listeners receiving
remove the specified bughouse listener to the list of listeners receiving
notifies all registered bughouse listeners of the specified bughouse event
method that handles lines containing channel list
creates the panel for the cancel button
creates the components of this panel
creates and configures the main frame
configures the menubar according to user preferences
displays the specified code dialog panel code via
session listener implementation
session listener implementation
returns whether the main frame is visible
stores our state such as main window bounds to preferences and disposes
set the size of the frame
disposes of this plugin container
inserts a menu at the specified index
returns the amount of menus added
returns whether the frame of this plugin container is currently selected
sets the title of the frame
sets the icon of the frame
adds the frame to the desktop and makes it visible
returns whether the frame is currently visible
shows the frame
hides the frame
invoked when an action occurs
method called when one of the users makes the move
sets the is running field indicated whether the plugin is running
method called to get users channel list from server
method called to remove channel from users channel list
allocates all the buffers retrieved from a given buffer aggregate
route steps are allocated here
adds to the function call all the buffers created by the vertex
sets this edge connection index
adds the given buffer to the buffer list
adds the given buffer to the buffer list
adds the given buffer to the buffer list
adds the given variable to this buffer container variable list
gives the variable with the given name
returns true the buffer with the given name already exists somewhere
gets the container corresponding to global allocations
adds the given code element at the end of the code element list
adds the given code element at the beginning of the code element list
displays pseudo code for test
displays pseudo code for test
add a local buffer and set the edge this buffer is associated to
adds the given variable to this buffer container variable list
accepts a printer visitor
adds a thread to this source file
returns this source files operator
removes the given thread from this source files thread list
gets the file list containing this file
displays pseudo code for test
returns the main source file
sets the given source file as being the main file
adding a buffer name in a file list to avoid multiple defines
visiting a source file list launches the choice of an appropriate printer
the core type determines which xsl transformation to apply
getting the file printer corresponding to a given operator
the core name is an additional information for the xsl transformation
visiting a vertex implies accepting its children
displays pseudo code for test
displays pseudo code for test
a semaphore is determined by its number
creates the source files from an architecture
evaluates the cost of a data transfer with size transfer size along the
returns true if each operator in the route appears only once
gets the ram corresponding to the step if any exists
checks if a setup link exists between cmp and operator
returns the longest time a contention node needs to transfer the data
returns the longest time a contention node needs to transfer the data
adds two numbers together
returns true if this receive operation leads to a send operation
returns true if this send operation follows a receive operation
depending on the kind of vertex timings are edited or not
retrieves the timings
when a vertex is added to the constraints its hierarchical path is added
retrieves one timing
retrieves the timings
adding a simple constraint on one vertex and one operator
adding a constraint group on several vertices and one core
retrieves the data types
removing a simple constraint on one vertex and one core
parses the archi and algo files and retrieves the file contents
retrieves all the constraint groups
retrieves the timings
retrieves one timing
add timing cells to the newly created file
sets a new graph for this page
adds a combo box for the core selection
add timing cells to the newly created file
adds or remove constraints for all vertices in the graph depending on the
adds or remove a constraint depending on the is checked status
adds a combo box for the core selection
add timing cells to the newly created file
update the check status of the whole tree
nbnodes return the number of nodes per partial blocking nodes list
removes all transfers from routes coming from or going to vertex
removes all overheads from routes coming from or going to vertex
orderlistdisplay display a list with the logger
removes all overheads from routes coming from or going to vertex
removes the precedence edges scheduling a vertex and schedules its
tests if a vertex is of type broadcast
tests if a vertex is of type broadcast
tests if a vertex is of type fork
tests if a vertex is of type join
tests if a vertex is of type init
setting common constraints to all non special vertices and their related
tests if a vertex is of type init
creating recursively the route steps from the architecture
setting common constraints to a non special vertex and its related init
gets a route with a given index
removes all the routes corresponding to the operator couple
asks the time keeper to update timings
building recursively the routes between the cores
prepares task rescheduling
returns true if route1 better than route2
choosing a route between 2 operators
choosing a route between 2 operators
extracting from the abc information the data to display in the gantt chart
adds all the necessary communication vertices with the given type
evaluates the transfer between two operators
appends a vertex at the end of the schedule
inserts a vertex at the beginning of the schedule
inserts a vertex after the given one
inserts a vertex at the given index
inserts a vertex before the given one
gets the previous vertex in the current schedule
gets the next vertex in the current schedule
giving the index of the vertex if present in the list
inserts vertex after previous
giving the vertex if present in the list
looks into the synchronized vertices to extract the vertex
gets the local scheduling order 1 if not present
gets the total scheduling order
inserts vertex after previous
converts this schedule to a list associating a vertex to its rank
gets the vertex with the given total scheduling order
reconstructs the total order using the total order stored in dag
sets the total order of each implementation property in dag
sets the total order of vertex implementation property in dag
resets the time keeper timings of the whole dag
gives the final time of the given vertex in the current implementation
gets the previous vertex in the same schedule
gives the total implementation time if possible
gives the implementation time on the given operator if possible
gets the next vertex in the same schedule
returns the earliest index after the last predecessor
returns the highest index of vertex predecessors
returns the lowest index of vertex successors
gets the schedule of a given component
associates vertices by making them share a created vertex mapping object
dedicates a created vertex mapping object to a single vertex
gets the next vertex in the same schedule
timing properties are store in the graph and possibly shared with other
mapping properties are store in the graph and possibly shared with other
dedicates a created vertex mapping object to a single vertex
enabling the current vertex on the given operator
a computation vertex has an effective operator
give the number of vertices in the dag
effective component is common to communication and computation vertices
adds all vertices of a given set
a transfer vertex follows only one vertex
removes all schedule edges
checks if the vertex first non special predecessors can be mapped on the
checks if the vertex first non special successor can be mapped on the
gets the vertex with the given reference graph
returns the time in seconds for the whole fast process
returns the number of fast iterations to execute before stopping pfast
returns the time in seconds spent in one fast local neighborhood
starting point for the demonstration application
the span is the shortest possible execution time
gantt chart plotting function in a given composite
returns the final time of the current abc
returns the number of operators in the current architecture that execute
returns the number of operators with main type
the load is the percentage of a processing resource used for the given
given a color c returns a random color close to c
getting a component
end time of the last task associated to the component
start time of the first task associated to the component
parses an edge in the dom document
this method is used to associate a map of data types to the
the comparison of two memory exclusion vertex is made according to their
this method computes and returns the sum of the weights of the vertices
method to clear the adjacent vertices lists
test equality of two vertices
method added to enable the use of contains method in
method to clear the adjacent vertices list
transforms the given input file and generates the output file
obtains a suitable
sets the primary key of this table
puts the value passed in a string into the system clipboard
builds the gui that is shown right after application startup
registers listeners to this components buttons etc
simple comparator which puts an index called primary
puts dml statements to the clipboard
returns an approximate size of this index
returns the underlying
informs all registered
adds the provided
adds the provided
at startup create and show the main frame of the application
gets notifications about analysis progress
adds the gt3 and java nature to the project
adds the gt3 and java nature to the project
this method is called when the plug in is stopped
checks if an answer is appropriate valid for specified group
connection manager f r diese verbindung setzen
set the idvideocomunidad
set the idtipodocumento
set the idcomunidad
set the nombre
set the idvideo
set the descripcion
set the idcoleccion
set the idmail
set the from
set the idcategoria
set the cardinalidad
set the idusuario
set the idcategoriavideo
set the idcomunidad
set the idconfiguracion
set the idareatematica
set the numelemnoticias
set the numelemdocumentos
set the brevedescripcion
set the idrole
set the rol
set the idcategoriavideo
return the name of the first key column
set the idmiembro
set the idimagen
set the idperfil
set the idalbum
set the apellidos
set the idimagen
returns the full name
set the idusuario
set the idusuario
set the idusuario
set the anyonacimiento
set the titulo
set the fechacreacion
set the fechamodificacion
set the contenido
set the resumen
set the idalbum
generic method to save an object handles both update and insert
elimina un objeto de la cach
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
convenience method to get the user object from the session
convenience method for getting a i18n keys value
convenience method to get the applications context from the request
convenience method for getting a i18n keys value with arguments
convenience method to get the user object from the session
convenience method to get the applications context from the request
creates a playing card with the specified rank and suit
registers property preprocessor that will be applied before main template transformation
mark a collection as static collection
applies all registered row processors to a row
applies all registered cell processors to a cell
applies all registered cell processors to a cell
generates a new bean key for the items in given collection
applies all registered row processors to a row
set this collection to be grouped outlined
returns list with all
sets the columns to hide in result xls
set the columns to hide in result xls
set spreadsheets with given names to be hidden
this implementation first checks are there any list ranges in the source formula
not all jexl e
checks if is finished
gets the total repeat
gets the current repeat
gets the current run number
gets the stop condition
adds a variable watcher
gets the parameter
gets the parameter count
sets the variables
gets the type
assign a value to the batch variable
assign a value to the batch variable
assign a value to the batch variable
assign a value to the batch variable
assign a value to the batch variable
assign a value to the batch variable
inits the int
inits the float
inits the string
sets the simulation
inits the bool
gets the first value in list
stops the simulation
gets the last value in list
inits the generator
checks if is list
creates a new random object
creates a new random object
gets the run count
checks if is g ui
creates a new random object
creates a new random object
creates a new random object
sets the run thread
creates a new random object
sets the max
add all the actions which help controlling the simulation to a tool bar
creates a new random object
gets the start sim action
creates a new random object
adds a sim event listener
sets the min
removes a sim event listener
sets the seed
fire sim event
sets the generator
sets the start sim action
sets the step
gets the seed
gets the start or pause sim action
start or pause sim
sets the start or pause sim action
builds a sim
gets the step sim action
sets the step sim action
gets the reload action
stop the batch
action reload sim
pause the batch
sets the reload action
sets the contribution items
checks for parameters
gets the monitor action
sets the monitor action
adds a sim reloaded listener
edit the batch
sets the parameter value
sets the parameter value
show the batch view
gets the grid action
gets the parameter value
sets the grid action
gets the gis action
sets the gis action
parses a xml file
gets the inspector action
gets the display output
sets the inspector action
gets the model file name
gets the chart action
gets the model name
gets the output
checks for model file name
sets the chart action
sets the model name
inits the remote control
gets the edit file action
sets the model file name
gets the remote control
sets the edit file action
gets the x ml tree from file
gets the type manager
adds a display output
sets the base directory
gets the start img desc
inits the output manager
gets the base directory
sets the start img desc
gets the random agent
checks for not already parsed
gets the pause img desc
gets the scheduler
sets the current file name
inits the scheduler
sets the pause img desc
gets the current file name
inits the controller
gets the controller
gets the name
increase the time then increments the cycles
inform the listeners that the scheduler has been reset
be ready to run
checks if is ready to run
adds a sim event listener
show parameter view
sets the to ready state
fire sim event
fire stop sim
sets the to stopped state
sets the to running state
sets the to paused state
builds a outputs
gets the simulation
sets the name
sets the workbench window title
show mandatory views
show console view
parses a expression
parses a header
parses a footer
parses a rewrite
creates a writer
sets the last value
gets the file name suffix
export outputs on
gets the expression text
sets the expression text
called whenever the view is scheduled
creates a surface
do refresh write and close
gets the surface
gets the file
sets the file
gets the directory
sets the directory
gets the rewrite
sets the current state
sets the rewrite
gets the header
dismiss current state
sets the header
gets the footer
compute protocol roots
checks for protocol
gets the root node
deliver failure in reply to
schedule for delivery
schedule for delivery
gets the performative
sets the performative
checks if is sent by initiator
sets the protocol
sets the sent by initiator
gets the conversation state
sets the conversation state
checks if is wait for response
sets the wait for response
sets the following nodes
checks if is terminal
can stop current task
should stop current task
select next activable task
gets the priority of
stop current task
are all node ended
update the activity level of the current task
run action on
checks if is normally finished
recursive run of actions
lv minh 4 return the square of distance between 2 point
execute the creation commands in the context of world agent
adds a conversation to the conversation list
djiskstra as a static algorithm
compute all the blank nodes i
gets the gama default action bar advisor
gets the gama workbench configurer
gets the gama workbench window advisor
set the value of the boolean editor
get the value of the boolean editor
basic entity initializes the variables of the gama object
returns the species of the object
allows an object to remove itself from its species
initialize the variables of the gama object
set return created 6 sept
make the necessary clean up
this function allows to load a
builds the existing vars
dispose this display surface
sets the wrapped graphics2 d
gets the graphics2 d object around which this is a wrapper
create the details field based upon the details object
sets the current font
gets the current component
handle all adds
handle all removes
creates an awt frame suitable as a parent for awt swing dialogs
creates an awt frame suitable as a parent for awt swing dialogs
sets the parameters for the next drawing operation
draws the specified image
creates the focus handlers
draws the specified image scaling the image to the correct size if necessary
schedule component creation
draws the specified image scaling the image according to the sim graphics current
draws a rounded rectangle of the specified color
find owned popups
draws a rounded rectangle of the specified color faster than draw round rect
draws a hollow rounded rectangle of the specified color
draws a hollow rounded rectangle with the specified color faster than
handle opened window
draws a true circle with the specified color
handle closed window
handle closing window
draws a circle of the specified color at the current coordinates faster than
checks if is focusable
returns the parent for the given element or code null code indicating
draws an oval in the specified color faster than draw oval
draws a hollow oval in the specified color faster than draw hollow oval
return a runtime exception indication an unknown exception
draws a hollow oval in the specified color
get the bounding rectangle for the specified string and the specified font
reset property value
get the swing component encapsulated by this composite
retrieve the underlying variable encapsulated by this variable element
draws a hollow rectangle of the specified color
draws a hollow rectangle of the specified color faster than draw hollow rect
retrieve the underlying reflex prototype encapsulated by this reflex element
sets the property value
verifies if this entity element has children or not
draws an rectangular border using the current drawing parameters
retrieve the underlying entity encapsulated by this entity element
draws a string using the current drawing parameters
implementation of all the behaviors defined in the gaml element
retrieve the underlying object encapsulated by this primitive element
retrieve the underlying var prototype encapsulated by this var prototype element
returns the parent of this element
retrieve the underlying skill class encapsulated by this skill element
retrieve the underlying species encapsulated by this species element
sets the child
gets the expected child types as string
optim created 3 sept
is const created 3 sept
checks for temp var
sets the each
gets the expected left types as string
gets the expected right types as string
sets the right expression
operand is zero
operand is one
sets the type
sets the species
builds a filename
checks if is text file
checks if is image file
checks if is pgm file
adds the element
adds the element
gets the key expr
gets the value expr
sets the species
checks for return var
sets the elements
checks if is empty
sets the elements
checks if is empty
sets the species
find type from left expr
find type from right expr
gets the var
adds the element
adds the element
gets the command status
sets the command status
execute i getter
inits the environment
inits the type
inits the proportion
inits the range
inits the variation
gets the s wt pixel value
gets the a wt pixel value
gets the swt color
inserts a string after the specified position
inserts a string after the specified position
returns the parent class file for this field info
returns the type of this field
when set public it is cleared from being private or protected
returns a copy of this fields access flags
when set private it is cleared from being public or protected
returns a constant from the constant pool with this fields name
when set protected it is cleared from being public or private
returns a constant from the constant pool with this fields type descriptor string
returns the constant value for this field or null if no constant set
when set final it is cleared from being an interface or abstract
set the constant value for this field as an int
set the constant value for this field as a float
set the constant value for this field as a long
set the constant value for this field as a double
set the constant value for this field as a string
mark this field as being synthetic by adding a special attribute
when set abstract it is cleared from being final
mark this field as being deprecated by adding a special attribute
returns the string value generated by the modifier class
returns the length in bytes of this object in the class file
returns tt true tt if this map contains no key value mappings
returns the value to which this map maps the specified key
returns the constant pool that this attribute is defined against
write just the attribute specific data
copies all of the mappings from the specified map to this one
returns null if every object is caught by this handler
removes all mappings from this map
if this type descriptor was constructed with a class argument then this method
if this type descriptor represents an array the component type is returned
returns the dimensions after being adjusted
returns the dimensions as originally specified in the constructor
returns a set view of the keys contained in this map
returns the type descriptor code
returns a collection view of the values contained in this map
returns a type descriptor for the type of this class file
returns true if this class file represents an inner class
returns null if this class file does not represent an inner class
returns a method descriptor which describes return and parameter types of this
returns the source file of this class file or null if not set
add a declared exception that this method may throw
add an interface that this class implements
add an interface that this class implements
add a method to this class
add a static initializer to this class
add an inner class to this class
add an inner class to this class
add an attribute to this class
writes the class file to the given output stream
the index of this constant in the constant pool
returns null if no code buffer is defined for this code attr
returns the source file name
returns a constant from the constant pool with the source file name
returns the line number in the source code from the given bytecode address
returns the length of the source file attribute
returns the length in bytes of this object in the class file
returns all the constants in the pool in no particular order
returns the number of constants in the pool
get or create a constant from the constant pool representing a class
get or create a constant from the constant pool representing an array
get or create a constant from the constant pool representing a class
get or create a constant integer from the constant pool
get or create a constant long from the constant pool
get or create a constant float from the constant pool
get or create a constant double from the constant pool
get or create a constant string from the constant pool
get or create a constant utf string from the constant pool
add an entry into the local variable table attr
returns an immutable collection of all the instructions in this instruction list
returns null if no inner class specified
returns null if no outer class specified
returns null if no inner class specified or is anonymous
get a stream used to define a class
creates a local variable reference from a name and type
creates a label whose location must be set
adds a context
gets the context
adds a node
generates code that loads a constant boolean value onto the stack
generates code that loads a constant long value onto the stack
generates code that loads a constant float value onto the stack
generates code that loads a constant double value onto the stack
checks if is opening parenth
checks if is closing parenth
generates code that loads a local variable onto the stack
gets the end line
sets the end line
sets the start line
gets the end column
gets the start column
sets the end column
sets the start column
checks if is opening list
loads a reference to this onto the stack
checks if is closing list
checks if is opening point
checks if is closing point
updates the selection of this viewer
checks if is unary operator
notifies any selection changed listeners that the viewers selection has
re act upon the selection changed of the grid display
checks if is type
generates code that loads a value from a field from this class
checks if is species var
checks if is species name
generates code that loads a value from a static field from this class
checks if is global var
updates the display
updates the display
dispose this display surface
checks if is temp var
checks if is true
checks if is false
sets the wrapped graphics2 d
gets the graphics2 d object around which this is a wrapper
sets the display surface associated with this sim graphics instance
checks if is nil
sets the current font
generates code that stores a value into a field from this class
checks if is self
sets the coordinates for the next drawing operation
sets the parameters for the next drawing operation
checks if is dotted var
sets the parameters for the next drawing operation
checks if is variable
generates code that stores a value into a field from this class
draws the specified image
draws the specified image scaling the image to the correct size if
draws the specified image scaling the image according to the
checks if is keyword
draws a rounded rectangle of the specified color faster than
draws a hollow rounded rectangle with the specified color faster than
draws a circle of the specified color at the current coordinates faster
add this instruction to the end of the instruction list
draws a directed link a line with a square head from the specified
checks if is terminal
draws a link a line from the specified coordinates to the specified
insert an instruction immediately following this one
draws an oval in the specified color faster than draw oval
draws a hollow oval in the specified color faster than draw hollow oval
generates code that returns void
removes this instruction from its parent instruction list
get the bounding rectangle for the specified string using the current
draws a rectangle at the current x and y coordinate with the current
generates code that returns an object or primitive type
draws a hollow rectangle of the specified color faster than
replace this instruction with another one
returns a positive negative or zero value indicating what affect this generated
generates code to invoke a method in any class
returns the stack depth for when this instruction is reached
draws a string using the current drawing parameters
returns the message for the exception
prints the stack of the exception
prints the stack of the exception
returns the address of this instruction or 1 if not known
generates code to invoke a class constructor in any class
returns true if execution flow may continue after this instruction
returns the decimal count of the field
does dtd based validation on file
does dtd based validation on text
does dtd based validation on input source
initializes the writer
closes the dbf file
sets the next time tick this basic action will be executed
generates code to invoke a method in the super class
sets the name of this basic action
reschedule this basic action if necessary
generates code to invoke a class constructor in this class
reschedules all the basic action contained by this schedule group
sorts the basic actions in this schedule group according to their
generates code to invoke a class constructor in any class
generates code to invoke a super class constructor
generates code to invoke a super class constructor
schedules the specified basic action to occur at the specified clock tick
schedules the specified basic action to occur at the specified clock tick
schedules the specified basic action to occur at the specified clock tick
generates code for the dup instruction
schedule the specified basic action to execute at the specified interval
generates code for the dup x1 instruction
generates code for the dup x2 instruction
sets the species
generates code for the dup2 instruction
schedules the specified basic action to execute starting at the specified
generates code for the dup2 x1 instruction
schedules the specified basic action to execute starting at the specified
generates code for the dup2 x2 instruction
schedules the execution of the specified method on the specified object
generates code for the pop instruction
generates code for the pop2 instruction
inits the default distributions
generates code for the swap instruction
sets the axes color
generates code for a swap2 instruction
sets the axes color
parses a expression
parses a chart color
parses a color
sets the background color
gets the image file name
generates code that performs an unconditional branch to the specified location or
initialises the reader
returns the field count of the database file
returns a field at a specified position
checks to see if there are more records in the file
gets the text for this tab
refreshes the tree with the data from the xml file
adds the children of an xml element
schedules the execution of the specified action for the end of
schedules the execution of the specified action for a pause in
schedules the execution of the specified method on every object in the
removes the specified action from the list of actions to be executed
removes the specified action from the list of actions to be executed
gets the vector of basic actions to execute during a pause in the
executes all the actions scheduled to execute at simulation end
executes all the actions scheduled to execute at a simulation pause
generates code that performs a subroutine branch to the specified location
sets the input of the outline page
the editor is saved so we should refresh representation
generates code that returns from a subroutine invoked by jsr
generates code for an arraylength instruction
find the specified action in the queue and void it
insert the specified action into the heap
generates code that throws an exception
inits the header
adds the method
creates the class text
generates code that performs an object cast operation
generates code that performs an instanceof operation
builds the schedule
generates code that increments a local integer variable by a signed constant
builds the display
gets the name
sets the schedule
generates code to enter the monitor on an object loaded on the stack
creates a java
try to be a good citizen and cleanup
subthread that loads classes
get the current target of a moveable entity
gets the current route of an agent
gets the distance to the target agent
gets the time for the current entity to reach a target agent
generates code to exit the monitor on an object loaded on the stack
sets the world
builds a world
gets an unique index for an agent
gets the decay
gets the environment
sets the base
sets the base
sets the skills
adds a skill class
generates an instruction that does nothing
gets the root
sets the root
sets the parent
generates a breakpoint instruction for use in a debugging environment
gets the base
sets the use global path finder attribute
gets the use global path finder attribute
sets the name of the variable
sets the type of the variable
checks if is parent of
gets the node
sets the node
gets the view secondary id
sets the view id
sets the view secondary id
pre parse the whole xml file
adds a species
builds the species
builds the species
get range created 28 ao t 07 by drogoul
set range created 28 ao t 07 by drogoul
gets the condition
sets the else proto
gets the else proto
sets the gaml name
sets the condition
gets the condition
evaluates true on
collect high level command names in
writes agents created from open map to a shapefile
sets the initial
sets the final
gets the gaml name
look ahead for a definition of skills then return a list of species
gets the center of the extents of the esri graphic
gets the center of the extents of the esri graphic list
gets the center of the extents of the omgraphic
simply returns if the parent is aware of this action
actions cannot be registered within a dynamic scope
gets the center of the extents
gets the center of the extents of the datasource
removes the specified action from this schedule
adds a filename to the list of files to consider
assert the existence and readable state of a file
removes the specified action from this schedule at the specified tick
used to indicate that we enter a specific scope i
used to indicate that we enter a dynamic scope execution block command
used to indicate that we leave a dynamic scope
leaves the current species scope
checks if this variable name has been registered in the current scope
leaves the remote execution context
checks if is species name
gets the species
adds a new species
gets the world species
builds a species
checks if is super
gets the priority
gets the last satisfaction
update the external reward
update the external reward
get the current task
record the priority gain
get a task
set the internal reward
record the priority gain
adaptation of all tasks
log the agent state
adaptation of all tasks
get the current action duration
set the action ending time to current time
the final reward
do the task adaptation at the end of one simulation
end the current task if exists
get the total satisfaction for this agent
end all the current task
the current activity of the agent
display the result of one simulation
gets the instance class for prototype
gets the prototype class for token
gets the priority
compute priority when condition is true
get the number of trial
add a new external stimulation
the current duration in number of tick
the total duration in number of tick
gets the instant satisfaction
the task can be successful it has a goal
update the satisfaction
parses the max sucess param
parses the name of the task that depend on the current task
parses the priotity gain
set madaptiveness created 17 sept
get adaptiveness created 17 sept
set mmax success created 17 sept
gets the priority
get mmax success created 17 sept
gets the species class for token
gets the start time
gets the duration
checks if is success
conversion of location to name in the house of marion
is this a show view event
gets the place
resizes this component to width height
note that in the
byte operations on the stack pointer have adjustment 2
constructs a code string code with all attributes in name value
constructs a code string code with all attributes in name value
release any resources allocated for this directory context
list children as objects
log the given message
log the given message and error
signal the web server that the servlet has finished handling this
get offset into internal buffer
set offset into internal buffer
parse the packet header for a packet sent from the web server to
prepare this packet for accumulating a message from the container to
add a fulling specified netscape mapping
copy a chunk of bytes into the packet starting at the current
copy a chunk of bytes into the packet starting at the current
add a fulling specified iis mapping
read an integer from packet and advance the read position past
read an integer from the packet but dont advance the read
generate configuration files
initialize this servlet
read a string from the packet and advance the read position
return the connection linger settings for this connector
copy a chunk of bytes from the packet into an array and advance
the background thread that listens for incoming tcp ip connections and
set the connection linger for this connector
read a 32 bits integer from packet and advance the read position past
start the background processing thread
associate an open socket with this instance
copy a chunk of bytes from the packet into an array and advance
stop the background processing thread
read a 32 bits integer from the packet but dont advance the read
start the background thread we will use for request processing
stop the background thread we will use for request processing
add a fulling specified appache mapping
add a partially specified appache mapping
process the start event for an associated context
are we processing a default context element
return the live deploy flag for this component
set the code catalina
set the live deploy flag for this component
handle the beginning of an xml element
the instance main program
log a message on the logger associated with our context if any
read n bytes from the input stream and ensure we got them all
config file path mutator
log a message on the logger associated with our context if any
return a file object representing the application root directory
stop the servlet container
process the specified command line arguments and return
send a packet to the web server
set the debugging detail level for this component
deploy applications for any directories or war files that are found
process the start event for an associated engine
close the socket connection to the web server
log a message on the logger associated with our engine if any
log a message on the logger associated with our engine if any
scan for and configure all tag library descriptors found in this
process a start event for this engine
process a stop event for this engine
create and configure the digester we will be using for shutdown
execute the processing that has been configured from the command line
handle the beginning of an xml element
set the logger for this component
set the code catalina
process the specified command line arguments and return
execute the processing that has been configured from the command line
set the code catalina
start a new server instance
stop the servlet container
stop an existing server instance
expand the war file found at the specified url into an unpacked
return the secure socket factory class name
return the debugging detail level for this component
set the debugging detail level for this component
set the secure socket factory class name
return true if naming is enabled
log a message on the logger associated with our host if any
enables or disables naming support
return the logger for this component
log a message on the logger associated with our host if any
set the logger for this component
return the default realm for our containers
process a start event for this host
set the default realm for our containers
return the secure socket factory class name
process a stop event for this host
set the secure socket factory class name
add a new connector to the set of defined connectors
undeploy all deployed applications
deploy a web application for any user who has a web application present
add a new engine to the set of defined engines
create configure and return a context that will process all
start the background thread that will periodically check for
create configure and return a context that will process all
log a message on the logger associated with our host if any
create configure and return an engine that will process all
log a message on the logger associated with our host if any
create configure and return an engine that will process all
create configure and return a host that will process all
stop the background thread that is periodically checking for
return descriptive information about this server implementation and
remove the specified connector from the set of defined connectors
get the value of the tomcat authentication flag
create configure and return a host that will process all
remove the specified context from the set of defined contexts for its
remove the specified engine from the set of defined engines along with
set the value of the tomcat authentication flag
remove the specified host along with all of its related contexts
the background thread that checks for web application auto deploy
create and return a class loader manager that can be customized and
create or allocate and return a request object suitable for
create or allocate and return a response object suitable for
invoke a pre startup initialization
create or allocate and return an available processor for use in
create and return a new processor suitable for processing ajp13
set the check interval in seconds for this manager
start the background processing thread
gracefully terminate the active use of the public methods of this
return the default context with which this manager is associated
stop the background processing thread
set the default context with which this manager is associated
remove the session with the specified session identifier from
indicates how many seconds old a session can get after its last
create a session and replicate it in our cluster
start this manager
the background thread that checks for session timeouts and shutdown
construct and return a new session object based on the default
log a message on the logger associated with our container if any
the background thread that checks for session timeouts and shutdown
add this session to the set of active sessions for this manager
prepare for the beginning of active use of the public methods of this
gracefully terminate the active use of the public methods of this
start the background thread that will periodically check for
set the connection url for this store
prepare for the beginning of active use of the public methods of this
return the connection url for this store
get a session from the recycled ones or create a new empty one
return the active session associated with this manager with the
process property change events from our associated context
remove this session from the active sessions for this manager
return a file object representing the pathname to our
invalidate all sessions that have expired
clear all sessions from the store
start the background thread that will periodically check for
return a string rendering of this object
return a new session object as long as the number of active
return true if the session id is loaded in memory
log a message on the logger associated with our container if any
log a message on the logger associated with our container if any
load all sessions found in the persistence mechanism assuming
prepare for the beginning of active use of the public methods of this
remove entry from cache
gracefully terminate the active use of the public methods of this
remove this session from the active sessions for this manager
for debugging get a session attribute
return a string rendering of this object
log a message on the logger associated with our container if any
save all currently active sessions in the appropriate persistence
log a message on the logger associated with our container if any
remove the session from the managers list of active
remove the session with the specified session identifier from
remove all of the sessions in this store
write the provided session to the store without modifying
check the connection associated with this store if its
does the user represented by this principal possess the specified role
return a string representation of this object which exposes only
called once when this store is first started
process a code lt user gt code element from the xml database file
prepare for the beginning of active use of the public methods of this
return the principal associated with the specified username and
phase 2 of authenticating a code subject code when phase 1
phase 2 of authenticating a code subject code when phase 1
invalidate all sessions that have expired
close the specified database connection
open the specified database connection
return the container with which this realm has been associated
invoked by tomcat on shutdown
set the container with which this realm has been associated
return the principal associated with the specified username and
return the principal associated with the specified username and
return the principal associated with the specified username and
execute the requested operation
execute the requested operation
return the principal associated with the specified chain of x509
this method returns a date object that is accurate to within one
return code true code if the specified principal has the specified
start the background thread that will periodically check for
return the principal associated with the specified chain of x509
execute the requested operation
load the contents of our configuration file
return code true code if the specified principal has the specified
execute the requested operation
release all object references and initialize instance variables in
log a message and associated exception
the background thread that checks for session timeouts and shutdown
return the principal associated with the specified username and
close the specified database connection
prepare for the beginning of active use of the public methods of this
remove any resource reference with the specified name
digest the password using the specified algorithm and
remove any resource link with the specified name
return the managed bean definition for the specified bean type
create a new group and return the corresponding mbean name
create a new role and return the corresponding mbean name
return the digest associated with given principals user name
return the naming resources associated with this web application
log a message on the logger associated with our container if any
return the time when this session was created in milliseconds since
return the mbean name for the specified group name if any
return the mbean name for the specified role name if any
log a message on the logger associated with our container if any
return the mbean name for the specified user name if any
remove an existing group and destroy the corresponding mbean
remove an existing role and destroy the corresponding mbean
remove an existing user and destroy the corresponding mbean
enable registration of contexts and servlet wrappers using jsr77 naming pattern
return an code enumeration code of code string code objects
handle a code container event code from one of the containers we are
load additional mbean descriptor resources
create the mbeans that correspond to every existing node of our tree
create the mbeans for the specified connector and its nested components
log a message on the logger associated with our manager if any
log a message on the logger associated with our manager if any
create the mbeans for mbean factory
create the mbeans for the specified service and its nested components
destroy the mbeans that correspond to every existing node of our tree
remove an existing context
remove an existing host
prepare for active use of the public methods of this component
remove an existing service
set the directory in which we create log files
remove any resource reference with the specified name
set the log file prefix
set the log file suffix
remove any resource link reference with the specified name
return the timestamp flag
writes the specified message to a servlet log file usually an event
set the verbosity level of this logger
set the timestamp flag
writes the specified message to a servlet log file usually an event
writes the specified exception and message to a servlet log file
close the currently open log file if any
deregister the mbeans for the specified service and its nested
uses the servlet context to set some process variables
writes an explanatory message and a stack trace for a given
open the new log file for the date specified by code date code
writes the specified message to the servlet log file usually an event
uses the http servlet request to set most process variables
writes the specified message and exception to the servlet log file
prepare for the beginning of active use of the public methods of this
gracefully terminate the active use of the public methods of this
sets the desired command string
notify all lifecycle event listeners that a particular event has
sets process environment
notify all lifecycle event listeners that a particular event has
log a message
converts null strings to another string
constructs the process environment to be supplied to the invoked
gets the root directory of the web application to which this process
gets process derived query parameters
log a message and associated exception
gets ready status
sets http servlet response object used to set headers and send
sets standard input to be passed on to the invoked cgi script
return the container with which this mapper is associated
set the container with which this mapper is associated
acknowledge the occurrence of the specified event
process a property change event
add an alias for the specified host
add a new child host to our associated engine
return the host that matches the specified name or alias if any
remove the specified alias from our cache
remove an existing child host from our associated engine
return the logger with which this container is associated
set the default host used for resolving unknown host names
return the container with which this mapper is associated
set the container with which this mapper is associated
create the mbeans for the interesting global jndi resources
report a bad request error for the specified resource
destroy the mbeans for the interesting global jndi resources
log a message and associated exception
set the default context
set the container with which this mapper is associated
return the child container that should be used to process this request
set the debugging detail level for this component
return the value of the live deploy flag
clear all application created attributes
set the live deploy flag value for this host
return the default mapper class name
return the name of the container with which this deployer is associated
set the default mapper class name
set an attribute as read only
set the context relative uri of the jsp file for this servlet
return the context for the deployed application that is associated
log a message on the logger associated with our container if any
log a message on the logger associated with our container if any
return the load on startup order value negative value means
return a code servlet context code object that corresponds to a
return the value of the specified initialization parameter or
return the names of the contexts initialization parameters or an
import the default context config into a web application context
add a new connector to the set of defined connectors and associate it
delegate a request for the parent class loader to our associated host
log a message on the logger associated with our context if any
add a new child container to those associated with this container
store the set of initialized application listener objects
remove the specified connector from the set associated from this
log a message on the logger associated with our container if any
create if necessary and return a digester configured to process the
delete the specified directory including all of its contents and
return a code request dispatcher code object that acts as a
unwrap the request if we have wrapped it
return the real path for a given virtual path if possible otherwise
unwrap the response if we have wrapped it
add the specified mapper associated with this container
install a new web application whose web application archive is at the
set the fully qualified servlet class name for this servlet
return the context for the deployed application that is associated
remove an existing web application attached to the specified context
remove an existing web application attached to the specified context
return a set containing the resource paths of resources member of the
start an existing web application attached to the specified context
return the mapper associated with the specified protocol if there
stop an existing web application attached to the specified context
add a default mapper implementation if none have been configured
set the cluster wide unique identifier for this engine
set the locale to character set mapper for this context
return the child container that should be used to process this request
log a message on the logger associated with our container if any
log a message on the logger associated with our container if any
remove an existing child container from association with this parent
start this engine component
set the specified ejbs in the naming context
writes the specified message to a servlet log file
remove a mapper associated with this container if any
set the specified resources in the naming context
writes the specified exception and message to a servlet log file
set the use cookies for session ids flag
set the specified resources in the naming context
set the allow crossing servlet contexts flag
set the specified resource link in the naming context
writes the specified message and exception to a servlet log file
override the code get parameter code method of the wrapped request
set the specified ejbs in the naming context
override the code get parameter names code method of the
add a new service to the set of defined services
set the specified environment entries in the naming context
set the reloadable flag for this web application
process an unavailable exception marking this servlet as unavailable
set the specified local ejbs in the naming context
add a cookie to the set of cookies associated with this request
add a header to the set of headers associated with this request
add a locale to the set of preferred locales for this request
clear the collection of cookies associated with this request
clear the collection of headers associated with this request
clear the collection of locales associated with this request
set the authentication type used for this request if any otherwise
set the context path for this request
add a default mapper implementation if none have been configured
set the swallow output flag for this web application
set the http request method used for this request
set the specified resources in the naming context
return a context relative path beginning with a that represents
set the query string for this request
set the path information for this request
set a flag indicating whether or not the requested session id for this
set the requested session id for this request
return the java class name of the wrapper implementation used
set the specified resources in the naming context
set a flag indicating whether or not the requested session id for this
set the unparsed request uri for this request
merge the context initialization parameters specified in the application
set the servlet path for this request
set the principal who has been authenticated for this request
set the java class name of the wrapper implementation used
set the specified resources in the naming context
return the http protocol version implemented by this response
release all object references and initialize instance variables in
set the resources dir context object with which this container is
log the specified message to our current logger if any
get the resources dir context object with which this container is
log the specified message and exception to our current logger
return the code servlet response code for which this object
log the specified message to our current logger if any
log the specified message and exception to our current logger
set the loader with which this context is associated
return the abbreviated name of this container for logging messsages
return the value for the specified header or code null code if this
flush this stream and cause the response to be committed
print a boolean value
print a character value
return code true code if the specified class name represents a
print a character array value
set the manager with which this container is associated
print a double value
print a float value
read a line from the specified input stream and strip off the
print an integer value
print a long value
return code true code if loading this servlet is allowed
print an object value
the background thread that listens for incoming tcp ip connections and
print a string value
terminate the current line by writing the line separator string
release all object references and initialize instance variables in
return the authorization credentials sent with this request
print a boolean value and terminate the current line
print a character value and terminate the current line
log the abbreviated name of this container for logging messages
print a character array value and terminate the current line
print a double value and terminate the current line
print a float value and terminate the current line
stop the background processing thread
print an integer value and terminate the current line
print a long value and terminate the current line
start this component pre loading the servlet if the load on startup
print an object value and terminate the current line
print a string value and terminate the current line
write a single character
is this an instance of the default code loader code configuration
add a new listener class name to the set of listeners
write an array of characters
write a portion of an array of characters
stop this component gracefully shutting down the servlet if it has
write a string
write a portion of a string
add a new application parameter for this application
return the value for the specified header or code null code if this
return the error message that was set with code send error code
return the http status code associated with this response
reset this response and specify the values for the http status code
return the wrapped response
return the connector through which this response is returned
set the connector through which this response is returned
return the number of bytes actually written to the output stream
return the context with which this response is associated
is this an instance of the default code manager code configuration
set the context with which this response is associated
add an ejb resource reference for this web application
return the processing inside an include flag
set the processing inside an include flag
return descriptive information about this response implementation and
return the request with which this response is associated
set the request with which this response is associated
add an environment entry for this web application
return the http protocol version implemented by this response
return the code servlet response code for which this object
return the output stream associated with this response
is the specified class name property name combination an
set the output stream associated with this response
create and return a servlet output stream to write the content
add resource parameters for this web application
perform whatever actions are required to flush and close the output
return a print writer that can be used to render error messages
return the input stream associated with this request
add the classname of an instance listener to be added to each
release all object references and initialize instance variables in
convert if necessary and return the absolute url that represents the
close this output stream causing any buffered data to be flushed and
is the specified property type one for which we should generate
set the input stream associated with this request
flush any buffered data for this output stream which also causes the
write the specified byte to our output stream
add a new context initialization parameter replacing any existing
write code b
write code len code bytes from the specified byte array starting
return the wrapped request
return the authorization credentials sent with this request
set the authorization credentials sent with this request
flush the buffer and commit this response
return the naming resources associated with this web application
is the specified class name one that should be skipped because
add a locale to the set of preferred locales for this request
return the connector through which this request was received
set the connector through which this request was received
add a resource reference for this web application
return descriptive information about this request implementation and
perform whatever actions are required to flush and close the input
add a resource environment reference for this web application
return the code servlet request code for which this object
set the naming resources for this web application
return the response with which this request is associated
clear any content written to the buffer
set the response with which this request is associated
return the socket if any through which this request was received
add a resource link for this web application
set the socket if any through which this request was received
return the input stream associated with this request
set the content length in bytes for this response
set the input stream associated with this request
release all object references and initialize instance variables in
add the classname of a lifecycle listener to be added to each
return the wrapper within which this request is being processed
set the wrapper within which this request is being processed
set the content type for this response
create and return a servlet input stream to read the content
application commit flag accessor
perform whatever actions are required to flush and close the input
add the classname of a container listener to be added to each
release all object references and initialize instance variables in
set the content length associated with this request
set the content length associated with this request
set the locale that is appropriate for this response including
set the content type and optionally the character encoding
return the ejb resource reference with the specified name if any
set the content type and optionally the character encoding
return the number of bytes actually written to the output stream
set the context path for this context
set the protocol name and version associated with this request
set the remote ip address associated with this request
set the name of the scheme associated with this request
add the specified cookie to those that will be included with
return the environment entry with the specified name if any
set the value to be returned by code is secure code
return the processing inside an include flag
set the name of the server virtual host to process this request
set the port number of the server to process this request
add the specified date header to the specified value
close this output stream causing any buffered data to be flushed and
add the specified header to the specified value
return the resource reference with the specified name if any
return the output stream associated with this response
add the specified integer header to the specified value
create or allocate and return a request object suitable for
return the resource environment reference type for the specified
set the output stream associated with this response
set the public identifier of the deployment descriptor dtd that is
set the suspended flag
create or allocate and return a response object suitable for
has the specified header been set already in this response
return the resource link with the specified name if any
create or allocate and return an available processor for use in
encode the session identifier associated with this response
create and return a servlet output stream to write the content
perform whatever actions are required to flush and close the output
create and return a new processor suitable for processing http
remove the specified application listener class from the set of
return the character encoding for this request
return a print writer that can be used to render error messages
remove the application parameter with the specified name from
encode the session identifier associated with this response
release all object references and initialize instance variables in
write the specified byte to our output stream flushing if necessary
remove any ejb resource reference with the specified name
write code b
stop the background processing thread
return the servlet input stream for this request
flush the buffer and commit this response
remove any environment entry with the specified name
return the preferred locale that the client will accept content in
return the character encoding used for this response
remove a class name from the set of instance listener classes that
return the set of preferred locales that the client will accept
send an error response with the specified status and a
return the servlet output stream associated with this response
remove the context initialization parameter with the specified
return the writer associated with this response
send an error response with the specified status and message
read the reader wrapping the input stream for this request
send a temporary redirect to the specified redirect location url
clear any content written to the buffer
remove any resource reference with the specified name
reset the data buffer but not any status or header information
set the specified date header to the specified value
set the buffer size to be used for this response
remove any resource environment reference with the specified name
set the specified header to the specified value
set the content length in bytes for this response
read up to code len code bytes of data from the input stream
set the content type for this response
remove any resource link with the specified name
set the specified integer header to the specified value
set the locale that is appropriate for this response including
remove a class name from the set of lifecycle listener classes that
set the http status to be returned with this response
return the http protocol version implemented by this response
release all object references and initialize instance variables in
send an error response with the specified status and message
clear any content written to the buffer
create and return a servlet output stream to write the content
set the http status and message to be returned with this response
remove a class name from the set of container listener classes that
tests is the connection will be closed after the processing of the
removes the specified header
has stream been created
perform whatever actions are required to flush and close the output
set the http status to be returned with this response
set the content length in bytes for this response
set the specified request attribute to the specified value
return a string representation of this component
return a printwriter throws and exception if a
return a output stream throws and exception if a
return the servlet context for which this context is a facade
set the default session timeout in minutes for this
return code true code if the specified client and server addresses
prepare for the beginning of active use of the public methods of this
parse the username from the specified authorization credentials
parse the password from the specified authorization credentials
set the reloadable flag for this loader
gracefully terminate the active use of the public methods of this
prepare for the beginning of active use of the public methods of this
gracefully terminate the active use of the public methods of this
add a new repository to the set of repositories for this class loader
acknowledge the occurrence of the specified event
generate a unique token
return a string rendering of this object
install an application for the specified path from the specified
remove the web application at the specified context path
set the wrapper with which we are associated
initialize this servlet
process property change events from our associated context
find the specified resource in our local repository and return a
log a message on the logger associated with our container if any
log a message on the logger associated with our container if any
add a new application parameter for this application
notify our context that a reload is appropriate
add a child container only if the proposed child is an implementation
add an ejb resource reference for this web application
return the internal session that is associated with this http request
return the internal session that is associated with this http request
add an environment entry for this web application
start the background thread that will periodically check for
log a message on the logger associated with our container if any
stop the background thread that is periodically checking for
return the list of actions permitted by this instance of
return the hash code for this code daemon permission code instance
add resource parameters for this web application
log a message on the logger associated with our container if any
check if a specified object equals code daemon permission code
check if this code daemon permission code implies another
return a code string code representation of this instance
the background thread that checks for session timeouts and shutdown
stop the class loader
create a string description for this permission instance
create a actions list for a given control permission mask
perform the requested notification
set a name value as a jk2 property
set the base dir of jk2
add a local ejb resource reference for this web application
must be called after the request is parsed before
must be called when the stream is created
must be called before or after each request
add a resource reference for this web application
add a resource environment reference for this web application
add a resource link for this web application
create a msg context to be used with the shm channel
open a connection since were listening that will block in
resets the message bytes to an uninitialized null state
sets the content to the specified subarray of bytes
sets the content to be a char
add a new servlet mapping replacing any existing mapping for
set the content to be a string
set server socket properties accepted cipher suites etc
convert to char and fill the char chunk
flush any buffers
the configured logging level for this channel
set the buffer to the representation of an int
find print stream to which the output must be written to
flush the log
flush the log
catalina style recursive invocation
set the managed object
recycle the hanlder context
allow set operations
pass config info
removes a header field with the specified name
return the error page entry for the specified http error code
start the protocol
process the query string into parameters
recycle the input buffer
add user agent for which gzip compression didnt works
recycle the output buffer
end processing of current http request
set no compression user agent list this method is best when used with
add a mime type which will be compressable
send the response status line
set compressable mime type list this method is best when used with
add input or output filter
some filters need additional parameters from the response
return the local ejb resource reference with the specified name if any
end the header block
general use method
read the content length from the request
this method will write the contents of the specyfied message bytes
this method will write the contents of the specyfied message bytes
add restricted user agent which will downgrade the connector
return the mime type to which the specified extension is mapped
this method will write the contents of the specyfied byte
this method will write the contents of the specyfied string to the
set restricted user agent list this method is best when used with
set the coyote request
get the coyote request
sanity check and socket factory setup
release all object references and initialize instance variables in
set the coyote response
get the coyote response
release all object references and initialize instance variables in
recycle the output buffer
application commit flag accessor
set the request with which this response is associated
return the code servlet request code for which this object
return the code servlet response code for which this object
return the output stream associated with this response
log a message on the logger associated with our container if any
set the response with which this request is associated
log a message on the logger associated with our container if any
initialize standard input and output filters
set the socket if any through which this request was received
return the input stream associated with this request
set internal fields for special header names
return a print writer that can be used to render error messages
set the proxy server name for this connector
set the content length in bytes for this response
set the content type for this response
set the locale that is appropriate for this response including
add the specified cookie to those that will be included with
return the value of the uri validation flag
set the value of the uri validation flag
add the specified date header to the specified value
create or allocate and return a request object suitable for
create or allocate and return a response object suitable for
log a message on the logger associated with our container if any
has the specified header been set already in this response
log a message on the logger associated with our container if any
return the specified request attribute if it exists otherwise return
encode the session identifier associated with this response
begin processing requests via this connector
return the names of all request attributes for this request or an
terminate processing requests via this connector
remove any ejb resource reference with the specified name
remove any environment entry with the specified name
set the specified date header to the specified value
return the servlet input stream for this request
remove the error page for the specified error code or
return the value of the specified request parameter if any otherwise
returns a code map code of the parameters of this request
convert if necessary and return the absolute url that represents the
return the names of all defined request parameters for this request
read the reader wrapping the input stream for this request
return the remote ip address making this request
remove any local ejb resource reference with the specified name
return the remote host name making this request
remove any resource reference with the specified name
set the specified request attribute to the specified value
remove any resource environment reference with the specified name
add a cookie to the set of cookies associated with this request
remove any resource link with the specified name
add a parameter name and corresponding set of values to this request
clear the collection of cookies associated with this request
remove any servlet mapping for the specified pattern if it exists
configure and initialize the set of filters for this context
finalize and release the set of filters for this context
find and return the initialized code filter config code for the
allocate resources including proxy
deallocate resources and destroy proxy
return the query string associated with this request
adjust the url pattern to begin with a leading slash if appropriate
return a file object representing the base directory for the
bind current thread both for cl purposes and for jndi enc support
return the request processing paused flag for this context
validate the syntax of a proposed code lt url pattern gt code
create method of the factory
this method generates the sql for the given criteria
iterate on values to form the set of values
this method generates the sql for the given criteria value
this method checks if the value given as parameter is null
this method generates the sql for the given criteria
this method checks if the value given as parameter needs to be quoted
this method gets the class object for the given query
this method generates the sql for the given criteria
this class sets the class for the query object
this method generates the sql for the given criteria
this method gets the criteria for the given query
this method generates the sql statement for the given value
this method sets the criteria for the given query
this method gets the class object for the given value
this method generates the sql for the composite criteria
get the next key
get the max value for long keys
remove the excluded properties of the properties of the example
get the min value for long keys
get the statement to get the next key from the database
remove the properties with null value from the properties of the object
this method gets the exmaple object
get the next long to be used as key
this method sets the example object
get the statement to update the next key in the database
this method gets the excluded fields for the given criteria
update the next key with the new max id available
get the initial connections
this method tells if the values must be ignored for the given criteria
get the max number of connections with the database
get if the database wait is busy
this method removes the excluded properties passed as parameter
this method adds a list of excluded properties
finalize the manager and close all the connections
make a background connection in the pool
this method removes an excluded property
get the related object of this relation
get the increment for the keys
run method for a connection
set the related object of this relation
this method checks if a transaction is active
get the target object of the ralation
this method adds an excluded property
set the target object of the ralation
get the class name using the path
make a new connection using the settings
this method flush the active transaction if any exists
get the name of the class
close a vector of connections
this method persists a given domain object
load the mapping data of the configuration file into a map
this method deletes a given domain object
flag if the object is persisteed in the database
get the path for the mapping of the clazz
set if the object is persisted in the database
flag if the object is persistent in the database
set if the object is persistent in the database
mark as new a domain object
mark as clean a domain object
mark as dirty or modified the domain object
this method finds all the domain objects for a given class object
mark as removed a domein object
this method loads a domain object from the database
this method loads all the domain objects in the given list
this method executes the parse operation
this method sets the value of the class attribute for the inherited tag
this method sets the value of the cascade attribute for the mapping data
this method adds a given domain object to the domain objects map
gets the column names list
this method removes a given domain object from the domain objects map
sets the column names list
this method finds objects for the given query object
gets the class mapping data
sets the class mapping data
this method gets the domain object for the given id
gets the many associations list
find the objects by example
sets the many to many associations list
this method tells if the map of domain objects contains an object with
gets the mapping data
gets the one to oen associations list
this method parses the xml file
sets the one to one associations list
this method will be executed when the parser encounters the property tag
this method tells if the given list of domain object relation objects contains
gets the properties list
this method tells if the new object relation objects list contains an object
gets the inheritance mapping data
gets the value of the relation class attribute
this method will be executed when the parser encounters the inheritance tag
gets the many to one associations list
this method tells if the removed object relation objects list contains an object
sets the value of the relation class attribute
gets the value of the inverse attribute
sets the many to one associations list
sets the value of the inverse attribute
gets the inherited associations list
this method loads a domain object if it is neccesary
this method will be executed when the parser encounters the inherited tag
sets the inherited associations list
this method performs the find operation
this method gets the mapping data for a given related class
this method creates the insert string statement for the relation mapper
this method performs the find operation
this method inserts a relation object into the database
this method deletes a given domain object relation object from the database
this method performs the find operation
this method gets the mapping data for a given class
this method creates the string for the concurrency check
this method gets the xml mapping data for the given class
this method returns the mapper registered fo the given class object
this method return the relation mapper registered for the given classes
this method gets the configuration object
this method sets the configuration object
this method loads the related objects
this method gets the connection instance that the registry keeps
this method find the objects that matches the given criteria
this method registers a removed relation object
this method gets the statement builder instance that the registry keeps
this method creates the string for the find by id statement
this method tells if a given collection contains a given domain object
this method gets the domain object factory instance that the
this method performs the insert operation for a given domain object
this method registers a new domain object
this method gets the key generator instance that the registry keeps
this method tells if a given collections contains non persisted objects
this method gets the domain object relation object for the given classes
this method creates the find objects where string statement
this method tells if the object being mapped has an inheritance relation
this method gets the mapper for the given class object
this method deletes a domain object from the database
this method creates the string for the find many statement
this method creates the find many to one string statement
this method flushes the unit of work
this method rolles back the unit of work
this method inserts the new relation objects registered
this method deletes the removed relation objects registered
this method inserts the new domain objects registered
this method updates the version number for a given domain object
this method loads a one to many or a many to many association
this method updates the dirty domain objects registered
this method deletes the removed domain objects registered
this method loads the object properties
this method tests the insert operation
this method tests the find operation
this method tests the update operation
this method tests the delete operation
this method creates the find by id statement object
this method tests the insert operation
this method tests the find operations
this method loads a collection of domain objects
this method creates the string insert statement
this method creates the insert many string statement
this method creates the insert statement object
this method tells is a given relation between two objects is persisted
this metod insert the properties of an object
this method inserts an object
this method creates the delete string statement
this method creates the delete many string statement
this method creates the delete prepared statement object
this method creates the update string statement
this method creates the update prepared statement object
looks up a property based on section name
looks up a string in the current string table and returns
looks up a string in the current string table
looks up a string in the current string table and returns
looks up a string in the current string table
closes all known windows
add a separator to the toolbar
forcibly closes all known windows
crashes your program
finds the path to a url in the help node tree
moves on page back in the history list
builds the menu structure currently in this menu
image observer implementation for images drawn by any objects that need it
adds a tile to the tileset
gets a string in the string table unescaping any characters in it
returns true if the given tile is a member of this tile set
gets a string in the string table returning the exact string
sets the type
builds a toolbar based on this menu structure
sets a tile at the given location
looks up a string in the string table unescaping any characters in it
sets the x offset for even rows of tiles
gets the magic string so that a tile set manager can figure out
looks up a string in the string table returning the exact string
loads information that allows the set to construct a hashmap
saves information that will allow the tile set to reconstruct
sets the width
sets the height
return the name of the tile set
gets the magic string so that a tile set manager can figure out
loads information that allows the set to construct a hashmap
displays a list of the menu items and the structure of the built
toggles the visibility of the window
image observer implementation for images drawn by this tile
saves information that will allow the tile set to reconstruct
returns how large the map would take
draws the map
gets the current tile set making up the tiles for the map
determines if this window is ready for closing
sets the edit mode
get the area where a click should activate the object
asks the object to draw a graphical representation of itself
asks the user if they want to save before this window is closed
gets the edit mode
waits for tile sets to load
gets a map object factory object from the given index
gets a map object factory object from a class name
sets the toggle state of this toggle action
remove any additional storage space and make the manager use an array
adds a map object factory to this object manager
gets an iterator of the objects in this collection
fires a new tile palette event
gets the toggle state of this toggle action
sets the toggle state of this toggle action
gets the toggle state of this toggle action
gets the toggle state of this toggle action
sets the toggle state of this toggle action
sets the toggle state of this toggle action
sets a tile at the given location
loads the current properties
adds the specified object to the currently active floor in the map
part of the classloader package loads resources from the encapsulated
fires a new object palette event
adds a plugin to the manager
gets the physical map size the size that the map will take when
part of the classloader package loads resources from the encapsulated
gets the number of loaded plugins
gets an iterator of plugins in the current order they
returns code true code if any plugins failed to load
gets the number of failed plugins
returns a string containing just the major and minor versions
compares this version with another version or another object
gets an iterator of the plugins that failed to load
selects the object at the given point or unselects all objects if
returns a hash code based on this version
returns the full textual representation of the version
returns the size of a tile in the given direction
checks all loaded plugins for mapper interfaces and runs init
returns a scrollable block so that all but the furthest tile is scrolled
log an informational message
log a warning
attempts to locate the applications jar file
request the application save any properties that have been changed
sets the floor to the given index
log an exception
saves the properties to the user dir
indicates that the application framework has caused the application
sets the locale for the application
adds a new floor to the bottom of the current map
deletes the floor at the given index
saves the properties and does anything needed on shutdown
finds the direct unlocalized entry from the jar file
requests the map draw itself in the given area using the given graphics
finds the direct unlocalized entry from the jar file
removes an existing property change listener to this object
gets the relative weight of the test higher numbers go after
fires a property change event to all property change listeners
due to the fact that java wants case sensitivty and windows doesnt
saves a map to an output stream
gets the locale being used
changes the string table the new strings will not be used until the
attachs the given window to the current window manager
gets the jar file that this program was loaded from
gets the plugin manager that is handling system plugins
gets the plugin manager that is handling user plugins
gets the jar file that this program was loaded from
metodo to string
qq show url
slat slat slat
begin user doc
add connection to the
returns the total number of connections ever
removes the specified object from a map of contents warning alters the
returns the first object found with the given name
removes an object from the inventory at a given index
this method loads all the script files that contain beans into the
container objects when reloaded after persistance loose their observers
loads a mudobject object and initialise it using a location object
loads the groovy object definition file
write the template document with the set binding applied to
closes the currently open write and writes out the following text as
removes all objects from any container and sub containers
closes the currently open write and writes the following text as
return the next entity
append a value
determine if the source string still contains characters that next
begin appending a new array
get the next character in the source string
consume the next character and check that it matches a specified
get the next n characters
get the next char in the string skipping whitespace
append a key
pop an array or object scope
get the text up but not including the specified character or the
push an array or object scope
get the object value associated with an index
get the text up but not including one of the specified delimiter
get the boolean value associated with an index
skip characters until the next character is the requested character
get the double value associated with an index
get the int value associated with an index
get the jsonarray associated with an index
get the jsonobject associated with an index
get the long value associated with an index
make a string from the contents of this jsonarray
get the optional boolean value associated with an index
get the value object associated with a key
get the boolean value associated with a key
get the optional double value associated with an index
get the double value associated with a key
get the optional int value associated with an index
get the optional jsonarray associated with an index
get the int value associated with a key
get the optional jsonobject associated with an index
get the jsonarray value associated with a key
get the optional long value associated with an index
get the jsonobject value associated with a key
get the optional string associated with an index
get the long value associated with a key
append a double value
determine if the jsonobject contains a specific key
get an enumeration of the keys of the jsonobject
get the number of keys stored in the jsonobject
produce a jsonarray containing the names of the elements of this
get an optional value associated with a key
put or replace an object value in the jsonarray
remove an index and close the hole
get an optional boolean associated with a key
produce a jsonobject by combining a jsonarray of names with the values
write the contents of the jsonarray as json text to a writer
get an optional double associated with a key or the
get an optional int value associated with a key
get an optional jsonarray associated with a key
get an optional jsonobject associated with a key
get an optional long value associated with a key
get an optional string associated with a key
put a key value pair in the jsonobject
remove a name and its value if present
get an enumeration of the keys of the jsonobject
produce a jsonarray containing the values of the members of this
write the contents of the jsonobject as json text to a writer
loads a specific field from the properties file
attempts to set an object fields value
execute a command
signal that the reference has been removed destroyed from the list
after this call is dead would return true
adds or replaces key value tuple
we will no longer point to tt destination node tt
ensures theres a link from source node to tt this tt node br
tt source node tt will no longer point to tt this tt br
checks if tt this tt points to tt destination node tt
checks if tt this tt is pointed by tt source node tt
remove the mapping between node and its id br
source node destination node br
tell the iterator to ignore if the list wasnt modified through
returns a string representation of this instance
returns code true code if the argument is an instance of the same
returns a hash code value for this object
returns code true code if the argument is an instance of the same
returns code true code if the argument is an instance of the same
method to set a course id
method to get a level of permission
method to set a level of permission
returns a string representation of privilege
compares the current privilege with another for equality
returns the parameter string of this component
return the minimum dimension needed to successfully display a code of string str
method to get the number of lectures attended
method to get the number of practicals attended
sets the string encoded in the barcode
method to get the number of tutorials attended
method to set a class id
method to set a student id
sets the dimension of the narrowest bar
method to return the values as a string
setter for property end time
compares the current class member with another for equality
method to delete a class member
method to update a class member
set the style of the code to one of the two available style
get method to get the barcode
getter for property students
get method to get the photo location
set method to set the photo location
method to add a student
method to return a string containing all the details of a student
method to update a student
method to compare the objects for equality
set the alignment of text inside the bar code
adds a new time slot to the timetable
adds a new time slot to the timetable
adds a new time slot to the timetable
deletes a slot from the timetable
returns a time slot object containing all the details of the specified slot
returns a string representation of the timetable and all its slots
returns a vector of all the slots in the timetable
deletes all the timetable data from the database
gets the course coordinators id number
updates the data in the database
checks the equality of the current timetable to another
sets the course coordinators id number
method to get a week no
returns the course id
method to get an attendance id
method to get a student id
adds a lecture slot to the course
method to set a slot id
method to set a week no
method to set an attendance id
removes a lecture from the course
returns a string representation of the time slot
compares the current slot with another for equality
method to return the values as a string
compares the current attendance with another for equality
method to add an access privilege
method to delete an attendance
method to update an attendance
method to add an access privilege
adds a practical slot to the course
method to delete an access privilege
removes a practical from the course
method to return a string containing details from a privilege
method to get an access privlege
method to add all the privilege details to the database
adds a tutorial slot to the course
method to add a user to the database
method to delete data from the database
method to delete a user from the database
method to get data from the database
method to check a privilege is contained in the vector
removes a tutorial from the course
method to check a privilege is contained in the vector
method to update a users details
method to get the size of the vector
method to convert the user details to a string
checks the equality of the current privilege to another
adds any type of slot to the course
method to initialise the connection to
tear down delete objects added to the database
method to compare object types for equality
tear down delete objects added to the database
tear down delete objects added to the database
test whether teaching dbms really disconnects
method to initialise the connection to
tear down delete objects added to the database
removes any type of slot from the course
tear down delete objects added to the database
test whether the get method works
returns a staff bean object representing the course coordinator
check whether the update method in user bean
tear down delete objects added to the database
tests the delete method in user bean
returns the slot bean of the specified lecture in the course
method to initialise the connection to
tear down delete objects added to the database
returns the slot bean of the specified practical in the course
returns the slot bean of the specified tutorial in the course
returns a list of all the lectures in the course
returns a list of all the practicals in the course
returns a list of all the tutorials in the course
returns the total no of lectures
returns the total no of tutorials
returns the total no of practical
sets the total no of lectures
sets the total no of tutorial
sets the total no of practical
adds registers a student to the course
removes un registers a student from the course
removes un registers a student from the course
returns a class memeber object representing the specified student
returns a list of all the students registered for the course
adds the course and all its member data to the database
updates the database with any information changed within the course bean
adds all functional class containers that have a valid id length 0
adds all omic elements under this functional container
there are set attribute and add attribute methods
this returns an attribute from the attribute hash table
returns the requested attribute
gets the first chart container that fulfils chart container
increments the variable n present and then returns this
h check is used to specify the species version in omic browse hence
note the get style method appends s style and s direction
returns information about this osml element
why is this going through every vector does this make sense
just gets one selected container
only ever used as
not used was this to reduce to upper case usage
returns collection discussion topic
returns collection fmscommunity member
returns total number of contexts collected
returns iterator which iterates over reportlets contained in this package
return list scope entry
always first in a list
check both version and urgencymanger
used for building dialog trees
work task interface node implementation
we dont filter out any work packages and we dont build child nodes
for the work packages tab in dialogs
used when this discussion topic is an orphan work packages container
override fmsgui node so that the sprint dialog thats opened when an open
when hit enter on the node will not try to open the dialog
called after update or checkout and resolutionservices
gets the name based on the root to its link
finds all discussion topic links
checks if the discussiontopic has any single referenced work packages
gets the list of role
adds the version
removes the role
version number of the object
sets the version number
gets the fmsgui model preference
sets the user clone
gets the fmsgui model preference
sets the user clone
saves the email preference
saves the fmsgui model preference
saves the email preference
saves the user
saves the fmsgui model preference
saves the collaboration preference
saves the user
saves the collaboration preference
clones the collaboration preference
clones the collaboration preference
builds the smtp host name field
builds the show delivered releases field
builds the show ready work tasks field
builds the show complete work tasks field
builds the show delivered releases field
build the field for entering the brightest green threshold
builds the show ready ideas field
build the field for entering the neutral gray threshold
build the field for entering the brightest red threshold
returns the server panel
used for garbage collection
finds all objects at the same level
allow form to determine if a given field is valid
returns the link object in the child list for the fmm object
returns the defaults panel
returns the main panel
returns the server panel
called by tab only
implementation of context listener method
returns the is delivery owner
returns the is optional reviewer
returns the is delivery community member
returns the is required approver
returns the is required reviewer
returns the is specification owner
sets the is delivery owner
sets the is optional reviewer
sets the is required approver
sets the is required reviewer
sets the is specification owner
returns the is normal community member
handle change in master object being edited
sets the is normal community member
called by outside sources
sets the original fmm object
returns the cloned fmm object
returns the original fmm object
lists all nodes that are not mapped in the context map view
returns the change state component
returns list with all community members for the selected task
returns the details component
returns the navigation component
returns the summary component
allow form to determine if a given field is valid
returns the summary lower component
returns the apply runnabe
sets the apply runnabe
returns the default directory
sets the default directory
returns the object at a particular index
refreshes the data
sets the model data
gets the column descriptor
gets the value of the cell
determines if the cell can be edited
returns the column name
sets the model data
called when changing the authorization from work package authorization panel
returns the all changes committed
returns the appropriate files attached
recursive method for finding the number of work package work package children
returns the appropriate files attached button
recursive method for finding the number of work task link children
returns the time reporting check box
returns the time reporting check box
gets the state map
returns the get time reporting button
builds the map for node object to fmm object mapping
returns the phone number type
sets the phone number type
sets the original fmm object
returns the the fmm
sets the the fmm
use no button instead of cancel for the negative selection
the context may be for an work package sprint instead of a sprint
so can override for different objects
calld the field validation container to add the field to the list of
do not ask for peers here work task link alse o has attachments
implementing methods for data state synchronizer
allow form to determine if a given field is valid
when the components are valid set the button state
returns the name
returns the use same task plan
returns the use same stakeholders
returns the use same community members
returns the use same task plan
sets the use same task plan
sets the use same stakeholders
sets the model data
sets the model data
sets the use same community members
sets the model data
gets the domain map
put cursor at first zero length paragraph or beginning of doc
returns the use same attachments
sets the model data
sets the use same attachments
returns the original file
returns the file to be attached which if the original file is external
returns the use same type
sets the set use same type
returns the model on existing
returns the model on existing
sets the model on existing
gets the state map
try to keep current selection in tree in current fmm object context
when the components are valid set the button state
to be overridden when the dropdown is not the context
sets the model data
so can override for different objects
call super so do not get the work task the basedomain object
overridden by subclasses to get correct object
returns the created date text
returns the created time text
returns the modified date text
returns the modified time text
sets the created date text
sets the created time text
sets the modified date text
sets the modified time text
sets the model data
sets the model data
override for now
override for now
sets the model data
returns the all changes committed
returns the get fmm check box
returns the all project files check box
creates the main panel to contain the widgets for this dialog
some sub classes use child
some sub classes use child
at least one of the checkboxes must be selected
create the bucket for work packages
only allow recussion to go to a discussion
overridden by subclasses
override this for a custom details component
sets the model data
calculate the name of the style assigned to the paragraph s of the
gets the domain map
gets the domain map
list for the actual search to go against
this is a reschedule
this is a reschedule
implementing methods for data state synchronizer
some sub classes use child
some sub classes use child
implementing methods for data state synchronizer
invoked when a mouse button is pressed on a component and then
sets the original fmm object
crude but effective
invoked when the mouse button has been clicked pressed and released
sets the model data
invoked when a mouse button has been pressed on a component
returns the the fmm
handles the orphaned work packages
sets the the fmm
invoked when a mouse button has been released on a component
sets the original fmm object
sets the model data
tool tip message
create the bucket for work packages
only allow recussion to go to a discussion
create the bucket for work packages
builds edit popup
can always add topic or work package
can always create new topic or work package
always work with original in this view as we use this for
override to use tree paths in main box instead of fmsnodes
do nothing overridden by subclasses
if a previously selected path exists set to that
if a selected sprint is the parent of the task plan color
overridden in subclasses to get correct object
override this for custom button behaviour
override this for custom button behaviour
called by context map panel tree selection listener
override of context map panel
override of context map panel
override to set the selected sprints background color or a dependent tasks
returns the all changes committed
returns the all flywheel files check box
called by date change such as dropdown date change
this is default uses current date
when mouse clicked set button state and do action
returns the email field
when mouse clicked set button state and do action
returns the phone1 combo box
returns the phone1 field
returns the phone2 combo box
returns the phone2 field
gets the state map
gets the fmm
gets the fmm
my work tasks drop down selected
prepares for call to show story after an update
work package not implemented selected
version drop down selected
bind key stroke navigations to the jtree
need the default view setup from preferences
overridden in subclasses to get correct object
creates panel to hold the space
release perspective components to cutdown on memory consumption
test if this tmcompute draw could be used
returns the filling of the node
returns the title of the node
returns the color of the title of the node
called from tasks to get the leaf node
if we have a tree view we return the position of the node
override as needed
override as needed
receive notice that filters have changed and if theyve been deactivated
name should not be longer then max name length chars if is add
used on delivery activities and community frames
used on delivery activities and community frames
override to include commitment check boxes
for the created since date widget
for the created since date widget
for the modified since date widget
for the modified since date widget
set to true after flywheel synchronization
called from tasks when only need to repaint the tree
called from tasks to refresh the tree
called from tasks to refresh the tree
note body is not retrieved with the rest of the flywheel plan
called when want to refresh the object instances after a tab selection
if the merge child cannot remain in the merged list it is doomed
resolve a manually resolved conflict
resolve an automatically resolved conflict
these are properties that are dependent on the main property
identifies the elements common to both the remote and local lists
currently only need to set the resolved boolean if its a manual merge
for logging purposes
register a manually resolved conflict
register an automatically resolved conflict
see if the file corresponding to the oid is to be deleted locally
if a local version of a fmm object exists and has no merge
must retrieve true children and editable fmm object attributes
sets the owner dialog
can only change priority if the current sort is by priority
deliveries task plans work packages work packages can have green
only work packages work packages can have yellow and gray tasks together
override else this method goes crazy with all node types
need a holder to test for file existence on server
overriding gui task
overriding gui task
moves all gray tasks to the bottom of the containers list while preserving
a work task can only have one task manager and one requirements manager
overriding gui task
the trees selected node may be from a previous model
overriding gui task
called when the release plan has never been checked out so cannot
we add the pink checkbox if were consolidating greens
if the audit result is null it was not run
is an orphan container in the context of the selected node
if the audit result is null it was not run
count on right hand side above chart
count on left hand side above chart
for a given new tree path redraw any affected chartlets
override to customize how chart is drawn
for a given new tree path redraw specified chartlet
search up tree path for a valid context
returns whether or not this chartlet can open to a large interactive view
return report package used for the chartlets quick report
notify chartlet to possibly apply filtering
get hierarchy for statically defined chartlets independent of selection
all transactions should start date here
changed from oid dependent listener to dataeditorsupport
upon completion of the task the listeners are notified of changes
receive notice that filtering is now available for specified chartlet
receive notice that filtering is now available for specified chartlet
merge changes from clone cache to master cache and make sure
receive notice that filtering is to be turned off for specified chartlet
initialize the master object id from the specified fmm object
receive notice that filtering is to be turned off for all chartlets
took out drop listener it gets done when task completes
apply all changes in the specified edited cache to the master data cache
establish the optional runnable object to be activated when
forget all references to the specified data change listener
low level support for merging changes between edited baseline and master objects
do nothing so clone works
changed to one listener for a dataeditorsupport rather
single object has changed
get character offset of first empty paragraph or 1
notifying all have changed
notifying all have changed when transaction is complete
added to handle framework change of one listener per dataeditorsupport
gets the list of attachment
sets the attachment list
adds the attachment
adds the discussion topic
adds the discussion topic
gets the release date
adds the attachment
removes the discussion topic from all book shelves
test whether there is already an attachment from
make sure any objects referenced as children either directly
gets the release number or sequence indicating the position of this
removes the attachment
gets the list of community member
sets the community member assignment list
adds the community member assignment
adds the community member assignment
builds an entire linked list structure
removes the community member assignment
create the orphaned work package bucket
returns a discussion topic containing all topics not contained in a proposal
returns the task plan link
keep this overriddden as closed logic looks at urgency manager
gets all the work packages work packages supported by this delivery
gets the text
null check for clone
do nothing so clone works
set the version when complete of each attachment
change contents of the role list to reflect the specified list of roles
make sure any objects referenced as children either directly
collects any external references to this object as well as possible
returns the activation change by
returns the activation change date
returns the activation status
returns the default attachment directory
sets the activation change by
sets the activation change date
sets the default attachment directory
only use during cloning
returns the activation change by id
should only be used by duplicate methods
adds the work package
used for conversion in pers only
adds the conversation
make sure any objects referenced as children either directly or
collects any external references to this object as well as possible
overridden method to use different services
adds the conversation
removes the conversation
make sure any objects referenced as children either directly
different for each object must be overridden
defaults to false
defaults to false
sets the list of delivery proxies
add package work task to list of children
a community member assignment has it as a primary role
removes the work task link
used by resolution service to remove extra references
is this fmm object used in merge conflict resolution processing
used for mcr by containers that use link objects for child persistence
make sure any objects referenced as children either directly
status of what changed on the object
set when then object has a value change
has it as a primary role
must have a sponsor and manger to be governable
green tasks can be consolidated if
gray tasks can be consolidated if
run after an update
base call to build the xml document
sets the benefit
gets the backlog
team role and organizational role are synonomous
override base implementation of set note body to do nothing
cannot add a discussion topic with the same name
this detects an error that will be safely ignored until fixed
recursive method for building a context list for the given intiative
test whether this fmm object can move beyond the specified related fmm object
take into account aggregate objects
only use during cloning
retrieve list of top level projects that contain a specific work package
this is different than is yellow
this is different than is gray
method used to find orphan tasks
find all children of this object
get the actual object containing the logically related story body
find all children of this object
get the actual object containing the logically related note body
find all children of this object
defaults to sequence sort
color interface method
removes the version
to be overwritten by subclasses
make sure any objects referenced as children either directly
to be overwritten by subclasses
gets the release number or sequence indicating the position of this
get index of this instance in primary container when appropriate
gets the context upwards
checks if the discussiontopic has any single referenced work packages
parent context object means there is only one way to walk
means that the child needs a context to know its parents
returns all child work packages that are single referenced
too dangerous to override equals at this point
is the work task contained in any proposed or better work package
gets the task type
overridden method that returns a new role preference
returns the instance caste as a role preference
processes the role nodes in the role list
processes the role list into role nodes
overridden method that returns a new project issue
returns the instance caste as a project issue
builds the file name for the task domain xml document
builds the file name for the task domain xml document
builds the file name for the task domain xml document
processes the discussion list into discussion nodes
saves the task domain
clear text file name
adds sprints from cache if work plan does not exist
saves the task domain
gets the base file name
overridden method that returns the email preference
sets the xml object that is written out in xml
overridden method that returns a new work package
a discussion topic can be named anything
returns the instance caste as a work package
writes to xml
the method contains discussion topic discussion topic discussion topic depends on
todo temporary until note books can be decoupled from topics
returns the instance caste as a work task
saves the fmm object without affecting caches
the clear text file extension
builds the file name for the fmm xml document
saves the fmm
builds the task domain list and sets the default task domain object
retrieves the the fmm using the cache to keep the same instances
work package names must be unique across the application
gets the user preferences panel
sets the user preferences panel
gets the preferences dialog
gets the jdialog
gets the desktop preference
sets the main app
gets the current center component
sets the current center component
sets the user clone
removes the old center panel and adds the new one
sets the panel visible
saves the desktop preference
hides the panel
builds the user preference panel
gets the user preferences panel
gets the file
sets the user preferences panel
saves the desktop preference
sets the file
gets the preferences dialog
gets the file preference
saves the desktop preference
sets the preferences dialog
sets the file preference
fires events for each of the user preferences found on the general tab
gets the current main component
retrieves the file preference and sets it
sets the current main component
saves the desktop preference
gets the xmldocument preference table field
clones the desktop preference
runs the executable on the file
sets the xmldocument preference table field
runs the executable on the file
builds all the desktop preference fields
gets the xmldocument preference
runs the executable on the file
builds the aout checkout field
sets the xmldocument preference clone
builds the auto commit field
builds the auto delete field
saves the xmldocument preference
saves the xmldocument preference
sets the error label
if user wants to add the new file pattern runs the preferences dialog
sets the error message
runs the error dialog returns the user selection
when ok button pressed
when cancel button pressed sets set error data false
if user wants to add the new file pattern runs the preferences dialog
saves the xmldocument preference
gets the email preference
creates a proposed pattern that would match the name
saves the xmldocument preference
sets the user clone
determines if the user has asked to modify the file preference
clones the xmldocument preference
saves the email preference
gets the new action field
builds the xmldocument preference table
sets the new action field
gets the proxy preference controller
saves the email preference
sets the proxy preference controller
builds the xmldocument preference label
gets the dialog label
saves the user
sets the dialog label
gets the display label
since work package commitments are not directly persisted in the sprints xml file
gets the test port connection button
sets the display label
sets the visibility and packs the dialog
when ok button pressed return the new action name
saves the collaboration preference
sorts the xmlfile preference list by display name
clones the collaboration preference
builds all the user fields
gets the repository preference
gets the class name for the base object
sets the user clone
allow form to determine if a given field is valid
gets the file
sets the file
invoves the executable in a seperate thread
gets the file preference
sets the file preference
gets the correct file preference for the file extension
saves the repository preference
sets the default state for the open menu
builds the jmenu item from the file action
saves the repository preference
saves the user
saves the collaboration preference
gets the dialog controller
sets the dialog controller
adds to the center componenet
gets the preferences dialog
clones the collaboration preference
used by preferences to only invalidate and validate on important fields
gets the field validation container
builds all the user fields
builds the new view when first start date out with a desktop preference
fields arvalidated but there are only a few that will invalidate
gets the center panel
sets the center panel
gets the error mesage field
gets the error message
builds the ok button
builds the center panel
gets the collaboration preference
sets the user clone
gets the email preference
sets the user clone
saves the email preference
saves the email preference
saves the user
saves the collaboration preference
clones the collaboration preference
builds all the user fields
builds the smtp host name field
gets the new action field
allow form to determine if a given field is valid
sets the dialog label
gets the dialog message
sets the dialog message
sets the visibility and packs the dialog
used by preferences to only invalidate and validate on important fields
gets the user
sets the user clone
saves the user
saves the user
saves the user
used by preferences to only invalidate and validate on important fields
gets the size of project navigation file history field
sets the size of project navigation file history field
saves the user
gets the workspace preference
saves the collaboration preference
fires events for each of the user preferences found on the user tab
sets the user clone
saves the user
gets the user controller
saves the workspace preference
clones the collaboration preference
clones the user
saves the workspace preference
saves the workspace
saves the workspace preference
builds all the user fields
clones the workspace preference
sets the user controller
builds all the user fields
gets the proxy preference controller
builds the sort history alphabetically field
boolean to return from user selection
sets the proxy preference controller
sets the accept data
create the instant collaboration fields
sets the action label
sets the accept message
builds the phone number type combo box
runs the accept dialog returns the user selection
when ok button pressed sets set accept data true
when cancel button pressed sets set accept data false
gets the collaboration preference controller
builds the phone number field
builds the auto generate collaboration messages check box
builds the phone number type combo box
sets the collaboration preference controller
gets the file patterns controller
used by preferences to only invalidate and validate on important fields
sets the file patterns controller
gets the repository preference controller
sets the repository preference controller
gets the email preference controller
gets the display label
sets the email preference controller
sets the visibility and packs the dialog
when ok button pressed return the new action name
builds the nick name
gets the fmsgui model preference controller
sets the fmsgui model preference controller
gets the workspace preference controller
sets the workspace preference controller
saves the user
builds the enable instant collaboration check box
gets the desktop preference controller
saves the proxy preference
sets the desktop preference controller
clones the proxy preference
gets the ok button
gets the cancel button
gets the apply button
builds all the user fields
used by preferences to only invalidate and validate on important fields
sets up the dialog
for icon updates when flywheels are modified
expands every node in the tree
builds the locations buttons
create the proxy fields
builds the login required check box
creates the action listeners for the buttons
creates the flywheel panel with the tree
closes down the dialog
handles the add action button
handles the delete action button
builds the browse button
sets the workspace field
builds the create directory button
used by preferences to only invalidate and validate on important fields
gets the bowse button
gets the bowse button
only use during cloning
builds the test connection button
sets up the dialog
start from end so indexes do not get out of order
only use when cloning
sets up the dialog
builds the apply button
return true if this file should be shown in the directory pane
return the extension portion of the files name
adds a filetype dot extension to filter against
returns the human readable description of this filter
gets the ok button
gets the ok button
gets the ok button
gets the cancel button
only use during cloning
called to run the export dialog after the constructor is called
builds the browse button
notifies the form it has valid data
when apply button pressed set cursor run and reset fields
notifies the container it has invalid data
builds the export button
returns the node where the file chooser should start date
builds the check all button
verifies if the selected file is within the workspace root
sets the scope
builds the check all button
continue with export if user will overwrite an existing file
directory must exists
builds the window close
builds the cancel button
used for example on a remove operation
invoked when a component loses the keyboard focus
when the components are invalid set the button state
when the components are valid set the button state
central exit point for the entire flywheel ms desktop application
allows the tabs to go to the top and still paint the title
only use during cloning
invoked when the mouse exits a component
gets the button map
only use during cloning
only use during cloning
only use during cloning sds
establish setting for whether auto refresh is enabled when filter
only use during cloning
only use during cloning
only use during cloning
refactor gotten from fmm
gets the file preference that matches the given file pattern
should only be used by audits do not use models directly
should only be used by audits do not use models directly
creates the flywheel panel with the tree
override shows the loading icon
adds a file preference
removes a file preference
sets the file preference list
adds a file preference
removes a file preference
gets the file preference that matches the given file pattern
compares two file preferences
returns the entry revision
template method to setup an edit of a file preference
invoke this method after youve changed how node is to be
template method to setup a new file preference
castes the modify controller to an edit controller
redirects the user file extension panel call to the dialog controller
invoke this method after youve inserted some nodes into
gets the file extension list controller
sets the file extension list controller
gets the preferences dialog
castes the modify controller to an move upntroller
castes the modify controller to an move down controller
castes the modify controller to an move down controller
castes the modify controller to an new controller
message this to remove node from its parent
gets the edit file extension controller
do nothing for reflection to work
gets the delete controller
sets the current file preference
gets the modify controller
for value changed coming through twice the edit object is a copy so
sets the action controller
template method to setup an delete of a file preference
given an os name set the current container
template method to setup a moving up of a file preference
template method to setup an moving down of a file preference
template method to setup an auto ordering of file preferences
called when a file preference is moved up
called when a file preference is moved down
called when a file preference s are automatically ordered
called when a new file preference is complete
gets the column descriptor
gets the value of the cell
called when a edit file preference is complete
sets the value of the cell
determines if the cell can be edited
called when the delete of a file preference is complete
returns the column name
called when the cancel button is pushed on new or delete
template method to setup a new file preference
decides if the executables are valid files on an action file
validates that the executable is a valid
overridden method that is called when ok button pressed
overridden method that is called when ok button pressed
checks if the file extension already exists
builds the user preference panel
gets the preferences controller
overridden method that is called when apply button pressed
overridden method that is called when ok button pressed
buils the description filter
overridden method that is called when ok button pressed
builds the panel that display a deleted file preference
cancelled the delete
instantiates the new dialog
overridden method that is called when ok button pressed
overridden method that is called when ok button pressed
returns table model user preference
overridden method that is called when apply button pressed
if coming from application file extension passed in
gets the edit dialog
sets the edit dialog
reference to the original file preference
set the original file preference
gets file preference
sets file preference
sets the correct original and current file preference
sets the edit dialog
handles the ok button
show save as for edit
handles the cancel button
after editing sets up the objects
gets the file extension mediator
when cancel button selected calls cancel complete
sets the file extension mediator
gets the preferences dialog
gets the file extension panel builder
returns table model user preference
redirects call for the current file preference to the preferences controller
gets the file extensione table field
redirects call to preferences controller
sets the dirty flag
gets the dirty flag
sets the file extensione table field
gets the file extension mediator
when save as button selected
for save as gets the new file patterns and validates it
gets the new action field
sets the new action field
gets the file extension panel builder
removes an action type
sets the file extension panel builder
redirects to the mediator
gets the display label
sets the visibility and packs the dialog
when ok button pressed return the new action name
gets the center panel
sets the visibility and packs the dialog
builds the ok button
when ok button pressed return the new action name
gets the action controller
sets the action controller
sets the action name
gets the new file pattern field
sets the new action field
gets delete action button
gets delete action button
sets the action label
called to invoke the remove dialog
gets the center panel
gets the delete button creates it if it is null
when ok button pressed calls remove action on base controller
sets the center panel
gets delete action button
when cancel clean up the dialog
sets the state of the buttons
gets the action controller
sets the action controller
gets the edit button creates it if it is null
handles the ok button
handles the cancel button
when ok button pressed
handles the apply button
handles th ok button
handles the add action button
sets the text and mnemonics
sets the edit button
handles the add action button
handles the delete action button
sets the text and mnemonics
sets the new button
builds the north panel
handles the ok button
builds the south panel buttons
builds the file preferences panel new
builds the file preferences label
validator for use w cvswidgets
builds the buttons for the file preference
gets the file extension field
sets the file extension field
sorts the file preference list by file pattern
returns file preference
gets the description field
sets the description field
gets the default file action box
sets the default file action box
gets the file type box
sets the file type box
returns the file preference selected in the table
sets the new state for the buttons
gets the dirty flag listener
sets the dirty flag
sets the current file preference and returns success
creates the popup menu for adding and removing actions
the new button pressed to create a new filepreference
gets the tabbed pane
the edit button pressed to create a new file preference
sets the tabbed pane
delete button pressed to delete a file preference
delete button pressed to delete a file preference
delete button pressed to delete a file preference
delete button pressed to delete a file preference
when mouse clicked set button state and do action
builds the file pattern and description fields
builds the file pattern and description fields
creates the tab for the file action
tests if a specified file should be included in a file list
builds the default file action field
initializes the default file action
initializes the file pattern
builds the file pattern and description fields default file actions
builds the file pattern and description fields default file actions
gets the south panel
gets the cancel button
builds the browse button for the executable
make sure have one file action
builds the remote fields
sets up the display so can get initial preferred size
used in setup to get the preferred size
adding a new file action
build rename button
need at validates new action
need at validates new action
builds the local panel
called when the user wants to remove and action
called when the user wants to remove and action
sets the dirty flag and the button states
called when the data changes on the object
this is a framework method do not use unless calling super
popup listener when want to add a file action
sets the fields on the panel
called when user wants to create a new action
displays the local path
handles the add action button
handles the add action button
gets the flywheel to be removed
gets the repository
handles the delete action button
fills in the repository box and adds the listener
when the components are invalid set the button state
when the components are valid set the button state
used for garbage collection otherwise the fms feature task is held on to
when the components are invalid set the button state
when the components are valid set the button state
allow form to determine if a given field is valid
override flag indicating this dialog is allowed to be stretched
populates the repository combo box
sets the default server name in the drop down list
sets the state of the form for the edited field
override so that user cant browse outside of flywheel if
if param is true user cannot browse out of flywheel
title for the dialog
runs the dialog
title for the dialog
runs the dialog
returns the directory the user selected before coming here
when apply button pressed set cursor run and reset fields
build apply button
returns the directory the user selected before coming here
gets the repository name box and initializes it if it does not exist
gets the flywheel name box and initializes it if it does not exist
fills in the repository box and adds the listener
builds the flywheel box when the repository changes
whether to replace or overlay existsing files
title for the dialog
returns the scope panel
task used to determine if the close button was pressed
title for the dialog
if the root should be included as part of the path
is this dialog allowed to stretch vertically
when apply button pressed set cursor run and reset fields
when apply button pressed set cursor run and reset fields
returns the directory the user selected before coming here
returns the directory the user selected before coming here
sets up the table model with a list passed in
sets the value for the cell
closes up the dialog
gets the cancel button creates it if it is null
sets the button states
when the components are invalid set the button state
forwards the all flywheel update to the mediator
when the components are valid set the button state
deselects all the flywheels in the table
selects all the flywheels in the table
selects the flywheel that is selected in the tree
selects the flywheels in the table for the repository
sets the state of the checkbaox based on the boolean
builds the file preferences panel new
returns the directory the user selected before coming here
when apply button pressed set cursor run and reset fields
sets the initial state of the table
build apply button
builds the file preferences label
title for the dialog
the ok button
the cancel button
the select all button
the cancel button
clear text file name
builds the file name for the fmm xml document
saves the fmm
saves the role preference
sets up the fmm object
used for efficiency when setting the workspace tab icon
used for efficiency when setting the workspace tab icon
when apply button pressed set cursor run and reset fields
used for efficiency when setting the workspace tab icon
used for efficiency when setting the workspace tab icon
sets the model data
set the item that should be edited
return the edited item
ask the editor to start date editing and to select everything
add an action listener
remove an action listener
shows a page by number
returns the flywheel to create
gets the domain map
builds the cvs server list
gets the field validation container
returns the qa checklist target
returns the rule target
returns a list paragraph
returns a list paragraph
returns a list paragraph
gets the xml string from the file
writes the xml document to the file in clear text
clone of a value builder
title for the dialog
title for the dialog
when the components are invalid set the button state
when the components are valid set the button state
allow form to determine if a given field is valid
when the components are valid set the button state
allow form to determine if a given field is valid
returns boolean if mediator is present
overridden method that returns a new collaboration server
returns the instance caste as a collaboration server
responds false all fields are scrambled
gets the xml document from the file
returns the file pattern id
builds the printer panel
returns the instance caste as a server
gets the scrambled fields for a server
sets the file pattern id
gets the xmldocument preference
sets the xml object that is written out in xml
builds the file panel
make sure the file exits
check if the file exists
retrieving object by oid
gets the can change file security
the clear text file extension
gets the desktop
builds the file name for the team xml document
sets up the desktop object
builds the file panel
sets the xml object that is written out in xml
overridden method returns the link object object
get the files synchronization plan option default
returns the directory the user selected before coming here
get the frames synchronization plan option default
default is to do nothing
sets the can change file security
sets the display name
sets the xml file name
sets the should scramble
build the file name and make sure the file exists
returns the directory the user selected before coming here
overridden method returnd the desktop object
caste of the instance object to a desktop
processes the repository list
processes the repository list into nodes
determines if a field should be encypted
gets the user
template method to process the attributes on the node
clones the generic node builder
builds the file name for the email preference xml document
overridden method returnd the desktop object
caste of the instance object to a desktop
overridden method returnd the desktop object
caste of the instance object to a desktop
processes the repository list
processes the repository list into nodes
makes sure the property descriptor is an attribute not a relationship
runs the dialog
sets the xml object that is written out in xml
gets the export preference
sets the export preference
gets should scramble
gets the base file name
note this should only be called from fmm object support
note this should only be called from fmm object support
get the currently cached object indexed by the specified oid
runs the dialog
override this method when you want to convert a constant to a value
override this method when you want to convert a value to a constant
gets the file type container
sets the file type container
sets the list of files to be added
gets the file extension for the file
gets the file type values
overridden method that is called when ok button pressed
show save as for edit
gets the ok button creates it if it is null
set by the user weather they want to continue
set by the user weather they want to continue
the user cancelled so clear the lists except the files passed in
builds the buttons for the file preference
gets the file type dialog
when a row is selected sets the button states
sets the new state for the buttons
the ok button
the cancel button
closes up the dialog
sets the dirty flag
create the dialog if there are any undefined file patterns
process a possible change of state
saves the user file pattern
gets the edit file type controller for editing new file patterns
template method to setup an edit of a file preference
gets the file preference controller
called from service to run the dialog
checks if the file patterns is in the file preference list for new
the user has cancelled
user has specifically indicated intention to take server offline
indicates whether or not this is a local single user repository
indicate whether or not this is a local single user repository
indicates if user has specifically set this server to be offline at startup
indicate that user wishes to take server offline at startup
gets the data object list
sets the data list
get the cvs sticky options
gets the data object at the specified position
creates a copy of the current data deep
read a line up to the newline character from the stream logging
read a single byte from this stream
populate the right list from values found in the persistence
adds the right list persistence values to the object
populate the left list from values found in the persistence
template method allowing extending class to create banner to be displayed
adds the left list persistence values to the persistence object
sets the background color
returns the request garbage collection button
sets the request garbage collection button
sets the text pane tabs are rendered for
removes the specified component from the layout
determines the preferred size of the container argument using
calculates the minimum size for the specified panel
returns the value of the particular column
invokes fire table data changed after all the pending events have been
lays out the specified container using this card layout
flips to the first card of the container
flips to the next card of the specified container
flips to the previous card of the specified container
flips to the last card of the container
this is overridden to set code updating list selection model code
if the field can be edited
flips to the component that was added to this layout with the
gets the cvswidget controller
return true if file exists
must be of the type specified by the code
must be of the type specified by the code
do not allow c or other problems the user could get into
tool tip message
return true if file exists
tool tip message
overridden method do nothing
returns the cvswidget controllers to string
setup of the cvscheck box
gets the cvswidget controller
sets the cvswidget controller
if the field can be edited
sets the value of the text field
gets the validation component list
updates font height information
call the validation component that the field has invalid data
call the validation component that the field has valid data
upon startup sets up the field
overridden method do nothing
tool tip message
sets the edit field
when focus is lost set the value
gets the validation map
adds the component to the list for the form
gets the domain object
sets the domain object
gets the write method name
sets the write method name
gets the read method name
if the widget is registered the set any non dependent widget to disabled
paints the border for the specified component with the specified
sets the read method name
returns the method for the string
if the widget is registered the set any non dependent widget to disabled
returns the method for the string
sey all widgets to enabled on the form
invokes the write method
invokes the read method
gets the value of the read method
initializes the cvsjtext field
sets the value of the text field
validates the form and the widgets
when focus is lost set the value
validates the form and the widgets
tool tip message
return true its just texy with no validation
setup of the cvscombo box
overridden method do nothing
return true if file exists
the child directory must be under the parent
returns the method for the string
invokes the path method
sets the edit field
tool tip message
upon startup sets up the field
sets the background color
sets the fore ground color
checks if the data in the field is valid
sets up the cvsinteger field
sets the validation component
tool tip message
returns the text field as an integer
makes sure a valid value is set on the field initailly
when focus is lost set the value
setup of the cvscombo box
sets the value of the text field
validates the text entered to make sure it is valid
sets the value of the text field
remove the zero from the front of a number
when focus is lost set the value
returns the tostring of the cvswidget controller
overridden method do nothing
sets the value of the text field
return true if field is a valid email address
tool tip message
tool tip message
tool tip message
gets the minimum value
sets the minimum value
gets the maximum value
tool tip message
return true its just texy with no validation
makes sure its and integer and between min and max
gets the minimum value
sets the minimum value
sets up the cvsinteger field
gets the maximum value
tool tip message
returns the text field as an integer
makes sure its and integer and between min and max
makes sure a valid value is set on the field initailly
when focus is lost set the value
validates the text entered to make sure it is valid
sets the value of the text field
remove the zero from the front of a number
remove the zero from the front of a number
extend superclass method
extend superclass method
put the window in the center of console screen
is this dialog allowed to stretch vertically
override this to give column specific tool tips
returns the collator
returns the null biggest
sort the contents based on the current comparator settings
sets the null biggest
when the components are invalid set the button state
when the components are valid set the button state
creates the default divider
called when the user clicks the cancel button or hits escape from the
returns the collab message
returns the collab topic
returns the private chat
returns the selected users
sets the collab message
sets the collab topic
sets the private chat
version number of the object
sets the version number
gets the user name
sets the user name
returns the identifier
returns the invitees
returns the is private
returns the topic
returns the time request
sets the identifier
sets the invitees
allow form to determine if a given field is valid
sets the time request
synchronous connect method using internal tunnel handler
disconnects from the remote server
synchronous connect method
connect to the specified server
makes a connection asynchronously using internal tunnel handler
sends a message to the server
makes a connection asynchronously
connect using an existing connection model
disconnect from the jabber server
wrapper method to send messages
returns the identity panel
convenience method equivalent to calling get connection
convenience method equivalent to calling get connection
returns the room panel
queues up the data and wait for thread to send out the data
returns the server panel
returns the tabbed pane
normalize path separator chars
run before each test
run after each test
run before each test
run after each test
builds the property descriptor list from the object
used by tests to see result
run before each test
run before each test
run before each test
run before each test
run after each test
run before each test
run after each test
run after each test
run after each test
run after each test
run after each test
get an output stream for sending data to the server
authenticate with the server
authenticate with the server and open a channel of communication with
only the gzip stream request modifies the output stream
set the url to use
method that is called while the command is being executed
close the connection with the server
getter for property temporar file
setter for property checkout to directory
getter for property checkout to directory
this method returns how the command would looklike when typed on the
string returned by this method defines which options are available for
resets all switches in the command
returns the continuation list of moves that follow this move
returns the continuation list for the curr move
unexecutes the last move and backs the curr move up one
opposite of rewind this goes to the end of the current branch
step in a stack
step out a stack
getter for member refer depth
setter for member refer depth
jorm framework is generated automatically increase
insert a new entity instance into the database
delete database records associated with entity instance
from the system table to find the corresponding
update database records associated with entity instance
get the current max value of entity field which need
read the oracle sequences nextval
execute a update or insret sql statement
to determine the existence of a table
choose only one result for the field and the
this method is the method the results of a
this method is the method the results of a
this method is the method the results of a
this method is the method the results of a
the one read from the database into an integer value
the one read from the database into an long value
the one read from the database into an string value
the one read from the database into an date value
copy a code evaluation code structure into another
set into free all fields that can be used to set the
sets a piece without checks on the game board
set all free fields around the position p into free
marks the fields where the 5 pieces of the winner are
marks the position p as a good next move
delete the mark from position p
set all free fields around all position of the list p into free
gets the next player
gets the game status
sort free with the best moves at first to accelerate the algorithm to
gets the game status
stop a server
displays values of some given positions
to give suggestions to a human player give free back
sets the board value at a position
gets a position and remove from free list
gets the position with max value for black player or min value
calculates the value of the game situation
finds the position with max value and returns a integer that represents
finds the position with min value and returns a integer that represents
converts a position p into a intger value thats represents
converts a integer pos into a position
calculates a negative value of a move
returns the value of a certain position
change the coordinates of a variable of type position
calculates a integer value that represents this position
calculate and set the coordinate as is represented with h
checks if two positions are the same
gets the next move
gets the return code from move generator
copies a code board code b on this code board code
resets the code board code for a new game
gets the piece on the position p
gets the value a pattern with six positions
gets the depth of this board
gets the value a pattern with six positions
gets the number of free places of this board
gets the column number which contain the position p
toggle the game into pause and running states
gets the row number which contain the position p
gets the number of the diagonal up which contain the position p
starts a new game with given size
gets the number of the diagonal down which contain the position p
starts a new game
sets a new size for the next game
displays the game rules
sets a suggestion for a human player
displays a input dialog to get the number of suggestion that
displays a input dialog where can be selected one zgs to be stopped
starts a zgs
displays a dialog to input the port number for a new zgs
returns a jpanel with the given image
returns a jpanel with the buttons ok and cancel
returns a jpanel with the button ok
converts the player type sting into a integer value
display a error message
checks if the gzs from player player answers
checks if the gzs on give host and port is running
checks if the gzs on give host and port is running
display a game over message
starts the game with a click on the game board
starts a new game or continues a paused game
toggles the player colors to the next game
redraw the board
calculates and set suggestions for a human player
resets the suggestions of a human player
resets the gobang board for a new game
gets the game status
deletes unused locked objects and resets the counter
get the etag associated with a file
get the etag associated with a file
get the ctag associated with a file
parse an mdx query to a select node using olap4j parser facilities
generates an olap json object containing a cell set object
factory method for instantiating an olapquery
called by olapquery ctor to get an olap4j olap statement
called by olapquery ctor to get the olap4j olap connection from
generates a solap json object containing cell set and a
demarre le thread
this method initializes this
this method initializes txf tipo cambio
this method initializes txf fecha
this method initializes this
this method initializes tabbed
this method initializes jbt aceptar
this method initializes combo empleados
this method initializes this
this method initializes this
this method initializes scroll
this method initializes scroll
this method initializes tabla
this method initializes tabla
this method initializes bt sem anterior
this method initializes jbt nuevo
this method initializes jbt ver
this method initializes bt sem sig
this method initializes jbt habilitar
this method initializes this
this method initializes tabla
this method initializes panel principal
this method initializes tabla
this method initializes txf nombre
this method initializes jtf nombre turno
this method initializes scroll esquema
this method initializes jbt guardar
this method initializes jbt cancelar
this method initializes tabla esquema1
this method initializes bt guardar esquema
this method initializes this
this method initializes tabla
this method initializes panel vista horario
this method initializes tabla
this method initializes lista horarios
this method initializes txf codigo maquina
this method initializes jbt cancelar
this method initializes jbt cancelar
this method initializes bt borrar
this method initializes bt add2
this method initializes txf precio venta
this method initializes txf desde
this method initializes txf precio compra
this method initializes bt seleccionar
this method initializes bt menos2
this method initializes txf hasta
this method initializes txf numero
this method initializes rb intervalo hora
this method initializes bt exportar excel
this method initializes txf lectura inicial
this method initializes rb intervalo media hora
this method initializes txf nombre proveedor
this method initializes txf hora inicial
this method initializes txf miters
this method initializes txf numero
this method initializes txf nombre
this method initializes txf direccion
this method initializes rb todos
this method initializes combo proveedores
this method initializes txf representante
this method initializes combo unidades1
this method initializes txf registro
this method initializes bt liberar
this method initializes txf telefono
this method initializes rb empleado
this method initializes ch semana par
this method initializes jbt guardar
this method initializes txf fecha
this method initializes txf hora inicio
this method initializes jbt cancelar
this method initializes txf hora fin
this method initializes tabla
this method initializes jrb si
this method initializes scroll
this method initializes jbt guardar
this method initializes jbt cancelar
this method initializes jrb no
this method initializes jbt nuevo
this method initializes this
this method initializes jbt ver
this method initializes txf codigo maquina2
this method initializes tabla
this method initializes bt imprimir kardex
this method initializes jtf nombre turno
this method initializes combo esquemas
this method initializes scroll esquema
this method initializes txf miters2
this method initializes tabla esquema1
this method initializes tabla
this method initializes jtf validez
this method initializes jtf validez fin
this method initializes jbt fecha inicio
this method initializes txf producto
this method initializes jbt fecha fin
this method initializes jbt generar esquema
this method initializes txf descripcion
this method initializes txf capacidad maxima
this method initializes jbt cancelar
this method initializes scrol detalle credito
this method initializes tabla detalle credito
this method initializes txf stock
this method initializes bt borrar
this method initializes jbt atras
this method initializes txf nombre cliente
this method initializes txf total credito detalle
this method initializes txf saldo inicial
this method initializes bt seleccionar
this method initializes txf precio inicial
this method initializes txf total creditos
this method initializes jbt detallar
this method initializes jbt guardar
this method initializes bt mostrar lista
this method initializes rb intervalo hora
this method initializes jbt atras
this method initializes scrol total credito
this method initializes tabla total credito
this method initializes txf nombre cliente
this method initializes jbt cancelar
this method initializes scrol credito mes
this method initializes tabla credito mes
this method initializes rb intervalo media hora
this method initializes jcb productos
this method initializes jbt detallar
this method initializes jbt atras
this method initializes txf fax
this method initializes txf total mes
this method initializes txf nombre
this method initializes combo departamentos
this method initializes txf email
this method initializes this
this method initializes scroll
this method initializes txf plazo
this method initializes lista
this method initializes this
this method initializes this
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes txf nombre
this method initializes jpf password
this method initializes jbt entrar
this method initializes this
this method initializes panel monitor
this method initializes bt actualizar
this method initializes reloj
this method initializes txf entrada
this method initializes this
this method initializes txf estado
this method initializes this
this method initializes txf salida
this method initializes tabbed pane
this method initializes this
this method initializes txf monto
this method initializes txf nombre
this method initializes panel reloj digital
this method initializes combo tipo
this method initializes txf turno
this method initializes txa detalle
this method initializes txf desde
this method initializes scroll
this method initializes txf hasta
this method initializes bt aceptar
this method initializes combo turnos
this method initializes bt cancelar
this method initializes bt volver
this method initializes txf fecha
this method initializes bt actualizar
this method initializes this
this method initializes this
this method initializes panel monitor
this method initializes this
this method initializes j content pane
this method initializes bt nuevo adelanto
this method initializes scroll
this method initializes lista empleados
this method initializes scroll
this method initializes bt agregar
this method initializes bt aceptar
this method initializes this
this method initializes bt menos
this method initializes lista
this method initializes txf desde
this method initializes txf fecha nacimiento
this method initializes txf hasta
this method initializes this
this method initializes bt volver
this method initializes combo cargos
this method initializes this
this method initializes jbt agregar
this method initializes this
this method initializes combo turnos
this method initializes combo empleados
this method initializes txf precio
this method initializes bt diesel
this method initializes this
this method initializes this
this method initializes bt actualizar
this method initializes panel datos manguera
this method initializes jbt modificar
this method initializes txf detalle
this method initializes this
this method initializes txf cantidad
this method initializes jbt eliminar
this method initializes scroll pane
this method initializes jbt elegir fecha
this method initializes txf total importe
this method initializes tabla
this method initializes combo clientes
this method initializes txf total monto
this method initializes txf total importe
this method initializes txf detalle
this method initializes combo tipos
this method initializes txf total importe
this method initializes txf num vale
this method initializes jbt agregar
this method initializes txf mitter inicial
this method initializes txf conductor
this method initializes txf mitter final
this method initializes jbt modificar
this method initializes jbt eliminar
this method initializes txf placa
this method initializes tabla
this method initializes txf total cantidad
this method initializes txf total monto
this method initializes txf fecha
this method initializes txf cantidad
this method initializes txf total litros
this method initializes txf total importe
this method initializes txf detalle
this method initializes jbt agregar
this method initializes jrb masculino
this method initializes jbt agregar1
this method initializes jbt modificar
this method initializes txf tipo c
this method initializes jbt eliminar
this method initializes jbt eliminar
this method initializes scroll pane
this method initializes jrb femenino
this method initializes tabla
this method initializes txf total cantidad
this method initializes tabla
this method initializes txf total monto
this method initializes txf total importe1
this method initializes combo estados civiles
this method initializes txf venta manqueras
this method initializes txf vales
this method initializes txf adelantos
this method initializes txf calibraciones
this method initializes txf importe sus
this method initializes txf diferencia
this method initializes txf estado venta
this method initializes jbt guardar
this method initializes txf fecha ingreso
this method initializes jbt cerrar
this method initializes txf precio
this method initializes txf total entregado
this method initializes combo tipo moneda
this method initializes jbt aceptar
this method initializes jbt cancelar
this method initializes panel foto
this method initializes txf codigo
this method initializes panel vista horario
this method initializes panel vista horario2
this method initializes jbt guardar
action binded to the save button in the view
add a new
removes the last created
add a new
removes the last created
aditional input validation before creating the question todo study a way
refresh statistics data when a new
refresh statistics data when a
counts the number of
counts the number of
counts the number of
counts the number of entities entries in database
creates a new empty
adds a new
calculates the questions count
sets the min number of options that b must b be selected
gets the min number of options to be selected
removes the last
gets the questions count in the survey
sets the new
sets the question to accept null answers
asks if the question accept null answers
sends data to a provided host
initializes a bidirectional connection to a host
gets a single outbound connection instance to a host that can only write
gets a single inbound connection instance to a host that is read only
adds a listener for a specific hosts events
stop a listener from listening to a specific hosts events
adds a listener for a specific hosts events
stop a listener from listening to a specific hosts events
adds a listener to listen to all hosts events
stop a listener from listening to a all hosts events
adds a listener to listen to all hosts events
stop a listener from listening to a all hosts events
read data from the other host
no action this thing is only input
true if the radio stream is open
try to open the data output stream
disconnects this instance destroying it
tries to open the data input stream
we define connected as if the server acknowledged the connection
closes the stream
gets a prototyped host with a provided offset id from a basestation
sends command data to relevant listeners by looking at first arg
gets a prototyped host with the provided id
polls each prototyped host for changes of online ness
tries to get a prototyped host with the provided address
prints data of all online prototyped hosts
notifies code prototypeing listener code s on prototyping event
way to enable all to be powered up simultaneously
adds provided code prototypeing listener code to be called on prototypeing events
removes provided code prototypeing listener code from being called on prototypeing events
true if the host is online
gets the enumeration assigned to this host
gets the mac address associated with this host
true if a better spot is already prototyping
gets the last address that had been assigned to this host
prototypes this host
gets the best available unoccupied prototype for a basestation
gets the best available unoccupied prototype based on the map
analog out pulses this pin at a duty
send packets with our state information or prototype
get a prototype sensor associated with this prototyper
suspend all actuators and sensors on a mechanism
resume all actuators and sensors in this mechanism
this method is called when the robot enters autonomous mode if any teleop
this method is called when the robot enters operator control mode if any
manually establish a state while the controller is offline
adds a provided code macro code to be executed on provided state
gets the code macro code associated with a provided state
true where state is bound to a code macro code
executes a single code macro code bound to our current state
free the pid object
sets this sensor service to attempt to send data to the provided
sets this sensor service to attempt to send data to the provided
blink and return to a previous nonblack color
blink and return to a black color
light the led between red and green
sends a 300usec
start blinking until code stop blink loop code called
sets the rx pin to a low state
sets the rx pin to a desired state
starts the sensor by making it start to listen
print out our radio address
adds an object to be drawn
sends a pwm value to the servo
adjusts the period of calls to poll
starting point for the robot
gets the sensor source of this event
gets the sensor source of this event
gets the sensor source of this event
gets the sensor source of this event
changes the control mode or how the jaguar responds to commands
sets the encoder or potentiometer used to gauge position
sets the position sensor used to gauge speed
sets pid gains
sets the proportional gain for closed loop control
sets the integral gain for closed loop control
sets the derivative gain for closed loop control
gets the value of the proportional gain for closed loop control
gets the value of the integral gain for closed loop control
gets the value of the derivative gain for closed loop control
enable closed loop control using sensors attached to the control io on
enable closed loop control using sensors attached to the control io on
disables closed loop control
returns the input voltage of the jaguar speed controller
return the output voltage of the jaguar
returns the output current of the jaguar
returns the temperature in the jaguar
gets the position of the attached and configured encoder or potentiometer
gets the speed of the attached and configured encoder or potentiometer
the motor can turn forward if true
the motor can turn backward if true
gets a bit mask of faults
sets the maximum voltage change rate
sets the encoder resolution
configure soft position limits when in position controller mode
configures the number of turns on the potentiometer
gets the recently set output value setpoint
behavior is a function of the control mode
halts the jaguar by stopping it completely
gets the encoder wired to the control io on this canjaguar
gets the p wired to the control io on this canjaguar
gets a power sensor associated with this canjaguar
executes a command
turns off the motor
returns a switch pair sensor
toggles the state of the led between off and on
executes next command
returns the string led
turns off the led
executes next command
solenoid is in the off position
returns the string solenoid
executes a command
turns off the solenoid
sends a command to the jaguar
gets a fault sensor which polls the jaguar for faults
sets the motor speed to 0
executes a command
the servo returns to angle 90 degrees
sends command to relay
sets the state of the relay to off
starts notifying code cantimeout listener code l for all cantimeouts
this method is called when the robot enters autonomous mode if any teleop
this method is called when the robot enters operator control mode if any
stops notifying code cantimeout listener code l for all cantimeouts
notifies all cantimeout listeners that a cantimeout exception has occurred
get the robotbases current acceleration
get the robotbases current orientation relative to its starting orientation
starts notifying code jag switch listener code l for all events on event
stops notifying code jag switch listener code l for all events on event
notifies all listeners that the left switch state has changed
notifies all listeners that the right switch state has changed
sets the encoder resolution in counts per revolution
adds a provided code jag encoder listener code to send events on event
removes a provided code jag encoder listener code to stop sending
notifies all code jag encoder listener code s that the count has changed
true if the canjaguar is reading a voltage fault
notifies all code jag encoder listener code s that encoder rotation has started
true if the canjaguar is reading a current fault
notifies all code jag encoder listener code s that encoder rotation has stopped
true if the canjaguar is reading a gate driver fault
notifies all code jag encoder listener code s that encoder direction has changed
true if the canjaguar is reading a temperature fault
precondition new time and distance have been saved
starts notifying code cantimeout listener code l for all cantimeouts
stops notifying code cantimeout listener code l for all cantimeouts
configure the number of turns on the potentiometer
adds a provided code jag potentiometer listener code to send events
heartbeat signal with all fault data
removes a provided code jag potentiometer listener code to stop sending
notifies all listeners that the jag has a current fault
notifies all code jag potentiometer listener code s that potentiometer
notifies all listeners that the jag has a temperature fault
notifies all code jag potentiometer listener code s that potentiometer
notifies all listeners that the jag has a voltage fault
notifies all code jag potentiometer listener code s that potentiometer
notifies all listeners that the jag has a gate driver fault
notifies all code jag potentiometer listener code s that potentiometer
notifies all listeners that the jag has no current fault
notifies all listeners that the jag has no temperature fault
adds a provided code jag power listener code to send events
notifies all listeners that the jag has no voltage fault
removes a provided code jag power listener code to stop sending
notifies all listeners that the voltage has changed
notifies all listeners that current has changed
notifies all listeners that the jag has no gate driver fault
returns how highly this bug is ranked
add an index word to this set
remove the index word associated with code p code from this set
get the number of index words in this set
get the index word associated with code p code
get a collection of the index words in this set
get the words sense count
it is assumed that index word sets will only be created by calling
get a particular sense of this word
get the list that contains the nodes of this relationship
get the pointer target of the source node
get the pointer target of the target node
get the exception at index code index code
get the synset that is the source of this relationship
build a relationsip from var node var back to its root ancestor and
get the synset that is the target of this relationship
get the depth of this relationship
build the relationship
get the immediate parents of code synset code
return a label intended for textual presentation
get all of the ancestors of code synset code
whether or not this pointer type can be associated with code pos code
returns true if var type var is symmetric to this pointer type
returns the pointer type that is symmetric to this type
get the immediate children of code synset code
get all of the children of code synset code
walk the list and perform the operation code opr code on each node
returns true if the target is a word else false
if the target is a synset return it otherwise its a word
get all matches and add them to var matches var
if the target is a word return it otherwise return null
get code synset code s siblings the hyponyms of its hypernyms
operation that is used for finding the specified node in a tree
get the words that mean the opposite of code synset code
two pointer target trees are equal if their root nodes are equal
walk the tree and perform the operation code opr code on
convert this list to a pointer target tree node list
walk the tree and perform the operation code opr code on each node
reverse the contents of this list
find the first occurance of code node code in the tree
find the first node in the tree whose target is var target var
print the contents of var itr var using the default indent
print the contents of var itr var to the given stream
print the contents of var itr var to the default stream
print the contents of var itr var to the given stream
move to the first postion in the iterator
move to the last position in the iterator
get the attributes of code synset code
two synsets are equal if their poss and offsets are equal
find what words are related to code synset code
find all see also relations to depth code depth code
get meronyms of code synset code
true if this pointers source is a word
get the source of this pointer
get the actual target of this pointer
get the offset of the target within the target synset
get member meronyms of code synset code
if the class is installable this method will install it using the parameters
get substance meronyms of code synset code
get meronyms of code synset code and of all its ancestors
convert the next token into a byte
convert the next token into a short
convert the next token into an int
convert the next token into an int with base code radix code
convert the next token into a base 16 int
convert the next token into a long
get part meronyms of code synset code and of all its ancestors
open the input and output streams
get member meronyms of synset and of its ancestors
here we try to be intelligent about opening streams
get substance meronyms of code synset code and of its ancestors
get holonyms of code synset code
get member holonyms of code synset code
get substance holonyms of code synset code
get holonyms of code synset code and of all its ancestors
the file type associated with this file
open the file
get part holonyms of code synset code and of all its ancestors
get the file manager that backs this database
get member holonyms of code synset code and of all its ancestors
get substance holonyms of code synset code and of all its ancestors
find all entailments for code synset code to depth code depth code
find direct entailed bys of code synset code
find all entailed bys of code synset code
find all entailed bys of code synset code to depth code depth code
lookup the base form of a word
find direct cause links of code synset code
main word lookup procedure
find all cause links for code synset code
install a code map backed dictionary code from a map of parameters
find all cause links for code synset code to depth code depth code
returns true if var test os var is a version of this os
find participle of links of code synset code
returns the singleton structured english color provider
returns the singleton structured english scanner
returns the singleton ruleset scanner
returns the singleton business modeller dictionary
get the synonyms for code synset code
get all the synonyms of code synset code to depth code depth code
the code java editor code implementation of this
the code java editor code implementation of this
the code java editor code implementation of this
returns the parent for the given element or code null code
returns whether the given element has children
add a children to this vocabulary tree part
reset the tree node
updates the outline page
creates the pages of the multi page editor
saves the multi page editors document
getter of the property tt fo e tt
setter of the property tt fo e tt
getter of the property tt starting char position tt
setter of the property tt starting char position tt
getter of the property tt designation tt
setter of the property tt designation tt
getter of the property tt name tt
setter of the property tt name tt
getter of the property tt signifier tt
setter of the property tt signifier tt
getter of the property tt font style tt
setter of the property tt font style tt
getter of the property tt speech community tt
setter of the property tt speech community tt
getter of the property tt included vocabulary tt
setter of the property tt included vocabulary tt
returns the characters in the buffer to the scanner
getter of the property tt fo epart tt
setter of the property tt fo epart tt
adding the page to the wizard
getter of the property tt vocabulary entries tt
setter of the property tt vocabulary entries tt
the code java editor code implementation of this
creates the pages of the multi page editor
saves the multi page editors document
calculates the contents of page 2 when the it is activated
create contents of the button bar
return the initial size of the dialog
comparator override for this object
returns the value of map package with wildcard asterix stripped
dump config and headers to file
equals override for this object
prepare connector to attempted to attach to traceable process
hash code override for this object
utility to return value by key from property file
checks to see if the given class belongs to a given class type
connect to process to be traced
checks to see if the given class belongs to a given class type
equals override for this object
hash code override for this object
checks to see if the given class belongs to a given class type
shorthand signature for rudimentary logging writer
writes dots to std out to indicate execution
checks to see if the given class belongs to a given class type
comparator override for this object
rudimentary logging writer
gets the column name description for a column
hash code override for this object
gets the jkcol that occurs first in the column set
rudimentary logging writer
checks to see if the given class belongs to a given class type
gets the jkcol that occurs last in the column set
returns the value of last col
method to foce dump of log queue into log file
sets the value of last col
sets the value of last col
checks to see if the given class belongs to a given class type
transform null name to a readable string
returns the value of the index of a column
returns the column based on an index
method to accept results for writing to results output
sets the value for a column
checks to see if the given class belongs to a given class type
returnws the value for a column
method to accept results for writing to results output
method to accept results for writing to results output
results writer to html table
results writer to html table
method to force results queue to be dumped to results file
watch for exceptions
watch all fields named in properties
returns the value of watch class name with wildcard asterix stripped
use writer to log a list of arguments used to connect
capture all entry of methods named in properties
method to set an output value for current state
always watchable will add special step request however this will not be
returns the value of capturemode as a string
returns the value of watchmode as a string
returns the number of tokens in the watch string
adds a field watch
returns the number of tokens in the capture string
returns the number of tokens in the capture string
delete all modification watchpoints
this method return the complex object hessian can not process it
initializes the applet interface
builds the menu for the y axis
builds the menu for the x axis
returns a string with all subsources of sim oahu grid
calls properties list to get properties
computes the carbon content of the source at at given timestamp
returns watt depot command client connection
gets the app session associated with this application
gets the image name for the stop light info
set the chart type to be displayed for this session
set the beginning timestamp to retrieve sensor data
set the ending date to retrieve sensor data
sets the source to retrieve sensor data
returns the beginning date of sensor data
returns the ending date of sensor data
returns a map key for a given object and relationship
what was i going on about
not necessary but here due to node change listener
perhaps this default action s be done by caller
from node table methods
from node table methods
from node table methods
from node table methods
hash code computed using algorithm suggested in
set size of window
upload watch info to hr monitor
download watch info from hr monitor
send user info to heartrate monitor
show watch info data bevor sending to s710
get user info from heartrate monitor
generate watch info
show user info data bevor sending to s710
drawing statistical grafics
setting timeouts get files and path for saving downloaded workouts
compute time in hr zone
generate user info
user infos user name user id gender weight height activity level
get time as hh mm ss string
handle events on combo boxes add remove change
show reminder data bevor sending to s710
options altimeter temperature fitness test predict hrmax help
sets the gui elements
download reminder from hr monitor
12 or 24 mode
download bike info from hr monitor
set default heartrate limits
initialize heart rate limits
initialize heart rate limits name
if set exercise button was pressed
set window attributes titel
initialize hour choice
set size of main window
if get exercise button was pressed
if first choice contains nothing add heartrate
set hr limits and repaint
boxes altimeter temperature fitness test predict hrmax energy
to string methode creates a string representation of the object
download bike info
show workout information in console
handle events on combo boxes add remove change
show bike info data bevor sending to s710
initialize default buttons get user info set user info
writes all workout data to the console
to string methode creates a string representation of the object
transfer reminder to s710
transfer user info to s710
decodes a bcd byte polar format to normal byte value
get and check whell size
transfer watch info to s710
readable output for a byte array
heartrate must between 0
encode byte 0 and 7
get exercise information from s710
to string methode creates a string representation of the object
time must between 0
set chain lengths
transfer exercise to s710
time must between 0
set wheel sizes
set bike names
select items with exercise number
compute start point for x
set bike in use
get the data from the downloaded exercise and set the m choice elements
add received reminder to vector
get the null point for x
init bike in use choice
get checksum from received bytes
add get exercise to a vector
generate packet send to s710
initialze the diagram border axis
close ir connection
used for progress bar
compute zooming in y direction
parse saved workout
get the information from the packet
used for progress bar
get set and back buttons
parse downloaded workout
used for output
sets the date of the reminder
select first item choice
parse downloaded workout
initialize recovery heartrate
search all availble workouts for a workout defined with date
initialize recovery time
length header payload 16 byte msb lsb big endian
get the information from the packet
compute the best distance between two main value lines
set the virtual size of the drawing area
parse the file content and restore the saved settings
initialize heart exercise timer 3
start and initialize the program
set the heartrate limits
generate packet send to s710
to string methode creates a string representation of the object
used by scrollpanel
initialize heart exercise timer 2
returns the selected reminder
initialize heart exercise timer 1
calculate sample length bytes depends on what is recorded
offset of first sample
decode lap data
get temperature at end of lap
get and set heartrate of lap
lap split time in 1 10th seconds
calculate lap length bytes
temperature data only available when altitiude recorded
decode recording mode heartrate is always recorded
decodes a bcd byte polar format to normal byte value
decode altitude information form the high and low byte
decode a temperature information from the specified byte
first commits the transaction and then clears the session
methods from interface below
returns the ip address that the application server sees
returns the actual ip address of the machine browser
methods from interface below
loads yazd properties from the disk
provides the next available unique id for a particular object type
returns true if there are more categories left to iteratate through
returns the next category
updates the modified date but doesnt require a security check since
returns the watch manager
loads user properties from the database
inserts a new user record into the database
updates the modified date but doesnt require a security check since
returns the next type
returns the previous group
inserts a new user record into the database
clones a new filter that will have the same properties and that
returns the name of the filter
returns a description of the filter
returns the author of the filter
b overloaded b to return the subject of the message with html tags
b overloaded b to return the body of the message with html tags
this method takes a string which may contain script tags ie script script
clones a new filter that will have the same properties and that
returns the name of the filter
returns a description of the filter
returns an enumeration of all the property names
b overloaded b to return the subject of the message with html tags
b overloaded b to return the body of the message with html tags
description of the method
description of the method
sets the item id attribute of the s update article preload object
description of the method
description of the method
description of the method
description of the method
description of the method
description of the method
description of the method
description of the method
sets the target data store attribute of the stored procedure object
sets the connection attribute of the stored procedure object
gets the result set attribute of the stored procedure object
description of the method
description of the method
description of the method
replace a quote by a double quote used for sql queries in java
description of the method
description of the method
description of the method
description of the method
description of the method
description of the method
to be ran once before using the data store
description of the method
sets this data stores cache object and caches all package tags
description of the method
description of the method
returns the last error recorderd by xmlconfig
sets the internal key values hash map
returns the internal key value hash map
sets the xmlfile name field
returns a member of the glossary as a string
description of the method
clears out all of the hash table contents
sets a glossary value
clears out all of the hash table contents
inserts a tag and value pair from xml into the config structure
prints the glossary hack job alert
prints the glossary where key item start with specific pattern name
returns the size of the glossary
returns a member of the internal hash as a string
to be ran once before using the redirection class
gets a redirection url and returns it to the servlet
gets the cache value attribute of the my sql data store object
description of the method
description of the method
description of the method
returns a string containing information about the author version and
description of the method
returns where to find more information about cofax
gets the template mode
sets the template mode
gets the template search limit
sets the template mode
function get last modified purpose to return the age in miliseconds of
gets the template root directory
sets the template root directory
gets the default index template
sets the default index template
gets the ps name attribute of the my sql data store object
gets the default object template
sets the default object template
gets the folder to search from
sets the folder to search from
sends the headers to the client that have been set for this page
gets the pool connection stats attribute of the my sql data store object
navigate throught the different modes for polls
to be ran once before using the redirection class
sets the u rl attribute of the my sql data store object
performs servlet cleanup such as closing down the database pool
sets the user attribute of the my sql data store object
sets the password attribute of the my sql data store object
gets the cache value attribute of the sql data store object
sets the max conns attribute of the my sql data store object
description of the method
sets the init conns attribute of the my sql data store object
sets the time out attribute of the my sql data store object
gets the u rl attribute of the sql data store object
sets the con usage limit attribute of the my sql data store object
sets the last time used attribute of the connection wrapper object
gets the user attribute of the sql data store object
function set current activity purpose to set the query that this connection
sets the holdability attribute of the connection wrapper object
sets the kill time attribute of the my sql data store object
gets the holdability attribute of the connection wrapper object
gets the password attribute of the sql data store object
sets the savepoint attribute of the connection wrapper object
sets the savepoint attribute of the connection wrapper object
executes the rollback method of the connection wrapper object
gets the max conns attribute of the sql data store object
executes the prepare statement method of the connection wrapper object
gets the init conns attribute of the sql data store object
executes the prepare statement method of the connection wrapper object
executes the prepare statement method of the connection wrapper object
gets the time out attribute of the sql data store object
executes the release savepoint method of the connection wrapper object
sets the type map attribute of the connection wrapper object
gets the con usage limit attribute of the sql data store object
sets the auto commit attribute of the connection wrapper object
sets the catalog attribute of the connection wrapper object
gets the kill time attribute of the sql data store object
sets the read only attribute of the connection wrapper object
sets the transaction isolation attribute of the connection wrapper object
gets the times used attribute of the connection wrapper object
gets the time created attribute of the connection wrapper object
gets the last time used attribute of the connection wrapper object
gets the connection id attribute of the connection wrapper object
gets the current activity attribute of the connection wrapper object
returns true if the connection wrapper is closed false otherwise
gets the auto commit attribute of the connection wrapper object
gets the catalog attribute of the connection wrapper object
gets the meta data attribute of the connection wrapper object
gets the type map attribute of the connection wrapper object
gets the transaction isolation attribute of the connection wrapper object
gets the warnings attribute of the connection wrapper object
gets the read only attribute of the connection wrapper object
description of the method
inform the connection pool that the connection wrapper is closed
description of the method
description of the method
description of the method
description of the method
description of the method
description of the method
display the header format if got data return from the package tag
eval the header format that normally in pre html form or jsp
ends this tag run
sets include file name
display the no row message if no data return from the package tag
translates a template id path returned by choose into a resource uri
sets the name for the hash glossary
sets the name of the variable being set
gets the flag setting true false returned from the package tag call
description of the method
sets the value for the hash glossary
sets the name value to the package tag glossary
call package tags execute function that queries the database
determines if to add package tag debug information to the request glossary
print content to clients browser
sets the name as key
eval the footer format that normally is html form or jsp
sets the name value to the main glossary
checks to see if we are adding debug data to the request glossary
display each record from package tag glossary
determines if we should add the start row to the request glossary
sets the error message to be returned to the caller
sets the namespace column prefix for the values returned
returns the data store name
sets the data store name
sets the package tag name we are executing
outputs this objects configuration
empty init method
empty init method
sets the data store object
empty set cache method
outputs configuration of this data store
sets the row we are starting from
empty destroy method
sets the number of rows we are displaying
disconnects from the data store
gets the number of rows we are displaying
sets the template loader object
sets a glossary value in this package tags glossary
sets the page attribute of the wysiwyg template object
gets the template loader object
gets a glossary value in this package tags glossary
sets the glossary object
gets the total rows returned from the package tag call
gets the glossary object
sets the total rows returned from the package tag call
sets the template attribute of the wysiwyg template object
adds a passed in hash map to glossary object
gets the current rows returned from the package tag call
determines if we have an additional row to move to
puts a single string value in the glossary
gets the flag setting true false returned from the package tag call
gets a single string glossary value
a pointer to the next row
applies the glossary to a string
determines if a column exists in this row
calls the glossarys print glossary routine
gets the current processing row
gets a value from the row
gets the tracked count attribute of the cofax cache object
prints the glossary where key item start with specific pattern name
adds a header to the header collection
sets the parameters for this package tag run
ends this package tag run
gets a header from the header collection
gets the cached count attribute of the cofax cache object
returns the headers collection
verifies whether a header exists
gets the max track attribute of the cofax cache object
sets the last modified time
sets the max track attribute of the cofax cache object
gets the contents fields data
gets the content fields data
gets the max store attribute of the cofax cache object
gets the lenght of the content field
appends to the content field
sets the max store attribute of the cofax cache object
sets the error message
gets the refresh interval attribute of the cofax cache object
resets the length of pages contents
converts the contents string buffer to bytes
sets the refresh interval attribute of the cofax cache object
sets the hit count
gets the hit count
gets the dirty read attribute of the cofax cache object
sets whether this page is cached or not
sets the dirty read attribute of the cofax cache object
tells whether this page is in cache memory or not
sets the time that this page was cached
gets the cache hash attribute of the cofax cache object
adds one to the number of times this page has been hit
gets the cleared time total attribute of the cofax cache object
gets the cache requests attribute of the cofax cache object
gets the cache hits attribute of the cofax cache object
gets the dirty cache hits attribute of the cofax cache object
gets the time that this is starting to be built
gets the max track reached attribute of the cofax cache object
sets the serving page attribute
gets the max store reached attribute of the cofax cache object
gets the serving page attribute
sets the serving client attribute
gets the is max track reached attribute of the cofax cache object
gets the serving client attribute of the wysiwyg template object
gets the is max store reached attribute of the cofax cache object
gets the max track turn over attribute of the cofax cache object
prints to standard out the current statistics of the cache
returns the hit count of a page in the cache hash table
returns a page from the cache hash table
returns the total number of hits for all the urls being tracked
returns configuration data for this cache object
writes configuration class instance into a file in a java properties
returns the type of the parameter
returns the actual contents of the parameter including the padding
checks if the type value contains the critical bit
tests if the socket has been opened
copies the raw packet data into a byte array
closes the socket
sets or unsets the ip hdrincl socket option
retrieves the current setting of the ip hdrincl option
sets the send buffer size so sndbuf
retrieves the send buffer size so sndbuf
sets the receive buffer size so rcvbuf
retrieves the receive buffer size so rcvbuf
p sets whether or not socket send receive timeouts should be
p determines whether or not socket send receive timeouts are
sets the ip header length field
sets the send timeout so sndtimeo
sets the ip identification header value
sets the fragment offset header value
retrieves the send timeout so sndtimeo
sets the receive timeout so rcvtimeo
retrieves the receive timeout so rcvtimeo
reads in the province history file
reads in the country history file
called after the background is painted but before any provinces have
called after all provinces have been painted
loads the necessary data for showing the map
true if default
adds a custom keyword style to the style set
add a custom keyword style to the style set
removes the given pattern from the list of keyword patterns
removes the given pattern from the list of keyword patterns
adds a custom token style to the style set
adds a custom token style to the style set
adds a custom token style to the style set
checks the text areas text for validity
loads the necessary data for showing the map
sets the main directory name to the given string
eu3 specific method to find the country history file for the given
directory information for province and country history files is cached
returns the prefix used between the main directory name and the mod name
sets the prefix used between the main directory name and the mod name
returns the main directory name
returns the fully qualified name of the mod directory ending with a
returns the name of the mod or if no mod is being used
appends the given string to the comment text
gets the child object with the given index
gets the first child object with the given name
gets the last child object with the given name
gets the child list with the given name
gets the last child list with the given name
gets the child list with the given index
gets the child variable with the given index
gets the first child variable with the given name
gets the last child variable with the given name
gets the first child variable with the given name
gets the last child variable with the given name
gets the first child variable with the given name
gets the last child variable with the given name
gets the first child variable with the given name
gets the last child variable with the given name
gets the parent of this object
simple recursive method to find the root node
read a comment and then a newline if possible
displays an error dialog with the given text and also prints it to
prints a warning message with the given text
adds all children of code other code to this object
adds a comment to the beginning of the root object
cause a blank line to appear in the output at the current index
indicates whether or not lists should be allowed
indicates whether or not single words should be allowed
indicates whether or not comments should be ignored
indicates whether to display info on how long the loading took
indicates whether to print warnings to the console
indicates whether or not the parser should try to recover after e
indicates whether or not warnings should be treated as errors
note this method does not check whether a contradictory trait
lazy creation of history object
gets the province history for the given id using the cache
gets the country history for the given tag using the cache
get a message from the applications resource file
get a formatted message from the applications resource file
get a formatted message from the applications resource file
format message using given arguments
get the code user service code
get the code folder service code
lookup service based on service bean name
the backing bean action to logout a user
move a db item from one father to another
called after a object have beed modified created dropped if the item
move the db item and rephrase it if necessery
is called for base objects after the normal compare is done
reset database when a new object is found
move a db item from one father to another
returns a non busy thread
sets maximum number of threads in the pool
registers with the message wish queue and waits for the reply
starts processing messages
given 120 bpm
create the gui and show it
tempo value must match one found in data vector
let the user know there was an issue
i rerturn xmpp name
let the user know there was an issue
parse an element tree and return the module found in it
this method exists because rss0
parses the root element of an rss document looking for all items information
this method exists because rss0
parses the root element of an rss document looking for all items information
this method exists because rss0
set the endpoint address for the specified port name
sets the sqi fault code value for this sqi fault
get an element from the
add a new element to the vector used for debugging
resolve the types of dummy elements in the vector
visitor design pattern
return the return type of the method
get the basic name of the symbol
get the symbol that contains the definition of this symbol
return the list of interfaces that this class implements
get the fully qualified name of the symbol
return a reference to the superclass of this class
does this represent a java class
does this represent a java interface
define a curly brace delimited block of code
return a string representation of the class
write out that this is a string table
return if this is a base or default scope
define a new label object
return a string representation of the occurrence
return a string representation of the occurrence
get the number of parameters for this token if it represents a
sets the parameter count property of this token
sets the out dir attribute of the pass1 object
define a new package object
sets the recurse attribute of the pass1 object
state that we are done processing the method header
gets the out dir attribute of the pass1 object
create a new dummy class object
gets the recurse attribute of the pass1 object
clear the scope stack except the base scope for primitives
gets the backup path attribute of the pass1 object
description of the method
pop off the current scope from the stack
description of the method
mark the current file that is being parsed
set the lookup scope to the nearest enclosing class for this
return a string representation for the entire symbol table
used to push the scope of the default package
assumes that the top level node will hold the information
return the name of the target language
first step is to create a node the calls decode r
encode a tree of concepts input should
decode a tree of concepts input should be
this production rule represents the more general expression that can
the central item everything is either a struct a variable or
whenever brackets are found
encode a tree of concepts input should
matches arg name value
decode a tree of concepts input should be
matches arg name value
the central item everything is either a struct a variable or
decode a tree of concepts input should be
whenever brackets are found
this production rule represents the more general expression that can
the central item everything is either a struct a variable or
the simplest either a sting number or date
matches arg name value
get a value which will be a concept
insert an unnamed slot value which must be a concept
get a value which will be a concept
load the desired image and call back the provided frame
get the height of the icon
get the width of the icon
return true if this model has no machines
add a simulated machine to this simulated factory
create a list of machine image clones that record the
return the machines in this factory model
react to the add or undo buttons
reset the state of this simulation to the state recorded
if an image is being dragged repaint it
the user clicked it the mouse is inside a machine image
the user let go of the mouse having clicked it if he or
does this strategy handle the given domain class and its respective mapping type
does this strategy handle the given domain class and its respective mapping type
does this strategy handle the given domain class and its respective mapping type
does the implementation handle th given searchable value type
provide a useful string
this refreshes the cached object
this refreshes the cached object asynchronously
this method initializes j text field
this method initializes j text field
this method initializes j text field
this method initializes this
this method initializes j text field
this method initializes j scroll pane
this method initializes j text field
configures the logger to write to console
fetching incoming text
starts the chat session
starts the receiver
close the players and the session managers
sets the buffer time
find out how many redundant generations there are in the received packet
sets the cname which will be used in the rtp session
gets the state lock
hide and show sdp and packet to throw panels
sets the email address which will be used in the rtp stream
indicates that the transmission has failed in some way
stops the receiver thread closes the socket
handles state shanges
starts the rtcpreceiver thread
opens a socket for reception of rtp data
converts a char in byte form to a number
indicates whether the reception socket is opened
converts two chars to a number
opens a socket for transmission
adds a redundant generation to the list
returns primary generation for this packet or null
returns generation with specified number for this packet or null
gets the synchronization source identifier for the originator of this
sets the sender ssrc
gets the reception report block contained in this packet if any
indicates whether the transmission socket is opened
sets the reception report block
indicates whether this rtcp packet contains a reception
sets whether this rtcp packets contains a reception report block
gets the fraction lost value
sets the fraction lost value
opens an rtp transmit socket
gets the cumulative number of packets lost
sets the cumulative number of packets lost
gets the extended highest sequence number received
sets the extended highest sequence number received
gets the interarrival jitter value
waiting for the receiver at the other end to be ready
sets the interarrival jitter value
gets the middle 32 bits out of 64 in the ntp timestamp
sets a part of ntp timestamp from the most recent rtcp sender report
gets the delay expressed in units of 1 65536 seconds between
gets the 32 most significant bits of the ntp time stamp
gets the sdes item contained in the rtcp sdes packet
waiting for the local receiver to be ready
sets the sdes item
sets the 32 most significant bits of the ntp time stamp
sets the delay between receiving the last sr packet and sending this
gets the sender info block contained in this sender report
sets the sender info block
gets the least significant 32 bits of the ntp time stamp
gets the csrc count
sets the least significant 32 bits of the ntp time stamp
sets the ssrc
sets the csrc count
gets the reason for leaving
gets the rtp time stamp
sets the reason for leaving
sets the rtp time stamp
sets the sequence number
sets the rtp time stamp
gets the sender packet count
show hide detail table or select a packet
sets the sender packet count
gets the sender octet count
sets the payload data
sets the sender octet count
gets the marker bit for this packet
sets sdp strings
stops the thread and closes all sockets
check if this dialog is closed by the user
checks if for the position of next cr carrige return if any
validates rtp packet
sets the number of redundant generations
sets if the synch buffer should send on cr or realtime
find out how many redundant generations there are in the received packet
this function either shows or hides the sdp panels sdp heading local
gets if syncbuffer is set to send on cr
gets the content type of this data source
connects this data source to its source
sets the number of redundant generations to use
disconnects this data source
this function either shows or hides the show packets to throw label and
stops this data source
sets the type of format received in the input buffer
sets the type of format to use in the output buffer
sets the number in the label to the right of packets to throw
return the control based on a control type for the plug in
set the data input format
the buffer length
sets the buffer length
returns the mininmum threshold
sets the minimum threshold
the minimum threshold is never used
the minumum threshold is never used
clears all panels and sets the dialog to its default state see javadoc
adds a packet to the packet list
creates a jpanel to display information about server activity
requests the information about where each player placed their units
connects to the server
tells the server what is on this players board
send information about the move the player just made to the server
receive the other players move from the server and update the board
increments the count of the number of ships set so far
returns the ship at the specified index
stops the crawling process
log the entire inject to file
toggle between show and hide coordinate axis
called by the drawable immediately after the open gl context is
called by the drawable to initiate open gl rendering by the client
is the coordinate axis shown already
called by the drawable during the first repaint after the component has
set display mode of this sequence
get display mode of this sequence
set type of the bond
sets an identifier to identify this object
add atom id to the list
get type of the bond
gets an identifier that identifies this object
stores an integer property with the specified key in a hashtable
set half of the total bond length for this bond
set the element number of the atom
get the element number of the atom
get half of the total bond length for this bond
information about the number of atoms belonging to this residue
add an atom to this group
set the location of the atom
set the angle the cylinder which represents a bond in some display modes
set the location of the atom
stores a boolean property with the specified key in a hashtable
add a bond to this group
get the angle of rotation
get the location of the atom
add a bond to the list of bonds this atom is involved with
set the normal vector to the plane through which the cylinder that represents
set textual information about the molecule group
get the rotation axis
get the number of bonds this atom is involved in
stores a float property with the specified key in a hashtable
creates a copy of all the data in this bond instance
translate atom to new location
forcefully set the bounding box around the molecule group
creates a copy of all the data in this atom instance
stores a string property with the specified key in a hashtable
starting from a default window size find the optimal maximal size of the
get the data of an atom in the molecule group
execute the appropriate command if a menu item is selected
close input stream
get oglrenderer instance
description of this filter as it will be displayed in the file chooser
get radius of bounding sphere
load icon image
add atom to residue that does not belong to a sequence chain
center group and bounding box
set preferred height of vertical ruler
add atom id to residue that belongs to a sequence chain
set preferred width of horizontal ruler
read the file and store the information in a group instance
add tabbed pane to top pane
remove tabbed pane from top pane
textual information about the contents of the group
create empty space in the panel the size of a button
load group molecule
load icon image
splits the toolbox area into three separate panes
display message in the message bar if mouse enters button area
display default message in the message bar if mouse exits button area
show all groups
initialisation is performed here which is essentially everything that will
gets some specific system properties useful to run the program
updates the progressbar
extracts the arguments and takes appropriate actions
create nanodesigner data directory in the user home directory
hides the splash screen right away
checks vm version
the run method of the runnable
set look feel depending on the operating system the program is running on
check screen dimensions
creates a string containing the contents of some environment variables
reference new resource parent child r
map key string bean factory bean factory map
map bean factory
beanfactory ruquest l url web web
2 get object
input action submit
cache code cache param
root file directory function path config type
manaer simple config manager
thread connection aware
cleans up when a problem occurs during request processing
get an input stream that represents this file
every line must be processed
check if certain flavors are supported by us
the supported source action for drag and drop
populate the related entity map vector
populate the related entity map vector
so we can put the logic for supporting multiple parameters with the same
sets the name of the entity to be replicated
so we can put the logic for supporting multiple files with the same
adds a related entity map to the related entity map vector
populate the related entity map vector
gets the related entity map vector
sets the user information
populate the related entity map vector
populate the related entity map vector
populate the related entity map vector
populate the related entity map vector
this method replicates all instances for all related entities
this method removes all instances for all related entities
populate the related entity map vector
populate the related entity map vector
this method removes all instances of all entities named
this method replicates all instances of all entities in the related entity
sets the local delegator attribute
populate the related entity map vector
gets the local delegator attribute
sets the master delegator attribute
gets the master delegator attribute
gets the node id under which the current machine is registered for replication
gets the query value id
sets the query value id
gets the query id
sets the query id
gets the attribute id
sets the attribute id
gets the attribute value
sets the attribute value
gets the query operator
sets the query operator
gets the display type id
sets the display type id
gets the display object id
sets the display object id
gets the display object id
sets the display object id
gets the section id
sets the section id
gets the party id
sets the party id
gets the query name
sets the query name
gets a reference to the query value list
creates a generic value for this query
p copy the column values for each row in the specified
p loads and returns the code class code of the given name
gets the identifier of the agent
gets the identifier of the target tuple centre
specifies if a logic tuple as a tuple template matches with a
tries to unify a logic tuple as a tuple template with a
accepts a communication event
checks if this logic tuple is equal to another
gets a copy of the logic tuple
accepts a trap event
gets a representation of this tuple as a tuple argument
get the previous element in history
get the next element in history
clear the debug area
gets the identifier of this tuple centre
get the version number of the j2 se this program is running on
get the subversion number of the j2 se this program is running on
launch a gui suitable for the java2 platform
launch a gui suitable for the
return true if this file should be shown in the directory pane
return the extension portion of the files name
build the dialog displaying the name of the managed libraries and
returns the human readable description of this filter
create a textfield in the thinlet panel to display the name of a
create a combobox in the thinlet panel to display the status of a
blocks the vm thread of control waiting for events incoming
set the status message in the status bar of this dialog
handle the effects of a key pressed on the code text area code
add a library from the dialog to the manager
set the current caret line
set the prolog engine referenced by the toolbar
given the caret position in in the code text area code return the
close the library dialog
build a table containing for each line the partial length of the text
set the toolbar status
listen to the keys pressed in the input field to provide an intuitive
since the solve method must be placed in this class i need
solve the goal currently displayed in the input field
gets the argument linked to a variable inside the tuple argument
get the file manager used by the toolbar
set the frame launcher referenced by the toolbar for use in displaying
get the frame launcher used by the toolbar
display the status message on the status bar
set the engine to be referenced by the library manager
check if a library is loaded into the prolog engine
add a library to the manager
reset the engines theory to a new blank theory
load a library from the library manager into the engine
unload a library from the library manager out of the engine
check if a library is contained in the manager
checks if this argument is equal to another
load the engine with a theory previously stored in a file
gets the boot time of the tuple centre vm
set the prolog engine referenced by the editor
save the engines current theory to a default file
save the engines current theory to a file chosen by the user
set the edit area used by the editor to manipulate the text of
gets a copy of argument
undo last action in the edit area
opens the library manager dialog
redo last action in the edit area
display the line number where the caret in the edit area is
the input field used to get queries
display an about dialog with information on the system and its crafters
enable or disable theory related buttons
set the debug area referenced by the toolbar for use in displaying debug
set key bindings for edit area actions
get the debug area used by the toolbar
set the library dialog referenced by the toolbar for use in displaying library
managing theory theory
notifies registered listeners of a new observable event
registers a new listener to observable events
reads next available token
removes if present a listener to observable events
registers a new observer to observable events
removes if present a listener to observable events
go to n th char
starts a compound edit that can be undone in one operation
ends a compound edit that can be undone in one operation
begins a transaction section
ends a transaction section specifying
start agent execution
gets the agent identifier
executes a new task whose behaviour
setting a new observation protocol
reset the tuple centre vm
ask a new step for a tuple centre vm during tracing
set a new tuple set
adds a listener to inspector events
removes a listener to inspector events
removes all events of specified agent
helper service which unifies a tuple template and a tuple
reset information about an established connection
waits and processes tu cso n virtual machine
setting a new observation protocol
get a snapshot of tuple set
reset the tuple centre
when doing trace ask for a new virtual machine step
set a new tuple set
resolve information about a tuple centre
setting new observation protocol
reset the tuple centre vm
ask a new step for a tuple centre vm during tracing
set a new tuple set
shutdown the inspector
gets string representation of the tu cso n node
starts agent execution
changes the state of the automaton
changes the state of the automaton providing auciliary information
defines the automaton behaviour
specifies the behaviour of the automaton in its end state
specifies the behaviour of the automaton in its error state
roots a debug message to the main application
relays pv p to the other user
relays pv p to the other user
waits for clients connections and handles them to a new relay server connection
closes the servers socket
updates the label with the number of connected clients
triggered by gui action
triggered by gui action
triggered by gui action
triggered by gui action
triggered by gui action
triggered by gui action
triggered by gui action
triggered by gui action
web notifier should always set this
web notifier should always set this
make sure were able to retrieve the data reader seems basic no
basic test to ensure get active schedules is functioning normally
fill the curriculum list with all curricula then select the curriculum id passed
handles the action of the user clicking the button
handles the action of the user clicking the button
goes through list of requirements and removes requirements that have been satisfied
handles the action of the user clicking the radio button
gets the course taken list model
loads the data from the remote files into the data reader
gets the curriculum combo box model
gets the term combo box model
shows the recommended schedule to the user by instantiating an instance of
returns a new
returns a reference to the term schedule field
returns a reference to the local about box for displaying etc
gets the user input textbox
gets the term combo box to retrieve selected item
gets the curriculum combo box to retrieve selected item
set the value of a student
get the value of a student
set the value of a course offering
get the value of a course offering
set the value of a curriculum
gets the courses taken list to retrieve items models etc
get the value of a curriculum
set the value of requirement id
get the value of requirement id
set the value of requirement description
gets the student login radio button
get the value of requirement description
set the value of courses
set the value of course id
get the value of course id
set the value of course name
get the value of course name
set the value of credits
get the value of credits
gets the add courses button
set the value of student id
get the value of student id
set the value of enrollment date
get the value of enrollment date
set the value of major
get the value of major
set the value of date of birth
set the value of grade
set the value of home campus
get the value of grade
set the value of semester
get the value of semester
get the value of home campus
set the value of year
set the value of total credits
get the value of total credits
set the value of classification
set the value of expected grad date
get the value of expected grad date
set the value of first name
set the value of last name
set the value of host
set the value of courses taken
set the value of curriculum id
get the value of curriculum id
get the value of host
set the value of port
set the value of start date
set the value of end date
get the value of port
get the value of end date
set the value of requirements
set the value of login
set the value of location
get the value of login
set the value of password
get the value of password
this method is called every time before particular test
for classes which doesnt contain any methods here is one
method for testing how works original method java
method for testing how works original method
method for testing how works original method void set
this method is called every time before particular test
initialise the preferences to the values for this release
delete the player collection data in the database
initialise the preferecnes of class org fanfoot auto scorer
print the stack trace of the nested exception
get the value corresponding to the supplied node
set the user value corresponding to the supplied key to the
return a graphical editor for the user preferences for the
initialise the event parser object
get all patterns in the config file for a source of the
getter for property x slurl
setter for property x slurl
getter for property events
getter for property conf
get an iterator over all the events
setter for property conf
get the event at the given index
getter for property scores document
setter for property scores document
add the supplied event to the events list
get the part of the event named
get the number of events in this collection
add the named part and value to the collection of parts
add a capturing group at the given index represented by the
private add the supplied regular expression as a capturing group
get all the parts for this event
add all the supplied events to this events collection
getter for property regex pattern
get all part names for this event
initialise the menus
setter for property regex pattern
add all the supplied events to this events collection
indexed getter for property capturing group
return an xml dom representation of this event
get the part name for the indicate capturing group
indexed setter for property capturing group
get the uid xml element
test to see if the two supplied part values are equal
get the type xml element
initialise the debug menu
get the source xml element
get the names of all event types present
get all events in the collection of the indicated type
getter for property conf
setter for property conf
getter for property src data
setter for property src data
notify all listeners when the commentary has been retrieved
return the source code of the currently loaded commentary
parse url menu item has been selected
set auto scorer preferencess action is to be taken
set control centre preferencess action is to be taken
parse bbc text commentary action is to be performed
creates an events table for each of the event types and adds it
create a vector of the part values for the supplied event
add an html summary pane to the tabed pane
add an html pane containing information about the supplied
add an xmltree editor pane for the events
loaded commentay file
returns the game over status which is passed to this player
returns whether this player wins or loses
returns the opposite color
gets the corresponding
checks if the move is double
getter for the position from which the checker is moved
getter for the die that the checker is moved
getter for the end position of the checker
returns true if the move bears off the checker
returns true if there is no available move
returns true if the move reenters a hit checker
makes the move for the specified player on the board
ends the game for the specified player
causes the runnable object to exit its run method
returns code true code if the thread has been notified
this method creates the initial content of a ebuild file
requests window focus for associated component
associates a component with this action
translates a pixel y coordinate to a relative coordinate
shows this splash screen for a number of milliseconds without blocking
returns whether this algorithm can use different distance measures
sets the max distance for random points
returns first clusterable
returns the current number of clusters setting
returns second clusterable
returns distance between the clusterables
returns the selected algorithm
calculates the scale factor for the current data
sets the collection of paintables this component displays
returns the selected distance measure
update the display with a new value
sets the number of clusters setting
assigns all items to the normal clusters
assigns all items to the normal clusters
sets the enabled status of certain settings controls
opens all clusters in a collection
initializes the cache
closes all clusters in a collection
formats a number
returns the distance between two items
re centers all clusters in a collection
returns the distance between two items
combines two clusters
combines two clusterables to a new cluster
returns the number of steps still to ge before pausing
sets the number of clusters to produce
sets the index used for this cluster in the cache
calculates the compactness for all clusters in a collection
returns the distance cache for this object
returns this clusters compactness
sets a new point and forces a repaint
returns the new items
returns the distance between the center of this cluster and the given
returns the distance to a certain clusterable
returns the representative item of this cluster
sets the representative item of this cluster
returns the distance to a position
produces a new position cluster instance
returns the distance to a set of coordinates
re calculates the center
returns a numbered coordinate
returns a new item cluster instance
computes the compactness of this cluster
returns number of dimensions this position has
adds another item to the history of this cluster
paints the history of this clusters center if this makes sense
returns a point which can be connected to other paintables
adds another item to the history of this cluster
creates a jmenu bar for this application
creates a new clusterer with current parameters
ends and disposes of the current clusterer
returns the currently selected algorithm
returns the current clusterer
sets if points can be changed or not
entry point to the ui
sets the last encountered exception
sets the maximum session count supported
sets the current session count
handles rpc exception
sets the previous session count
set the date of last update
updates page refresh timestamp
decrypts the password
search in plugin dir
get class from a jar file
add url of a jar file to classpath
bind local socket address
send data to target
return device name
encodes a string into its base64 form using the specified charset
encodes a string into its base64 form using the default charset
decodes a base64 string into its original form
return device id
return device version
writes a message into the database using a given sql statement
configures this class by storing and parsing the given sql statement
sets a connection
adds an archive entry with the same name two times
return the internal error message stored in instance variable msg
create an empty archive
create an archive with a single file test1
it implements a gradient descent method
stops all loaded plug ins
adds registers the given listener to this controller if not already done
removes unregisters the given listener from this controller
dispatches the given event to all registered listeners
enables or disables all components of the managed gui component
clears the managed gui component
inits all gui components to manage
inits all gui components to manage
updates the list of all choosable known persons
fills the given time data into this component
returns the time data from this component
clears resets the progress bar
sets the current percent value for the progress bar
sets the current percent value for the progress bar
sets the range of minimum and maximum values for thos progress bar
this method initializes this
this method initializes sp description
this method initializes this
this method initializes tf name
this method initializes tf distance
this method initializes dp date
this method initializes sep general
this method initializes pnl start time
this method initializes pnl end time
this method initializes pnl total time
this method initializes btt physical attr
loads all global application settings
returns the panel that displays custom components
loads all projects from initialization file and adds them to gui
saves all projects to project files
initializes special cell renderers for this table
initializes special cell editors for this table
this method initializes this
this method initializes main panel
this method initializes jt menu bar
this method initializes project menu
this method initializes mi project exit
this method initializes mi project new
this method initializes mi project open
this method initializes help menu
this method initializes mi help about
this method initializes mi help help
sets the additional data path as soon as the project has been unpacked
refreshes the table row data that is currently selected for editing
returns the project settings of the currently selected project
adds the given person to the list of all known persons
returns whether zooming in out by mouse wheel is enabled or not
sets whether zooming in out by mouse wheel is enabled or not
transforms the given list of waypoints into a paintable format
use this function to confirm that your property file exists
paint a single marker
loads a property specific file
sets the list of waypoints to paint
saves properties to specified file
returns whether to paint connection lines between waypoints or not
removes the given key from property file
sets whether to paint connection lines between waypoints or not
returns an int value from the specified key
returns the color of the painted track
returns an boolean value from the specified key
sets the color of the painted track
returns the painting style of the track
sets the painting style of the track
returns a string from the specified key
stores a string into property file
stores an int into property file
stores an int into property file
stores an int into property file
adds a new line of text to logging component
calculates the age of the given person
refreshes the combo box that provides all available persons of loaded projects
clears all text fields in the main panel
set the configuration for the manager app
set the kernel of the current application
start the kernel
get the current configuration of the app manager
start up the kernel and keep it running
set the connection manager
this method is called to keep the server alive
get the connection manager
this effectively kills the server
p overrides default class and ensures the table doesnt print if its
p overrides default class and ensures the table doesnt print if its
p overrides default class and ensures the table doesnt print if its
p overrides default class and ensures the table doesnt print if its
clean up the variables so subsequent calls dont get corrupted data
this gets the value of the mbean name request parameter
this gets the value of the mbean name request parameter
returns the domain string of the object name instance
this method gets the name of the mbean from the request then attempts
builds a logical stack which tests if all of the necessary parameters
p this method determines whether at least one object exists in the
getter for code plugin descriptor code
compare one code action result code to another
run the swing console
create everything for this panel
create all the components that exist on this panel and puts them
we call this method to show that we had some sort of problem
determine the angle at which the line should be drawn
get the end point of the center line for the guage
tells whether or not the server is currently started
stop the geronimo server that weve got going
a button was clicked or something
prints a boolean to the text area
prints a char to the text area
print a character array to the end of the text area
print a double to the end of the text area
print a float to the end of the text area
print an integer to the end of the text area
print a long to the end of the text area
print an object to the end of the text area
print a string to the end of the text area
print an empty line to the end of the text area
print a boolean and then a newline
print a character to the end of the text area then a newline
print a double to the end of the text area then a newline
write the 8 lowest order bits of the argument to the output stream
check that you can send 160 chars if you wants
nondeterministic had to increase sleep time to make it more reliable
test method for
test the new cursor based follower friend methods
test method for
test method for
test method for
test method for
test method for
test method for
test method for
test method for
test method for
test method for
test method for
test method for
test method for
false by default
set this to access sites other than twitter that support the
anropa v r webservice
the main login method cover for data handler
starts an activity
starts an activity
true if this has been marked as a favourite by the authenticating user
first use the constructor string user id string password
instantiates a new view for a group
open the notes database
closes the databse
return a cursor over the list of all profiles in the database
write own profile to database
update the profiles to db given profile names
returns a cursor that holds information about the friends in the friendlist
updates the friendlist from external servers
takes a profile and saves it to the database preferable the ownprofile edited
logs the user out of the system
checks if the user is logged in
log the user out of the system
save the users actualfootprint
sends an status update to a external system
save a single footprint to database
saves specific users footprints to database
reads profile given as username
writes the profile to database used to update or create own profile only
gets the friendlist from the database
gets the updated list from the server only the updates that have been
logs in external data client
used for logging in a collection of external datas
gets the latest status from external data sources overwrite the status
saves external data object to local database
updates the status at an external system
string version of the timezone
number of seconds between a users registered time zone and greenwich
true if this user keeps their updates private
some methods the timeline ones for example allow a count of
destroys the status specified by the required id parameter
destroys the given status
start following a user
returns a single status specified by the id parameter below
is the authenticating user i followed by i user b
does the authenticating user i follow i user b
are the login details used for authentication valid
switches off notifications for updates from the specified user i who
enables notifications for updates from the specified user i who must
retweet a tweet without any edits
date based filter on statuses and messages
todo document this please dbw
narrows the returned results to just those statuses created after the
set the source application
sets the authenticating users status
returns information of a given user specified by screen name
returns information of a given user specified by user id
destroy discontinues friendship with the user specified in the id
updates the authenticating users status
updates the authenticating users status and marks it as a reply to
does a user with the specified name or id exist
set a language filter for search results
applys the tests session id subsitution expression to some text
reads the variables from the resource
reads the variables from the resource
find the tree path to a specified child of a resource
record the requests made by the browser
record the requests made by the browser
stop recording the requests made by the browser
define reconciler for my editor
this method is called upon plug in activation
this method is called when the plug in is stopped
returns the plugins resource bundle
returns the maude process instance
this method is called when the plug in is stopped
returns the plugins resource bundle
recomputes the pages error state by calling code is valid code for
initializes all field editors
run method actions to do while the thread is active
the field editor preference page implementation of a code preference page code
the field editor preference page implementation of this
the field editor preference page implementation of an code idialog page code
sends the string txt to maude process std in
changes the state of the database
returns the maude database
this method is called upon plug in activation
this method is called when the plug in is stopped
sends to the maude process a text
sends to the maude process a text in background
returns the maude process
returns if maude is running
this method initializes group breakpoints
this method initializes composite select
this method initializes group reduce
resets the view
disable the view
this method initializes composite1
this is a callback that will allow us
this method initializes composite main
this method initializes combo term
resets the view
returns if the debugger is enable
this method initializes group select
this method initializes combo reduce
this method initializes composite select
this method initializes group active module
this method initializes combo active module
this method initializes group show
it selects an item to the combo box of active modules
adds a module to the combo box of active modules and selects it
this is a callback that will allow us
removes all modules of the combo box of active modules
this is a callback that will allow us
passing the focus request to the viewers control
shows the window of the graph that shows the relations between especifications
resets the view
forces the thread to stop executing
resets the view
returns true if the view is disposed
adds a module to the combo box of active modules and selects it
sets the path of core maude database
forces the thread to stop executing
sets the path of full maude database
sends the string txt to maude process std in
recomputes the pages error state by calling code is valid code for
initializes all field editors
the field editor preference page implementation of a code preference page code
returns this field editors current value
returns the change button for this field editor
informs this field editors listener if it has one about a change
this function determines whether or not the queue is full
returns array of bytes from file filename
returns tt true tt if this list contains no elements
this procedure adds an object to the end of the queue
checks to see if the representation invariant is being violated and if
approximates the value of this rational with a double value
standard hash code function
standard equality operation
used to catch items that change state in the menu
used the tutorial from sun to set up the basic structure and then
get method for value
this method is the beef of this sample
this method is the beef of this sample
field advisor interface
gets the name of this method from constant pool
gets the descriptor of this method from constant pool
gets the name of this interface
adds a new interface that class represented by this class file
gets the magic number
get the name of this attribute
gets the minor version of the class file
gets the major version of the class file
gets a datainput stream that reads internal byte
gets the name of the class represented by this class file
get the start pc
only relevant to frame type chop frame
set the start pc
gets the name of the superclass of the class represented by this
this method has meaning only to verification type item object
gets a named attribute from this program element
writes attributes of the program element into given stream
adds a new chain
check if a given string matches this rule
adds a rule to this descriptor
get a precedence of this rule
adds an exclusion rule to this descriptor
checks whether this rule is more significant than the given rule
the precedence determines the order of rules
two rules are equal if the strings which represent them equals
this method is called by the jiapi runtime
this method is called by the jiapi runtime
this method is called by the jiapi runtime
this method is called by the jiapi runtime
matches given string to resolutions set to event producer
gets the name of the field that triggered this event
replaces old with replace in a given string buffer
counts a precedence value for a rule
get the name of the class producing this event
calculates a sum function
this method is called by the jiapi runtime
matches a given string into resolution string this event producer has
get the name of the method producing this event
adds a new class info
checks whether a given source object is in protected mode
is this method a constructor
this method protects application from entering into recursive event loop
checks whether a given jiapi event is in protected mode
is this method a static initializer
this method releases code event producer code so that it is able to
this method protects application from entering into recursive event loop
this method releases code event producer code so that it is able to
adds a new field ref info
get the default instruction of this switch instruction
adds a new method ref info
gets the target instruction of this target
get the name of this variable
get the type of this variable
get the type of this field
get the type of this field
get the modifiers of this field
gets the jiapi class that declares this jiapi field
get the type name of the target field
gets the index to the constant pool that is referenced by this
get the name of the target method
get the name of the target method
gets the return type
gets name of the referenced type
get the stack consumption of this invocation
get a name of the referenced classs type
count stack usage of this invocation
get a field which already exists in a class
get a method which already exists in a class
loads a jiapi cass from classpath
adds a new string info
get the instruction list that corresponds to code
set the bytes of this instruction
adds an instrumentation descriptor to this context
gets the opcode of this instruction
manipulates the class by configured instrumentors
dumps bytecodes of this jiapi class to output stream given
creates a cast
adds a new integer info
create an empty list
gets modifiers of this method
get the stack usage this instruction uses
initialize transformer with given properties
transform given jiapi class
retransform given jiapi class
adds an instruction to this instruction list
get the stack consumption of this instruction
gets the instrumentation associated with this class file transformer
gets the return type of a method
gets the agent arguments that has been passed during premain
sets the offset of this instruction
get name of a class
adds a new float info
adds all the instructions in given list to this list
gets the offset of this instruction
sets a named attribute to this instruction
create hot spot
get the package where this class is defined
insert an instruction to this instruction list
get the instruction factory
adds a new long info
get the instruction list that represents this hotspot
this method should be called from advice method when the actual
get the instruction list that represents arguments of this hotspot
this method should be called only from advice method
get the instruction that was used to trigger creation of this hot spot
insert an instruction list to this instruction list
instrument given method
form a code source for loaded class
set the context for the class loader
gets an instruction at given index
gets the context that specifies which classes are to be instrumented
adds a new double info
runs a main method of given class name
replace an instruction at given index
adds a local variable for this method
adds a new name and type info
adds a new utf8 info
get a declared field of a class
calculates stack usage of this instruction list
gets an entry from constant pool
gets the super class of this jiapi class
scans this instruction list for a opcode
scans this instruction list for a opcode
gets a string at given constant pool index
get modifiers of this jiapi class
scans this instruction list for a opcode
gets a string at given constant pool index
adds a named field to this jiapi class
implementation of instrumentor
scans this instruction list for opcodes
index must point to a class info structure in constant pool
called by jiapi runtime
checks whether or not this jiapi method is synthetic
called by jiapi runtime
adds an interface for a class
clears this instruction list
called by jiapi runtime
get the instruction factory that is associated with this instruction list
get the index in the constant pool
adds a new method to this class
gets the declaring jiapi method of this instruction list
creates a view
creates a view
gets a name that is represented by this class info
get the constant pool related to this jiapi class
gets the name of the field referenced by this field ref info
gets the name of the method referenced by this method ref info
retrieves a node specified by name
strong not implemented strong
strong not implemented strong
the only event raised by this model is tree structure changed with the
returns the child of parent at index index in the parents child array
returns the number of children of parent
returns the child of parent at index index in the parents child array
returns the index of child in parent
returns the number of children of parent
returns the index of child in parent
returns true if node is a leaf
returns true if node is a leaf
normalizes the given string
returns the root
a code named node map code containing the attributes of this node if
strong not implemented strong
retrieves a node specified by name
this simple operation is implemented as a protected method to allow
the code domimplementation code object that handles this document
returns the name of the sql stored procedure
for unparsed entities the name of the notation for the entity
constructs a code dbdomsql exception code with no specified
constructs a code dbdomsql exception code with a specified
strong not implemented strong
b not implemented b creates an empty code document fragment code object
constructs a code dbdomexception code with no specified
constructs a code dbdomexception code with a specified
prints the stack backtrace of this exception and the one that caused
prints the stack backtrace of this exception and the one that caused
overridden to get a name for the document
overridden to get a name for the document
this method verifies that a connection that was handed to the
strong non dom strong decides if an code sqlexception code was
strong not implemented strong
strong non dom strong returns a reference to the database connection
strong non dom strong returns a map of all known statements
this function will be called when a lt doctype
supports dom level 2 internal subset additions
constructs a client representation of a dbdom node
this function will be called at the end of the dtd
lt entity name entity value gt internal
strong non dom strong returns a map of all documents stored in a
strong non dom strong encapsulates
strong non dom strong encapsulates
strong non dom strong encapsulates
strong non dom strong encapsulates
strong not tested strong
a code named node map code containing the attributes of this node if
b not implemented b returns a duplicate of this node i
strong non dom strong returns the database id of this node
strong non dom strong returns the
tests two nodes for equivalence
returns a hash code value for the object
registers the terrain layer to the splat manager here
helper method that maps the mouse button to the equivalent
has no effect for this type of code metric code
generate xml containing the data
generate csv containing the data
returns the singleton instance of code metric repository code
places an instance of code metric code into the repository
gets the current interval the one to which current
gets the number of events that occurred during the interval in which the
wrapper around work to setup an experiment for introscope
gets the total number of events added to this code event counter code
sets this code interval code to represent the time period
gets the overall event frequency for this code event counter code
sets this code session counter interval code to represent
copies the state of the code interval code argument into this
gets the event frequency for this code event counter code
gets the maximum concurrency level observed during this interval
registers adds the occurence of n new events within this
sets this code interval code to represent the time period
gets the interval in which the highest concurrency was noted
generate xml containing the data
gets the time when this interval started as a date value
gets the number of milliseconds that elapsed during the
gets the number of events counted so far during this interval
reset this code event counter code to its zero condition
gets the total number of events that is the number that were
gets a code date code describing when the session
registers adds the occurence of n new events within this
gets the mean session time in milliseconds
determines whether or not the time span implied by this interval
gets the age of this metric in milliseconds
returns the number of intervals that have elapsed
gets the age of this metric in seconds
gets number of intervals that have occurred during the
adds a single event
generates a multi line text summary of the current values
generates xml document containing current values
generates a comma separated values presentation of the current
counts the beginning of a session
functionally identical to remove
removes a single event
reset this code session counter code to its zero condition
retrieves the entity object that is associated with the specified value
retrieves the entity object that is associated with the specified value
retrieves the entity object that is associated with the specified value
retrieves the entity object that is associated with the specified value
sets the game screen
inits the title screen
inits input manager and game actions
sets the title screen
inits the screens buttons
inits this screen
returns a background image for the corresponding level
runs through game loop until code stop code is called
inits the buttons on the screen
updates the state of the game animation based on the amount
draws to the screen
updates all blocks
updates this sprites animation and its position based on the
gets this sprites width based on the size of the current image
gets this sprites height based on the size of the current image
returns the frame with the specified index
updates all blocks
draws the tetraminoe
rotates the tetraminoe
sets a new x for the tetraminoe
sets a new y for the tetraminoe
sets the new y velocity for all blocks
sets the new x velocity for all blocks
if the tetraminoe is going down and accelerating
makes the tetraminoe goes down and accelerating
sets whether relative mouse mode is on or not
makes the block goes down and accelarating
checks the input not related to the game play
sets the game paused
exits the current game
resets all game actions so they appear like they havent been pressed
returns the game action matching the specified key event
helper method to decide and invoked mouse game actions
clears and then fills the given omgraphic list
reloads webtracker location data
returns visibility of day night layer
returns visibility of day night layer
return the preferred size of the header
handles scrolling through the list
brings the user to the login dialog
brings the user to the registration dialog
sets the pokemon array to be used
adds a friend to the friend list
removes a friend from the friend list
add a message to the local chat window
opens the friend list
opens the pokedex
opens the local chat
opens the players bag
opens the help window
opens pokemon info window
starts the world clock
returns if the user is chatting used for wsad controls
called once the session is closed
returns the preferred screen width
returns the prefered screen heigth
returns the map revision this client has
set the map revision
loads the users settings
saves the users settings
creates a new private chat
set if this npc ends a quest
set if this npc starts a quest
sets the pokemon level requirement of this npc
generate new weather
return the effect the current weather has on a battle
set the quest requirement of this npc
returns if a legendary has appeared in the pokemon world
generates the appearance of a legendary
ends the appearance of a legendary
generates pokemon objects of every legendary
to be called i
set the pokemon requirement of this npc
set the item requirement of this npc
sets the badge requirement
sets the quest if of this npc
set the potential pokemon of this npc
returns the number representation of speech
sets the speech
sets the quest speech
returns the quest speech of this npc
sets the index of the npc on the map
returns the index of the npc on the map
set the badge this npc rewards if any
return the badge this npc rewards
set how much money this npc rewards when battled
return how much money this npc rewards when battled
set the speech this npc says at the end of battles
return the speech this npc says at the end of battles
if this npc was battled this is called when the battle is finished
returns if the npc is a trainer
get the level of the highest possible level pokemon in the npcs party
sets the minimal level of pokemon in this npcs potential party
set if the user is connected
return a tree set of moves that the pokemon can learn
adds a spectator to the battle
removes a spectator from the battle
gets the map matrix
sets the map matrix
returns a random npc
returns the requested map
handles npc movements
returns required badge amount
return a tree set of moves that the pokemon can learn
returns required item
sets the required item
set the x co ordinate of the map this tile warps to
return whether this species can learn a particular move
set the y co ordinate of the map this tile warps to
set the x co ordinate of where this tile warps to
set the y co ordinate of where this tile warps to
pick up an item
returns the x of the map this tile warps to
returns the y of the map this tile warps to
returns the x co ordinate of where this tile warps to
returns the y co ordinate of where this tile warps to
set the species name of pokemon
sets the minimal level of this wild pokemon
returns the minimal level of this wild pokemon
sets the maximum level of this wild pokemon
returns the maximum level of this wild pokemon
sets the sprite of this npc
sets the encounter rate of this wild pokemon
returns true if there is an item hidden at that location
returns the encounter rate of this wild pokemon
returns the sprite of this npc
returns the probability of a wild pokemon encounter on this map
sets the probability of wild pokemon on this map
returns the pvp type of this map
sets this maps pvp type
add a wild pokemon that appears during the day
sets the quest id of this npc
remove a wild pokemon that appears during the day
add a wild pokemon that appears during the night
returns the quest id of this npc if any
remove a wild pokemon that appears during the night
sets the npc type of this npc
add a wild pokemon that appears during the day
remove a wild pokemon that appears during the day
returns the npc type of this npcs
sets a pokemon of this npcs party
remove warp tile data from this map data
add npc data to this this map data
remove npc data from this map data
set the minimal level of this npcs potential party
returns the minimal level of this npcs party
returns a string of possible wild pokemons
attempt to save a players data
attempts to save a player char object
set if the npc ends a quest
returns a level for wild pokemon
return the badge requirement for this quest npc
return the item requirement for this quest npc
returns a string of potential species that appear while surfing
return the pokemon requirement for this quest npc
warps a player
return the pokemon level requirement for this quest npc
returns a level of pokemon while surfing
set the money this npc gives after battle
add a player to the map
return the number of party members in a given party who are alive
invoked when a client joins the server
remove a player from the map
logs every player out of the game
add a warp tile
get the warp tile at co ordinates x y
add an npc to the map
returns true if a wild pokemon appeared
cause this pokemons stats to be calculated
returns true if a wild pokemon appeared surfing
sends all map information to a player
sends the string to every player
returns the npc at x y
returns if the char collided with a warp tile
returns the x offset of the map
save the move sets to a file
load the move sets in from a url
returns the y offset of the map
returns a random direction
shuts down the game server
sets that the current quest is completed
sets the current quest the player is on
returns the quest the player is currently on
returns if the user has completed a specific quest
adds a quest to the list of completed quests
returns the player player versus player rank
set if the user have won or lost in player versus player match
returns if the player has received all the map information
switch out this pokemon
set if the user has received map information
returns the players class
sets the players class
returns their hashed password
return the effect applied to this pokemon of a particular lock or
sends all friend information to the client
adds a player to this players friend list
removes a player from this players friend list
initialises pokemon boxes
swaps two pokemon between the players party and a selected box
add a badge
returns if the user has a specific badge
returns how many badges the user has
returns if the user is talking to an npc
remove a status effect from this pokemon
sets the players password
returns the session the user is connected to the server on
sets the session
attach this pokemon to a battle field
heals the players party
called when a battle is lost
sets the location the player last healed
puts a healthy pokemon at the front of the players party
adds a caught pokemon to the players party box
adds a pokemon to the players party box
returns how many boxes the player has
returns if the player can surf or not
set the players next request movement
change the health of this pokemon doing damage to a substitute if one
execute the next movement
inform listeners that a status effect was applied this pokemon
switches two pokemon in the players party
returns how much money the player has
sets how much money the player has
returns if the player is a mod
sets if the player is a mod
sends bag information to the client
arranges the players party so empty slots at put at the end
learn a new move
shows for four seconds the result of the game
draw the movements of the players
marks the opposite player movement
creates a new blank board
marks a square in the board if possible
returns if the game is finished
returns the actual player in turn
return if one player has three marks in a row of the board
retrives the winner of the game
change jogadors turn
retrieves the mark contained in a specific square
starts a game accepted by the opponent
shows an alert for 2 seconds informing the opponent rejected the new game
receives the opponnent moviment
shows an alert informing that the opponent has left the game
creates an object to exchange messages after the connection is
shows the connection error alert
creates the background and the image with the result of the game
get the mimetype file
get the document styles
add a file to the document recognised files are passed into special
list all the pictures from the template and unique to this document
create an empty document from this template
set the stored content from the xml document
this method initializes j frame
this method initializes about dialog
m thode permettant de d marrer la lecture
build a formatted error message for a given exception
log a message
log a parameter
moves the cursor to the first row in this result set object
fills the prepared statement with a date value
fills the prepared statement with a time value
fills the prepared statement with a binary value stream
gets the value of the operation request property
sets the value of the operation request property
gets a binary stream from a result set
sets the value of the operation request property
gets a blob from a resultset
sets the value of the cart property
sets the value of the cart property
sets the value of the new release property
gets the value of the corrected query property
sets the value of the new release property
gets a blob from a resultset
sets the value of the corrected query property
fills the prepared statement with a int value
gets the value of the shipping type property
sets the value of the shipping type property
fills the prepared statement with a boolean value
gets the value of the is rate tax inclusive property
gets the value of the qid property
sets the value of the is rate tax inclusive property
gets the value of the shipping price property
sets the value of the qid property
fills the prepared statement with a byte array value
sets the value of the shipping price property
sets the value of the shipping type property
sets the value of the condition property
sets the value of the is rate tax inclusive property
fills the prepared statement with a string value
gets the value of the engine query property
sets the value of the shipping price property
sets the value of the engine query property
fills the prepared statement with a timestamp value
gets the value of the delivery method property
gets the value of the asin property
sets the value of the asin property
gets the value of the total results property
sets the value of the delivery method property
fills the prepared statement with a double value
sets the value of the total results property
sets the value of the asin property
sets the value of the title property
gets the value of the collection summary property
gets the value of the total pages property
sets the value of the collection summary property
sets the value of the search index property
sets the value of the search index property
sets the value of the total pages property
gets the value of the ispu postal code property
gets the value of the collection parent property
sets the value of the collection parent property
sets the value of the ispu postal code property
gets the value of the customer page property
sets the value of the customer page property
gets the value of the search results map property
sets the value of the collection summary property
sets the value of the search results map property
sets the value of the collection parent property
gets the value of the merchant id property
sets the value of the collection item property
sets the value of the collection item property
sets the value of the merchant id property
gets the value of the search bin sets property
sets the value of the customer page property
sets the value of the email property
sets the value of the search bin sets property
sets the value of the name property
sets the value of the response group property
gets the value of the review sort property
sets the value of the response group property
sets the value of the corrected query property
gets the value of the alternate versions property
sets the value of the review sort property
sets the value of the qid property
sets the value of the request property
sets the value of the engine query property
sets the value of the request property
gets the value of the similarity type property
sets the value of the total results property
sets the value of the transaction item property
sets the value of the alternate versions property
sets the value of the transaction item property
sets the value of the similarity type property
sets the value of the total pages property
sets the value of the search results map property
sets the value of the condition property
sets the value of the item property
sets the value of the search bin sets property
sets the value of the delivery method property
sets the value of the item property
sets the value of the item id property
gets the value of the required parameters property
sets the value of the required parameters property
sets the value of the ispupostal code property
gets the value of the available parameters property
sets the value of the merchant id property
sets the value of the available parameters property
gets the value of the average rating property
sets the value of the average rating property
sets the value of the response group property
gets the value of the default response groups property
gets the value of the total reviews property
sets the value of the default response groups property
sets the value of the review sort property
sets the value of the total reviews property
gets the value of the total review pages property
sets the value of the similarity type property
gets the value of the available response groups property
sets the value of the total review pages property
sets the value of the available response groups property
sets the value of the item id property
sets the value of the name property
sets the value of the average rating property
sets the value of the description property
sets the value of the total reviews property
sets the value of the required parameters property
sets the value of the total review pages property
sets the value of the available parameters property
sets the value of the review property
gets the value of the parent asin property
sets the value of the review property
sets the value of the default response groups property
gets the value of the customer id property
sets the value of the customer id property
sets the value of the available response groups property
sets the value of the parent asin property
gets the value of the review page property
sets the value of the review page property
sets the value of the promotion property
sets the value of the transaction item id property
gets the value of the tag page property
sets the value of the promotion property
sets the value of the transaction item id property
sets the value of the tag page property
gets the value of the tags per page property
gets the value of the detail page url property
sets the value of the tags per page property
sets the value of the operation request property
sets the value of the items property
sets the value of the items property
gets the value of the tag sort property
sets the value of the request property
sets the value of the tag sort property
sets the value of the request property
sets the value of the detail page url property
sets the value of the customer id property
sets the value of the search bin set property
sets the value of the search bin set property
sets the value of the response group property
sets the value of the operation request property
sets the value of the review page property
gets the value of the summary property
sets the value of the cart property
sets the value of the summary property
sets the value of the tag page property
gets the value of the details property
sets the value of the details property
sets the value of the tags per page property
sets the value of the summary property
sets the value of the tag sort property
sets the value of the details property
gets the value of the sales rank property
sets the value of the request property
sets the value of the request property
sets the value of the tag name property
sets the value of the customer id property
sets the value of the tag page property
sets the value of the operation request property
sets the value of the tags property
sets the value of the tags property
sets the value of the count property
sets the value of the tag sort property
sets the value of the sales rank property
sets the value of the response group property
sets the value of the tag name property
gets the value of the list page property
sets the value of the list page property
sets the value of the operation request property
sets the value of the lists property
sets the value of the request property
sets the value of the lists property
sets the value of the list type property
sets the value of the request property
gets the value of the small image property
sets the value of the request property
sets the value of the element property
sets the value of the element property
sets the value of the request property
gets the value of the availability type property
sets the value of the availability type property
gets the value of the offer listing id property
gets the value of the is preorder property
sets the value of the is preorder property
sets the value of the offer listing id property
gets the value of the minimum hours property
sets the value of the small image property
sets the value of the minimum hours property
gets the value of the maximum hours property
sets the value of the maximum hours property
gets the value of the exchange id property
sets the value of the availability type property
sets the value of the is preorder property
sets the value of the city property
sets the value of the minimum hours property
sets the value of the exchange id property
sets the value of the maximum hours property
sets the value of the email property
sets the value of the first name property
sets the value of the last name property
gets the value of the price property
sets the value of the list page property
gets the value of the lowest list price property
sets the value of the lowest list price property
sets the value of the list type property
sets the value of the price property
gets the value of the highest list price property
sets the value of the name property
sets the value of the highest list price property
gets the value of the medium image property
gets the value of the lowest sale price property
sets the value of the response group property
sets the value of the lowest sale price property
gets the value of the sale price property
sets the value of the state property
gets the value of the highest sale price property
sets the value of the highest sale price property
sets the value of the sale price property
sets the value of the lowest list price property
sets the value of the highest list price property
sets the value of the lowest sale price property
sets the value of the highest sale price property
sets the value of the medium image property
gets the value of the amount saved property
sets the value of the key property
sets the value of the amount saved property
sets the value of the request property
sets the value of the request property
sets the value of the key property
sets the value of the value property
gets the value of the percentage saved property
sets the value of the package property
sets the value of the package property
sets the value of the percentage saved property
gets the value of the audio format property
gets the value of the binding property
sets the value of the audio format property
sets the value of the binding property
sets the value of the availability property
gets the value of the large image property
sets the value of the asin property
sets the value of the name property
sets the value of the title property
sets the value of the type property
sets the value of the binding property
sets the value of the audio format property
gets the value of the availability attributes property
gets the value of the total property
sets the value of the availability attributes property
sets the value of the total property
sets the value of the entity id property
gets the value of the subtotal property
sets the value of the large image property
sets the value of the subtotal property
sets the value of the user id property
gets the value of the quantity property
gets the value of the tax property
sets the value of the tax property
sets the value of the name property
sets the value of the quantity property
sets the value of the entity id property
gets the value of the shipping charge property
sets the value of the user id property
sets the value of the shipping charge property
sets the value of the time property
gets the value of the promotion property
gets the value of the ispu store address property
sets the value of the promotion property
gets the value of the list item id property
sets the value of the list item id property
sets the value of the ispu store address property
sets the value of the total property
gets the value of the date added property
sets the value of the subtotal property
sets the value of the date added property
sets the value of the tax property
sets the value of the shipping charge property
sets the value of the promotion property
gets the value of the ispu store hours property
gets the value of the quantity desired property
sets the value of the quantity desired property
sets the value of the ispu store hours property
gets the value of the quantity received property
sets the value of the quantity received property
gets the value of the is eligible for super saver shipping property
sets the value of the item property
sets the value of the list item id property
gets the value of the tag type property
sets the value of the date added property
sets the value of the is eligible for super saver shipping property
sets the value of the comment property
sets the value of the tag type property
sets the value of the quantity desired property
sets the value of the quantity received property
sets the value of the item property
gets the value of the distinct items property
gets the value of the item attributes property
gets the value of the sales restriction property
sets the value of the distinct items property
gets the value of the tracking number property
sets the value of the tracking number property
gets the value of the carrier name property
sets the value of the carrier name property
sets the value of the sales restriction property
sets the value of the tracking number property
gets the value of the distinct users property
sets the value of the carrier name property
sets the value of the distinct users property
sets the value of the item attributes property
sets the value of the response group property
sets the value of the transaction id property
gets the value of the total usages property
sets the value of the transaction id property
sets the value of the total usages property
sets the value of the item property
sets the value of the item property
gets the value of the first tagging property
sets the value of the offer listing id property
sets the value of the first tagging property
sets the value of the request property
sets the value of the request property
gets the value of the merchant item attributes property
sets the value of the exchange id property
gets the value of the last tagging property
sets the value of the operation request property
sets the value of the items property
sets the value of the price property
sets the value of the last tagging property
sets the value of the merchant item attributes property
sets the value of the sale price property
gets the value of the is in benefit set property
sets the value of the is in benefit set property
gets the value of the is in eligibility requirement set property
sets the value of the is in eligibility requirement set property
sets the value of the amount saved property
sets the value of the asin property
sets the value of the is in benefit set property
sets the value of the is in eligibility requirement set property
sets the value of the percentage saved property
sets the value of the availability property
sets the value of the value property
sets the value of the units property
gets the value of the collections property
sets the value of the availability attributes property
sets the value of the name property
sets the value of the similar product property
sets the value of the similar product property
sets the value of the tag type property
sets the value of the quantity property
sets the value of the collections property
sets the value of the distinct items property
gets the value of the valid operations property
sets the value of the valid operations property
gets the value of the elements property
sets the value of the elements property
sets the value of the distinct users property
sets the value of the ispustore address property
sets the value of the name property
sets the value of the creation date property
sets the value of the valid operations property
sets the value of the total usages property
sets the value of the elements property
sets the value of the ispustore hours property
gets the value of the points property
sets the value of the points property
sets the value of the first tagging property
gets the value of the typical redemption value property
sets the value of the typical redemption value property
gets the value of the subjects property
sets the value of the points property
sets the value of the typical redemption value property
sets the value of the last tagging property
sets the value of the is eligible for super saver shipping property
sets the value of the subjects property
sets the value of the tagged items property
sets the value of the total results property
sets the value of the total pages property
sets the value of the sales restriction property
sets the value of the transaction property
sets the value of the tagged listmania lists property
sets the value of the transaction property
sets the value of the address property
sets the value of the tagged guides property
sets the value of the shipping charge property
create an instance of
sets the value of the tagged items property
gets the value of the offer summary property
sets the value of the shipping charge property
create an instance of
sets the value of the tagged listmania lists property
sets the value of the offer summary property
sets the value of the tagged guides property
create an instance of
gets the value of the http headers property
create an instance of
sets the value of the http headers property
gets the value of the offers property
gets the value of the arguments property
create an instance of
sets the value of the operation request property
sets the value of the arguments property
sets the value of the sellers property
sets the value of the sellers property
gets the value of the request processing time property
sets the value of the request processing time property
create an instance of
sets the value of the offers property
sets the value of the httpheaders property
sets the value of the variation dimension property
sets the value of the request id property
sets the value of the variation dimension property
sets the value of the arguments property
create an instance of
sets the value of the request processing time property
gets the value of the total offers property
create an instance of
sets the value of the total offers property
gets the value of the total offer pages property
sets the value of the total offer pages property
gets the value of the variation summary property
sets the value of the total offers property
create an instance of
sets the value of the total results property
sets the value of the total offer pages property
sets the value of the offer property
sets the value of the total pages property
sets the value of the offer property
sets the value of the seller listing property
sets the value of the seller listing property
create an instance of
sets the value of the condition property
sets the value of the variation summary property
gets the value of the delivery method property
sets the value of the delivery method property
gets the value of the shipment items property
sets the value of the shipment items property
create an instance of
gets the value of the packages property
sets the value of the packages property
sets the value of the condition property
sets the value of the delivery method property
sets the value of the shipment items property
sets the value of the packages property
create an instance of
gets the value of the variations property
create an instance of
sets the value of the actor property
create an instance of
sets the value of the variations property
create an instance of
create an instance of
gets the value of the customer reviews property
create an instance of
sets the value of the artist property
create an instance of
sets the value of the customer reviews property
create an instance of
create an instance of
gets the value of the editorial reviews property
create an instance of
sets the value of the editorial reviews property
create an instance of
create an instance of
create an instance of
gets the value of the similar products property
create an instance of
sets the value of the similar products property
create an instance of
create an instance of
create an instance of
gets the value of the amazon maximum age property
gets the value of the accessories property
create an instance of
sets the value of the accessories property
create an instance of
create an instance of
gets the value of the tracks property
create an instance of
gets the value of the brand property
sets the value of the tracks property
create an instance of
sets the value of the brand property
create an instance of
sets the value of the amazon maximum age property
create an instance of
gets the value of the browse nodes property
sets the value of the browse nodes property
create an instance of
gets the value of the browse node property
create an instance of
sets the value of the browse node property
gets the value of the search inside property
create an instance of
sets the value of the search inside property
create an instance of
create an instance of
gets the value of the listmania lists property
create an instance of
create an instance of
sets the value of the listmania lists property
create an instance of
create an instance of
gets the value of the tags property
create an instance of
sets the value of the tags property
create an instance of
sets the value of the composer property
gets the value of the amazon minimum age property
create an instance of
create an instance of
sets the value of the alternate versions property
create an instance of
sets the value of the asin property
create an instance of
sets the value of the parent asin property
create an instance of
sets the value of the detail page url property
create an instance of
sets the value of the amazon minimum age property
create an instance of
sets the value of the sales rank property
gets the value of the conductor property
create an instance of
sets the value of the small image property
create an instance of
sets the value of the conductor property
sets the value of the medium image property
create an instance of
sets the value of the large image property
create an instance of
create an instance of
sets the value of the image sets property
create an instance of
sets the value of the item attributes property
create an instance of
sets the value of the merchant item attributes property
create an instance of
sets the value of the collections property
create an instance of
gets the value of the cuisine property
create an instance of
sets the value of the subjects property
create an instance of
sets the value of the cuisine property
sets the value of the offer summary property
create an instance of
gets the value of the analog video format property
sets the value of the offers property
create an instance of
sets the value of the variation summary property
create an instance of
sets the value of the variations property
create an instance of
create an instance of
sets the value of the customer reviews property
create an instance of
sets the value of the editorial reviews property
create an instance of
sets the value of the analog video format property
sets the value of the similar products property
create an instance of
sets the value of the accessories property
sets the value of the director property
create an instance of
sets the value of the tracks property
create an instance of
create an instance of
sets the value of the browse nodes property
gets the value of the future launch date property
create an instance of
sets the value of the search inside property
create an instance of
sets the value of the future launch date property
sets the value of the listmania lists property
create an instance of
sets the value of the tags property
create an instance of
create an instance of
gets the value of the aperture modes property
sets the value of the image sets property
create an instance of
create an instance of
create an instance of
gets the value of the seller id property
sets the value of the seller id property
create an instance of
gets the value of the seller name property
sets the value of the seller name property
gets the value of the item page property
create an instance of
gets the value of the seller legal name property
sets the value of the aperture modes property
sets the value of the seller legal name property
create an instance of
sets the value of the item page property
sets the value of the nickname property
create an instance of
gets the value of the glance page property
sets the value of the glance page property
create an instance of
create an instance of
gets the value of the more about property
create an instance of
sets the value of the more about property
gets the value of the location property
create an instance of
sets the value of the location property
create an instance of
gets the value of the average feedback rating property
sets the value of the average feedback rating property
create an instance of
gets the value of the total feedback property
sets the value of the total feedback property
create an instance of
gets the value of the total feedback pages property
create an instance of
sets the value of the manufacturer property
sets the value of the total feedback pages property
gets the value of the seller feedback summary property
create an instance of
sets the value of the seller feedback summary property
create an instance of
gets the value of the seller feedback property
sets the value of the seller feedback property
gets the value of the maximum price property
create an instance of
sets the value of the seller id property
create an instance of
sets the value of the seller name property
sets the value of the maximum price property
sets the value of the seller legal name property
create an instance of
sets the value of the nickname property
sets the value of the glance page property
sets the value of the about property
create an instance of
sets the value of the more about property
sets the value of the location property
create an instance of
sets the value of the average feedback rating property
sets the value of the total feedback property
create an instance of
sets the value of the total feedback pages property
sets the value of the seller feedback summary property
create an instance of
sets the value of the seller feedback property
create an instance of
gets the value of the total variations property
sets the value of the total variations property
gets the value of the total variation pages property
sets the value of the total variation pages property
gets the value of the variation dimensions property
sets the value of the variation dimensions property
create an instance of
sets the value of the total variations property
sets the value of the total variation pages property
gets the value of the minimum price property
sets the value of the variation dimensions property
sets the value of the item property
create an instance of
gets the value of the user defined location property
sets the value of the user defined location property
create an instance of
sets the value of the minimum price property
sets the value of the user defined location property
sets the value of the city property
sets the value of the state property
sets the value of the country property
create an instance of
sets the value of the request property
sets the value of the request property
gets the value of the browse node id property
sets the value of the browse node id property
create an instance of
gets the value of the is category root property
sets the value of the is category root property
gets the value of the music label property
create an instance of
gets the value of the properties property
sets the value of the properties property
sets the value of the aspect ratio property
gets the value of the children property
sets the value of the children property
create an instance of
gets the value of the ancestors property
sets the value of the music label property
sets the value of the ancestors property
gets the value of the top sellers property
sets the value of the top sellers property
create an instance of
gets the value of the new releases property
sets the value of the new releases property
sets the value of the browse node id property
create an instance of
sets the value of the name property
sets the value of the is category root property
sets the value of the properties property
sets the value of the children property
sets the value of the ancestors property
create an instance of
sets the value of the top sellers property
gets the value of the neighborhood property
sets the value of the new releases property
create an instance of
sets the value of the operation request property
sets the value of the information property
sets the value of the information property
sets the value of the neighborhood property
gets the value of the sub total property
create an instance of
sets the value of the sub total property
sets the value of the sub total property
sets the value of the saved for later item property
sets the value of the saved for later item property
gets the value of the cart id property
sets the value of the cart id property
create an instance of
gets the value of the hmac property
sets the value of the hmac property
gets the value of the merge cart property
sets the value of the merge cart property
sets the value of the cart id property
create an instance of
sets the value of the hmac property
sets the value of the merge cart property
sets the value of the response group property
gets the value of the orchestra property
sets the value of the request property
sets the value of the request property
create an instance of
gets the value of the quantity property
sets the value of the quantity property
sets the value of the orchestra property
create an instance of
gets the value of the associate tag property
sets the value of the associate tag property
gets the value of the assembly instructions property
create an instance of
sets the value of the asin property
sets the value of the offer listing id property
sets the value of the quantity property
sets the value of the associate tag property
sets the value of the list item id property
create an instance of
sets the value of the meta data property
sets the value of the meta data property
sets the value of the browse node property
sets the value of the browse node property
create an instance of
create an instance of
create an instance of
sets the value of the assembly instructions property
gets the value of the list id property
create an instance of
sets the value of the list id property
create an instance of
create an instance of
sets the value of the power property
gets the value of the product group property
create an instance of
sets the value of the product group property
create an instance of
gets the value of the product page property
sets the value of the product page property
create an instance of
create an instance of
create an instance of
sets the value of the sort property
sets the value of the condition property
create an instance of
sets the value of the delivery method property
sets the value of the ispupostal code property
create an instance of
sets the value of the list id property
sets the value of the list type property
gets the value of the assembly required property
sets the value of the merchant id property
sets the value of the product group property
create an instance of
sets the value of the product page property
sets the value of the response group property
sets the value of the review sort property
sets the value of the sort property
create an instance of
create an instance of
sets the value of the name property
sets the value of the value property
create an instance of
sets the value of the assembly required property
sets the value of the browse node id property
sets the value of the response group property
sets the value of the browse node id property
create an instance of
sets the value of the benefit property
sets the value of the benefit property
create an instance of
gets the value of the search index property
sets the value of the operation request property
sets the value of the cart property
create an instance of
sets the value of the search index property
create an instance of
sets the value of the asin property
sets the value of the title property
create an instance of
sets the value of the operation request property
sets the value of the transactions property
sets the value of the transactions property
create an instance of
gets the value of the transaction item id property
sets the value of the transaction item id property
create an instance of
sets the value of the quantity property
gets the value of the unit price property
sets the value of the unit price property
create an instance of
gets the value of the total price property
sets the value of the total price property
gets the value of the child transaction items property
sets the value of the child transaction items property
create an instance of
sets the value of the transaction item id property
sets the value of the quantity property
gets the value of the audience rating property
sets the value of the unit price property
sets the value of the total price property
sets the value of the asin property
sets the value of the child transaction items property
create an instance of
create an instance of
sets the value of the asin property
sets the value of the title property
sets the value of the header property
sets the value of the header property
create an instance of
gets the value of the swatch image property
sets the value of the swatch image property
create an instance of
gets the value of the thumbnail image property
create an instance of
sets the value of the thumbnail image property
sets the value of the audience rating property
gets the value of the tiny image property
sets the value of the tiny image property
create an instance of
create an instance of
create an instance of
sets the value of the swatch image property
sets the value of the small image property
sets the value of the thumbnail image property
create an instance of
sets the value of the tiny image property
sets the value of the medium image property
sets the value of the large image property
sets the value of the category property
create an instance of
sets the value of the response group property
create an instance of
create an instance of
sets the value of the asin property
sets the value of the title property
gets the value of the total excerpts property
sets the value of the total excerpts property
create an instance of
gets the value of the excerpt property
sets the value of the excerpt property
sets the value of the total excerpts property
sets the value of the excerpt property
create an instance of
sets the value of the response group property
gets the value of the number property
sets the value of the number property
create an instance of
sets the value of the track property
sets the value of the number property
sets the value of the track property
create an instance of
sets the value of the sub total property
sets the value of the cart item property
sets the value of the cart item property
create an instance of
gets the value of the height property
sets the value of the height property
gets the value of the length property
sets the value of the length property
create an instance of
gets the value of the weight property
sets the value of the weight property
gets the value of the text stream property
gets the value of the width property
sets the value of the width property
sets the value of the height property
create an instance of
sets the value of the length property
sets the value of the weight property
sets the value of the width property
sets the value of the text stream property
create an instance of
sets the value of the item property
sets the value of the item property
create an instance of
create an instance of
sets the value of the id property
sets the value of the seller id property
create an instance of
sets the value of the id type property
sets the value of the response group property
create an instance of
sets the value of the eligibility requirement property
sets the value of the eligibility requirement property
create an instance of
sets the value of the name property
sets the value of the value property
create an instance of
sets the value of the editorial review property
sets the value of the editorial review property
gets the value of the release date property
create an instance of
create an instance of
sets the value of the customer id property
sets the value of the release date property
sets the value of the name property
sets the value of the nickname property
sets the value of the location property
create an instance of
sets the value of the alternate version property
sets the value of the alternate version property
create an instance of
create an instance of
sets the value of the actor property
create an instance of
sets the value of the artist property
create an instance of
sets the value of the merchant id property
sets the value of the availability property
create an instance of
sets the value of the name property
sets the value of the glance page property
sets the value of the average feedback rating property
sets the value of the total feedback property
gets the value of the back finding property
sets the value of the total feedback pages property
create an instance of
sets the value of the audience rating property
sets the value of the collection property
sets the value of the collection property
create an instance of
sets the value of the author property
create an instance of
create an instance of
sets the value of the brand property
create an instance of
sets the value of the back finding property
sets the value of the browse node property
create an instance of
sets the value of the shipment property
create an instance of
sets the value of the shipment property
sets the value of the city property
create an instance of
sets the value of the composer property
gets the value of the lowest price property
sets the value of the lowest price property
create an instance of
gets the value of the highest price property
sets the value of the highest price property
sets the value of the condition property
create an instance of
gets the value of the single merchant id property
sets the value of the single merchant id property
create an instance of
sets the value of the lowest price property
sets the value of the highest price property
sets the value of the conductor property
sets the value of the lowest sale price property
sets the value of the highest sale price property
sets the value of the single merchant id property
create an instance of
sets the value of the count property
gets the value of the cart item id property
sets the value of the cart item id property
create an instance of
sets the value of the action property
sets the value of the cart item id property
sets the value of the quantity property
create an instance of
sets the value of the cuisine property
create an instance of
sets the value of the property property
gets the value of the band material type property
sets the value of the property property
sets the value of the delivery method property
create an instance of
sets the value of the request property
sets the value of the request property
sets the value of the request property
sets the value of the request property
sets the value of the guide property
sets the value of the director property
sets the value of the total results property
sets the value of the total pages property
sets the value of the list property
sets the value of the guide property
sets the value of the list property
sets the value of the distinct users property
sets the value of the future launch date property
sets the value of the total usages property
sets the value of the first tagging property
sets the value of the last tagging property
gets the value of the items property
sets the value of the items property
sets the value of the operation request property
sets the value of the cart property
sets the value of the ispupostal code property
sets the value of the merge cart property
sets the value of the items property
sets the value of the response group property
sets the value of the band material type property
sets the value of the list property
sets the value of the item page property
sets the value of the distinct users property
sets the value of the total usages property
sets the value of the first tagging property
sets the value of the last tagging property
sets the value of the item property
gets the value of the rating property
sets the value of the rating property
sets the value of the keywords property
sets the value of the list property
sets the value of the distinct users property
sets the value of the total usages property
sets the value of the first tagging property
gets the value of the rated by property
sets the value of the last tagging property
sets the value of the rated by property
sets the value of the rating property
sets the value of the comment property
sets the value of the date property
sets the value of the manufacturer property
sets the value of the rated by property
sets the value of the maximum price property
sets the value of the asin property
sets the value of the offer listing id property
sets the value of the quantity property
sets the value of the associate tag property
sets the value of the list item id property
sets the value of the meta data property
sets the value of the merchant id property
gets the value of the list url property
sets the value of the request property
sets the value of the request property
sets the value of the list url property
gets the value of the help type property
sets the value of the help type property
gets the value of the registry number property
sets the value of the minimum price property
sets the value of the about property
sets the value of the help type property
sets the value of the registry number property
sets the value of the response group property
sets the value of the music label property
sets the value of the list name property
gets the value of the is verified property
gets the value of the batteries included property
sets the value of the is verified property
sets the value of the url property
sets the value of the height property
sets the value of the neighborhood property
sets the value of the width property
sets the value of the is verified property
sets the value of the name property
sets the value of the value property
sets the value of the orchestra property
gets the value of the total items property
sets the value of the request property
sets the value of the request property
sets the value of the total items property
sets the value of the postal code property
gets the value of the owning merchant id property
sets the value of the power property
sets the value of the batteries included property
sets the value of the owning merchant id property
gets the value of the date created property
gets the value of the promotion id property
sets the value of the date created property
sets the value of the publisher property
sets the value of the promotion id property
gets the value of the occasion date property
sets the value of the occasion date property
gets the value of the promotion category property
sets the value of the response group property
sets the value of the promotion category property
gets the value of the merchant promotion id property
sets the value of the review sort property
sets the value of the merchant promotion id property
sets the value of the customer name property
gets the value of the group claim code property
sets the value of the group claim code property
gets the value of the partner name property
sets the value of the search index property
gets the value of the coupon combination type property
sets the value of the partner name property
sets the value of the coupon combination type property
sets the value of the sort property
gets the value of the additional name property
sets the value of the start date property
sets the value of the additional name property
sets the value of the state property
sets the value of the end date property
gets the value of the batteries required property
gets the value of the terms and conditions property
sets the value of the tag page property
sets the value of the terms and conditions property
gets the value of the eligibility requirements property
sets the value of the eligibility requirements property
sets the value of the image property
sets the value of the tags per page property
gets the value of the benefits property
sets the value of the benefits property
sets the value of the tag sort property
gets the value of the item applicability property
sets the value of the item applicability property
sets the value of the batteries required property
sets the value of the text stream property
gets the value of the total votes property
gets the value of the merchandising message property
sets the value of the total votes property
sets the value of the merchandising message property
sets the value of the title property
sets the value of the merchant id property
gets the value of the total times read property
sets the value of the owning merchant id property
sets the value of the promotion id property
sets the value of the total times read property
sets the value of the release date property
sets the value of the promotion category property
sets the value of the merchant promotion id property
sets the value of the group claim code property
sets the value of the coupon combination type property
sets the value of the audience rating property
sets the value of the start date property
sets the value of the end date property
sets the value of the terms and conditions property
sets the value of the eligibility requirements property
sets the value of the benefits property
sets the value of the list id property
sets the value of the item applicability property
sets the value of the list url property
sets the value of the merchandising message property
sets the value of the registry number property
sets the value of the list name property
gets the value of the distinct tags property
sets the value of the distinct tags property
sets the value of the list type property
gets the value of the batteries property
sets the value of the operation request property
sets the value of the browse nodes property
sets the value of the browse nodes property
sets the value of the total items property
sets the value of the total pages property
sets the value of the operation request property
sets the value of the customers property
sets the value of the customers property
sets the value of the date created property
sets the value of the feedback property
sets the value of the feedback property
sets the value of the occasion date property
sets the value of the top seller property
sets the value of the top seller property
sets the value of the customer name property
sets the value of the distinct tags property
gets the value of the benefit type property
sets the value of the distinct items property
sets the value of the distinct users property
sets the value of the benefit type property
sets the value of the partner name property
sets the value of the total usages property
sets the value of the first tagging property
gets the value of the component type property
sets the value of the last tagging property
sets the value of the component type property
sets the value of the tag property
sets the value of the additional name property
sets the value of the tag property
sets the value of the comment property
gets the value of the percent off property
sets the value of the percent off property
sets the value of the batteries property
sets the value of the amount property
gets the value of the fixed amount property
sets the value of the image property
sets the value of the currency code property
sets the value of the fixed amount property
gets the value of the formatted price property
sets the value of the formatted price property
gets the value of the ceiling property
sets the value of the amount property
sets the value of the average rating property
sets the value of the currency code property
sets the value of the ceiling property
sets the value of the formatted price property
sets the value of the benefit type property
sets the value of the total votes property
sets the value of the component type property
sets the value of the quantity property
gets the value of the listing page property
sets the value of the percent off property
sets the value of the listing page property
sets the value of the total times read property
sets the value of the fixed amount property
gets the value of the offer status property
sets the value of the ceiling property
sets the value of the offer status property
sets the value of the list item property
sets the value of the tags property
sets the value of the list item property
sets the value of the keywords property
sets the value of the listing page property
sets the value of the offer status property
sets the value of the response group property
sets the value of the seller id property
sets the value of the sort property
sets the value of the title property
gets the value of the transaction id property
sets the value of the argument property
sets the value of the argument property
sets the value of the transaction id property
gets the value of the narrow by property
sets the value of the narrow by property
sets the value of the request property
sets the value of the request property
sets the value of the bin property
sets the value of the narrow by property
sets the value of the bin property
sets the value of the asin property
sets the value of the title property
sets the value of the similar viewed product property
sets the value of the similar viewed product property
sets the value of the value property
sets the value of the role property
sets the value of the browse node property
gets the value of the transaction date property
gets the value of the items property
sets the value of the transaction date property
sets the value of the items property
sets the value of the cart id property
sets the value of the hmac property
gets the value of the transaction date epoch property
sets the value of the merge cart property
sets the value of the items property
sets the value of the transaction date epoch property
sets the value of the response group property
gets the value of the url encoded hmac property
gets the value of the battery description property
sets the value of the url encoded hmac property
sets the value of the request property
sets the value of the request property
gets the value of the purchase url property
sets the value of the purchase url property
sets the value of the value property
sets the value of the units property
gets the value of the paying customer id property
sets the value of the request property
sets the value of the request property
sets the value of the paying customer id property
gets the value of the cart items property
sets the value of the seller feedback rating property
sets the value of the cart items property
sets the value of the period property
sets the value of the seller feedback rating property
gets the value of the ordering customer id property
gets the value of the saved for later items property
sets the value of the ordering customer id property
sets the value of the accessory property
sets the value of the accessory property
sets the value of the saved for later items property
gets the value of the totals property
sets the value of the operation request property
sets the value of the customers property
sets the value of the totals property
gets the value of the transaction items property
sets the value of the transaction items property
sets the value of the battery description property
gets the value of the shipments property
gets the value of the is link suppressed property
sets the value of the is link suppressed property
sets the value of the shipments property
sets the value of the source property
sets the value of the content property
sets the value of the is link suppressed property
sets the value of the transaction id property
sets the value of the seller id property
gets the value of the similar viewed products property
sets the value of the condition property
sets the value of the similar viewed products property
sets the value of the transaction date property
sets the value of the transaction date epoch property
gets the value of the other categories similar products property
gets the value of the feedback page property
sets the value of the seller name property
sets the value of the feedback page property
sets the value of the other categories similar products property
sets the value of the paying customer id property
sets the value of the response group property
sets the value of the ordering customer id property
sets the value of the seller id property
sets the value of the cart id property
sets the value of the totals property
sets the value of the feedback page property
sets the value of the transaction items property
sets the value of the hmac property
sets the value of the seller id property
sets the value of the shipments property
sets the value of the urlencoded hmac property
sets the value of the purchase url property
sets the value of the sub total property
sets the value of the parameter property
sets the value of the parameter property
sets the value of the cart items property
sets the value of the merchant id property
sets the value of the image set property
sets the value of the saved for later items property
sets the value of the image set property
sets the value of the list id property
sets the value of the list name property
sets the value of the similar products property
sets the value of the top sellers property
sets the value of the other categories similar product property
sets the value of the other categories similar product property
sets the value of the new releases property
sets the value of the similar viewed products property
sets the value of the other categories similar products property
sets the value of the operation information property
sets the value of the response group information property
sets the value of the operation information property
sets the value of the response group information property
gets the value of the listing id property
sets the value of the asin property
sets the value of the title property
gets the value of the rating property
sets the value of the listing id property
sets the value of the rating property
gets the value of the helpful votes property
sets the value of the helpful votes property
sets the value of the total results property
sets the value of the total pages property
sets the value of the customer property
sets the value of the customer property
gets the value of the reviewer property
sets the value of the reviewer property
gets the value of the battery type property
sets the value of the operation request property
gets the value of the sku property
sets the value of the lists property
sets the value of the sku property
sets the value of the summary property
sets the value of the keywords property
sets the value of the message property
sets the value of the item property
sets the value of the item property
gets the value of the upc property
sets the value of the asin property
sets the value of the transaction item property
sets the value of the rating property
sets the value of the helpful votes property
sets the value of the upc property
sets the value of the customer id property
sets the value of the reviewer property
sets the value of the total votes property
sets the value of the date property
sets the value of the summary property
sets the value of the total results property
sets the value of the content property
sets the value of the total pages property
gets the value of the ean property
sets the value of the seller property
sets the value of the seller property
sets the value of the browse node property
sets the value of the ean property
sets the value of the parameter property
sets the value of the operation request property
sets the value of the cart property
sets the value of the battery type property
sets the value of the name property
sets the value of the value property
gets the value of the will ship expedited property
sets the value of the will ship expedited property
sets the value of the user defined location property
sets the value of the city property
sets the value of the state property
sets the value of the country property
gets the value of the will ship international property
sets the value of the request property
sets the value of the request property
sets the value of the will ship international property
sets the value of the operation request property
sets the value of the seller listings property
sets the value of the seller listings property
gets the value of the sub condition property
sets the value of the sub condition property
gets the value of the condition note property
sets the value of the condition note property
sets the value of the condition property
sets the value of the sub condition property
sets the value of the condition note property
sets the value of the will ship expedited property
sets the value of the will ship international property
sets the value of the operation request property
sets the value of the items property
sets the value of the index name property
gets the value of the results property
sets the value of the results property
gets the value of the pages property
sets the value of the pages property
gets the value of the bezel material type property
gets the value of the relevance rank property
sets the value of the relevance rank property
gets the value of the offer page property
sets the value of the offer page property
sets the value of the index name property
sets the value of the results property
sets the value of the pages property
sets the value of the corrected query property
sets the value of the relevance rank property
sets the value of the asin property
sets the value of the asin property
sets the value of the request property
sets the value of the request property
sets the value of the seller property
sets the value of the bezel material type property
sets the value of the exchange id property
sets the value of the listing id property
sets the value of the address3 property
sets the value of the asin property
sets the value of the sku property
sets the value of the upc property
sets the value of the ean property
sets the value of the will ship expedited property
sets the value of the name property
sets the value of the will ship international property
sets the value of the address1 property
sets the value of the address2 property
sets the value of the address3 property
sets the value of the title property
sets the value of the city property
sets the value of the state property
sets the value of the postal code property
sets the value of the country property
sets the value of the price property
sets the value of the start date property
sets the value of the end date property
gets the value of the search inside keywords property
sets the value of the status property
sets the value of the search inside keywords property
sets the value of the quantity property
sets the value of the condition property
sets the value of the sub condition property
sets the value of the seller property
sets the value of the asin property
sets the value of the title property
sets the value of the operation property
sets the value of the operation property
sets the value of the operation request property
sets the value of the seller listings property
sets the value of the listmania list property
gets the value of the seller nickname property
sets the value of the listmania list property
sets the value of the seller nickname property
gets the value of the checksum property
sets the value of the checksum property
gets the value of the page type property
sets the value of the page type property
gets the value of the page number property
gets the value of the variation page property
sets the value of the page number property
gets the value of the sequence number property
sets the value of the sequence number property
sets the value of the variation page property
sets the value of the checksum property
sets the value of the page type property
sets the value of the page number property
sets the value of the sequence number property
gets the value of the list owner property
sets the value of the condition property
sets the value of the text property
sets the value of the list owner property
sets the value of the delivery method property
sets the value of the feedback date range property
sets the value of the feedback date range property
sets the value of the future launch date property
gets the value of the meta data property
sets the value of the meta data property
sets the value of the value property
sets the value of the id type property
sets the value of the units property
sets the value of the ispupostal code property
sets the value of the asin property
sets the value of the title property
sets the value of the merchant id property
gets the value of the item total property
sets the value of the item total property
sets the value of the offer page property
sets the value of the cart item id property
sets the value of the item id property
sets the value of the asin property
sets the value of the exchange id property
sets the value of the height property
sets the value of the response group property
sets the value of the length property
sets the value of the merchant id property
sets the value of the weight property
sets the value of the width property
sets the value of the seller id property
sets the value of the review page property
sets the value of the seller nickname property
gets the value of the eligibility requirement type property
sets the value of the quantity property
sets the value of the eligibility requirement type property
sets the value of the title property
sets the value of the review sort property
sets the value of the product group property
gets the value of the currency amount property
sets the value of the currency amount property
sets the value of the list owner property
sets the value of the search index property
sets the value of the eligibility requirement type property
sets the value of the quantity property
sets the value of the list type property
sets the value of the currency amount property
sets the value of the meta data property
sets the value of the search inside keywords property
sets the value of the price property
sets the value of the item total property
sets the value of the tag page property
sets the value of the value property
sets the value of the number property
sets the value of the tags per page property
sets the value of the tag sort property
gets the value of the items property
sets the value of the items property
sets the value of the variation page property
sets the value of the cart id property
sets the value of the hmac property
sets the value of the cart id property
sets the value of the merge cart property
sets the value of the hmac property
sets the value of the response group property
sets the value of the merge cart property
sets the value of the items property
sets the value of the response group property
sets the value of the subject property
gets the value of the bin name property
sets the value of the subject property
sets the value of the bin name property
gets the value of the bin item count property
sets the value of the bin item count property
sets the value of the disc property
sets the value of the disc property
sets the value of the bin name property
sets the value of the bin item count property
gets the value of the guide id property
sets the value of the bin parameter property
sets the value of the guide id property
sets the value of the bin parameter property
sets the value of the guide id property
gets the value of the merchant property
sets the value of the merchant property
sets the value of the language property
sets the value of the language property
sets the value of the request property
sets the value of the request property
gets the value of the offer attributes property
sets the value of the offer attributes property
sets the value of the key value pair property
sets the value of the key value pair property
gets the value of the loyalty points property
sets the value of the loyalty points property
sets the value of the birthday property
gets the value of the percentage property
sets the value of the percentage property
gets the value of the promotions property
sets the value of the promotions property
gets the value of the wish list id property
sets the value of the wish list id property
sets the value of the count property
sets the value of the merchant property
sets the value of the percentage property
sets the value of the seller property
sets the value of the type property
sets the value of the offer attributes property
gets the value of the location property
sets the value of the offer listing property
sets the value of the loyalty points property
sets the value of the location property
sets the value of the promotions property
sets the value of the offer listing property
sets the value of the type property
sets the value of the start date property
sets the value of the end date property
sets the value of the customer id property
gets the value of the eligibility requirement description property
sets the value of the nickname property
gets the value of the lowest new price property
sets the value of the eligibility requirement description property
sets the value of the birthday property
sets the value of the lowest new price property
gets the value of the benefit description property
sets the value of the wish list id property
gets the value of the lowest used price property
sets the value of the benefit description property
sets the value of the lowest used price property
sets the value of the location property
gets the value of the lowest collectible price property
sets the value of the customer reviews property
sets the value of the lowest collectible price property
sets the value of the tags property
gets the value of the lowest refurbished price property
sets the value of the promotion id property
sets the value of the lowest refurbished price property
sets the value of the customer reviews property
sets the value of the category property
sets the value of the start date property
gets the value of the total new property
sets the value of the end date property
sets the value of the total new property
sets the value of the eligibility requirement description property
sets the value of the benefit description property
gets the value of the total used property
sets the value of the terms and conditions property
sets input encoding property
sets the value of the total used property
sets input encoding property and returns current amazon a2 sconfig
gets the value of the total collectible property
sets user agent property and returns current amazon a2 sconfig
sets the value of the total collectible property
checks if user agent property is set
gets the value of the total refurbished property
sets service url property and returns current amazon a2 sconfig
sets the value of the total refurbished property
checks if service url property is set
sets the value of the lowest new price property
sets proxy host property and returns current amazon a2 sconfig
checks if proxy host property is set
sets the value of the lowest used price property
sets the value of the lowest collectible price property
sets proxy port property and returns current amazon a2 sconfig
sets the value of the lowest refurbished price property
checks if proxy port property is set
sets the value of the total new property
sets the value of the total used property
sets the value of the total collectible property
sets the value of the total refurbished property
gets the value of the calendar type property
constructs amazon a2 sclient with aws access key id and accociate tag
constructs amazon a2 sclient with aws access key id associate tag
sets the value of the calendar type property
item search request
item lookup request
browse node lookup request
list search request
list lookup request
customer content search request
customer content lookup request
similarity lookup request
seller lookup request
cart get request
cart add request
cart create request
get unmarshaller for current thread
cart modify request
cart clear request
transaction lookup request
seller listing search request
seller listing lookup request
tag lookup request
gets the value of the case diameter property
add parameters and set request body
reads stream into string
sets the value of the case diameter property
gets the value of the case material type property
sets the value of the case material type property
gets the value of the case thickness property
sets the value of the case thickness property
gets the value of the case type property
sets the value of the case type property
gets the value of the catalog number property
sets the value of the catalog number property
gets the value of the cdrw description property
sets the value of the cdrw description property
gets the value of the chain type property
sets the value of the chain type property
gets the value of the clasp type property
sets the value of the clasp type property
gets the value of the clothing size property
sets the value of the clothing size property
sets the value of the color property
gets the value of the compatibility property
sets the value of the compatibility property
gets the value of the computer hardware type property
sets the value of the computer hardware type property
gets the value of the computer platform property
sets the value of the computer platform property
gets the value of the connectivity property
sets the value of the connectivity property
gets the value of the continuous shooting speed property
sets the value of the continuous shooting speed property
gets the value of the country of origin property
sets the value of the country of origin property
gets the value of the cpu manufacturer property
sets the value of the cpu manufacturer property
gets the value of the cpu speed property
sets the value of the cpu speed property
gets the value of the cpu type property
sets the value of the cpu type property
gets the value of the customizable property
sets the value of the customizable property
gets the value of the cero age rating property
sets the value of the cero age rating property
gets the value of the delay between shots property
sets the value of the delay between shots property
gets the value of the delivery option property
sets the value of the delivery option property
sets the value of the department property
gets the value of the club type property
gets the value of the dewey decimal number property
sets the value of the club type property
sets the value of the dewey decimal number property
gets the value of the dial color property
sets the value of the dial color property
gets the value of the dial window material type property
sets the value of the dial window material type property
gets the value of the digital zoom property
sets the value of the digital zoom property
gets the value of the display size property
sets the value of the display size property
gets the value of the drum set piece quantity property
sets the value of the drum set piece quantity property
gets the value of the dvd layers property
sets the value of the dvd layers property
gets the value of the dvdrw description property
sets the value of the dvdrw description property
gets the value of the dvd sides property
sets the value of the dvd sides property
gets the value of the dpci property
sets the value of the dpci property
gets the value of the esrb age rating property
sets the value of the esrb age rating property
gets the value of the external display support description property
sets the value of the external display support description property
gets the value of the fabric type property
sets the value of the fabric type property
sets the value of the fax number property
gets the value of the first issue lead time property
sets the value of the first issue lead time property
gets the value of the floppy disk drive description property
sets the value of the floppy disk drive description property
gets the value of the fixed shipping charge property
sets the value of the fixed shipping charge property
gets the value of the gem type property
sets the value of the gem type property
gets the value of the graphics card interface property
sets the value of the graphics card interface property
gets the value of the graphics description property
sets the value of the graphics description property
gets the value of the graphics memory size property
sets the value of the graphics memory size property
gets the value of the guitar attribute property
sets the value of the guitar attribute property
gets the value of the guitar bridge system property
sets the value of the guitar bridge system property
gets the value of the guitar pick thickness property
sets the value of the guitar pick thickness property
gets the value of the guitar pickup configuration property
sets the value of the guitar pickup configuration property
gets the value of the hard disk count property
sets the value of the hard disk count property
gets the value of the hard disk size property
sets the value of the hard disk size property
gets the value of the has auto focus property
sets the value of the has auto focus property
gets the value of the display color support property
gets the value of the has burst mode property
sets the value of the display color support property
sets the value of the has burst mode property
gets the value of the has in camera editing property
sets the value of the has in camera editing property
gets the value of the has red eye reduction property
sets the value of the has red eye reduction property
gets the value of the has self timer property
sets the value of the has self timer property
gets the value of the has tripod mount property
sets the value of the has tripod mount property
gets the value of the has video out property
sets the value of the has video out property
gets the value of the has viewfinder property
sets the value of the has viewfinder property
gets the value of the hazardous material type property
sets the value of the hazardous material type property
gets the value of the hours of operation property
sets the value of the hours of operation property
gets the value of the included software property
sets the value of the included software property
gets the value of the includes mp3 player property
sets the value of the includes mp3 player property
gets the value of the indications property
sets the value of the indications property
gets the value of the ingredients property
sets the value of the ingredients property
gets the value of the instrument key property
sets the value of the instrument key property
gets the value of the is autographed property
sets the value of the is autographed property
sets the value of the isbn property
gets the value of the film color type property
gets the value of the is email notify available property
sets the value of the film color type property
sets the value of the is email notify available property
gets the value of the is fragile property
sets the value of the is fragile property
gets the value of the flavor name property
sets the value of the flavor name property
gets the value of the is lab created property
sets the value of the is lab created property
gets the value of the is memorabilia property
sets the value of the is memorabilia property
gets the value of the iso equivalent property
sets the value of the iso equivalent property
gets the value of the issues per year property
sets the value of the issues per year property
gets the value of the item dimensions property
sets the value of the item dimensions property
gets the value of the keyboard description property
sets the value of the keyboard description property
gets the value of the gl product group property
sets the value of the gl product group property
gets the value of the golf club flex property
sets the value of the golf club flex property
gets the value of the languages property
gets the value of the golf club loft property
sets the value of the golf club loft property
sets the value of the languages property
gets the value of the legal disclaimer property
sets the value of the legal disclaimer property
gets the value of the line voltage property
sets the value of the line voltage property
gets the value of the list price property
sets the value of the list price property
gets the value of the macro focus range property
sets the value of the macro focus range property
gets the value of the magazine type property
sets the value of the magazine type property
gets the value of the mallet hardness property
sets the value of the mallet hardness property
gets the value of the hand orientation property
sets the value of the hand orientation property
gets the value of the manufacturer labor warranty description property
sets the value of the manufacturer labor warranty description property
gets the value of the hard disk size property
sets the value of the hard disk size property
gets the value of the manufacturer maximum age property
sets the value of the manufacturer maximum age property
gets the value of the hard disk interface property
sets the value of the hard disk interface property
gets the value of the manufacturer minimum age property
sets the value of the manufacturer minimum age property
gets the value of the hardware platform property
sets the value of the hardware platform property
gets the value of the manufacturer parts warranty description property
sets the value of the manufacturer parts warranty description property
gets the value of the material type property
sets the value of the material type property
gets the value of the maximum aperture property
sets the value of the maximum aperture property
gets the value of the maximum color depth property
sets the value of the maximum color depth property
gets the value of the maximum focal length property
sets the value of the maximum focal length property
gets the value of the maximum high resolution images property
sets the value of the maximum high resolution images property
gets the value of the maximum horizontal resolution property
sets the value of the maximum horizontal resolution property
gets the value of the maximum low resolution images property
sets the value of the maximum low resolution images property
gets the value of the maximum resolution property
sets the value of the maximum resolution property
gets the value of the maximum shutter speed property
sets the value of the maximum shutter speed property
gets the value of the maximum vertical resolution property
sets the value of the maximum vertical resolution property
gets the value of the maximum weight recommendation property
sets the value of the maximum weight recommendation property
gets the value of the memory slots available property
sets the value of the memory slots available property
gets the value of the metal stamp property
sets the value of the metal stamp property
gets the value of the is adult product property
gets the value of the metal type property
sets the value of the metal type property
sets the value of the is adult product property
gets the value of the mini movie description property
sets the value of the mini movie description property
gets the value of the minimum focal length property
sets the value of the minimum focal length property
gets the value of the minimum shutter speed property
sets the value of the minimum shutter speed property
sets the value of the model property
gets the value of the model year property
sets the value of the model year property
gets the value of the modem description property
sets the value of the modem description property
gets the value of the monitor size property
sets the value of the monitor size property
gets the value of the is preannounce property
sets the value of the is preannounce property
gets the value of the monitor viewable diagonal size property
sets the value of the monitor viewable diagonal size property
gets the value of the mouse description property
sets the value of the mouse description property
gets the value of the mpn property
sets the value of the mpn property
gets the value of the musical style property
sets the value of the musical style property
gets the value of the native resolution property
sets the value of the native resolution property
gets the value of the network interface description property
sets the value of the network interface description property
gets the value of the notebook display technology property
sets the value of the notebook display technology property
gets the value of the notebook pointing device description property
gets the value of the lens type property
sets the value of the notebook pointing device description property
sets the value of the lens type property
gets the value of the number of discs property
sets the value of the number of discs property
gets the value of the number of issues property
sets the value of the number of issues property
gets the value of the number of items property
sets the value of the number of items property
gets the value of the number of keys property
sets the value of the number of keys property
gets the value of the number of pages property
sets the value of the number of pages property
gets the value of the number of pearls property
sets the value of the number of pearls property
gets the value of the number of rapid fire shots property
sets the value of the number of rapid fire shots property
gets the value of the number of stones property
sets the value of the number of stones property
gets the value of the number of strings property
sets the value of the number of strings property
gets the value of the number of tracks property
sets the value of the number of tracks property
gets the value of the optical zoom property
sets the value of the optical zoom property
gets the value of the original release date property
sets the value of the original release date property
gets the value of the output wattage property
sets the value of the output wattage property
gets the value of the package dimensions property
sets the value of the package dimensions property
gets the value of the pearl lustre property
sets the value of the pearl lustre property
gets the value of the pearl minimum color property
sets the value of the pearl minimum color property
gets the value of the pearl shape property
sets the value of the pearl shape property
gets the value of the pearl stringing method property
sets the value of the pearl stringing method property
gets the value of the pearl surface blemishes property
sets the value of the pearl surface blemishes property
gets the value of the pearl type property
sets the value of the pearl type property
gets the value of the pearl uniformity property
sets the value of the pearl uniformity property
gets the value of the price rating property
sets the value of the price rating property
gets the value of the processor count property
sets the value of the processor count property
sets the value of the media type property
gets the value of the memory slots available property
sets the value of the memory slots available property
gets the value of the promotional tag property
sets the value of the promotional tag property
gets the value of the po box shipping excluded property
sets the value of the po box shipping excluded property
sets the value of the publication date property
gets the value of the reading level property
sets the value of the reading level property
gets the value of the recorder track count property
sets the value of the recorder track count property
sets the value of the region code property
gets the value of the region of origin property
sets the value of the region of origin property
gets the value of the removable memory property
sets the value of the removable memory property
gets the value of the resolution modes property
sets the value of the resolution modes property
sets the value of the return policy property
gets the value of the ring size property
sets the value of the ring size property
gets the value of the safety warning property
sets the value of the safety warning property
gets the value of the secondary cache size property
sets the value of the secondary cache size property
gets the value of the setting type property
sets the value of the setting type property
gets the value of the sold in stores property
sets the value of the sold in stores property
gets the value of the size per pearl property
sets the value of the size per pearl property
gets the value of the skill level property
sets the value of the skill level property
gets the value of the sound card description property
sets the value of the sound card description property
gets the value of the speaker count property
sets the value of the speaker count property
gets the value of the speaker description property
sets the value of the speaker description property
gets the value of the stone clarity property
sets the value of the stone clarity property
gets the value of the stone color property
sets the value of the stone color property
gets the value of the stone cut property
sets the value of the stone cut property
gets the value of the stone shape property
sets the value of the stone shape property
gets the value of the stone weight property
sets the value of the stone weight property
gets the value of the studio property
sets the value of the operating system property
sets the value of the studio property
gets the value of the subscription length property
gets the value of the optical sensor resolution property
sets the value of the subscription length property
sets the value of the optical sensor resolution property
gets the value of the system bus speed property
sets the value of the system bus speed property
gets the value of the system memory size max property
sets the value of the system memory size max property
gets the value of the system memory size property
sets the value of the system memory size property
gets the value of the system memory type property
sets the value of the system memory type property
gets the value of the telling page indicator property
gets the value of the package quantity property
sets the value of the telling page indicator property
sets the value of the package quantity property
gets the value of the theatrical release date property
sets the value of the theatrical release date property
gets the value of the total diamond weight property
sets the value of the total diamond weight property
gets the value of the total external bays free property
sets the value of the total external bays free property
gets the value of the total firewire ports property
sets the value of the total firewire ports property
gets the value of the total gem weight property
sets the value of the total gem weight property
gets the value of the total internal bays free property
sets the value of the total internal bays free property
gets the value of the total metal weight property
sets the value of the total metal weight property
gets the value of the total ntscpalports property
sets the value of the total ntscpalports property
gets the value of the total parallel ports property
sets the value of the total parallel ports property
gets the value of the total pccard slots property
sets the value of the total pccard slots property
gets the value of the total pcislots free property
sets the value of the total pcislots free property
gets the value of the total serial ports property
sets the value of the total serial ports property
gets the value of the total svideo out ports property
sets the value of the total svideo out ports property
gets the value of the total usb2 ports property
sets the value of the total usb2 ports property
gets the value of the total usbports property
sets the value of the total usbports property
gets the value of the total vgaout ports property
sets the value of the total vgaout ports property
gets the value of the product site launch date property
sets the value of the product site launch date property
gets the value of the variation denomination property
sets the value of the variation denomination property
gets the value of the product type name property
gets the value of the variation description property
sets the value of the product type name property
sets the value of the variation description property
gets the value of the product type subcategory property
gets the value of the vendor rebate property
sets the value of the product type subcategory property
sets the value of the vendor rebate property
gets the value of the warranty property
sets the value of the warranty property
gets the value of the watch movement type property
sets the value of the watch movement type property
gets the value of the website buyability property
sets the value of the website buyability property
gets the value of the water resistance depth property
sets the value of the water resistance depth property
gets the value of the wireless microphone frequency property
sets the value of the wireless microphone frequency property
sets the value of the actor property
sets the value of the address property
sets the value of the amazon maximum age property
sets the value of the amazon minimum age property
sets the value of the aperture modes property
sets the value of the artist property
sets the value of the aspect ratio property
sets the value of the assembly instructions property
sets the value of the assembly required property
sets the value of the audience rating property
sets the value of the audio format property
sets the value of the author property
sets the value of the back finding property
sets the value of the band material type property
sets the value of the batteries included property
sets the value of the batteries required property
sets the value of the batteries property
sets the value of the battery description property
sets the value of the battery type property
sets the value of the bezel material type property
sets the value of the binding property
sets the value of the brand property
sets the value of the calendar type property
sets the value of the camera manual features property
gets the value of the removable storage property
sets the value of the case diameter property
sets the value of the removable storage property
sets the value of the case material type property
sets the value of the case thickness property
sets the value of the case type property
gets the value of the required voltage range property
sets the value of the catalog number property
sets the value of the required voltage range property
sets the value of the cdrwdescription property
sets the value of the chain type property
sets the value of the clasp type property
sets the value of the clothing size property
sets the value of the color property
sets the value of the compatibility property
sets the value of the computer hardware type property
sets the value of the computer platform property
sets the value of the connectivity property
gets the value of the running time property
sets the value of the continuous shooting speed property
sets the value of the running time property
sets the value of the country property
sets the value of the country of origin property
gets the value of the scent name property
sets the value of the cpumanufacturer property
sets the value of the scent name property
sets the value of the cpuspeed property
sets the value of the cputype property
sets the value of the creator property
sets the value of the cuisine property
sets the value of the customizable property
sets the value of the delay between shots property
sets the value of the delivery option property
sets the value of the department property
sets the value of the description property
gets the value of the shaft material type property
sets the value of the dewey decimal number property
sets the value of the shaft material type property
sets the value of the dial color property
sets the value of the dial window material type property
sets the value of the digital zoom property
sets the value of the director property
sets the value of the display size property
sets the value of the drum set piece quantity property
sets the value of the dvdlayers property
sets the value of the dvdrwdescription property
sets the value of the dvdsides property
sets the value of the dpci property
sets the value of the ean property
sets the value of the edition property
sets the value of the esrbage rating property
sets the value of the external display support description property
sets the value of the fabric type property
sets the value of the fax number property
sets the value of the feature property
sets the value of the first issue lead time property
sets the value of the floppy disk drive description property
sets the value of the format property
sets the value of the fixed shipping charge property
sets the value of the gem type property
sets the value of the graphics card interface property
sets the value of the graphics description property
sets the value of the graphics memory size property
sets the value of the guitar attribute property
sets the value of the guitar bridge system property
sets the value of the guitar pick thickness property
sets the value of the guitar pickup configuration property
sets the value of the hard disk count property
sets the value of the hard disk size property
sets the value of the has auto focus property
sets the value of the has burst mode property
sets the value of the has in camera editing property
sets the value of the has red eye reduction property
sets the value of the has self timer property
sets the value of the has tripod mount property
sets the value of the has video out property
sets the value of the has viewfinder property
sets the value of the hazardous material type property
sets the value of the hours of operation property
sets the value of the included software property
sets the value of the includes mp3 player property
sets the value of the indications property
sets the value of the ingredients property
sets the value of the instrument key property
sets the value of the is autographed property
sets the value of the isbn property
sets the value of the is email notify available property
sets the value of the is fragile property
sets the value of the is lab created property
sets the value of the is memorabilia property
sets the value of the isoequivalent property
sets the value of the style property
sets the value of the issues per year property
sets the value of the item dimensions property
sets the value of the keyboard description property
sets the value of the label property
sets the value of the languages property
sets the value of the legal disclaimer property
sets the value of the line voltage property
sets the value of the list price property
gets the value of the supported media size property
sets the value of the macro focus range property
sets the value of the supported media size property
sets the value of the magazine type property
sets the value of the mallet hardness property
sets the value of the manufacturer property
sets the value of the manufacturer labor warranty description property
sets the value of the manufacturer maximum age property
sets the value of the manufacturer minimum age property
sets the value of the manufacturer parts warranty description property
sets the value of the material type property
sets the value of the maximum aperture property
sets the value of the maximum color depth property
sets the value of the maximum focal length property
sets the value of the maximum high resolution images property
sets the value of the maximum horizontal resolution property
sets the value of the maximum low resolution images property
sets the value of the maximum resolution property
sets the value of the maximum shutter speed property
sets the value of the maximum vertical resolution property
sets the value of the maximum weight recommendation property
sets the value of the memory slots available property
sets the value of the metal stamp property
sets the value of the metal type property
sets the value of the mini movie description property
sets the value of the minimum focal length property
sets the value of the minimum shutter speed property
sets the value of the model property
sets the value of the model year property
sets the value of the modem description property
sets the value of the monitor size property
sets the value of the monitor viewable diagonal size property
sets the value of the mouse description property
sets the value of the mpn property
sets the value of the musical style property
sets the value of the native resolution property
sets the value of the neighborhood property
sets the value of the network interface description property
sets the value of the notebook display technology property
sets the value of the notebook pointing device description property
sets the value of the number of discs property
sets the value of the number of issues property
sets the value of the number of items property
sets the value of the number of keys property
sets the value of the number of pages property
sets the value of the number of pearls property
sets the value of the number of rapid fire shots property
sets the value of the number of stones property
sets the value of the number of strings property
sets the value of the number of tracks property
sets the value of the optical zoom property
sets the value of the original release date property
sets the value of the output wattage property
sets the value of the package dimensions property
sets the value of the pearl lustre property
sets the value of the pearl minimum color property
sets the value of the pearl shape property
sets the value of the pearl stringing method property
sets the value of the pearl surface blemishes property
sets the value of the pearl type property
sets the value of the pearl uniformity property
sets the value of the phone number property
sets the value of the photo flash type property
sets the value of the picture format property
sets the value of the platform property
sets the value of the price rating property
sets the value of the processor count property
sets the value of the product group property
sets the value of the promotional tag property
sets the value of the pobox shipping excluded property
sets the value of the publication date property
sets the value of the publisher property
sets the value of the purchasing channel property
sets the value of the reading level property
sets the value of the recorder track count property
sets the value of the region code property
sets the value of the region of origin property
sets the value of the release date property
sets the value of the return method property
sets the value of the removable memory property
sets the value of the resolution modes property
sets the value of the return policy property
sets the value of the ring size property
sets the value of the safety warning property
sets the value of the sales restriction property
sets the value of the secondary cache size property
sets the value of the setting type property
sets the value of the size property
sets the value of the sku property
sets the value of the sold in stores property
sets the value of the size per pearl property
sets the value of the skill level property
sets the value of the sound card description property
sets the value of the speaker count property
sets the value of the speaker description property
sets the value of the special features property
sets the value of the stone clarity property
sets the value of the stone color property
gets the value of the weee tax value property
sets the value of the stone cut property
sets the value of the weee tax value property
sets the value of the stone shape property
sets the value of the stone weight property
sets the value of the studio property
sets the value of the subscription length property
sets the value of the supported image type property
sets the value of the system bus speed property
sets the value of the actor property
sets the value of the system memory size max property
sets the value of the address property
sets the value of the system memory size property
sets the value of the age property
sets the value of the system memory type property
sets the value of the amazon maximum age property
sets the value of the telling page indicator property
sets the value of the amazon minimum age property
sets the value of the theatrical release date property
sets the value of the analog video format property
sets the value of the title property
sets the value of the aperture modes property
sets the value of the total diamond weight property
sets the value of the artist property
sets the value of the total external bays free property
sets the value of the aspect ratio property
sets the value of the total firewire ports property
sets the value of the assembly instructions property
sets the value of the total gem weight property
sets the value of the assembly required property
sets the value of the total internal bays free property
sets the value of the audience rating property
sets the value of the total metal weight property
sets the value of the audio format property
sets the value of the total ntscpalports property
sets the value of the author property
sets the value of the total parallel ports property
sets the value of the back finding property
sets the value of the total pccard slots property
sets the value of the band material type property
sets the value of the total pcislots free property
sets the value of the batteries included property
sets the value of the total serial ports property
sets the value of the batteries required property
sets the value of the total svideo out ports property
sets the value of the total usb2 ports property
sets the value of the batteries property
sets the value of the total usbports property
sets the value of the battery description property
sets the value of the total vgaout ports property
sets the value of the battery type property
sets the value of the upc property
sets the value of the bezel material type property
sets the value of the variation denomination property
sets the value of the binding property
sets the value of the variation description property
sets the value of the brand property
sets the value of the vendor rebate property
sets the value of the calendar type property
sets the value of the warranty property
sets the value of the camera manual features property
sets the value of the watch movement type property
sets the value of the case diameter property
sets the value of the website buyability property
sets the value of the case material type property
sets the value of the water resistance depth property
sets the value of the case thickness property
sets the value of the wireless microphone frequency property
sets the value of the case type property
sets the value of the actor property
sets the value of the artist property
sets the value of the catalog number property
sets the value of the audio format property
sets the value of the category property
sets the value of the author property
sets the value of the category bin property
sets the value of the camera manual features property
sets the value of the cdrwdescription property
sets the value of the creator property
sets the value of the chain type property
sets the value of the director property
sets the value of the character property
sets the value of the feature property
sets the value of the ceroage rating property
sets the value of the format property
sets the value of the clasp type property
sets the value of the photo flash type property
sets the value of the clothing size property
sets the value of the picture format property
sets the value of the club type property
sets the value of the platform property
sets the value of the color property
sets the value of the purchasing channel property
sets the value of the return method property
sets the value of the compatibility property
sets the value of the special features property
sets the value of the compatible devices property
sets the value of the supported image type property
sets the value of the computer hardware type property
sets the value of the computer platform property
sets the value of the connectivity property
sets the value of the continuous shooting speed property
sets the value of the country property
sets the value of the cpumanufacturer property
sets the value of the cpuspeed property
sets the value of the cputype property
sets the value of the creator property
sets the value of the cuisine property
sets the value of the data link protocol property
sets the value of the delivery option property
sets the value of the delay between shots property
sets the value of the department property
sets the value of the dewey decimal number property
sets the value of the dial color property
sets the value of the dial window material type property
sets the value of the digital zoom property
sets the value of the director property
sets the value of the display color support property
sets the value of the display size property
sets the value of the drum set piece quantity property
sets the value of the dvdlayers property
sets the value of the dvdrwdescription property
sets the value of the dvdsides property
sets the value of the dpci property
sets the value of the ean property
sets the value of the edition property
sets the value of the educational focus property
sets the value of the ethnicity property
sets the value of the esrbage rating property
sets the value of the external display support description property
sets the value of the fabric type property
sets the value of the fax number property
sets the value of the feature property
sets the value of the film color type property
sets the value of the first issue lead time property
sets the value of the flavor name property
sets the value of the floppy disk drive description property
sets the value of the format property
sets the value of the form factor property
sets the value of the gem type property
sets the value of the gem type set element property
sets the value of the gender property
sets the value of the genre property
sets the value of the glproduct group property
sets the value of the golf club flex property
sets the value of the golf club loft property
sets the value of the graphics card interface property
sets the value of the graphics description property
sets the value of the graphics memory size property
sets the value of the guitar attribute property
sets the value of the guitar bridge system property
sets the value of the guitar pick thickness property
sets the value of the guitar pickup configuration property
sets the value of the hand orientation property
sets the value of the hard disk count property
sets the value of the hard disk size property
sets the value of the hard disk interface property
sets the value of the hardware platform property
sets the value of the has auto focus property
sets the value of the has burst mode property
sets the value of the has in camera editing property
sets the value of the has red eye reduction property
sets the value of the has self timer property
sets the value of the has tripod mount property
sets the value of the has video out property
sets the value of the has viewfinder property
sets the value of the hazardous material type property
sets the value of the hours of operation property
sets the value of the included software property
sets the value of the includes mp3 player property
sets the value of the ingredients property
sets the value of the ingredients set element property
sets the value of the instrument key property
sets the value of the interest property
sets the value of the is adult product property
sets the value of the is autographed property
sets the value of the isbn property
sets the value of the is fragile property
sets the value of the is lab created property
sets the value of the is memorabilia property
sets the value of the isoequivalent property
sets the value of the is preannounce property
sets the value of the issues per year property
sets the value of the item dimensions property
sets the value of the keyboard description property
sets the value of the label property
sets the value of the language name property
sets the value of the languages property
sets the value of the legal disclaimer property
sets the value of the lens type property
sets the value of the line voltage property
sets the value of the list price property
sets the value of the macro focus range property
sets the value of the magazine type property
sets the value of the mallet hardness property
sets the value of the manufacturer property
sets the value of the manufacturer labor warranty description property
sets the value of the manufacturer maximum age property
sets the value of the manufacturer minimum age property
sets the value of the manufacturer parts warranty description property
sets the value of the material type property
sets the value of the material type set element property
sets the value of the maximum aperture property
sets the value of the maximum color depth property
sets the value of the maximum focal length property
sets the value of the maximum high resolution images property
sets the value of the maximum horizontal resolution property
sets the value of the maximum low resolution images property
sets the value of the maximum resolution property
sets the value of the maximum shutter speed property
sets the value of the maximum vertical resolution property
sets the value of the maximum weight recommendation property
sets the value of the media type property
sets the value of the memory slots available property
sets the value of the metal stamp property
sets the value of the metal type property
sets the value of the mini movie description property
sets the value of the minimum focal length property
sets the value of the minimum shutter speed property
sets the value of the model property
sets the value of the model year property
sets the value of the modem description property
sets the value of the monitor size property
sets the value of the monitor viewable diagonal size property
sets the value of the mouse description property
sets the value of the mpn property
sets the value of the musical style property
sets the value of the native resolution property
sets the value of the neighborhood property
sets the value of the network interface description property
sets the value of the notebook display technology property
sets the value of the notebook pointing device description property
sets the value of the number of discs property
sets the value of the number of issues property
sets the value of the number of items property
sets the value of the number of keys property
sets the value of the number of pages property
sets the value of the number of pearls property
sets the value of the number of rapid fire shots property
sets the value of the number of stones property
sets the value of the number of strings property
sets the value of the number of tracks property
sets the value of the operating system property
sets the value of the optical sensor resolution property
sets the value of the optical zoom property
sets the value of the original release date property
sets the value of the output wattage property
sets the value of the package dimensions property
sets the value of the package quantity property
sets the value of the pant length property
sets the value of the pant size property
sets the value of the pearl lustre property
sets the value of the pearl minimum color property
sets the value of the pearl shape property
sets the value of the pearl stringing method property
sets the value of the pearl surface blemishes property
sets the value of the pearl type property
sets the value of the pearl uniformity property
sets the value of the phone number property
sets the value of the photo flash type property
sets the value of the picture format property
sets the value of the platform property
sets the value of the price rating property
sets the value of the primary color property
sets the value of the processor count property
sets the value of the product group property
sets the value of the product site launch date property
sets the value of the product type name property
sets the value of the product type subcategory property
sets the value of the promotional tag property
sets the value of the publication date property
sets the value of the publisher property
sets the value of the pobox shipping excluded property
sets the value of the reading level property
sets the value of the return method property
sets the value of the recorder track count property
sets the value of the region code property
sets the value of the region of origin property
sets the value of the return policy property
sets the value of the release date property
sets the value of the removable memory property
sets the value of the removable storage property
sets the value of the required voltage range property
sets the value of the resolution modes property
sets the value of the ring size property
sets the value of the running time property
sets the value of the scent name property
sets the value of the secondary cache size property
sets the value of the setting type property
sets the value of the shaft material type property
sets the value of the shoe size property
sets the value of the size property
sets the value of the size per pearl property
sets the value of the skill level property
sets the value of the sku property
sets the value of the sold in stores property
sets the value of the sound card description property
sets the value of the speaker count property
sets the value of the speaker description property
sets the value of the special features property
sets the value of the stone clarity property
sets the value of the stone color property
sets the value of the stone cut property
sets the value of the stone shape property
sets the value of the stone weight property
sets the value of the studio property
sets the value of the style property
sets the value of the subscription length property
sets the value of the supported image type property
sets the value of the supported media size property
sets the value of the system bus speed property
sets the value of the system memory size max property
sets the value of the system memory size property
sets the value of the system memory type property
sets the value of the target brand property
sets the value of the telling page indicator property
sets the value of the theatrical release date property
sets the value of the title property
sets the value of the total diamond weight property
sets the value of the total external bays free property
sets the value of the total firewire ports property
sets the value of the total gem weight property
sets the value of the total internal bays free property
sets the value of the total metal weight property
sets the value of the total ntscpalports property
sets the value of the total parallel ports property
sets the value of the total pccard slots property
sets the value of the total pcislots free property
sets the value of the total serial ports property
sets the value of the total svideo out ports property
sets the value of the total usb2 ports property
sets the value of the total usbports property
sets the value of the total vgaout ports property
sets the value of the upc property
sets the value of the variation denomination property
sets the value of the variation description property
sets the value of the warranty property
sets the value of the watch movement type property
sets the value of the water resistance depth property
sets the value of the weeetax value property
sets the value of the wireless microphone frequency property
sets the value of the age property
sets the value of the category property
sets the value of the category bin property
sets the value of the character property
sets the value of the compatible devices property
sets the value of the data link protocol property
sets the value of the educational focus property
sets the value of the ethnicity property
sets the value of the form factor property
sets the value of the gem type set element property
sets the value of the gender property
sets the value of the ingredients set element property
sets the value of the interest property
sets the value of the language name property
sets the value of the material type set element property
sets the value of the pant length property
sets the value of the pant size property
sets the value of the primary color property
sets the value of the shoe size property
sets the value of the target brand property
get a gene as int
get a gene as double
get a gene as boolean
get a gene as char
get a gene as float
returns a string describing the gene name type
allows to retrieve an agent given its position in the agent pool
returns a given operator
return the current generation as an int value
returns the total number of times this operator has been applied
set probability allows the change the probability for the operator to be applied
return the size of the population ie the number of agent in its
execute the charmm command code cmd p code in charmm
get everything printed by charmm in a file defined in this
define the fifo code man mkfifo code where this
sets the base probability to f
returns a new smoke test fitness
return a new text printer
compute the distance between two gene char
compute the distance between two gene double
set the value of the current gene to an existing object
compute the distance between two gene bool
compute the distance between two gene float
compute the distance between two gene int
sets the sender
sets the reciever
returns a vector containing all exchanged objects
sets the core of the message
returns the object to send
return the epparams object stored in this ea
return the pbparams object stored in this ea
compute the fitness of all individuals
returns the improvement of fitness between the parent with the highest
change the memory of this agent nothing to do with dark city yet
returns the number of operators stored in this operator list
return the average fitness of all agents
mutate a gene double
sample drawn from p h v
sample drawn from p h v
returns true if the two objects are equals false otherwise
returns the hash code of the bot operators object
returns the bot operators name
reads the bot operators from the data source
default class constructor
the class constructor
returns true if the player has sufficient access level
called when a player with insufficient permission want to execute
initializes the container
adds all the bot operator of a container in this one
clears the content of the container
returns true if the bot operator is already in the container
calls the command specified by the i command i parameter using
calls the lag server command to check for a players lagging
returns the hash code of this object
calls the info server command to check for various informations
returns the bot operator specified
removes the bot operator specified
removes all bot operators that are in a container from this one
a class that resolves conflict when a conflict is detected and
resolves conflict by keeping the highest access level bot operator
default class constructor
returns the hash code of this object
returns the hash code of this object
returns true if the two objects are equal false otherwise
returns true if the two object are equals false otherwise
adds an action target to the group
removes an action target from the group
removes an actions target from the container
returns an iterator on the current player
returns an iterator on the elements of the group
default class constructor
returns true if there is an object next false otherwise
returns the target player object
default class constructor
remove the target player object
initialize the object
returns true if the two objects are equals false otherwise
called when the plugin is being loaded and is ready
called when the plugin is being desactivated and wont
returns true if the player has sufficient access level
the class constructor
called when the bot is shutingdown
sets the connection object to use by this plugin
remove the connection object used by this plugin
registers the command used by this plugin
default class constructor
removes the command used by this plugin
sets the bot operator set of the plugin if available at the time
loads the specified plugin
finishes the initialization of the plugin if not in a ready state
returns true if the two objects are equals false otherwise
the default constructor of the class
reloads a specified plugin
default class constructor
registers basics command that every bot should have like
registers the command used by this plugin
removes the command used by this plugin
sets the server commands of the plugin if available at the time
finishes the initialization of the plugin if not in a ready state
this method will add a permission if there is no existing
this method will check to see if the current group
this method exists to ensure that were working with a permission
this method returns a permission from a string the
this method exists to ensure that were working with a groups
this method exists to ensure that were working with a groups
this method returns a user object based on the login supplied
test method to return the 1st permission group in the db
used by analyzers that implement reusable token stream
used by analyzers that implement reusable token stream
returns the next token in the stream or null at eos
returns the next token in the stream or null at eos
returns the next token out of the list of cached tokens
resets the term text payload and position increment to default
expert change the value of this field
returns true if code o code is equal to this
returns a hash code value for this object
prints a user readable version of this query
returns true iff code o code is equal to this
returns a hash code value for this object
returns true if code o code is equal to this
returns a hash code value for this object
initialize an index writer
reset after a flush
deletes all commits except the most recent one
clear the postings hash and return objects back to
write v int into freq stream of current posting
get the segments n file for this commit point
write v int into prox stream of current posting
currently only used to copy a payload into the prox
expert set the similarity implementation used by this index writer
write v int into offsets stream of current
write byte into offsets stream of current
expert return the interval between indexed terms
write v int into pos stream of current
write byte into pos stream of current
expert set the merge scheduler used by this writer
returns a deep clone of this field infos instance
adds field info for a document
assumes the fields are not storing term vectors
calls 5 parameter add with false for all term vector parameters
calls 5 parameter add with false for term vector positions and offsets
returns the name of the file with this extension on
clones this payload by creating a copy of the underlying
if non null information about merges deletes and a
the value of the field as a reader or null
returns the directory used by this index
the value of the field as a tokes stream or null
writes a string
deletes the document s containing code term code
returns true iff a file with the given name exists
returns the time the named file was last modified
set the modified time of an existing file to now
returns the length in bytes of a file in the directory
removes an existing file in the directory
creates a new empty file in the directory with the given name
deletes the document s containing any of the
reads a string
returns a clone of this stream
closes the store to future operations releasing associated memory
checks should be run in the implicit authentication stack
this is the orignal code select code method
returns the build label
sets the build label
returns the buildid
sets the buildid
returns the recipient list
sets the recipient list
returns the build subject prefix
sets the build subject prefix
returns the http url
sets the http url
returns the build properties
sets the build properties
looks for interesting command line arguments
returns the test logs
gets the source directory
sets the source directory
gets the install
sets the install
gets the href test results target path
sets the href test results target path
gets the compile logs directory name
sets the compile logs directory name
gets the href compile logs target path
sets the href compile logs target path
gets the test manifest file name
sets the test manifest file name
gets the drop html file name
sets the drop html file name
gets the drop template file name
sets the drop template file name
generates the html text of an
the command has been executed so extract extract the needed information
creates the widgets that represent the entry area
notifies that the ok button of this dialog has been pressed
notifies that the cancel button of this dialog has been pressed
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
this adds a property descriptor for the start date feature
this adds a property descriptor for the duration feature
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the sampling rate feature
this adds a property descriptor for the name feature
this adds a property descriptor for the unit feature
this adds a property descriptor for the scale feature
this adds a property descriptor for the nominal frequency feature
this adds a property descriptor for the weighting feature
this adds a property descriptor for the value id feature
this adds a property descriptor for the expected level feature
this adds a property descriptor for the timestamp feature
this adds a property descriptor for the measured level feature
this adds a property descriptor for the values feature
this adds a property descriptor for the type feature
this adds a property descriptor for the scope feature
this adds a property descriptor for the scale feature
this adds a property descriptor for the date feature
this adds a property descriptor for the weighting feature
this adds a property descriptor for the validity feature
this adds a property descriptor for the value feature
creates the meta model objects for the package
this adds a property descriptor for the calculation standard feature
this adds a property descriptor for the octave band number feature
this adds a property descriptor for the octave band type feature
this adds a property descriptor for the octave starting band feature
this adds a property descriptor for the reflections number feature
this adds a property descriptor for the name feature
this adds a property descriptor for the scale feature
this adds a property descriptor for the value feature
this adds a property descriptor for the ground effect feature
this adds a property descriptor for the temperature feature
this adds a property descriptor for the descriptor feature
this adds a property descriptor for the channel feature
this adds a property descriptor for the pressure feature
this adds a property descriptor for the mode feature
this adds a property descriptor for the humidity feature
this adds a property descriptor for the type feature
this adds a property descriptor for the peak date feature
this adds a property descriptor for the brand feature
this adds a property descriptor for the meteo condition feature
this adds a property descriptor for the matched feature
this adds a property descriptor for the model feature
this adds a property descriptor for the serial feature
this adds a property descriptor for the type feature
this adds a property descriptor for the certifications feature
this adds a property descriptor for the number feature
this adds a property descriptor for the length feature
this adds a property descriptor for the name feature
this adds a property descriptor for the name feature
this adds a property descriptor for the parent feature
this adds a property descriptor for the infrastructure feature
this adds a property descriptor for the sub network feature
this adds a property descriptor for the network feature
this adds a property descriptor for the x feature
this adds a property descriptor for the y feature
this adds a property descriptor for the z feature
this adds a property descriptor for the name feature
this adds a property descriptor for the sub networks feature
this adds a property descriptor for the level feature
this adds a property descriptor for the name feature
this adds a property descriptor for the location feature
this adds a property descriptor for the closed feature
this adds a property descriptor for the sub network feature
this adds a property descriptor for the size feature
this adds a property descriptor for the name feature
this adds a property descriptor for the code feature
this adds a property descriptor for the name feature
this adds a property descriptor for the code feature
this adds a property descriptor for the type feature
this adds a property descriptor for the area of use feature
this adds a property descriptor for the south latitude feature
this adds a property descriptor for the code feature
this adds a property descriptor for the north latitude feature
this adds a property descriptor for the name feature
this adds a property descriptor for the dimension feature
this adds a property descriptor for the type feature
this adds a property descriptor for the code feature
this adds a property descriptor for the left longitude feature
this adds a property descriptor for the name feature
this adds a property descriptor for the type feature
this adds a property descriptor for the right longitude feature
this adds a property descriptor for the iso a2 feature
this adds a property descriptor for the iso a3 feature
this adds a property descriptor for the valid feature
this adds a property descriptor for the measure feature
this adds a property descriptor for the iso numerico code feature
this adds a property descriptor for the comment feature
this adds a property descriptor for the name feature
this adds a property descriptor for the path feature
this adds a property descriptor for the name feature
this adds a property descriptor for the id feature
this adds a property descriptor for the street feature
this adds a property descriptor for the started feature
this adds a property descriptor for the city feature
this adds a property descriptor for the finished feature
this adds a property descriptor for the province feature
this adds a property descriptor for the country feature
this adds a property descriptor for the status feature
this adds a property descriptor for the enml service feature
this adds a property descriptor for the start date feature
this adds a property descriptor for the end date feature
this adds a property descriptor for the name feature
this adds a property descriptor for the alive feature
sets the fixture for this operation test case
returns the fixture for this operation test case
sets the fixture for this time history sample test case
returns the fixture for this time history sample test case
sets the fixture for this noise event parameter test case
returns the fixture for this noise event parameter test case
sets the fixture for this measure test case
sets the fixture for this calculated measure parameter test case
returns the fixture for this measure test case
returns the fixture for this calculated measure parameter test case
sets the fixture for this time history parameter test case
returns the fixture for this time history parameter test case
sets the fixture for this device test case
returns the fixture for this device test case
sets the fixture for this certification test case
returns the fixture for this certification test case
sets the fixture for this line test case
returns the fixture for this line test case
sets the fixture for this point test case
returns the fixture for this point test case
sets the fixture for this infrastructure test case
returns the fixture for this infrastructure test case
sets the fixture for this network test case
sets the fixture for this receptor test case
returns the fixture for this network test case
returns the fixture for this receptor test case
sets the fixture for this sub network test case
sets the fixture for this subject test case
returns the fixture for this sub network test case
returns the fixture for this subject test case
sets the fixture for this coordinate system test case
sets the fixture for this coordinate reference system test case
sets the fixture for this datum test case
returns the fixture for this coordinate system test case
returns the fixture for this coordinate reference system test case
returns the fixture for this datum test case
returns the fixture for this area test case
sets the fixture for this validity test case
returns the fixture for this validity test case
sets the fixture for this note test case
returns the fixture for this note test case
sets the fixture for this source test case
returns the fixture for this source test case
sets the fixture for this service test case
returns the fixture for this service test case
sets the fixture for this job test case
sets the fixture for this computational model test case
sets the fixture for this address test case
returns the fixture for this job test case
returns the fixture for this computational model test case
returns the fixture for this address test case
sets the fixture for this life test case
returns the fixture for this life test case
this just records the information
this just records the information
create a new model
create a new model
returns the label for the specified type name
this just records the information
create a new model
handles activation of the editor or its associated views
handles activation of the editor or its associated views
handles activation of the editor or its associated views
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
this just records the information
create a new model
this accesses a cached version of the property sheet
handles activation of the editor or its associated views
this just records the information
create a new model
this just records the information
create a new model
this just records the information
create a new model
this just records the information
create a new model
handles activation of the editor or its associated views
handles activation of the editor or its associated views
handles activation of the editor or its associated views
handles activation of the editor or its associated views
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
this just records the information
create a new model
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
handles activation of the editor or its associated views
create a new model
this just records the information
create a new model
handles activation of the editor or its associated views
this just records the information
this accesses a cached version of the property sheet
handles activation of the editor or its associated views
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
return a jlabel containing this picture for embedding in a jpanel
set the origin to be the upper left pixel
set the origin to be the lower left pixel
return the width of the picture in pixels
return the color of pixel i j
set the color of pixel i j to c
save the picture to a file in a standard image format
save the picture to a file in a standard image format
at startup create and show the main frame of the application
add a factor to its weight should be between 0 and 1
compare the weights
precision off 0
init its cmv to the original values
warning the max should be consider as the min
this value is the value to be diffused to the neighboring los
this value correspond to the diffused value of neighboring los
add the diffusion for a updated metadata set return true if the operation
should be call when a node original values have been modified
return true if the current diffusion value is equal to the original value
this is the action called from the struts framework
this is the action called from the struts framework
this is the action called from the struts framework
initialization of the servlet
closes the snmp session
closes the snmp session
cleanly generate an error message to log and to snmp
lists nodes and can optionally filter down based on the node name
adds a node to the node table with the node disabled by default
removes a value from the nodevalue table
adds a row to the connector table based on the values provided
alters the specified connector proirity to the specified value br
removes a connector as specified in the values provided
changes the specified node to inactive in the node table
changes the specified node to active in the node table
adds a row with the defined values to the transformation table
removes rows from the transformation table based on the values provided
list controls br
ping responds with a pong
purges the database of historical data
the sleeper is used for testing purposes or if an
returns the object that was modified
just a convenience method same as get application
this method initializes persistent connections check box
this method initializes j button
this method initializes web navigator text field
this method initializes defaults button
this method initializes restore button
this method initializes web navigator arguments text field
this method initializes apply button
this method initializes this
this method initializes browse button
this method initializes sep
this method initializes interceptors table
this method initializes server port text field
this method initializes interceptors inner table
this method initializes server host text field
this method initializes find free port button
this method initializes j check box
this method initializes this
this method initializes root document text field
returns a servlet output stream suitable for writing binary data in the response
forces any content in the buffer to be written to the client
returns a print writer object that can send character text to the client
returns information about the servlet such as author version and copyright
specifies a comment that describes a cookies purpose
specifies the domain within which this cookie should be presented
reads the input stream one line at a time
writes a boolean value to the client with no carriage return line feed
writes a character to the client with no carriage return line feed
writes a double value to the client with no carriage return line feed
writes a float value to the client with no carriage return line feed
writes an int to the client with no carriage return line feed crlf
writes a long value to the client with no carriage return line feed
writes a string to the client without a carriage return line feed crlf
writes a carriage return line feed crlf to the client
writes a boolean value to the client followed by a carriage return line
writes a character to the client followed by a carriage return line feed
writes a double value to the client followed by a carriage return line
writes a float value to the client followed by a carriage return line
writes an int to the client followed by a carriage return line feed
writes a long value to the client followed by a carriage return line
writes a string to the client followed by a carriage return line feed
this method initializes defaults button
this method initializes restore button
this method initializes apply button
this method initializes interceptor description
this method initializes sep
this method initializes server port text field
this method initializes interceptors table
this method initializes interceptors inner table
this method initializes j tool bar
this method initializes exhaustive view button
removes elements in the list and updates the jlist
adds elements to the list
returns the amount of rows in the table
fills in the table with values for each cell
returns the name of the column specified by the parameter
sets the data contained in the table model
gets the recipe at a specified row
catches the grocery list action and performs the event
adds the panel for adjusting search parameters
creates the check box for search my bar
catches the my bar action and performs the event
catches the about action under the help menu and
builds the panel containing the rating slider
sets the ingredients id as referenced in the database
creates the spinner to adjust minimum toxicity
updates the current page to be the page passed in for example
gets the advanced search panel object to be used outside of
catches the advanced search action and performs the event
catches the home action and performs the event
catches the selected recipes action and performs the event
creates the spinner to adjust maximum toxicity
builds the panel containing the spinners to adjust toxicity
builds and returns the button panel used on the ingredient selector panel
builds a jlist given an array list of ingredients
handles double mouse clicks on the ingredient selector panel and the recipe table
catches the update action and performs the update
catches the bac calculator action and performs the event
gets the rating slider
builds the list of glasses to adjust search
handles double mouse clicks on the recipe table to display recipes
switches between displaying the recipe or displaying the search results
handles displaying recipe when double clicking on recipe in search results list
sets the toxicity for the recipe
updates the grocery list
prints grocery list on the j editor pane
checks if connection to database is still active
handles action sent from gender button and calculate button
sets the private recipe object information so that it can be
updates rating for recipe in database when the rating slider is adjusted
catches the quick search action and performs the event
sets the name of the glass being used
gets the name of the glass being used
check whether the value for an attribute is missing
get the mapping integer value of a nominal value
set the value of the specified attribute
evaluate the classification of the classifier on the test set
set the name of the attribute
add an instance to the data set and update the statistics
replace missing values of instances with the most common values in the
get the number of classes of the target attribute
get the number of correctly classified instances
get the replace values for a missing attribute
caculate the distance between two distinct instances
get the data set
get the training dataset
set the training dataset
check if an instance is correctly classfied by comparing the label value
set the type of distance weighting
get the number of intervals
set the number of intervals
get the class that a label value belongs to
get the number of values for nominal type or the number of
gives the webapps context directory
gives the boards name
gives the boards full name
gives the boards url
gives the maximum number of messages of the history
initializes the job before executing the main work
cleans the job before leaving
gives the maximum length of the incoming messages
gives the name of the storage factory to use
gives the date of the last modification
sets the next post identifier
sets the gmt date of the last modification to now
sets the backends history
sets the user base
gives the number of posts in the history
gives the users email address
gives the users password
gives the users roles comma separated list
checks the given password matches the users one
sets the roles
add the roles defined in the given comma separated list
gives the file where the users list is saved
removes all the roles of this user
gives the number of users
adds a role to this user
return the default roles
tells whether the base contains the given user
gives the user with the given username
test method for
test method for
test method for
test method for
change the maximum capacity of this map
get discovery service
install a managed object
execute a command
sleep for millis milliseconds
shutdown kernel and run a command after
read a 2 byte little endian word starting at address
shuts down all components of the system
returns cc card type
check der encoding decoding of a cvcertificate should not affect its data
check validate sequence factory
check oid should have been set to a specific value
check validate cvcprovider
check oid should have been set to a specific value
check der encoding decoding of a request should not affect the data
check der encoding decoding of a cvcauthenticated request should not affect the data
puts error info
check verify a requests outer signature
check only specific subfields can be added to a specific sequence
check a specific subfield may only be added once
creates a hash from user data info cc card
check der encoded cvcauthorization template byte array should have specific contents
compare num bi data from cert and cc card
check validate algorithm util
check der encoding of length must be done by specific rules
check decoding of length
check trimming a byte array should remove all leading zeroes
check decoding of authorization field
check encoding of the oid field
returns the current position of the sprite
this sets the active animation
used to populate the list of possible animations
used to retrieve which image should be drawn to the screen
used by the get image function to get the active animation
criar text fields
reescreve o textpane com a string s
get family and biblio
create soap request to retrieve family and bibliographic data
clean soap message
filter epo filter
create soap request to retrieve bibliographic data
create soap request to retrieve bibliographic data
organize soap response
fetch url document
get abs tract
set abs tract
html clean up cleans html source to be deprecated
allow callers to add extra bindings
returns age for this user
returns friends in a list
returns prefered language
returns a list of people that might be of interested to this user
accepts a friend
returns access level to friends resource
adds a firend
adds a friend
returns 0 9 0 being most restrictive
deletes a friend
deletes a friend
returns 0 9 0 being most restrictive
builds the hud for the progress bar
plays the next track
plays the previous track
sets the progress bar value
gets the music track by providing the resource
sets the text
gets the sound effect by provinding the resource
rises the lid
lowers the lid
gets whether the lid is risen or not
gets the lid type
resets the ball position placing it over the launch pad
gets the static physics node
rises the right flipper
launches the ball
rises the left flipper
picks the ball which is going to be launched
rises the left lid
tells the bumper cylinder that a contact has been done between the ball
gets the bumper points
rises the right lid
resets the physics dynamics
resets the position of the ball
lowers the right flipper
gets the dynamic physics node
lowers the left flipper
launches the ball
launches from left chance launcher
retracts the launcher
launches from right chance launcher
gets the right flipper
gets the left flipper
updates the flipper physics
rises the flipper
gets the left chance launcher
gets the menu position
gets the right chance launcher
gets the flipper type
launches the ball
sets the text
gets the text
updates the pinball machine state
sets the scale
gets the scale
adds a menu page
activates a menu page by its name
gets the ball catcher
moves the selection up
moves the selection down
gets the left bumper
resets the menu
gets the right bumper
gets the launcher obstructor
performs the action
selects the previous menu item
positions the first text aligning it to the right
positions the second text aligning it to the right
selects the next menu item
sets the first text
sets the second text
resets this menu page
performs the action
sets the color
sets the text
sets the position
sets the scale
gets the position
sets the position
gets the text height
gets the text weight
sets the menu page node for this menu item
updates the position
draws the text in the screen
performs the action associated with this menu item
gets the energy
resets the energy bar
gets the action callback
loads existing high scores file
gets the score from a string
gets the handler for keyboard controls
gets the handler for mouse controls
sets whether the button press is required or not
gets the up vector
sets the up vector
gets the camera handler
calculates gravity according to the angle of the table
gets the near x coordinate
sets the near x coordinate
gets the far x coordinate
sets the far x coordinate
gets the near y coordinate
sets the near y coordinate
gets the far y coordinate
sets the far y coordinate
gets the near z coordinate
sets the near z coordinate
gets the far y coordinate
sets the far z coordinate
initialises the key bindings for the music
adds a camera boudnary to this camera handler
creates the transformation matrix
updates the camera
gets the transformed location
gets the transformed direction
gets the transformed up vector
gets the transformed left vector
sets the pinball machine
gets whether parallel projection is being used or not
sets the camera movement as perspective
sets the camera movement as parallel
normalizes the camera
gets the width
sets the node map
gets the height
gets the u texture coordinate for a pixel in x coordinate
gets the v texture coordinate for a pixel in x coordinate
gets the node
sets the position
sets the maximum
sets the scale
sets the up axis
gets the move speed
sets the move speed
sets the camera movement as perspective
sets the camera movement as parallel
gets the physics node
gets the pinball machine
used in conjunction with lock in order to release a previously assigned
gets whether debugging is enabled or not
sets fps text enabled or not
sets sound fx on or off
sets the textures on or off
sets the textures on or off
sets the room on or off
toggles the wireframe state
toggles physics information
toggles depth information
prints the camera information
prints the memory report
takes a screen shot
toggles the mouse grab or release it
gets the launcher energy bar hud element
gets the input handler
resets chance luanchers
initializes the texture map
populates the textures map
removes the textures
restores the textures
removes the room
restores the room
handles activation of the editor or its associated views
handles what to do with changed resources on activation
shows a dialog that asks if conflicting changes should be discarded
makes the sub action groups
extends the superclass implementation to set the context in the subgroups
fills the context menu with the actions contained in this group
adds the actions in this group and its subgroups to the action bars
updates the actions which were added to the action bars
runs the default action open file by delegating the open group
handles a key pressed event by invoking the appropriate action
create the model
initializes and registers the context menu
called when the context menu is about to open
sets the content provider for the viewer
sets the label provider for the viewer
adds the listeners to the viewer
creates the action group which encapsulates all actions for the view
handles an open event from the viewer
handles a double click event from the viewer
this is used to track the active viewer
this method is called when finish button is pressed in
the worker method
this method is called when the plug in is stopped
defines the initial actions for a page
execute the command
this creates a context menu for the viewer
the field editor preference page implementation of this code ipreference page code
this adds a property descriptor for the nom feature
this adds a property descriptor for the login feature
this adds a property descriptor for the password feature
this adds a property descriptor for the nom feature
creates a new adapter for an object of class
this adds a property descriptor for the chemin feature
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the nom feature
this adds a property descriptor for the montant feature
this adds a property descriptor for the ferme feature
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the montant actif feature
creates the meta model objects for the package
creates the meta model objects for the package
this adds a property descriptor for the montant feature
this adds a property descriptor for the categorie feature
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the nom feature
this adds a property descriptor for the libelle feature
this adds a property descriptor for the pointe feature
this adds a property descriptor for the date feature
this adds a property descriptor for the note feature
this adds a property descriptor for the transfert feature
this adds a property descriptor for the revenu feature
adds the listener to the collection of listeners who will be notified when
called just before the popup is droppped
creates the popup content
returns true if footer is visible in the popup calendar
removes the listener from the collection of listeners who will
sets the text widget value preventing fire of modify events
sets the font that the receiver will use to paint textual information to
sets the footer of popup calendar visible or not
sets the grid visible or not in the calendar popup
sets the flag to always display the decimal separator even if the decimal
sets a new image to display on the button replacing the default one
sets the locale used both by the input mask and the calendar
sets the theme to apply to the calendar popup
disposes of the operating system resources associated with the receiver
returns code true code if button is displayed only when the combo has
manages popup shell events
sets the editable state
manages text widget events
disconnect from the pop3 server
returns the number of messages in the users inbox
returns the number of unread messages in the users folder
returns the number of new messages in the users folder
get the message object corresponding to the given message number
handles the message being sent from flex to the code mail adapter code
initializes the code mail adapter code with the properties
verifies that the code mail adapter code is in valid state before
starts the adapter
stops the adapter
casts the code destination code into code message destination code
invoked automatically to allow the code ejbadapter code to setup its corresponding
returns whether this xerializer will output the collection implementation
sets whether this xerializer will output the collection implementation
excludes the given method name declared in the given class from being
derives an appropriate element name from a method name
includes the given method name declared in the given class to be
determines if the given method is to be written out to xml
determines if the given method is explicitly included as a method to
maps the given tag name to the given class
return the setter method with the given name
adds a custom xerializer for the given class
deserializes the input character stream to an instance of the given class
deserializes the input character stream using the given document builder
deserializes the given dom document
deserializes the given dom document to an instance of the given class
writes an xml for the given object
get second page of users friends
begins new session
resumes current session with saved access token and secret
deletes current session information
saves access token and token secret in shared preferences
removes access token and token secret from shared preferences
erstellt und gibt ein user entity data objekt zurueck
erstellt und gibt ein task entity data objekt zurueck
beschreibt die instanz und deren inhalt fuer debugging zwecke
beschreibt die instanz und deren inhalt fuer debugging zwecke
create and return a test entity data object populated with the data from
describes the instance and its content for debugging purpose
creates a new project facade object
creates a new user facade object
method set action
override update while connecting to avoid flicker
not yet implemented
returns the message1
paint the applet
sets the message1
sets the name label
release any acquired resources
returns the percent done
returns the task nummber
sets the end date
sets the percent done
sets the start date
sets the task nummber
create and return a user entity data object populated with the data from
returns the message2
returns the message3
returns the roleid
sets the message2
sets the message3
sets the roleid
reset all properties to their default values
unused function of the interface
unused function of the interface
unused function of the interface
updates one element of the table
adds row to the table and initializes everything to a
access function for the time point corresponding to the
makes changes based on contents of the two spreadsheets of
access function for one of the two nuclei table model array elements
called from menu action delegates work to the nuclei table model
returns one entry from the zip file
reads one line from a zip entry
closes the currently open entry and cleans up
accesses the zip file object of this zip nuclei instance
where the key is the parent name
create a vector containing the string parts of a newick
debugging function to show the vector of strings created
return either s or a null string depending
concatinate the elements of the vector of strings from preorder
called from ace menu bar on file open action
called from ace menu bar on quickopen action
this is where the real parameters of a cell are set
used only by canonical tree
access function for cell start time
access function for cell end time
access function for cell fate
access function for plane where cell identified rounded to an int
access function for cell x position at birth
access function for cell y position at birth
required by tree selection listener interface
access function for setting end time division or death of cell
access function for setting the ultimate fate of the cell
lifetime is difference between end time and birth time
called from ace tree when no nuclei file was specified
used in rebuild tree action
major access function to the array of nuclei vectors
access function for the root node of this tree
access function for a hash permitting cells to be
access function for zip nuclei member
create a string version of an int padded with leading zeros
create a string representation of int with leading
fast file copy utility function
returns a polygon approximation to a circle of radius r
if the images in the zip archive are 8 bit tiffs
called from image window when user clicks a nucleus
sets the value of this text element using a string
performs common initialisation for the constructors
sets the value of this text element using an integer
parses the xml and returns one top level xml class element
checks to see if this text element contains a numeric value
gets the value of this text element as an integer
checks the content of the string and parses it if possible
returns formatted or unformatted xml source
writes a log message out
gets the name part of the tag
sets an attribute of this element
gets the specified attribute of this element but returns given default
removes the named attribute
finds out whether an attribute exists
gets the number of child elements this element has
finds out whether this element has any child elements
removes the children from this element
adds a child to the end of this element
inserts a child into this element
adds a child to the end of this element
inserts a child into this element
gets a child from the specified place in this element
replaces a child element with the one given
removes a child from this element
removes a child from this element
finds a named child tagged element
finds the index of a named child tagged element
sets the list of children of this element
sets the xml source code location information for this element
adds sprite to be managed by this instance
finds and returns the sprite instance which area corresponds to the
calls mouse dragged event to the current sprite instance generally set
adds a sprite action listener to the list of listeners
removes a sprite action listener from the list of listeners
sets current sprite instance back to null after calling its corresponding
sets current sprite to the sprite instance that which area corresponds to
fires a sprite action event to all sprite action listeners added to this
method for printing graphic elements on screen
default implementation for mouse drag events
default implementation for mouse pressed events
default implementation for mouse released events
sets if the sprite must be disabled from attending mouse events after a
returns the total time of the sprite drag movement
sets if the sprite must be moved to its mapped destination after a
resets the coordinated of the sprite to its original coordinates
default empty implementation
default empty implementation
default empty implementation
add a obstacule and adds it to the the sprite manager
default empty implementation
boolean method used to check if mouse event occurred inside screens
creates a sprite instance and adds it to the applets sprite collection
creates an sprite and adds it to the game instance collection
graphic filter that applies a brighter effect to images
graphic filter that applies a resize to the images
sets if the sprite must be moved to its mapped destination after a
method that call a handle during a phase change
prints all graphic elements specified to this game board
resolve package names replacing
register in the server database that the user gave up using this sprite
register in the server database that the user removed this sprite from
register in the server database that the user put this sprite on the
register in the server database that the user moved this sprite on the
subclasses may customize its own sprite manager class adding specific
register in the server database that this sprite collided with another
register a graphic filter to handle a image sprite
get the jmxservice url built from the protocol used and host names
get a jmxconnector from a url
sets the object name
reads next record from input
will begin the game
receives the coordinates for both players
calculates the distance between two points
l n l j e g
p x h db p x h
a j e g q x true q x
x a w a c e b
e h j n b z w m b
v c al1 shop buy order list l a c e b
ub q v c b z w s server message m b
s x o a e h n
location a location b
location a location b
spawn task n b
l n hp b
l n mp b
i u w f n g b v b v id
i u w f n g w x l
i u w f n g w y l
i u w f n g a n v o
l n b
l n v c a p p b g m b
l n 50 x v c a p p b g m b
w w u b
l n c x g b
l n g t f n g t
w v c q o a e g m
h s v c p p b g m b
h s v c t o b z w m b
w spr u x b spr w weapon type f a1
w ubid p b
b v x i w b
b v a u b n n b
b v a f x y i e b b
b v a y b g e t a s b
b v a y b g e t o b
b v a a c e g p b
a c e b br
o l a w g
d a w g
a w g off a f
w w b
w point a rectangle b
w w c b
w w c b
w w w b
t o p p b g b s s who amount
db a r l n v i u w f n g
v c x g w b
v c ipk b
give item reward to the player
return true if this l2 npc instance has drops that can be sweeped
set the spoil state of this l2 npc instance
return true if the l2 character cant move stun root sleep overload paralyzed
exit all toggle type effects
public method that iterate entire collection
public method that iterate entire collection
overridden in l2 grand boss instance
returns whether the queue is ready to send the next request
copy all files from the osmtracker external storage location to
deletes the track with the specified id from db and sd card
deletes all tracks and their data
closes the midi player
reads the midi file and returns a denotator of form score
the the factor that each time value is multiplied with
sets the default tempo in microseconds per quarter note
returns the default tempo in microseconds per quarter note
sets the initial programs for the channels given by
sets the initial program for a channel
initializes various parameters from the sequence
adds a new empty row to this table
adds a new row with the specified values to this table
resets all selected coordinates to null
processes the sequence that has been read in
creates a new sequence that can be filled with tracks
plays the current sequence
processes a midi event in a track
pause the currently playing sequence
resumes the currently playing sequence
returns the wallpaper rubette this table belongs to
returns the number of morphisms currently in the table dynamically changed
sets the tempo scale
returns the morphism temporarily saved for the indicated row
returns the start of the range temporarily saved for the specified morphism
returns the current tick position of the playing sequence
processes a note on event
returns the end of the range temporarily saved for the specified morphism
sets the current tick position of the playing sequence
processes a note off event
returns the current position of the playing sequence
processes a control change event
sets the current position of the playing sequence
sets the shown x coordinate to the specified one
sets the shown y coordinate to the specified one
initializes various data structures before a track is processed
the value returned is the morphism selected in the dialog
returns true iff the sequencer is open and ready to play
processes all events coming from the combo boxes
returns true iff the sequencer is playing
defines one input and one output
when the cell is double clicked the select coordinates dialog opens
called when the rubette is run
the value returned are the coordinates selected in the dialog
creates an onset denotator from a key event
replaces the current morphism by the specified one and updates the dialogs components
creates a pitch denotator from a key event
sets the selected subforms and updates the combo boxes
creates a midi program change event at the specified onset in the given
creates a standard instance of wallpaper rubette
creates a loudness denotator from a key event
creates a midi tempo event at the given tick setting the
processes the events coming from the ok button
creates a duration denotator from a key event
returns the fact that wallpaper rubette belongs to the core rubettes
returns the name of this rubette
creates a voice denotator from a key event
returns the fact that this rubette has properties
applies the changes of the morphisms table and the rubette properties
reverts this properties and the changes to this morphism table
returns the table with all morphisms and their characteristics for the wallpaper
sets the expression string for the compiler
sets the expression string for the compiler
returns the virtual machine with the code compiled from
parses the expression string assuming there are no
evaluates denotator code input code at the
parses the expression string assuming there are
changes address of the input denotator using the configured
returns true iff the token is the end of string
removes a specific node from its containing soundscore or
returns the smallest index representing an active layer
extracts the node of a satellite or the note of a modulator
converts a hierarchical score to the specific type represented by this class
this is a convenience method that subclasses can call upon
new implementation where all shorter paths and there the paths having smaller last
returns a score denotator containing a note for every specified pitch
starts a new iterative melody with the specified note distance
sets a new parent form and searches its tree for simple forms
returns the parent form currently set
adds a note with the specified pitch to the iterative melody
removes all rows in this table
removes all rows that are currently selected
returns the current iteratively generated melody
moves the currently selected rows up one row
moves the currently selected rows down one row
resets all values of the specified column to null
returns a new note denotator with the specified parameters
returns a new note denotator with the specified parameters
find kd tree node whose key is nearest neighbor to
sets the form of the denotators to be altered
updates the local degrees for each alteration dimension according to the specified
restores the previously buffered local degrees
reverts this properties and the changes to this jmorphing dimensions table
returns the number of alteration dimensions
returns the simple form to be altered by the specified dimension
returns the start degree of the specified alteration dimension
updates the local degrees if the global degree changes
returns the end degree of the specified alteration dimension
returns the scale map used by this rubette
returns the current text in the statusline of this rubettes properties window
processes all events coming from the number of notes slider
processes all events coming from the presets combo box
returns the fact that morphing rubette belongs to the core rubettes
shows the splash screen
hides the splash screen
displays a message in the splash screen
adds a new link to the connector
sets the current rubette manager
returns the jrubette where the problem occurred
returns the jnetwork where the problem occurred
returns true iff the point number code i code is in
returns the current rubette manager
returns the world x coordinate of the current pointer position
returns the world y coordinate of the current pointer position
adds the list of abstract rubettes to the jrubette list
sets the viewport of the window
zooms the viewport by the given factors
adds the specified abstract rubette to the jrubette list
sets the current action
adds a new data point
removes the specified abstract rubette from the jrubette list
adds an array of new data points specified as two
remove all points
loads all plugins
sets the network to run
sets a list of rubettes to run in the given network
adds a new problem to the list of problems
adds a list of new problems to the list of problems
draws axes on the view canvas
begins running of the network
returns the real part of the complex number rounded to an integer
draws data and transformed points on the view canvas
returns the real part of the complex number rounded to a long
returns the real part of the complex number as a float
draws the background of the selections
returns the real part of the complex number as a double
returns the complex number 1 i0
draws the points of the selections
returns the complex number 0 i0
returns one character string in the ring string
returns the factor for the character string
returns the sum of this number and code c code
recomputes the screen coordinates from the world
returns the sum of this and code x code
returns the sum of this number and code x code
add code x code to this
adds the complex number code c code to this number
returns the difference of this and code x code
subtract code x code from this
returns the difference of this number and code c code
starts a new selection and makes it current
returns the product of this and code x code
returns the difference of this number and code x code
multiply this by code x code
subtracts the complex number code c code from this number
returns this with all factors negated
returns the product of this number and code c code
negate all factors in this
returns the product of this number and the real number code x code
returns this scaled by code x code
multiplies this number with code c code
scale this by code x code
returns the quotient of this number by code c code
adds a new point to the current selection
two ring strings are equal if they have the same
returns the quotient of this number by code x code
adds a new point to the current selection
divides this number by code c code
add string code word code with factor code factor code to this
divides this number by code x code
removes a point from the current selection
returns the inverse of this number
subtract string code word code with factor code factor code to this
inverts this number
draws a rectangle indicated the region to be zoomed into
returns the negative of this number
negates this number
returns the conjugate of this number
returns true iff this number is 0 i0
returns the rational 0 1
returns true iff this number is 1 i0
returns the rational 1 1
returns true iff this number is 0 1
returns true iff the imaginary part is zero
the most important event is mouse clicked
returns the absolute value of this number
returns the sum of this number and code r code
returns the argument of this number
returns the sum of this number and the integer code n code
returns the square root of this number
adds code r code to this number
returns the natural logarithm of this number
adds the integer code n code to this number
returns the exponential of this number
returns the difference of this number and code r code
on mouse entering the window the cursor must be changed
returns this number raised to the power code c code
returns the difference of this number and the integer code n code
subtracts code r code from this number
returns the list showing all rubettes
subtracts the integer code n code from this number
returns the product of this number and code r code
returns the arcsine of this number
returns the product of this number and the integer code n code
returns the arccosine of this number
shows an error dialog with the specified message
multiplies this number with code r code
returns the arctangent of this number and code c code
multiplies this number with the integer code n code
whenever the mouse is moved the state
returns hashcode for this number
returns the quotient of this number and code r code
returns the quotient of this number and the integer code n code
this is called when the component is added to
displays an error message in the status bar
divides this number by code r code
compares this number with code object code
divides this number by the integer code n code
returns the inverse of this rational
inverts this rational
displays a warning message in the status bar
returns this number
negates this rational
returns the numerator of this rational
returns the denominator of this rational
displays an information message in the status bar
returns the absolute value of this rational
converts this rational to a double
sets the status bar to code msg code
returns the string representation of this rational
clears the status bar
returns the hashcode for this rational
reduces numerator and denominator to least values
updates title of the main window
discards the current project
discards the current project
shows dialog asking the user if he wants to save current project
returns the module that was required
returns the actual module
opens a project file replacing the current project
reverts to the file stored on disk
sets the code i code code j code element of the
sets the code i code th element of the translation
returns the linear part
returns the morphism i f i of the difference i f g i
returns the morphism i g i of the difference i f g i
leaves rubato composer
returns the linear part
returns the translation part
returns the linear part
embeddings are always module homomorphisms except for
returns the current directory
returns the mappings polynomial
sets the current directory to code file code
returns the linear part
adds the rubette selected in the rubette list to the visible jnetwork
returns the linear part
returns the constant value
creates a new rubette from code rubette code in code jnetwork code
returns the linear part
create a morphism in module code module code translated by code element code
returns the translate i t i of i h x x t i
returns the value of the morphism evaluated at the zero of the domain
returns a constant morphism with the domain of this
if true then this is a module homomorphism
creates a new jnetwork
if true then this is a ring homomorphism
if true then this is a morphism between rings
casting morphisms are never ring homomorphisms
compares two module morphisms
adds code jnetwork code and give it the specified name
returns the linear part
returns the morphism i f i from i a f i
returns the translation part
creates a new macro rubette view based on the specified model
returns the scalar i a i from i a f i
removes the visible jnetwork
returns the element that failed to be mapped
returns the morphism where the failure occurred
removes the specified jnetwork
removes the jnetwork that has the specified network model
makes the specified jnetwork visible
gives the specified jnetwork visible a new name
update all jnetworks
returns the currently visible jnetwork
enables disables the controls
finish the current running
starts running of the currently visible jnetwork
runs the rubettes in code run list code in the
returns the unit vector with 1 at position code i code
returns true if this module is a ring
a ring has just one component module itself
here a ring is not a null module
the underlying ring of a ring as a module is itself
returns a morphism that translates by code element code
removes all problems for the given jrubette from the problem list
returns the complex value contained in this element
raises this ring element to the power code n code
returns the ring this element is a member of
compares this number ring with the number ring code r code
returns the unrestricted module at the origin of this restricted module
returns the morphism responsible for the restriction
returns the number of factors of this product element
returns the factor at position code i code of this product element
returns the factor at position code i code of this product element
returns the number of factors of the underlying product ring
convenience method for getting the string in a code string element code
returns the code i code th product element component
returns the complex at index code i code
returns the value at index code row code code col code
returns the value at index code row code code col code
returns the value at index code row code code col code
returns the value at index code row code code col code
sets all values of this matrix to code value code
returns the submatrix containing all rows from code from row code
sets all values of this matrix to code value code
returns the matrix containing all rows and all columns of
returns the transpose of this matrix
returns the submatrix containing all rows from code from row code
returns the adjoint of this matrix
returns the matrix containing all rows and all columns of
returns the transpose of this matrix
sets all values of this matrix to code value code
returns the quadratic form of this matrix
returns the submatrix containing all rows from code from row code
returns this matrix scaled by code scalar code
returns true iff row code r code is zero
returns the adjoint of this matrix
compares this matrix to code object code
returns the matrix containing all rows and all columns of
returns this matrix raised to code exponent code
returns the transpose of this matrix
returns the number of coordinate forms
returns a coordinate form
returns the quadratic form of this matrix
sets the labels for the factors of the form
returns this matrix scaled by code scalar code
returns the adjoint of this matrix
returns the index corresponding to the given label
returns the label corresponding to the given index code i code
returns this matrix raised to code exponent code
returns true iff this form has labels
returns the minor at code row code code col code
returns a default denotator of this limit form
returns a default denotator of this limit form with the given address
returns the euclidean norm of this matrix
returns the quadratic form of this matrix
returns the 1 norm of this matrix
returns this matrix scaled by code scalar code
returns this matrix raised to code exponent code
returns this matrix normalized in case of a column matrix
returns the form of this denotator
returns the dot product of this matrix and code m code
returns the number of coordinates of the denotator
sets the submatrix starting at code row code code col code
returns the factor at position code i code
returns the sum of this matrix and code m code
returns the dot product of this matrix and code m code
sets the submatrix starting at code row code code col code
returns the difference of this matrix and code m code
returns the minor at code row code code col code
returns the product of this matrix and code m code
returns the sum of this matrix and code m code
returns the euclidean norm of this matrix
sets the submatrix starting at code row code code col code
returns the form of this denotator
returns the difference of this matrix and code m code
returns the 1 norm of this matrix
returns the minor at code row code code col code
returns the sum of this matrix and code m code
returns the product of this matrix and code m code
returns the name of the denotator as a denotator
returns the difference of this matrix and code m code
returns the euclidean norm of this matrix
returns the name of the denotator converted to a string
returns the product of this matrix and code m code
returns the frame coordinate of the denotator
returns the 1 norm of this matrix
returns the minor at code row code code col code
compares the names of two denotators
returns true iff this denotator has the same name
returns true iff this denotator has the same form
returns the euclidean norm of this matrix
returns the minor at code row code code col code
returns the euclidean norm of this matrix
returns the 1 norm of this matrix
replaces reference denotators by respective name denotators
returns the sum of all the coefficients of this matrix
compares two list denotators
returns the type of the form
returns the type of the form
returns the number of coordinate forms
returns a coordinate form
returns the number of coordinate forms
returns a default denotator of this simple form
returns a coordinate form
returns a default denotator of this simple form with the given address
returns the single coordinate form
returns the module of this simple form
returns a default denotator of this list form
returns a default denotator of this list form with the given address
checks denotators of the same form for equality
returns true iff this power denotator is a subset of code d code
returns the simple form of the denotator
returns true iff this power denotator contains code d code
returns the internal index of denotator code d code
returns the actual received address
returns the expected required address
returns the vertex at position code i code
sets the vertex at position code i code to i morphism i
inserts the vertex code morphism code at position code i code
returns the limit form of this denotator
returns a copy of this module morphism map
returns true iff this morphism is an identity morphism
returns true iff this morphism is representable
returns the form of the denotator
returns the element resulting from applying the morphism to zero
deletes all vertexes in this diagram
returns the module morphism
appends an arrow from vertex code i code to vertex code j code
returns true if this diagram is equal to the specified object
returns the number of coordinates of the denotator
returns the domain of the map
returns the codomain of the map
returns the factor at position code index code
compares two power denotators
sets the factor at position code index code to code d code
returns the factor with the given label
inserts the factor code d code at position code index code
returns the factor in position code i code
appends the factor code d code
returns the name of the form as a string
prepends the factor code d code
returns the factor at position code index code
returns the number of factors
returns the identifier of the form
returns the position index of factor code d code
appends the factor code d code
returns the sole factor of the colimit denotator
sets the name of the form as a denotator
returns true iff the list is actually a set i
sets the name of the form as a denotator
returns a module morphism map with the given new domain
removes duplicates from the list
checks denotators of the same form for equality
sets the identifier of the form
compose code morphism code with the morphism contained
removes the factor at code index code
returns the dimension of a form using default maximal depth
returns the module element
returns the number of factors
returns the dimension of a form
returns the position index of factor code d code
compares two forms
form object cannot be cloned
returns the sum of this map with the given map
returns true iff this form is equal to the specified form
returns the difference of this map with the given map
returns the integer contained in a zelement denotator
print form to stdout
returns a copy of this list morphism map
returns the modular integer contained in a zn element denotator
resolves the references resulting from parsing
print form to a stream
returns a hash code for this form
returns a copy of this module morphism map
returns the double contained in an relement denotator
registers this form with the specified repository
returns a hash code of this module morphism map
returns the type of the form
tests for equality of two power forms
resolves all references
compares two colimit denotators
returns the rational contained in a qelement denotator
returns a hash code of this list morphism map
returns a default denotator of this power form
returns a default denotator of this power form with the given address
checks for equality
returns a copy of this list morphism map
returns the complex number contained in a celement denotator
compares two limit denotators
returns the type of the form
checks denotators of the same type for equality
resolves all references
returns the zstring contained in a zstring element denotator
returns the name of the form as a denotator
returns the name of the form as a string
returns the identifier of the form
sets the name of the form as a denotator
sets the identifier of the form
compares for full equality in the case of non registered forms
returns the dimension of a form using default maximal depth
returns the dimension of a form
returns the actual received form
returns the expected form
returns a hash code of this list morphism map
returns a coordinate form
returns the string contained in a zstring element denotator
returns the number of coordinate forms
checks denotators of the same type for equality
returns the factor contained in the map
sets the factor with the given index in the map
returns a coordinate form
returns the name entry in this name denotator
returns true iff the given form is a builtin
returns true iff the given denotator is a builtin
returns a shallow copy of this diagram
registers a denotator with repository
returns the module morphism map
compares two name denotators
returns a default denotator of this colimit form
returns a default denotator of this colimit form with the given address
returns the module morphism map
returns the module morphism
returns a power form with the given base form
returns the group this rubette belongs to
sets a new property
returns the property of the given code key code
returns the module morphism
returns the swing component for the properties dialog
makes changes in the properties dialog permanent
returns a list form with the given base form
returns the arity of the function
returns the ith argument form
returns the result form
returns the name of the function
checks if the function has the given signature
returns the swing component for the view
returns a limit form with the given factors
compares two simple denotators
returns true iff this rubette has an info label
returns a colimit form with the given factors
implements the compare method required by the comparator interface
returns a long description
returns a predicate that is the negation of this
returns the tooltip for the input connector number code i code
returns true if p is compatible to this
returns the tooltip for the output connector number code i code
adds all coordinate denotators from code d code to the extension
returns a simple form with the given module
adds all coordinate denotators from d to the extension
adds code denotators code to the extension
creates a new instance from a protoype
returns the primitive function in this scheme value
checks denotators of the same type for equality
removes the given form from the repository
removes the forms in the list from the repository
removes the given denotator from the repository
sets the car of this sexpr
sets the cdr of this sexpr
removes the denotators in the list from the repository
returns a new empty environment pushed on top of this
returns the environment that this environment is linked to
binds the symbol code sym code to the expression code sexpr code
removes all temporary forms and denotators from the repository
binds the symbol with string representation code sym code
returns the expression bound to the symbol code sym code
binds the symbol with string representation code sym code
binds primitive function code p code to its
extends this environment with bindings for each
returns the system scheme environment
resets this environment to contain only standard
resets this environment to contain only standard primitives
returns the scheme code
sets the scheme code
returns the denotator in this scheme value
closes the port
returns the input stream of this input port
clears the collections of temporary forms and denotators
returns the print stream of this output port
returns the rational number in this scheme value
returns the environment of this closure
returns the form in this scheme value
returns the arguments of this closure
returns the body of this closure
two triples are equal if their respective components are equal
the comparison of triples is according to lexicographical order
resets the initial environment to the global environment
returns the real number in this scheme value
two pairs are equal if their respective components are equal
the comparison of triples is according to lexicographical order
sets the initial environment to code env code
starts the xml file
sets the runinfo for the next evaluation
ends the xml file
parses an xml file from the specified reader
parses and evaluates the code code s code in the
sets the number of spaces for each indent level
evaluates the specified list of expressions in the
opens an xml block with the given tag name
evaluates the specified expression in the
opens an xml block with the given tag name and the specified
opens an xml block with the given tag name and the specified
creates an inline xml element with the given tag
returns the current output port
parses an xml file contained in the specified string
returns the complex number in this scheme value
returns the current input port
closes the xml block opened with open block
closes the xml element opened with open inline
creates an empty xml element
appends the specified error string to the list of errors
creates an empty xml element
appends the specified error string to the list of errors
adds the specified text to the xml file with and
appends the error contained in the given exception to the list of errors
converts the specified string for use with xml
adds the specified text to the xml file with no conversion
resets the xml reader
writes the xml representation of the given module under the
writes the xml representation of the given module element
start parsing at the root code element code
writes the xml representation of the given module morphism
writes the xml representation of the specified form
writes a reference to the specified form
parses toplevel module definition
writes the xml representations of the specified list of forms
writes the xml representation of the specified denotator
writes the xml representations of the specified list of denotators
print out the string code c code repeated code n code times
parses toplevel module element definition
writes a reference to the specified denotator
strips the directory name of the current file from code path code
parses toplevel module morphism definition
parses toplevel denotator definition
parses toplevel denotator definition
parses the form starting from the given xml element then
parses toplevel network definition
parses toplevel network rubette definition
parses toplevel scheme code
displays the modules that have been parsed
displays the module elements that have been parsed
displays the forms that have been parsed
displays the denotators that have been parsed
returns the module element for the given name
returns the module for the given name
returns the module morphism for the given name
returns the denotator with the given name
returns the form with the given name
returns the scheme code
adds the given form to the list of forms
adds the given denotator to the list of denotators
returns an absolute path based on the specified relative path
read a byte of memory connected to the processor
write a byte of memory connected to the processor
connect memory to the processor
add an offset to the bus fault address
accumulate a clock cycle
accumulate clock cycles
get the total number of clock cycles elapsed
set the total number of clock cycles elapsed
get the constructor for the instructions operand
instantiate the operand of the instruction
get the operand of the instruction
get the processor on which this instruction is executing
get the opcode of the operations instruction
run from the current program counter
get the value of the program counter
set the value of the program counter
get the value of the accumulator
set the value of the accumulator
get the value of the x index register
set the value of the x index register
get the value of the y index register
set the value of the y index register
get the value of the stack pointer
set the value of the stack pointer
get the state of the carry flag
set the state of the carry flag
get the state of the decimal mode flag
set the state of the decimal mode flag
get the state of the interrupt mask flag
set the state of the interrupt mask flag
get the state of the sign negative flag
set the state of the sign negative flag
get the state of the overflow flag
set the state of the overflow flag
get the state of the zero flag
set the state of the zero flag
get the value of the processor status register
set the value of the processor status register
verify that code length code bytes can be read
writes code byte code to the byte wrapper and advances the current position
writes a byte array to the byte wrapper and advances the current
returns the number of remaining bytes in the byte array
advances the current position until the specified code alignment code is
returns a string representation of the byte wrapper
get the length in bytes of the encoded handle
to be implemented
to be implemented
to be implemented
to be implemented
to be implemented
to be implemented
to be implemented
to be implemented
to be implemented
to be implemented
to be implemented
to be implemented
to be implemented
to be implemented
to be implemented
to be implemented
to be implemented
to be implemented
to be implemented
to be implemented
to be implemented
to be implemented
to be implemented
to be implemented
read and decode array data to the end of bb
find the size of the bytebuffer required to encode a given object
encode the object to a bytebuffer
get the number of bytes of an encoded object
read and decode array data to the end of bb
encode an object into a bytebuffer
write an event to the model
find the size of the bytebuffer required to encode a given object
set the parent composite entity of this component
user application calls this to delete the object from the rti
called when link to som object is set immediately scan composite
copy local values to som object before update
unlink from parent when removed
called when parent composite entity is removed
called when parent composite entity is removed
called when a new composite entity is discovered
returns a double as per the 1
this is a required polka method used for dead reckoning algorithms and
wait for federate state new method this method blocks execution until a
wait for federation state new method this method blocks execution until
send a time advance request to the rti
main event handler
interaction received override this call back handler sets the end
enable as time constrained and time regulating
template method override to register listeners against interesting
run runs the simulation within a thread so it can sleep
vmsa shut down this method is added to provide a specific shut down
pre simulate empty method this method is called in the pre simulate step
post simulate empty method this method is called in the post simulate
this function runs a single iteration of the federation
returns a double as per the 1
called when hla object is set
callback when new rce is discovered
call this to send updates to the rti
call this to send time stamped updates to the rti
callback when simulation time changes update dr position
add a component to this composite entity
remove a component from this composite entity
get a copy of the list of components for this composite entity
get the next federate ambassador in the call chain
set the next federate ambassador in the call chain
block until tick is called and all callbacks have been processed
add an object to the table and register for notification
read the row data from the corresponding hlaobject
write row data to the corresponding hlaobject
this method initializes this
this method initializes j content pane
this method initializes j tabbed pane
this method initializes j federation name field
this method initializes j fed filename field
this method initializes j fed filename button
this method initializes j federate name field
this method initializes j som filename button
this method initializes j som filename field
this method initializes j time management panel
this method initializes j process panel
this method initializes j log panel
this method initializes j debug panel
read the row data from the corresponding hlaobject
write row data to the corresponding hlaobject
user wants to exit the application
add an object to the table
remove an object from the table
read the row data from the corresponding hlaobject
write row data to the corresponding hlaobject
get the number of child classes for a given parent
set the finished flag
get the is joined flag
display a named property to log4j info level
template method for application initialization first thing called from
create a connection to the rti
start a background timer to call tick
start a background timer to call tick min max
parse the som file
create a new federation execution
join an existing federation execution or create it if it doesnt exist
template function called after launch
template method for announcing publications and subscriptions
if the property time constrained is yes enable time constrained for this
if the property time regulating is yes enable time regulating for this
create and initialize the member variable tick timer as specified by the
this template method is called after successful join before simulate
template function called for a periodic federate at startup and after
tick for federate ambassador callbacks and perform orderly shutdown if
tick for federate ambassador callbacks called from the tick timer thread
template method for application termination
destroy the federation execution
destroy any connection to an rti and stop the tick timer
exit execution either normally or abnormally
template method called back by the time manager when the simulation time
called when a federation could not be restored
called when a federation could not be saved
the federation restore begun service shall inform the federate that a
the federation restored service shall inform the federate that the
the federation saved service shall inform the federate that the
encode a reflected attribute
template method to be implemented by derrived class
creates a new cartesian spatial object projected to a future time which
parse a dom file
get the list of indent objects
set the list of indent objects
remove all indenting
get the object inserted for each tab
set the object inserted for each tab
insert another copy of the current tab object after the next newline
remove the last tab
insert the indent
called after each newline
called when a federation could not be restored
called when a federation could not be saved
the federation restore begun service shall inform the federate that a
block until tick is called and all callbacks have been processed
subscribe for notifications to simulation time
unsubscribe for notifications to simulation time
get the managed som object for this class
the federation restored service shall inform the federate that the
get the hlaobject class of this object
request an update of all attributes for this object
the federation saved service shall inform the federate that the
request an update of all attributes for this object
get the hlatime manager for this model
set the hlatime manager for this model
get the root class for all interaction classes
get the root class for all object classes
set new values into attributes of this object
set a new attribute value given its offset
get the set of attributes with changed values preceeding an update
send changed attributes to the rti
send changed attributes to the rti
delete this object
this object has been removed from the federation
this object has been removed from the federation
find an object class by integer rti handle
generate a string representation of the object
find an interaction class by integer rti handle
register a new listener
find an object class by fully qualified name omitting the leading
find an interaction class by fully qualified name omitting the leading
turn updates on for a given attribute
find an object instance by integer rti handle
turn updates off for a given attribute
get the hla data types container
get the rti to which this model is bound
publish and subscribe to all classes as indicated by the can publish and
create a new child interaction class of this class
create a new interaction
notify all listeners that an interaction was received from another
announce the intention to publish this class to the rti
announce the intention to subscribe this class from the rti
announce the intention to unpublish this class to the rti
announce the intention to unsubscribe this class from the rti
register a new listener
publish and subscribe to all classes as indicated by the can publish and
look up an hlaattribute given its offset which may be contained in a
get the number of attributes defined in this class including inherited
create a new attribute in this class
get all the user application objects managed by this class
notify listeners of an object change
lookup attribute offset from rti handle
notify listeners of an object change
lookup attribute offset from text attr name
get a named value as an object
create a child class of this class
get the hlaattribute by name
get a named value as a byte primitive
set a named value as a byte from a byte primitive
get the model owning this class
register a new object instance with the rti
get the name of this class only not fully qualified dotted
set a named value as a integer from an int primitive
get a named value as a float primitive
register a new object instance with the rti
set a named value as a float from a float primitive
get a named value as a double primitive
set a named value as a double from a double primitive
called when the rti discovers an object
test if this class is inherits from another class
get an object of this class by local name
get a map of named objects of this class
test if another class is a child direct descendant only of this class
validate that a map contains a valid enumeration
get the number of hlaobjects which exist for this hlaclass
test if another class is a child direct descendant only of this class
register a new listener
get the set of map
lookup a child class by string name
get a set of all child class names
install a named child class
install a map of child classes
remove a child class
announce the intention to publish this class to the rti
unpublish a class
get a collection of the child classes
announce the intention to subscribe this class from the rti
unsubscribe from a class
get a named value as an object
resolove all codec fields in this record
set a named value as an object
get a named value as a byte primitive
return the number of bytes required to encode this record for allocating
get an ordered list of codecs which are leaves of the codec tree
get a named value as a short primitive
compose a composite object from an ordered list of primitives
set a named value as a short from a short primitive
decompose a composite value into an ordered list of primitive values
get a named value as a long primitive
set a named value as a long from a long primitive
add an alternative to this variant record
get a named value as an int primitive
given a discriminant get the corresponding alternative
return the name of the alternative for the given discriminant value
get a named value as a float primitive
get a named value as a double primitive
add a new enumerator definition to this enumeration
get an enumerator name given its value
get an enumerator value given its name
set the name of this codec
return the codec which implements this codec
get an ordered list of codecs which are leaves of the codec tree
compose a composite object from an ordered list of primitives
called back when hla object is set
get the class of this interaction
set a parameter value given its offset assigned by the
generate a string representation of the object
compose a composite object from an ordered list of primitives
called when object is removed
transmit this interaction to other federates and notify all listeners
transmit this interaction to other federates and notify all listeners
receive an interaction from other federates and notify all listeners
called when object is removed
receive an interaction from other federates and notify all listeners
called when object deleted locally
decompose a composite value into an ordered list of primitive values
called when object deleted locally
called when new attribute values are reflected
called when new attribute values are reflected
update this object to the rti
update this object to the rti
delete the object from the federation
delete the object from the federation
parse a test som file
parse a test som file
parse a test som file
set up a model by parsing the vms 3
get the model for this object
test that an hlainteraction may be created
test sending an interaction
called when an interaction is received
test receiving an interaction
class under test for hlaobject class lookup object class int
class under test for hlainteraction class lookup interaction class int
class under test for hlaobject class lookup object class string
class under test for hlainteraction class lookup interaction class string
test creating an object and looking it by its rti handle
test notification of new attribute created
test adding and removing an object instance
test discovering an rti object with handle
test deleting an object
test registering a new codec
test resolving one codec to another
test a utf 16 be encoded string
test a utf 16 le encoded string
this allows you to get the data types
encode an object into a bytebuffer
find the size of the bytebuffer required to encode a given object
read and decode array data to the end of bb
encode an object into a bytebuffer
find the size of the bytebuffer required to encode a given object
get an enumeration given its name
get an hlacodec by attr name
get the hlaarray codec for a given array encoding scheme
resolve all unresolved links between codecs
register a new codec with this factory under a given type attr name
set the correct hlaarray codec for the given named encoding scheme
register a new fixed record codec
register a new variant record codec
returns the octet boundary of this element
encodes this element into the specified byte wrapper
returns the size in bytes of this elements encoding
decodes this element from the byte wrapper
allows you to set the value of this
lets you get the handle for the fom interaction class
lets you add a parameter to the class
lets you get the handle for a particular parameter of this class
lets you get the handle for the fom class
lets you add an attribute to the class
lets you get the handle for a particular attribute of this class
allows you to add the attribute handle set to the fomobject class
lets you get the attribute handle set for this particular classs subscribed attributes
this lets you to attach your own behaviour code
lets you retrieve the name of this class
lets you know if a relevance advisory has been recieved for this object
lets you set the relevance advisory flag
allows you to set the value of this
detect focus changes in text fields
gets text field value of given field name
handles disconnections and cleans up before quitting
starts the application instance
retrieves localisation string
predicts a rating using the recommender implementation
writes ratings to writer
override the background color defined for this game
get detailed information about this shape
set the status of this watchable
get the color represented by the index
show the progress dialog for this print job
adds a pdfpage change listener to receive notification of page clicks
removes a pdfpage change listener from the notification list
set a single mapping entry
make sure that this object is dereferenced
initialize this structure from a byte buffer
test whether two pdfobject are equal
read an array
read a name
get the glyphs associated with a given string in this font
a printable representation of the token
get the bounding box of the page before any rotation
get the width of this page after rotation
get the height of this page after rotation
called to prepare for some iterations
add a collection of commands to the page list
cleanup when iteration is done
close the current document
clone the render state
someone changed the selection of the outline tree
start the application
start the application
get the selected order
start the application with the patient model
clear the order and replaced with selected order
get the selected order
save the admin route model variable
clear the order and replaced with selected order
start the application with the patient model
add a slot
save the item form model variable
remove the selected appointment type
add a slot
remove the selected appointment type
start the application with the patient model
save the medication item
return a filter which keeps the new model
copy med to form and make this the original
search by generic or trade name
search by generic or trade name
cancel the processor details
get the currently selection processor
update processor stats
copy med to form and make this the original
save the medication
show all columns and remove filter
start the application
start the application
start the application
start the application
get the selected order
get the selected order
get the selected order
clear the order and replaced with selected order
clear the order and replaced with selected order
clear the order and replaced with selected order
save the invoice format model variable
save the fee schedule model variable
save the invoice charge model variable
add a slot
add a slot
add a slot
get the selected order
remove the selected appointment type
remove the selected appointment type
clear the order and replaced with selected order
remove the selected appointment type
start the application
start the application
save the facility account model variable
start the application
add a slot
start the application
remove the selected appointment type
get the selected order
save the charge model variable
get the selected order
get the selected order
start the application
clear the order and replaced with selected order
clear the order and replaced with selected order
start the application
save the invoice model variable
save the invoice type model variable
helper might move patient model from being the default base model
add a slot
remove the selected appointment type
get the selected order
clear the order and replaced with selected order
save the charge algorithm model variable
add a slot
remove the selected appointment type
get the selected order
clear the order and replaced with selected order
save the charge item model variable
add a slot
remove the selected appointment type
copy if new
add a slot
start the application
start the application
not used see patient record controller
start the application
start the application
start the application
start the application
get the selected order
trigger an update for the view
clear the order and replaced with selected order
save the form definition transition model variable
start the application
start the application
start the application
start the application
get the selected order
clear the order and replaced with selected order
get the selected order
save the term type model variable
clear the order and replaced with selected order
add a slot
remove the selected appointment type
save the record item type model variable
start the application
remove the selected appointment type
add a slot
start the application
add a slot
get the selected order
start the application
clear the order and replaced with selected order
get the selected order
clear the order and replaced with selected order
save the form definition model variable
save the form state model variable
get the selected order
clear the order and replaced with selected order
add a slot
save the form model variable
remove the selected appointment type
add a slot
start the application form with the default ok cancel button panel
save the form model displaying any validation errors
get the selected order
start the application
get the selected order
start the application with the patient model
remove the selected appointment type
start the application
add a slot
clear the order and replaced with selected order
create a new panel
save the term model variable
get bound view
get bound view
split north center
add a slot
get bound view
remove selected section
select a control
select a control
select a control
select a control
select a control
select a control
remove the selected appointment type
create dialog hierarchy
select a control
select a control
active indicator 1 active 0 inactive
active indicator 1 active 0 inactive
update the move up down state
start the application
get the selected order
get the selected order
clear the order and replaced with selected order
save the custom controller model variable
add a slot
remove the selected appointment type
save the term model variable
get the value for the reference id
set the value for the reference id
create a window listener to exit if the dialog is closed manually
add a slot
overrride control panel
determine if menu
rebuild the panels
reconstruct the panel
panel for list of control types
add a slot
get panel of controls for control type
start the application with the patient model
start the application
start the application with the patient model
start the application
start the applicaton and show the frame
start the applicaton and show the frame
get the selected order
start the applicaton and show the frame
clear the order and replaced with selected order
save the form type model variable
remove the selected appointment type
form specific message mediation
start the application
get the selected order
save the application view model variable
populates the control list with the controls from the view
start the application
get the selected order
clear the order and replaced with selected order
save the rule map model variable
add a slot
remove the selected appointment type
start the application and display the security builder application
execute the specified tree action
start the application with the patient model
get the selected order
display the forms when a view panel is selected from the tree
todo filter by application group
implement the order list interface to act when a control is selected
display the properties of the selected panels view
add a new custom view
get the setting
search and find a view
add or replace the view on the selected panel
start the application with the patient model
remove the panels view
make the frame visible
get the reference list
view panel properties
import the selected models
import application view models from the export directory
automatically import all objects from the export directory
store a reference to selected objects
start the application form with the default ok cancel button panel
paste according to context
start the application form with the default ok cancel button panel
start the application form
start the application form as a single panel embedded into another dialog
start the application form as a single panel embedded into another dialog
display the properties of the selected panels view
highlight the selected control and determine the tab the control resides on
if parent mediator is set that mediator will receive the oksubmitform
export the selected models
export the objects to the export directory
automatically export all models
start the applicaton and show the frame
start the application
start the applicaton and show the frame
start the application
save the updated access
create a new access list as a copy
get the selected order
clear the order and replaced with selected order
clear the order and replaced with selected order
start the application with the patient model
save the role model variable
save the setting model variable
add a slot
add a slot
remove the selected appointment type
remove the selected appointment type
start the application
get the selected order
clear the order and replaced with selected order
save the role group model variable
change password for selected user
add a slot
remove the selected appointment type
import the user
user has pressed remove and these models are to be deleted
add a slot
columns in the view
user has pressed the properties action for the selected models
cell display on calendar
start the application
start the application
get the selected order
clear the order and replaced with selected order
save the translation model variable
add a slot
get the selected order
remove the selected appointment type
clear the order and replaced with selected order
start the application and display the reference tree builder application
save the unit conversion model variable
add a slot
start the application
remove the selected appointment type
start the application
get the selected order
get the selected order
clear the order and replaced with selected order
clear the order and replaced with selected order
save the location type model variable
execute the specified tree action
add a slot
save the identifier source model variable
remove the selected appointment type
add a slot
start the application
remove the selected appointment type
start the application
get the selected order
clear the order and replaced with selected order
save the address model variable
add a slot
get the selected order
clear the order and replaced with selected order
remove the selected appointment type
add a slot
start the application
start the application
get the selected order
clear the order and replaced with selected order
save the location model variable
new copy from current form
add a slot
remove the selected appointment type
remove the relationship for the selected reference from the parent node
get the selected order
open reference build for reference item
clear the order and replaced with selected order
test or execute a drop action
save the ref model variable
start the application
start the application
add a slot
start the application
remove the selected appointment type
get the selected order
clear the order and replaced with selected order
save the order state model variable
add a slot
remove the selected appointment type
get the selected order
start the application
clear the order and replaced with selected order
save the order instance state model variable
start the application
add a slot
remove the selected appointment type
get the selected order
save the order model variable
get the selected order
start the application
clear the order and replaced with selected order
start the application
save the order instance transition model variable
clear the order and replaced with selected order
get the selected order
clear the order and replaced with selected order
forward the action to open the application view form
clear the order and replaced with selected order
save the order model variable
start the application
add a slot
save the location model variable
get the selected order
start the application with the patient model
clear the order and replaced with selected order
get the selected order
save the order type model variable
clear the order and replaced with selected order
add a slot
add a slot
add a slot
remove the selected appointment type
remove the selected appointment type
todo dynamic search
add a slot
change password for selected user
add a slot
start the application
remove the selected appointment type
get the selected order
clear the order and replaced with selected order
start the application
store selection of patient rows
save the visit type model variable
add a slot
remove the selected appointment type
store selection of patient rows
get the selected order
clear the order and replaced with selected order
save the content type model variable
execute the search in the background
add a slot
remove the selected appointment type
start the application with the patient model
start the application
display the visits
start the application with the patient model
get the selected order
determine if a patient has been selected
clear the order and replaced with selected order
get the selected order
save the job
clear the order and replaced with selected order
add a slot
save the icon model variable
determine if a patient has been selected
remove the selected appointment type
add a slot
remove the selected appointment type
start the application
return the first selected patient from the list
get the selected order
return the first selected patient from the list
clear the order and replaced with selected order
clear the order and replaced with selected order
ok or double click
start the application
start the application
import new patients
columns in the view
export patients found
get the selected order
get the selected order
clear the order and replaced with selected order
clear the order and replaced with selected order
save the item type model variable
save the item model variable
cell display on result grid
add a slot
add a slot
remove the selected appointment type
remove the selected appointment type
not used see patient record controller
trigger an update for the view
start the application
start the application
create a new appointment
display the form
get the selected order
save the main entity variable
get the selected order
start the application
start the application
clear the order and replaced with selected order
save the main entity variable
start the application and display the security builder application
add a slot
start the application
remove the selected appointment type
get the selected order
save the form screen image model variable
start the application with the patient model
get the selected order
clear the order and replaced with selected order
save the form type screen model variable
remove the selected appointment type
clear the order and replaced with selected order
save the form type model variable
add a slot
select one the appointments
get the selected order
get the selected order
save the form model variable
remove new records not filled out
remove new records not filled out
create a new record item
start the application
ok or double click
get the selected order
clear the order and replaced with selected order
save the schedule template model variable
add a slot
start the application with the patient model
get selected appointment
remove the selected appointment type
start the application with the patient model
get the selected order
clear the order and replaced with selected order
save the frequency
remove the selected appointment type
start the application with the patient model
add a slot
get the selected order
get the selected order
clear the order and replaced with selected order
clear the order and replaced with selected order
save the resource
add a slot
add a slot
save the appointment type
add a slot
remove the selected appointment type
start the application with the patient model
save the original patient model
start the application
execute the command line addition of the test
get the selected order
clear the order and replaced with selected order
save the appointment status model variable
add a slot
remove the selected appointment type
create a new appointment
create a new order for the specified patient
get the service call
determine if control should evaluate all content true
determine if control should evaluate all content true
list the action to replace the columns and contents of the table
determine if the columns and data are to be rebuilt from this action
reference model is set
determine if the columns and data are to be rebuilt from this action
set the list of selected nodes
set the list of selected node user objects
get the tree selection event initiating the event
set the tree selection event
get the first selected action
get the first selected action
change the target tables select action
check if the first selected object has an action
get the first selected nodes parent if a control
get the first node selected
change the target tables default action
get the first node selected
base action for event
base action for event
add node to the parent at the end of the siblings
add node to the parent at the end of the siblings
delete the node from the tree
delete the node from the tree
set the nodes to add
get the nodes to remove
get the nodes to remove
set the nodes to remove
set the selected columns
return the action reference
set the selected model
set the selected models
set the action
set the selected rows
return the view reference for this action
check that there is at least one selected row
check that there is at least one selected row
set the view reference for this action
set the view reference for this action
tree action mouseaction selectaction etc
tree action mouseaction selectaction etc
item listener events
item listener events
mouse listener events
mouse event had exactly two clicks
remove the filter
context of control generating action
context of control generating action
context of control generating action
list selection listener event
add node to the parent at the end of the siblings
delete the node from the tree
delete the node from the tree
set parent dialog
update a node in the tree
set the nodes to add
set the nodes to remove
set the nodes to be updated
model associated with action
model associated with action
base model has been set
has a column
models associated with action
execute then refresh form
controller has a patient
clear selected patient
add a view to the list of views opened during the session
dump the last created controller
get the calling components parent frame
start the application
convenience method to compare the actions context ref id with the parameter
convenience method to compare the actions context ref id with the parameter
get the selected order
clear the order and replaced with selected order
save the report model variable
add a slot
remove the selected appointment type
upload jasper file
upload jasper file
upload jasper file
change a view for a screen
upload jasper file
change a view for a screen
upload jasper file
setup the panel
get the value from the component with the specified context
start the application
start the laboratory application
select a control
select a control
get the selected order
update the move up down state
clear the order and replaced with selected order
p b pre b
clear the search and selected results
reconstruct the parent panel
update the selected results on table row selection
start the application and display the main frame
ok or double click
return one selected item not necessarily the first or throw an exception
return the selection as a list
p b pre b
start the applicaton and show the frame
update the table with the list of results
save the updated script
get the active script
display the output
execute the specified reference action
start the application with the defined search
start the application with the defined search as a modal dialog which
populate the table using the interface to the search method
p b pre b
open the patient record
determine which models have had changes and store updates
stores the list of models and sends the isevent
if changes are applied and any models were updated then
display the instruction panel with the specified url
if changes are applied and any models were updated then
reconstruct the parent panel
get the top bottom split pane
determine if view is a menu
get primary identifier
button action panel
set primary identifier
active indicator 1 active 0 inactive
open the system export dialog
active indicator 1 active 0 inactive
start the applicaton as a frame with the panel hierarchy defined
active indicator 1 active 0 inactive
open the system import dialog
active indicator 1 active 0 inactive
start the applicaton as a frame with the panel hierarchy defined
active indicator 1 active 0 inactive
combine strength and units
active indicator 1 active 0 inactive
over has a volume
child med item component
child med item component
open the reference builder with this single reference
open the reference builder
open the base save form builder
set primary identifier
deleted indicator 1 deleted 0 not deleted
add or edit the application view
date the record was created
date the record was created
user that created this record
returns a random item if none exists it is added to the set
check the action for containing a list of application views
user that created this record
add or edit the application view
parent medication item
active indicator 1 active 0 inactive
parent medication item
comments regarding this admin route
returns a random item if none exists it is added to the set
identifies the system which originally created this row if reference
comments regarding this admin route
identifies the system which originally created this row if reference
order administration route e
set primary identifier
add or edit the application view
order administration route e
sequence for admin route display
transaction number assigned by the system
sequence for admin route display
transaction number assigned by the system
open the dialog builder
date the record was updated
1 default route for new order 0 do not default
date the record was updated
active indicator 1 active 0 inactive
open the reference tree builder
1 default route for new order 0 do not default
date the record was last updated
average wholesaler price
1 default route for new order 0 do not default
date the record was last updated
average wholesaler price
1 default route for new order 0 do not default
number of times this record has been updated
set the application into debug mode
open the collect specimen form
deleted indicator 1 deleted 0 not deleted
open the patient record
deleted indicator 1 deleted 0 not deleted
search for and select an script for the script builder
date the record was created
open the default builder associated with the reference value stored in the action
single dose form order in e
user that created this record
single dose form order in e
facility location for this formulary item
facility location for this formulary item
identifies the system which originally created this row if reference
formulary status such as non formulary or pending review
save the panel preferences
open the pharmacy formulary builder
formulary status such as non formulary or pending review
open the pharmacy formulary builder
transaction number assigned by the system
date the record was created
open the job scheduler
date the record was updated
default implementation of ibuild panel
set primary identifier
user that created this record
date the record was last updated
get the main frame the application was started with
unique medication item name typically product and dose and form
number of times this record has been updated
active indicator 1 active 0 inactive
clear local and server cache
unique medication item name typically product and dose and form
type of medication item
find the active component
type of medication item
deleted indicator 1 deleted 0 not deleted
find the active component
facility name for medication
find a patient
facility name for medication
open patient chart
date the record was created
order template medication ordered as
user that created this record
order template medication ordered as
open the controller
time interval strength medication is for e
open the controller
foreign key to med table
time interval strength medication is for e
time interval strength unit
identifies the system which originally created this row if reference
time interval strength unit
open the pharmacy formulary builder
open the pharmacy formulary builder
transaction number assigned by the system
open the pharmacy formulary builder
date the record was updated
settings for this transition
open the resource builder
date the record was last updated
settings for this transition
open the appointment type builder
number of times this record has been updated
strength of each individual item or for the strength volume
open the appointment type builder
units for the strength e
if the parent mediator is defined send a message
open the appointment type builder
units for the strength e
open the application
set primary identifier
strength is define for this volume
strength is define for this volume
open the application
get the application level mediator
strength volume units e
open the application
forward an action to the application controller
strength volume units e
add a listener to the default base model such that on
identifies the system which originally created this row if reference
active indicator 1 active 0 inactive
add a listener to the default base model such that on
deleted indicator 1 deleted 0 not deleted
transaction number assigned by the system
reapply the listener to the child models
date the record was updated
date the record was last updated
number of times this record has been updated
send a message to the apply cancel and ok buttons to disable
set primary identifier
disable apply and ok
enable apply and ok
open the registration screen
active indicator 1 active 0 inactive
remove the listeners from the base model
script executed to check the dose
script executed to check the dose
date the record was created
user that created this record
return the frame or the dialog or the application frame
strength check applies to
strength check applies to
foreign key to med table
foreign key to med table
date the record was created
strength check applies to
strength check applies to
user that created this record
add a listener to exit on close
strength per time unit check applies to
exit application on close
set primary identifier
combine strength and units
strength per weight unit check applies to
treat as a liquid or gas
strength per weight unit check applies to
create a list of dosing rules
active indicator 1 active 0 inactive
set primary identifier
age range check applies to
if the dialog window is closed with the x send the mediator
age range check applies to
set primary identifier
exit application on close
active indicator 1 active 0 inactive
color to override the default order color
weight range check applies to
active indicator 1 active 0 inactive
date the record was created
color to override the default order color
check digit for mrn validation
weight range check applies to
check digit for mrn validation
user that created this record
send a disable action
age range check applies to
volume units e
age range check applies to
send an enable action
volume units e
uppercase without spaces value of idvalue
location of dispense
uppercase without spaces value of idvalue
override default foreground color
location of dispense
send an enable or disable action
medication item dispensed
weight range check applies to
date the record was created
date the record was created
weight range check applies to
send an enable or disable action
identifies the system which originally created this row if reference
user that created this record
user that created this record
route range check applies to
set primary identifier
icon used for this order type
source of identifier generation foreign key to reference identifier source
route range check applies to
icon used for this order type
source of identifier generation foreign key to reference identifier source
transaction number assigned by the system
date the record was updated
identifies the system which originally created this row if reference
active indicator 1 active 0 inactive
identifies the system which originally created this row if reference
date the record was last updated
settings for this transition
number of times this record has been updated
transaction number assigned by the system
identifies the system which originally created this row if reference
date the record was updated
transaction number assigned by the system
date the record was last updated
transaction number assigned by the system
date the record was created
number of times this record has been updated
date the record was updated
user that created this record
date the record was updated
date the record was last updated
date the record was last updated
identifies the system which originally created this row if reference
number of times this record has been updated
identifies the system which originally created this row if reference
number of times this record has been updated
transaction number assigned by the system
date the record was updated
date the record was last updated
number of times this record has been updated
transaction number assigned by the system
date the record was updated
set primary identifier
date the record was last updated
is model modified
active indicator 1 active 0 inactive
number of times this record has been updated
average wholesaler price
returns a random item if none exists it is added to the set
description of the item
date the record was created
set primary identifier
set primary identifier
user that created this record
returns a random item if none exists it is added to the set
containing item form in e
containing item form in e
set primary identifier
active indicator 1 active 0 inactive
active indicator 1 active 0 inactive
returns a random item if none exists it is added to the set
for solution or gas total volume of item
for solution or gas total volume of item
set primary identifier
active indicator 1 active 0 inactive
volume units e
date the record was created
date the record was created
foreign key to refs on dose directions prefix
active indicator 1 active 0 inactive
user that created this record
user that created this record
foreign key to refs on dose directions prefix
medication alert e
medication alert e
date the record was created
checks the minimum dose
checks the maximum dose
identifies the system which originally created this row if reference
returns true if neither min and max age are defined
user that created this record
identifies the system which originally created this row if reference
returns true if neither min and max age are defined
determine if either there is no route criteria or the route matches
route is added to the
set primary identifier
transaction number assigned by the system
route is added to the
identifies the system which originally created this row if reference
route is added to the
transaction number assigned by the system
date the record was updated
route is added to the
generic name for medication
route is added to the
date the record was last updated
date the record was updated
generic name for medication
route is added to the
transaction number assigned by the system
active indicator 1 active 0 inactive
number of times this record has been updated
date the record was last updated
date the record was updated
check digit for mrn validation
identifies the system which originally created this row if reference
deleted indicator 1 deleted 0 not deleted
date the record was last updated
number of times this record has been updated
number of times this record has been updated
deleted indicator 1 deleted 0 not deleted
date the record was created
transaction number assigned by the system
user that created this record
date the record was updated
facility name for the medication
sequence to enforce uniqueness
load the access list contents with no parameters
date the record was last updated
sequence to enforce uniqueness
uppercase without spaces value of idvalue
number of times this record has been updated
load the access list contents with no parameters
settings for this transition
date the record was created
identifies the system which originally created this row if reference
load the access list contents with no parameters
user that created this record
load the access list contents with no parameters
set primary identifier
transaction number assigned by the system
source of identifier generation foreign key to reference identifier source
load the access list contents with no parameters
date the record was updated
identifies the system which originally created this row if reference
date the record was last updated
active indicator 1 active 0 inactive
load the access list contents with no parameters
number of times this record has been updated
set primary identifier
transaction number assigned by the system
set primary identifier
load the access list contents with specified parameters
date the record was updated
type of medicatione effect foreign key to reference on med effect type
load the access list contents with specified parameters
active indicator 1 active 0 inactive
type of medicatione effect foreign key to reference on med effect type
date the record was last updated
check digit for mrn validation
medication or med group or class
returns a random item if none exists it is added to the set
active indicator 1 active 0 inactive
medication or med group or class
number of times this record has been updated
load the access list contents with specified parameters
date the record was created
user that created this record
severity of interaction
load the access list contents with specified parameters
severity of interaction
severity of interaction
severity of interaction
set primary identifier
identifies the system which originally created this row if reference
uppercase without spaces value of idvalue
set primary identifier
transaction number assigned by the system
date the record was created
load the access list contents with specified parameters
user that created this record
set primary identifier
date the record was updated
entity interacting foreign key to refs on groups such as medication
load the access list contents with specified parameters
date the record was last updated
source of identifier generation foreign key to reference identifier source
active indicator 1 active 0 inactive
date the record was created
identifies the system which originally created this row if reference
number of times this record has been updated
custom schedule and the schedule will override the frequency and dose instructions
load the access list contents with specified parameters
user that created this record
custom schedule and the schedule will override the frequency and dose instructions
active indicator 1 active 0 inactive
transaction number assigned by the system
entity being interacted with including groups such as medication
custom schedule and the schedule will override the frequency and dose instructions
entity being interacted with including groups such as medication
load the access list contents with specified parameters
date the record was updated
custom schedule and the schedule will override the frequency and dose instructions
type of interaction
date the record was last updated
custom schedule and the schedule will override the frequency and dose instructions
load the access list contents with specified parameters
type of interaction
identifies the table with which the foreign key is defined
identifies the table with which the foreign key is defined
custom schedule and the schedule will override the frequency and dose instructions
severity of interaction
number of times this record has been updated
determines when the interfaction rule will execute
change the action from a
determines when the interfaction rule will execute
rule script executed
rule script executed
refresh all controls
set primary identifier
severity of interaction
identifies the system which originally created this row if reference
refresh all controls
set primary identifier
error message processing this transaction
date the record was created
foreign key to the table identified by the database table ref id
transaction number assigned by the system
refresh all controls
foreign key to the table identified by the database table ref id
prescriptions prefix to directions
date the record was updated
prescriptions prefix to directions
user that created this record
refresh all controls
active indicator 1 active 0 inactive
active indicator 1 active 0 inactive
identifier for the transaction
instance to process this message
date the record was last updated
identifier for the transaction
refresh all controls
instance to process this message
credit card company such as visa or mastercard
identifier for the transaction
credit card company such as visa or mastercard
number of times this record has been updated
name for this processor
credit card address
identifier for the transaction
credit card address
refresh all controls
dispense the exact amount not necessarily the default package size
name for this processor
type of credit card e
type of credit card e
dispense the exact amount not necessarily the default package size
time an error was last received
time an error was last received
dispense the exact amount not necessarily the default package size
dispense the exact amount not necessarily the default package size
set primary identifier
dispense the exact amount not necessarily the default package size
date the record was created
instance which will process this transaction
sequential number available to change the message processing order if necessary
dispense the exact amount not necessarily the default package size
user that created this record
error message stored if this message cannot be processed
sequential number available to change the message processing order if necessary
identifies the system which originally created this row if reference
active indicator 1 active 0 inactive
time a message was last processed
amount to dispense typically for prescriptions
time a message was last processed
select the first row in the table
location associated with transaction
amount to dispense typically for prescriptions
transaction number assigned by the system
check digit for mrn validation
select the first row in the table
internal identifier for outgoing messages
date the record was updated
suffix to directions for prescriptions
source that generated this identifier
date the record was last updated
alternative credit card address to same account
suffix to directions for prescriptions
add charge and quantity and reset charge rate
source that generated this identifier
state of the transaction
number of messages with processing errors
alternative credit card address to same account
state of the transaction
add the child node to the parent node in the specified tree
type of identifier
number of messages with processing errors
acute or chronic
number of times this record has been updated
type of identifier
number of messages received by this process
remove the tree node from the parent node in the reference builder tree
acute or chronic
number of messages received by this process
set primary identifier
set primary identifier
1 processing outbound transactions 0 processing inbound transactions
transaction number assigned by the system
balance for this account
description of the infusion parameters e
uppercase without spaces value of idvalue
class of the transaction object
1 processing outbound transactions 0 processing inbound transactions
balance for this account
metaphone value of idvalue
class of the transaction object
total charges against this account
description of the infusion parameters e
active indicator 1 active 0 inactive
internal identifier for outgoing messages
1 processing outbound transactions 0 processing inbound transactions
total charges against this account
primary display for the transaction patient order item etc
unmodified default charge for this item
source that generated this identifier
algorithm to apply in lieu of a fixed charge amount
date account was closed
1 processing outbound transactions 0 processing inbound transactions
date the record was created
source that generated this identifier
free text order infusion duration
primary display for the transaction patient order item etc
algorithm to apply in lieu of a fixed charge amount
date account was closed
charge item foreign key to charge items
type of identifier
1 processing outbound transactions 0 processing inbound transactions
charge item foreign key to charge items
date time the transaction was triggered
user that created this record
type of identifier
free text order infusion duration
1 processing outbound transactions 0 processing inbound transactions
date time the transaction was triggered
total credits applied to this account
source of identifier generation foreign key to reference identifier source
time the peak queue was reached
total credits applied to this account
free text infuse duration
get the integer value for this setting
time the peak queue was reached
identifies the system which originally created this row if reference
get the string value for this setting
free text infuse duration
date the record was created
get the date value for this setting
date the record was created
date account was opened
order infusion duration units e
transaction number assigned by the system
user that created this record
get the double value for this setting
date account was opened
script executed to determine if the this charge item is used
user that created this record
script executed to determine if the this charge item is used
date the record was updated
order infusion duration units e
serialized transaction object
peak queue size of this processor
1 show any discount due to charge algorithm on the invoice
serialized transaction object
date the record was last updated
total payments made to this account
1 show any discount due to charge algorithm on the invoice
instance to process this message
1 show any discount due to charge algorithm on the invoice
peak queue size of this processor
total payments made to this account
type of transaction
1 show any discount due to charge algorithm on the invoice
number of times this record has been updated
identifies the set of messages which should have a unique message control id
1 show any discount due to charge algorithm on the invoice
script executed to return transactions to be processed up a maximum number
type of transaction
1 show any discount due to charge algorithm on the invoice
identifies the set of messages which should have a unique message control id
set primary identifier
script executed to return transactions to be processed up a maximum number
what triggered this transaction
sequential number available to change the message processing order if necessary
identifies the system which originally created this row if reference
sequential number available to change the message processing order if necessary
what triggered this transaction
custom controller used to process transactions
order rate strength infusion units e
custom controller used to process transactions
transaction number assigned by the system
order rate strength infusion units e
date the record was updated
settings form for processing
active indicator 1 active 0 inactive
load the access list
provider billing the service
date the record was last updated
settings form for processing
location associated with message
provider billing the service
maximum infuse rate defined in infuse rate dose and time units
number of times this record has been updated
active indicator 1 active 0 inactive
maximum size the queue will grow for this processor
unmodified default charge for this item
set the labels
maximum infuse rate defined in infuse rate dose and time units
maximum size the queue will grow for this processor
content of the message
item being charged
set the labels
charge rate percentage or amount
date time the process was last started
message identifier unique for within the interface control
minimum infuse rate defined in infuse rate dose and time units
charge rate percentage or amount
charge item type foreign key to reference invoice charge type
date time the process was last started
message identifier unique for within the interface control
charge item type foreign key to reference invoice charge type
minimum infuse rate defined in infuse rate dose and time units
date time for the message as defined in the message header
facility account to post to
date time for the message as defined in the message header
order infusion time value e
facility account to post to
initial form used to create
send a message to the apply cancel and ok buttons to disable
initial form used to create
order infusion time value e
date time the process was last stopped
account this charge will be applied to
date the record was created
send a message to the apply cancel and ok buttons to disable
order infusion time units e
date time the process was last stopped
date the record was created
user that created this record
order infusion time units e
set value after 1 second delay
user that created this record
contact or business or payor responsible for this account
any additional information useful to identify this transaction
contact or business or payor responsible for this account
any additional information useful to identify this transaction
patient responsible for the account
line item displaying on the invoice
patient responsible for the account
line item displaying on the invoice
set primary identifier
trigger for this message as defined in the message header
description of the line item
trigger for this message as defined in the message header
description of the line item
order infusion time units e
identifies the system which originally created this row if reference
identifies the system which originally created this row if reference
order infusion time units e
active indicator 1 active 0 inactive
send a message to the apply cancel and ok buttons to disable
type of message as defined in the message header
set primary identifier
rule which determines if this fee schedule is used
rule which determines if this fee schedule is used
set focus on the control with the matching context
transaction number assigned by the system
identifies the system which originally created this row if reference
set focus on the control with the matching context
custom processing for this fee schedule
date the record was updated
custom processing for this fee schedule
transaction number assigned by the system
order volume units e
definition of what this fee schedule is
total time taken to process all the messages
transaction number assigned by the system
date the record was last updated
1 this charge is a tax on the item 0 standard charge
order volume units e
total time taken to process all the messages
1 this charge is a tax on the item 0 standard charge
number of times this record has been updated
1 this charge is a tax on the item 0 standard charge
1 infusion 0 not an infusion
1 this charge is a tax on the item 0 standard charge
active indicator 1 active 0 inactive
1 this charge is a tax on the item 0 standard charge
display the audit of how the charge was determined
outbound messages are picked up by the engine
1 this charge is a tax on the item 0 standard charge
1 infusion 0 not an infusion
display the audit of how the charge was determined
date the record was updated
date the record was updated
date the record was created
1 infusion 0 not an infusion
user that created this record
date the record was last updated
priority of the schedule
discounted charge for this item
1 infusion 0 not an infusion
date the record was last updated
priority of the schedule
number of times this record has been updated
display of patient name at time of message generation
1 infusion 0 not an infusion
return a filter which keeps the new model
algorithm used to calculate the charge
number of times this record has been updated
state of this transaction foreign key to referece interface transaction state
1 infusion 0 not an infusion
units the charge quantity is measured in
set focus on the control with the matching context
units the charge quantity is measured in
1 show the discount as a line item on the invoice
identifies the system which originally created this row if reference
identifies the system which originally created this row if reference
item being charge
transaction number assigned by the system
sequence charges generated in a single session
set primary identifier
date the record was updated
sequence charges generated in a single session
transaction number assigned by the system
date the record was last updated
charge status e
external systems name for this transaction
number of times this record has been updated
charge status e
active indicator 1 active 0 inactive
external systems name for this transaction
update the move up down state
charge type e
date the record was updated
charge a contact
deleted indicator 1 deleted 0 not deleted
date the record was created
charge a contact
account this payment will be applied to
date the record was last updated
date the record was created
units the charge quantity is measured in
number of times this record has been updated
user that created this record
user that created this record
units the charge quantity is measured in
this is the charge id of a credit posted against this charge
set primary identifier
form of dose
set the selected patient
this is the charge id of a credit posted against this charge
form of dose
unmodified default payment for this item
set the selected patient
unmodified default payment for this item
active indicator 1 active 0 inactive
set primary identifier
script used to calculate charge
foreign key to refs for reference currency
script used to calculate charge
foreign key to refs for reference currency
value used to calculate charge
set the selected patient
set primary identifier
value used to calculate charge
containing item form in e
second value used to calculate charge
second value used to calculate charge
get the selected patient
active indicator 1 active 0 inactive
package number for the dispensed item
type of charge algorithm
charge algorithm type e
charge algorithm type e
check digit for mrn validation
controller has a patient
package number for the dispensed item
active indicator 1 active 0 inactive
definition of this algorithm
set primary identifier
payment item type foreign key to reference invoice payment type
deleted indicator 1 deleted 0 not deleted
unmodified default charge for this item
balance for this account
long text description of item
payment item type foreign key to reference invoice payment type
the fee schedule applied to this charge
identifies the system which originally created this row if reference
clear the selected patient
algorithm to apply in lieu of a fixed charge amount
deleted indicator 1 deleted 0 not deleted
uppercase without spaces value of idvalue
name of this account
the fee schedule applied to this charge
unique coded value for this charge item
date the record was created
date the record was created
add a fixed column
form associated with this charge
unique coded value for this charge item
user that created this record
transaction number assigned by the system
user that created this record
round to this value
sequence used if duplicate charge codes are needed
form associated with this charge
source of identifier generation foreign key to reference identifier source
round to this value
date the record was updated
add a fixed column
sequence used if duplicate charge codes are needed
strength of the item dispensed for the strength volume
identifies the system which originally created this row if reference
record associated with this charge
active indicator 1 active 0 inactive
identifies the system which originally created this row if reference
date the record was last updated
strength of the item dispensed for the strength volume
record associated with this charge
transaction number assigned by the system
add a fixed column
number of times this record has been updated
date the record was updated
transaction number assigned by the system
charge item status e
units for the item dispensed strength e
date the record was last updated
add a fixed column
charge item status e
date the record was updated
date the record was created
number of times this record has been updated
name of this charge item
units for the item dispensed strength e
name of this charge item
date the record was last updated
add a fixed column
number of times this record has been updated
strength is define for the items volumes
user that created this record
inventory item for this charge
look for a panel with the specified context
strength is define for the items volumes
charge item type foreign key to reference charge item type
inventory item for this charge
charge item type foreign key to reference charge item type
strength volume units e
refresh table and enable apply ok
invoice for this charge
units the charge item quantity is measured in
date the record was created
strength volume units e
invoice for this charge
set primary identifier
cancel and close form
user that created this record
cost of this item
type of account such as asset expense
type of account such as asset expense
definition of this charge item
cost of this item
for solution or gas total volume of item
active indicator 1 active 0 inactive
units the item is measured in
color to override the default order color
identifies the system which originally created this row if reference
units the item is measured in
volume units e
custom controller used to process the invoice
export the list of models to file
reason for overriding the medication alerts
transaction number assigned by the system
order associated with this charge
returns a random item if none exists it is added to the set
reason for overriding the medication alerts
date the record was updated
shorter display of this item
returns a random item if none exists it is added to the set
set primary identifier
set primary identifier
duplicate checking algorithm used
date the record was last updated
duplicate checking algorithm used
number of times this record has been updated
override default foreground color
current or last patient location for visit
date time this charge item is effective from
active indicator 1 active 0 inactive
date the record was created
date time this charge item is effective from
returns a random item if none exists it is added to the set
defines logical order of med order components
current or last patient location for visit
active indicator 1 active 0 inactive
user that created this record
contact being billed
icon used for this order type
check digit for mrn validation
contact being billed
the payer for this charge
icon used for this order type
defines logical order of med order components
display of how the bill is from
display of how the bill is from
the payer for this charge
patient being billed
set primary identifier
icon used for this order type
medical condition being addressed by this drug
patient being billed
icon used for this order type
payer being invoiced
deleted indicator 1 deleted 0 not deleted
payer being invoiced
price of this item
display of who is being invoiced
date time this charge item is no longer effective from
settings for this transition
medical condition being addressed by this drug
display of who is being invoiced
date time this charge item is no longer effective from
facility or service billing the invoice
identifies the system which originally created this row if reference
facility or service billing the invoice
get the value from the component with the specified context
uppercase without spaces value of idvalue
provider billing for this invoice
medication for this order item
active indicator 1 active 0 inactive
transaction number assigned by the system
units the charge quantity is measured in
get the value from the component with the specified context
date the record was updated
date the record was created
unmodified default charge for this item
units the charge quantity is measured in
get the value from the component with the specified context
date the record was last updated
user that created this record
order administration route e
state of the charge
get the value from the component with the specified context
algorithm to apply in lieu of a fixed charge amount
source of identifier generation foreign key to reference identifier source
number of times this record has been updated
default account the charge item will post to
order administration route e
get the value from the component with the specified context
state of the charge
identifies the system which originally created this row if reference
free text order admin route
unique coded value for this charge item
get the value from the component with the specified context
facility owning this charge item
free text order admin route
set primary identifier
get the value from the component with the specified context
order site of administration e
transaction number assigned by the system
sequence used if duplicate charge codes are needed
date the record was created
get the value from the component with the specified context
provider performing the service
order site of administration e
date the record was updated
charge item status e
get the value from the component with the specified context
free text order site of adminstration
provider performing the service
folder this charge is categorized under
active indicator 1 active 0 inactive
date the record was last updated
user that created this record
folder this charge is categorized under
free text order site of adminstration
custom controller to format invoice
current or last service for visit
number of times this record has been updated
name of this charge item
total number of daily doses
current or last service for visit
currency of invocie
date the record was created
total number of daily doses
date time this charge will start from
currency of invocie
format type such as cms1500
date of invoice
order dose quantity or min for a range dose
import csv build file
date time this charge will start from
format type such as cms1500
user that created this record
date of invoice
charge item type foreign key to reference charge item type
date the record was created
user that created this record
units the charge item quantity is measured in
format of invoice
format of invoice
form dose order in e
report used to generate the invoice
report used to generate the invoice
return the matching line item for null
units the item is measured in
definition of this charge item
text to default on the invoice
form dose order in e
text to default on the invoice
set primary identifier
date time this charge will stop at
free text order dose form
form used for this invoice
identifies the system which originally created this row if reference
date time this charge will stop at
form used for this invoice
free text order dose form
active indicator 1 active 0 inactive
settings for this transition
transaction number assigned by the system
display a popup menu
duplicate checking algorithm used
shorter display of this item
invoice status saved printed emailed
date the record was updated
date time this charge item is effective from
shorter display of this item
invoice status saved printed emailed
date the record was last updated
minimum dose required to be effective
number of times this record has been updated
date the record was created
minimum dose required to be effective
user that created this record
text printed on the invoice
identifies the system which originally created this row if reference
date time this charge item is no longer effective from
type of invoice
set primary identifier
type of invoice
active indicator 1 active 0 inactive
order dose units e
default account the charge item will post to
transaction number assigned by the system
order dose units e
identifies the system which originally created this row if reference
facility owning this charge item
the term used for this charge
dialog defining the form controls
dialog defining the form controls
the term used for this charge
record item state
folder this charge is categorized under
text printed on the statement
identifies the system which originally created this row if reference
date the record was updated
date the record was created
total number of doses in the order
text printed on the statement
transaction number assigned by the system
user that created this record
total number of doses in the order
transaction number assigned by the system
date this form last changed status
identifies the system which originally created this row if reference
date this form last changed status
date the record was last updated
set primary identifier
date the record was updated
units the item is measured in
date the record was updated
time interval strength is viable for e
number of times this record has been updated
date the record was last updated
type of form
date the record was last updated
transaction number assigned by the system
type of form
active indicator 1 active 0 inactive
number of times this record has been updated
date the record was created
type of record item for transitions
application control bound to this screen position
number of times this record has been updated
user that created this record
application control bound to this screen position
time interval strength unit e
execute the lost focus script
settings for this transition
data type of value determines the column the value is stored in
data type of value determines the column the value is stored in
date the record was updated
time interval strength is viable for e
shorter display of this item
identifies the system which originally created this row if reference
time interval strength is viable for e
date the record was last updated
number of times this record has been updated
script used to display or render the output
time interval strength unit e
script used to display or render the output
transaction number assigned by the system
pixel space between each character for spaced text displays
display a popup menu
identifies the system which originally created this row if reference
type of prescription
pixel space between each character for spaced text displays
type of display on the screen for this control
date the record was updated
set the labels
type of prescription
type of display on the screen for this control
form type foreign key to form type screens
transaction number assigned by the system
form type foreign key to form type screens
number of refills requested
date the record was last updated
view defining the form for a standard form dialog
title of document or form
view defining the form for a standard form dialog
number of refills requested
x1 coordinate of image
number of times this record has been updated
date the record was updated
x1 coordinate of image
set primary identifier
x2 coordinate of image
date the record was last updated
x2 coordinate of image
y1 coordinate of image
y1 coordinate of image
number of times this record has been updated
active indicator 1 active 0 inactive
y2 coordinate of image
do not print the indication on the prescription
check digit for mrn validation
y2 coordinate of image
do not print the indication on the prescription
date the record was created
get the value double int string or date
do not print the indication on the prescription
user that created this record
find the record with the detail not found return null
set primary identifier
do not print the indication on the prescription
do not print the indication on the prescription
determine if this form
active indicator 1 active 0 inactive
determine if this form
uppercase without spaces value of idvalue
do not print the indication on the prescription
1 when displaying a reference value display the short display if possible
determine if this form
1 when displaying a reference value display the short display if possible
1 when displaying a reference value display the short display if possible
1 when displaying a reference value display the short display if possible
identifies the system which originally created this row if reference
date the record was created
1 when displaying a reference value display the short display if possible
whether to deny access by default to this transition
1 when displaying a reference value display the short display if possible
whether to deny access by default to this transition
user that created this record
whether to deny access by default to this transition
identifies the system which originally created this row if reference
whether to deny access by default to this transition
source of identifier generation foreign key to reference identifier source
whether to deny access by default to this transition
whether to deny access by default to this transition
identifies the system which originally created this row if reference
date the record was created
transaction number assigned by the system
transaction number assigned by the system
user that created this record
transaction number assigned by the system
record item type
set primary identifier
date the record was updated
record item type
date the record was updated
role deny or allowed access to this transition
role deny or allowed access to this transition
date the record was last updated
date the record was updated
date the record was last updated
number of times this record has been updated
identifies the system which originally created this row if reference
set primary identifier
transaction number assigned by the system
date the record was last updated
active indicator 1 active 0 inactive
date the record was updated
check digit for mrn validation
date the record was last updated
todo business rules
number of times this record has been updated
number of times this record has been updated
returns a random item if none exists it is added to the set
set primary identifier
uppercase without spaces value of idvalue
active indicator 1 active 0 inactive
date the record was created
term defining this record
color to override the default order color
user that created this record
term defining this record
source of identifier generation foreign key to reference identifier source
second dimension of the unit
custom controller for definition
identifies the system which originally created this row if reference
second dimension of the unit
quantitative values stored in the record are measure in these units
transaction number assigned by the system
quantitative values stored in the record are measure in these units
date the record was updated
set primary identifier
date the record was last updated
number of times this record has been updated
icon used for this order type
icon used for this order type
number of times this record has been updated
date the record was created
remove the tree node from the parent node in the reference builder tree
user that created this record
set primary identifier
todo change name remove double 0
active indicator 1 active 0 inactive
remove the tree node from the parent node in the reference builder tree
form type if this record item is a child form
identifies the system which originally created this row if reference
todo change name remove double 0
form type if this record item is a child form
foreign key to refs on custom controller class
form display type takes prescedence
transaction number assigned by the system
date the record was updated
data type of value determines the column the value is stored in
date the record was last updated
active indicator 1 active 0 inactive
child form for hierarchal records
number of times this record has been updated
child form for hierarchal records
child form type
property to get the term identifier source
property to set the term identifier source
property to get the term category
data type of value determines the column the value is stored in
property to set the term category
term id value get property
facility specific for filtering
parent record item that groups a number of related record items
remove the tree node from the parent node in the reference builder tree
parent record item that groups a number of related record items
date the record item was created
remove the tree node from the parent node in the reference builder tree
set primary identifier
todo make sure this is called before adding to details
sequential ordering of record detail
user that created this record item
sequential ordering of record detail
remove the tree node from the parent node in the reference builder tree
active indicator 1 active 0 inactive
predefined definition for this record item e
date this record is filed under
check digit for mrn validation
predefined definition for this record item e
date this record is filed under
domain record item belongs to
refresh all controls
domain record item belongs to
set primary identifier
set primary identifier
clinical or administrative data element
refresh all controls
clinical or administrative data element
active indicator 1 active 0 inactive
active indicator 1 active 0 inactive
uppercase without spaces value of idvalue
refresh all controls
returns a random item if none exists it is added to the set
type of record such as data file
date the record was created
todo change name remove double 0
type of record such as data file
foreign key to records on form record id
user that created this record
remove the tree node from the parent node in the reference builder tree
returns a random item if none exists it is added to the set
source of identifier generation foreign key to reference identifier source
control printing option for html or report
identifies the system which originally created this row if reference
control printing option for html or report
returns a random item if none exists it is added to the set
date the record was created
whether to deny access by default to this transition
transaction number assigned by the system
form type transition
date the form record detail was created
set primary identifier
user that created this record
form type transition
date the record was updated
identifies the system which originally created this row if reference
date the record was created
date the record was last updated
user that created this form record detail
returns a random item if none exists it is added to the set
settings for this transition
number of times this record has been updated
user that created this record
transaction number assigned by the system
role deny or allowed access to this transition
archetype item value
set primary identifier
identifies the system which originally created this row if reference
complex status of form record detail value used to determine the display
active indicator 1 active 0 inactive
complex status of form record detail value used to determine the display
abbreviated name of term
date the record was updated
child form for hierarchal records
transaction number assigned by the system
date the record was last updated
date the record was updated
child form type
identifies the system which originally created this row if reference
number of times this record has been updated
date the record was last updated
data type of value determines the column the value is stored in
number of times this record has been updated
active indicator 1 active 0 inactive
transaction number assigned by the system
set primary identifier
identifies the system which originally created this row if reference
date the record item was updated
active indicator 1 active 0 inactive
date the record item was last updated
check digit for mrn validation
sequential ordering of record detail
transaction number assigned by the system
date the form record detail was updated
date this record is filed under
second dimension of the unit
returns a random item if none exists it is added to the set
set primary identifier
date the form record detail was last updated
set primary identifier
quantitative values stored in the record item are measure in these units
full description of term
uppercase without spaces value of idvalue
reference group used for this record item
active indicator 1 active 0 inactive
sequential order of terms in the same group
set primary identifier
reference group used for this record item
sequential order of terms in the same group
date the record was created
term defining the value list for the record item
foreign key to records on form record id
user that created this record
set primary identifier
facility owning these terms
term defining the value list for the record item
flags associated with the value such as critical
date the record was created
date the form record detail was created
source of identifier generation foreign key to reference identifier source
user that created this record
active indicator 1 active 0 inactive
action to execute when the order is triggered
flags associated with the value such as critical
action to execute when the order is triggered
user that created this form record detail
identifies the system which originally created this row if reference
date the record was created
number of times this record item has been updated
identifies the system which originally created this row if reference
active indicator 1 active 0 inactive
archetype item value
transaction number assigned by the system
user that created this record
active indicator 1 active 0 inactive
transaction number assigned by the system
complex status of form record detail value used to determine the display
foreign key to refs on form type
identifies the system which originally created this row if reference
script executed to dynamically build the form
date the record was updated
record item this term belongs to
script executed to dynamically build the form
date the record was updated
date the record was last updated
data type of value determines the column the value is stored in
file for inkable documents for this screen
file for inkable documents for this screen
number of times this record has been updated
date the record was last updated
form type foreign key to form types
settings for this transition
form type foreign key to form types
transaction number assigned by the system
date the record was created
number of times this record has been updated
user that created this record
name of the screen defaults to view
term defining this record
name of the screen defaults to view
sequence of screen in wizard
sequence of screen in wizard
term sequence to differentiate duplicate terms on the same form
identifies the system which originally created this row if reference
identifies the system which originally created this row if reference
term sequence to differentiate duplicate terms on the same form
term defining this record
term value if the term was free text or edited
transaction number assigned by the system
term value if the term was free text or edited
date the record was updated
second dimension of the unit
date the record was last updated
transaction number assigned by the system
number of times this record has been updated
date the form record detail was updated
view defining the form for a standard form dialog
quantitative values stored in the form record detail are measure in these units
view defining the form for a standard form dialog
date the form record detail was last updated
number of times this form record detail has been updated
date the record was created
category for this term
category for this term
user that created this record
set primary identifier
full name of term
uppercase no space name of term
uppercase no space name of term
flags associated with the value such as critical
date this record is filed under
metaphone match on term
set primary identifier
date this record is filed under
metaphone match on term
owner of this term
set primary identifier
set primary identifier
active indicator 1 active 0 inactive
active indicator 1 active 0 inactive
owner of this term
source term orignated from
active indicator 1 active 0 inactive
source term orignated from
child form for hierarchal records
check digit for mrn validation
subcategory for the terms
subcategory for the terms
active indicator 1 active 0 inactive
child form type
archetype item value
date the record was created
type of term
data type of value determines the column the value is stored in
user that created this record
foreign key to refs on record item state
type of term
data type of value determines the column the value is stored in
sequential ordering of the records on the form
sequential ordering of the records on the form
term defining this record
date the record was updated
second dimension of the unit
uppercase without spaces value of idvalue
complex status of record value used to determine the display
date the record was last updated
date the record was created
quantitative values stored in the form record detail are measure in these units
date the record was created
user that created this record
number of times this record has been updated
related item name
user that created this record
related item name
identifies the system which originally created this row if reference
number of times this form record detail has been updated
charge item related to
charge item related to
source of identifier generation foreign key to reference identifier source
transaction number assigned by the system
date the record was created
date the record was created
identifies the system which originally created this row if reference
date the record was updated
form type related to
form type related to
date the record was last updated
user that created this record
order related to
user that created this record
transaction number assigned by the system
order related to
number of times this record has been updated
record item related to
record item related to
date the record was updated
related term categories
identifies the system which originally created this row if reference
related term categories
date the record was last updated
date this record is filed under
file related to
file related to
number of times this record has been updated
subcategories of terms related
subcategories of terms related
identifies the system which originally created this row if related
transaction number assigned by the system
set primary identifier
archetype item value
transaction number assigned by the system
state of this record
date the record was updated
active indicator 1 active 0 inactive
sequential ordering of the records on the form
date the record was last updated
color to override the default form color
complex status of record value used to determine the display
identifies the system which originally created this row if reference
date the record was updated
icon used for this form type
set primary identifier
date the record was last updated
second dimension of the unit
form status this state is in
foreign key to refs on currency
form status this state is in
transaction number assigned by the system
quantitative values stored in the record are measure in these units
foreign key to refs on currency
date the record was created
active indicator 1 active 0 inactive
number of times this record has been updated
set primary identifier
term defining this record
user that created this record
sequential progression of this state
algorithm to apply in lieu of a fixed charge amount
sequential progression of this state
get the value double int string or date
identifies the system which originally created this row if reference
term sequence to differentiate duplicated records
active indicator 1 active 0 inactive
set primary identifier
transaction number assigned by the system
text value if the term was free text
date the record was updated
date the record was last updated
date the record was created
active indicator 1 active 0 inactive
date the record was updated
number of times this record has been updated
date the record was created
user that created this record
set primary identifier
user that created this record
custom controller to process transitions
sequence the rule should execute in
flags associated with the value such as critical
sequence the rule should execute in
date the record was last updated
identifies the system which originally created this row if reference
identifies the system which originally created this row if reference
transaction number assigned by the system
transaction number assigned by the system
currency for records
date the record was updated
date the record was updated
date the record was last updated
active indicator 1 active 0 inactive
date the record was last updated
state the order was in prior to the action
number of times this record has been updated
state the order was in prior to the action
number of times this record has been updated
date the record was created
user that created this record
order action potentially available for this state
order action potentially available for this state
form transition label
dialog defining the form controls
returns a random item if none exists it is added to the set
form transition label
flags associated with the value such as critical
term defining this record
set primary identifier
returns a random item if none exists it is added to the set
facility owning this document
settings for this transition
set primary identifier
active indicator 1 active 0 inactive
second dimension of the unit
identifies the system which originally created this row if reference
color to override the default record item color
active indicator 1 active 0 inactive
transaction number assigned by the system
color to override the default order color
quantitative values stored in the record are measure in these units
state the order is in after the action
state the order is in after the action
record item status this state is in
form used to complete the transition
record item status this state is in
form used to complete the transition
number of times this record has been updated
set primary identifier
icon for transition
override default foreground color
index value of value string first 255 characters
icon for transition
index value of value string first 255 characters
rule used to determine if the transition can take place
date the record was created
set primary identifier
state of the form
rule used to determine if the transition can take place
state of the form
user that created this record
active indicator 1 active 0 inactive
icon used for this record item type
term defining this record
date the record was updated
icon used for this record item type
date this form last changed status
date the record was last updated
record item state
active indicator 1 active 0 inactive
identifies the system which originally created this row if reference
date the record was created
second dimension of the unit
number of times this record has been updated
sequential progression of this state
action to execute when the form is triggered
user that created this record
action to execute when the form is triggered
identifies the system which originally created this row if reference
type of model using this record item type
quantitative values stored in the record are measure in these units
type of model using this record item type
data type of value determines the column the value is stored in
icon used for this order type
icon used for this order type
date the record was created
transaction number assigned by the system
transaction number assigned by the system
number of times this record has been updated
user that created this record
date the record was updated
type of form
visit this record is associated with
identifies the system which originally created this row if reference
date the record was last updated
visit this record is associated with
date the record was created
number of times this record has been updated
transaction number assigned by the system
sequential ordering of record detail
user that created this record
identifies the system which originally created this row if reference
date the record was updated
date the term detail was created
user that created this term detail
date the record was updated
date the record was last updated
transaction number assigned by the system
number of times this record has been updated
archetype item value
date the record was last updated
identifies the system which originally created this row if reference
date the record was updated
date the record was last updated
number of times this record has been updated
owner of this form
transaction number assigned by the system
number of times this record has been updated
owner of this form
foreign key to records on term id
date the term detail was updated
date the term detail was last updated
set primary identifier
returns a random item if none exists it is added to the set
current or last patient location for visit
set primary identifier
set primary identifier
hospital or medical service
active indicator 1 active 0 inactive
custom controller to process transitions
active indicator 1 active 0 inactive
default active list for term
identifies the system which originally created this row if reference
default active list for term
returns a random item if none exists it is added to the set
color to override the default term color
term defining this record
term value if the term was free text or edited
set primary identifier
term value if the term was free text or edited
transaction number assigned by the system
number of times this term detail has been updated
rule used to determine when this template is applied
set primary identifier
rule used to determine when this template is applied
1 form is part of an order template 0 patient form
active indicator 1 active 0 inactive
1 form is part of an order template 0 patient form
active indicator 1 active 0 inactive
1 form is part of an order template 0 patient form
1 saved form should update the active list
1 form is part of an order template 0 patient form
order action potentially available for this state
1 saved form should update the active list
1 form is part of an order template 0 patient form
facility the user has this role in
1 saved form should update the active list
set primary identifier
1 form is part of an order template 0 patient form
form transition label
date the record was created
date the record was created
1 saved form should update the active list
form transition label
priority templates are applied
user that created this record
1 saved form should update the active list
state the order was in prior to the action
user that created this record
priority templates are applied
role of the user e
role of the user e
1 saved form should update the active list
path in resources images to icon
defines how multiple users can access the same form
active indicator 1 active 0 inactive
identifies the system which originally created this row if reference
title of document or form
date the record was created
set primary identifier
defines how multiple users can access the same form
column name for the database table
comparison operator for condition
comparison operator for condition
user that created this record
transaction number assigned by the system
data type of value determines the column the value is stored in
custom controller for this form
date the record was updated
active indicator 1 active 0 inactive
view represents an application view
default value for the zoom
view represents an application view
date the record was last updated
default value for the zoom
identifies the system which originally created this row if reference
set primary identifier
type of comparison for this field
number of times this record has been updated
type of comparison for this field
date the record was updated
order is placed if associated with the form
deleted indicator 1 deleted 0 not deleted
transaction number assigned by the system
input type instead of a model
active indicator 1 active 0 inactive
order is placed if associated with the form
input type instead of a model
date the record was created
form containing controls for templates
date the record was last updated
order is placed if associated with the form
date the record was created
form containing controls for templates
user that created this record
order is placed if associated with the form
icon used for this term type
user that created this record
sequence the rule should execute in
number of times this record has been updated
order is placed if associated with the form
date the record was created
icon used for this term type
type of input to filter defines when executed
identifies the system which originally created this row if reference
order is placed if associated with the form
user that created this record
type of input to filter defines when executed
identifies the system which originally created this row if reference
1 negate the comparison 0 performance normal comparison
dialog defining the form type controls
visit the form is associated with
1 negate the comparison 0 performance normal comparison
settings for this transition
transaction number assigned by the system
1 negate the comparison 0 performance normal comparison
display used in lieu of this form
date the record was updated
1 negate the comparison 0 performance normal comparison
date the record was updated
transaction number assigned by the system
1 negate the comparison 0 performance normal comparison
display used in lieu of this form
identifies the system which originally created this row if reference
date the record was last updated
1 negate the comparison 0 performance normal comparison
name of the template
date the record was last updated
form definition to define workflow
text for the template
number of times this record has been updated
text for the template
form definition to define workflow
number of times this record has been updated
date the record was updated
type of display such as form default flowsheet
identifies the system which originally created this row if reference
transaction number assigned by the system
date the record was last updated
type of display such as form default flowsheet
state the order is in after the action
transaction number assigned by the system
set primary identifier
number of times this record has been updated
grouping of form types
date the record was updated
form used to complete the transition
set primary identifier
system defined group to define where forms are accessible
access term list
date the record was last updated
access term list
system defined group to define where forms are accessible
icon for transition
forms can be filtered by the location of the user or patient
active indicator 1 active 0 inactive
rule used to determine if the transition can take place
forms can be filtered by the location of the user or patient
active indicator 1 active 0 inactive
icon for the form type
date the record was updated
icon for the form type
type of authorization
type of authorization
type of controller
type of controller
type of form type
set primary identifier
date the record was last updated
form with a single control used as a header
form with a single control used as a header
number of times this record has been updated
active indicator 1 active 0 inactive
date the record was created
date the record was created
complex status of setting value used to determine the display
complex status of setting value used to determine the display
flags associated with the value such as critical
user that created this record
flags associated with the value such as critical
data type of value determines the column the value is stored in
user that created this record
number of times this record has been updated
set primary identifier
set primary identifier
identifies the system which originally created this row if reference
label applied to the form type
date the setting was created
1 hide this form from the listing of patients forms
user that created this setting
transaction number assigned by the system
active indicator 1 active 0 inactive
1 hide this form from the listing of patients forms
active indicator 1 active 0 inactive
specific action where this check applys
date the record was updated
type of audit
specific action where this check applys
archetype item value
type of audit
set primary identifier
application action or other reference item to allow or disallow access
date the record was last updated
1 hide this form from the listing of patients forms
archetype item value
user make the change
application action or other reference item to allow or disallow access
user make the change
system determined change made to this record
date the record was created
1 hide this form from the listing of patients forms
number of times this record has been updated
system determined change made to this record
user who made the change
1 hide this form from the listing of patients forms
user that created this record
user who made the change
active indicator 1 active 0 inactive
jar file used to provide functionality
1 hide this form from the listing of patients forms
date this record was saved to the log
jar file used to provide functionality
0 check is to allow access
type of model controller is for
date this record was saved to the log
form defining the menu
0 check is to allow access
type of model controller is for
form defining the menu
0 check is to allow access
visit appointment order or any other entity
form used for settings
0 check is to allow access
visit appointment order or any other entity
form used for settings
0 check is to allow access
0 check is to allow access
date the record was created
identifies the system which originally created this row if reference
identifies the system which originally created this efs on icon
date the record was created
user that created this record
date the record was created
check that created this record
user that created this record
transaction number assigned by the system
transaction number assigned by the system
identifies the system which originally created this row if reference
location permission applies to
date the record was updated
1 permissions for specified date range 0 no date range
identifies the system which originally created this row if reference
date the setting was updated
1 permissions for specified date range 0 no date range
date the record was last updated
transaction number assigned by the system
1 permissions for specified date range 0 no date range
date the setting was last updated
set primary identifier
owner of this form
date the record was updated
transaction number assigned by the system
number of times this record has been updated
1 permissions for specified date range 0 no date range
number of times this setting has been updated
date the record was last updated
date the record was updated
1 permissions for specified date range 0 no date range
entity assigned permission
number of times this record has been updated
date the record was last updated
set primary identifier
get the value double int string or date
entity assigned permission
each view has a distinct set of controls
number of times this record has been updated
active indicator 1 active 0 inactive
returns a random item if none exists it is added to the set
set primary identifier
preferred size height in pixels
active indicator 1 active 0 inactive
preferred size height in pixels
data type of value determines the column the value is stored in
custom controller for the user group
preferred size width in pixels
active indicator 1 active 0 inactive
how a new form is prepared
how a new form is prepared
facility this user group belongs to
image preview of this form type
group of the user e
group of the user e
image preview of this form type
application module for view
source entity such as resource appointment type form group
date the record was created
date the record was created
source entity such as resource appointment type form group
report used to generate the print of this form if applicable
user that created this record
user that created this record
script executed any time a control fires the system update calculation action
settings for group
identifies the system which originally created this row if reference
report used to generate the print of this form if applicable
reference group for value
identifies the system which originally created this row if reference
script executed any time a control fires the system update calculation action
reference group for value
returns a random item if none exists it is added to the set
column specification for layout of form
set primary identifier
parameter used to substitute in the script
parameter used to substitute in the script
get the value double int string or date
column specification for layout of form
transaction number assigned by the system
transaction number assigned by the system
indicates that the active list records should pull into this form
set primary identifier
get the value double int string or date
defines the controls at a fixed width overriding the controls grow value
type of transaction being assigned the permission
identifies the system which originally created this row if reference
set primary identifier
date the record was updated
defines the controls at a fixed width overriding the controls grow value
indicates that the active list records should pull into this form
active indicator 1 active 0 inactive
date the record was updated
script executed any time any control loses focus
date the record was last updated
indicates that the active list records should pull into this form
type of user group
active indicator 1 active 0 inactive
script executed any time any control loses focus
type of user group
dialog or frame applicaton form
date the record was last updated
dialog or frame applicaton form
indicates that the active list records should pull into this form
active indicator 1 active 0 inactive
term defining this record
number of times this record has been updated
number of times this record has been updated
indicates that the active list records should pull into this form
date the record was created
returns a random item if none exists it is added to the set
date the record was updated
user that created this record
indicates that the active list records should pull into this form
date the record was last updated
type of input to filter defines when executed
context used for security access
type of input to filter defines when executed
returns a random item if none exists it is added to the set
context used for security access
date the record was created
identifies the system which originally created this row if reference
number of columns controls are laid out on
user that created this record
number of columns controls are laid out on
transaction number assigned by the system
define any global script functions here
settings for this form type
date the record was created
define any global script functions here
date the record was updated
identifies the system which originally created this row if reference
user that created this record
date the record was last updated
set primary identifier
url to html help file associated with this view
maximum width of the column
number of times this record has been updated
transaction number assigned by the system
minimum width of the column
icon representing this view
minimum width of the column
date the record was updated
icon representing this view
column for which the preferences will override
associated form type for the action
column for which the preferences will override
date the record was last updated
user position or other entity owning the preferences
term defining this record
date the record was created
user position or other entity owning the preferences
number of times this record has been updated
set primary identifier
associated form type for the action
identifies the system which originally created this row if reference
second dimension of the unit
user that created this record
active indicator 1 active 0 inactive
min control width in dlu
view used to add this control when new
quantitative values stored in the record are measure in these units
order type associated with this control
set primary identifier
view used to add this control when new
transaction number assigned by the system
access term list
min control width in dlu
identifies the system which originally created this row if reference
access term list
application control group
number of times this record has been updated
min width in dlu for the label
application control group
order type associated with this control
date the record was updated
color to override the default appointment color
min width in dlu for the label
date the record was last updated
min row height in dlu
image of control
active indicator 1 active 0 inactive
view related to the action such as menu popup
image of control
number of times this record has been updated
min row height in dlu
type of authorization
transaction number assigned by the system
full qualified class name of the model for this view
full qualified class name of the model for this view
view related to the action such as menu popup
execute on a new model to default values
override default foreground color
control is a separator
execute on a new model to default values
date the record was created
control is a tab
user that created this record
control is a tab
date the record was updated
settings for this transition
control is a tab
identifies the system which originally created this row if reference
control is a tab
set primary identifier
order the authorization list appears
control is a tab
date the record was last updated
control is a tab
folder for authorization
type of access such as manual or query
transaction number assigned by the system
type of access such as manual or query
comparator by display sequence
date the record was created
date the record was updated
return the model reference
date the record was last updated
by default should be focussed
number of times this record has been updated
user that created this record
script executed after all controls have been laid out on the form
number of times this record has been updated
identifies the system which originally created this row if reference
active indicator 1 active 0 inactive
script executed after all controls have been laid out on the form
override the default row specification
bound to a model reference id
override the default row specification
transaction number assigned by the system
get the model ref id
source reference model
date the record was updated
set the source reference model
identifies the system which originally created this row if reference
get the source reference
date the record was last updated
source reference id set
set primary identifier
number of times this record has been updated
set primary identifier
active indicator 1 active 0 inactive
transaction number assigned by the system
active indicator 1 active 0 inactive
tab layout default is top override with left right or bottom
order the access list appears
tab layout default is top override with left right or bottom
unique name of control within view
location of the tabs
date the record was created
location of the tabs
date the record was created
active indicator 1 active 0 inactive
user that created this record
date the record was updated
unique name of control within view
user that created this record
owner of access such as user group facility role location user
fully qualified class name for plugin implementation
date the record was last updated
form type which represents the active list
plugin interface name
execute prior to storing the model
plugin interface name
get the view reference id
execute prior to storing the model
identifies the system which originally created this row if reference
determine image path is not null
validate any controls defined as parameters
number of times this record has been updated
get the matching application control or null
script executed to retreive a row for each id returned by query script
transaction number assigned by the system
get the matching application control or null
get the matching application control or null
script executed to retreive a row for each id returned by query script
date the record was updated
view represents an application view
foreign key to refs on form type
action on selection of a row
type of view menu button pane
date the record was last updated
script used for business logic to determine the control action
action on selection of a row
return the action view ref id or 0
type of view menu button pane
number of times this record has been updated
return the right click action or 0
script used for business logic to determine the control action
identifies the system which originally created this row if reference
return the right click action or 0
transaction number assigned by the system
context of target table to receive the results
context of target table to receive the results
data type of value determines the column the value is stored in
date the record was updated
set primary identifier
1 control action should execute in the background 0 edt thread
returns a random item if none exists it is added to the set
date the record was last updated
set primary identifier
active indicator 1 active 0 inactive
set primary identifier
number of times this record has been updated
1 control action should execute in the background 0 edt thread
active indicator 1 active 0 inactive
1 control action should execute in the background 0 edt thread
date the record was created
returns a random item if none exists it is added to the set
complex status of setting value used to determine the display
set primary identifier
user that created this record
panel for which the preferences will override
active indicator 1 active 0 inactive
1 control action should execute in the background 0 edt thread
panel for which the preferences will override
flags associated with the value such as critical
user position or other entity owning the preferences
panel defining the preferences which will override
panel defining the preferences which will override
data type of value determines the column the value is stored in
active indicator 1 active 0 inactive
identifies the system which originally created this row if reference
1 control action should execute in the background 0 edt thread
form type for these values
transaction number assigned by the system
date the record was updated
date the record was last updated
type of business rule defines when executed
1 control action should execute in the background 0 edt thread
type of business rule defines when executed
number of times this record has been updated
unique name of panel within dialog
date the setting was created
unique name of panel within dialog
user that created this setting
date the record was created
set primary identifier
some models rather than needing a model script are predefined here
type of panel dialog or frame
multiple values allowed for setting
multiple values allowed for setting
type of panel dialog or frame
date the record was created
multiple values allowed for setting
user that created this record
some models rather than needing a model script are predefined here
user that created this record
multiple values allowed for setting
active indicator 1 active 0 inactive
overview of the rule
multiple values allowed for setting
overview of the rule
application control for the templates
application view identifier contained by panel
multiple values allowed for setting
type of rule input such as visit id patients table
string representation of the color as a 24 bit integer
processing of the rule e
archetype item value
processing of the rule e
string representation of the color as a 24 bit integer
date the record was created
user that created this record
identifies the system which originally created this row if reference
sequence the rules should execute when of the same rule type
order associated with this control
identifies the system which originally created this row if reference
identifies the system which originally created this row if reference
transaction number assigned by the system
category for the set of template text
category for the set of template text
owner of these template values
date the record was updated
transaction number assigned by the system
date the record was last updated
transaction number assigned by the system
script executed to determine if the control value action should be executed
date the setting was updated
1 business rule throws an exception if fails
fully qualified class name of the component for this model
1 business rule throws an exception if fails
script executed to determine if the control value action should be executed
date the setting was last updated
1 business rule throws an exception if fails
set primary identifier
number of times this record has been updated
charge item bound to this control
context to reference the panel
1 business rule throws an exception if fails
number of times this setting has been updated
1 business rule throws an exception if fails
if this is a tab then this defines it as the default
script used instead of the class name to instantiate the script
determine if any menus are on this dialog or frame
archetype item value
1 business rule throws an exception if fails
determine if any toolbar buttons on this panel
if this is a tab then this defines it as the default
active indicator 1 active 0 inactive
date the record was updated
script used instead of the class name to instantiate the script
if this is a tab then this defines it as the default
get the view which contains the control with the specified context
get the view which contains the control with the specified context
toolbar for main application
form used to define the settings
if this is a tab then this defines it as the default
date the record was last updated
get the view which contains the control with the specified context
toolbar for main application
get the view which contains the control with the specified context
patient chart menu
patient chart menu
if this is a tab then this defines it as the default
toolbar for the patient chart
get the view which contains the control with the specified context
number of times this record has been updated
toolbar for the patient chart
if this is a tab then this defines it as the default
form type for settings
source application control for some actions
panels are typically names lt app name gt suffix
source application control for some actions
date the record was created
role that created this record
icon for action
name of the role group e
icon for action
settings for this transition
set primary identifier
identifies the system which originally created this row if reference
transaction number assigned by the system
display sequence of panel
date the record was updated
active indicator 1 active 0 inactive
set primary identifier
identifies the system which originally created this row if reference
1 left right vertical divider 0 top bottom horizontal divider
date the record was last updated
1 left right vertical divider 0 top bottom horizontal divider
number of times this record has been updated
get the child panel
get the parent panel
1 left right vertical divider 0 top bottom horizontal divider
view related to the action such as menu popup
set primary identifier
date the record was created
1 left right vertical divider 0 top bottom horizontal divider
user that created this record
1 left right vertical divider 0 top bottom horizontal divider
filter reference lists by category
view whose controls define the parameters to this script
active indicator 1 active 0 inactive
view whose controls define the parameters to this script
current location of user
context of target control
class name for object of return value
current location of user
class name for object of return value
users currently selected role
return the display sequence
return the model reference
users currently selected role
for split panes determines if the divider should have one touch expansion arrows
context of target control
filter reference lists by category
for split panes determines if the divider should have one touch expansion arrows
script language used in the script such as javascript drools
set primary identifier
term id of the target control if specified
for split panes determines if the divider should have one touch expansion arrows
script language used in the script such as javascript drools
script represents javascript
for split panes determines if the divider should have one touch expansion arrows
script represents javascript
term id of the target control if specified
for split panes determines if the divider should have one touch expansion arrows
type of script
1 dynamic search of reference values instead of prepopulating the entire list
date the record was created
for split panes determines if the divider should have one touch expansion arrows
type of script
active indicator 1 active 0 inactive
defines this tab should be hidden
user that created this record
identifies the system which originally created this row if reference
database table used for queries
active indicator 1 active 0 inactive
defines this tab should be hidden
category for this control
defines this tab should be hidden
set primary identifier
1 dynamic search of reference values instead of prepopulating the entire list
defines this tab should be hidden
set primary identifier
transaction number assigned by the system
defines this tab should be hidden
term defining this record
1 dynamic search of reference values instead of prepopulating the entire list
date the record was updated
unique identifier to the application control table
identifies the system which originally created this row if reference
type of input to filter
defines this tab should be hidden
identifier value for the term s
date the record was last updated
active indicator 1 active 0 inactive
date the record was created
1 dynamic search of reference values instead of prepopulating the entire list
category for adding new terms
transaction number assigned by the system
active indicator 1 active 0 inactive
number of times this record has been updated
identifier value for the term s
category for adding new terms
user that created this record
date the record was updated
1 dynamic search of reference values instead of prepopulating the entire list
unique name of control within view
foreign key for application control table
date the record was last updated
combined context setting
combined context setting
date the record was created
term subcategory for this control
1 dynamic search of reference values instead of prepopulating the entire list
list of sql joins using the fully qualified table name e
fully qualified class name of data type for this column
combined context setting
list of sql joins using the fully qualified table name e
fully qualified class name of data type for this column
number of times this record has been updated
combined context setting
context setting is valid for
user that created this record
context setting is valid for
text used for the term
identifies the system which originally created this row if reference
format mask for control e
border layout constraint e
sequence the context is evaluated or sequence values ordered
format mask for control e
sequence the context is evaluated or sequence values ordered
1 term text is editable
transaction number assigned by the system
1 term text is editable
location on the x axis from parent component in pixels
data type of value determines the column the value is stored in
unique name identifying this column
date the record was updated
location on the x axis from parent component in pixels
reference group for this column
1 term text is editable
script used instead of the class name to instantiate the script
date the record was last updated
reference group for this column
location on the y axis from parent component in pixels
1 term text is editable
number of times this record has been updated
location on the y axis from parent component in pixels
1 term text is editable
maximize panel when displayed only applicable to dialogs and frames
facility this setting applies to other 0 for all
1 term text is editable
maximize panel when displayed only applicable to dialogs and frames
fully qualified class name of cell editor component
date the setting value was created
if parameter then this is the comparison operator
maximize panel when displayed only applicable to dialogs and frames
set primary identifier
1 use short display for refs
user that created this setting value
access term list
maximize panel when displayed only applicable to dialogs and frames
date the record was updated
context for control to send and receive events
maximize panel when displayed only applicable to dialogs and frames
identifies the system which originally created this row if reference
set primary identifier
control description for tool tip
1 use short display for refs
maximize panel when displayed only applicable to dialogs and frames
active indicator 1 active 0 inactive
control description for tool tip
authorization role group
date the record was last updated
transaction number assigned by the system
authorization role group
format mask for control e
active indicator 1 active 0 inactive
date the setting value was updated
type of authorization
1 use short display for refs
dialog when the user first logs in
date the setting value was last updated
minimum size width in pixels
format mask for control e
record item for this column for the form record detail
minimum size width in pixels
default to allow access to all functions or deny access to all functions
record item for this column for the form record detail
default to allow access to all functions or deny access to all functions
1 use short display for refs
frame or form title displayed
default to allow access to all functions or deny access to all functions
default to allow access to all functions or deny access to all functions
frame or form title displayed
date the record was created
default to allow access to all functions or deny access to all functions
preferred size height in pixels
folder for free text items
default to allow access to all functions or deny access to all functions
tab separator control
user that created this record
set primary identifier
preferred size height in pixels
folder for free text items
1 use short display for refs
preferred size width in pixels
tab separator control
preferred size width in pixels
active indicator 1 active 0 inactive
identifies the system which originally created this row if reference
form opens this control receives focus 1 true 0 false
create a control panel for the embedded view
1 use short display for refs
form opens this control receives focus 1 true 0 false
form opens this control receives focus 1 true 0 false
create a control panel for the embedded view
form opens this control receives focus 1 true 0 false
date the record was created
transaction number assigned by the system
form opens this control receives focus 1 true 0 false
user that created this record
date the record was updated
term defining the drop down list of values for the list
term defining this record
create a control panel for the embedded view
date the record was last updated
second dimension of the unit
create a control panel for the embedded view
number of times this record has been updated
term defining the drop down list of values for the list
type of role
script executed to initialize the cell editor component
sequential display of control within app
type of role
quantitative values stored in the setting value are measure in these units
script executed to initialize the cell editor component
explicit size height in pixels
create a control panel for the embedded view
settings for this transition
explicit size height in pixels
number of times this setting value has been updated
create a control panel for the embedded view
identifies the system which originally created this row if reference
date the record was created
if parameter then this is the comparison operator
explicit size width in pixels
explicit size width in pixels
date the record was created
user that created this record
transaction number assigned by the system
user that created this record
control for which the preferences will override
context for control to send and receive events
date the record was updated
control for which the preferences will override
limit the max width of the column
limit the max width of the column
user position or other entity owning the preferences
date the record was last updated
limit the max width of the column
identifies the system which originally created this row if reference
limit the max width of the column
number of times this record has been updated
limit the max width of the column
control description for tool tip
limit the max width of the column
limit the minimum width of the column
transaction number assigned by the system
term defining this record
limit the minimum width of the column
date the record was updated
identifies the system which originally created this row if reference
limit the minimum width of the column
date the record was last updated
format mask for control e
limit the minimum width of the column
second dimension of the unit
number of times this record has been updated
limit the minimum width of the column
limit the minimum width of the column
is the cell locked from editing 1 locked 0 editable
is the cell locked from editing 1 locked 0 editable
quantitative values stored in the record are measure in these units
transaction number assigned by the system
is the cell locked from editing 1 locked 0 editable
is the cell locked from editing 1 locked 0 editable
is the cell locked from editing 1 locked 0 editable
set primary identifier
number of times this record has been updated
report for this control
is the cell locked from editing 1 locked 0 editable
form opens this control receives focus 1 true 0 false
max width of the column
active indicator 1 active 0 inactive
location of the tab
report for this control
minimum width of the column
foreign key to table
date the record was updated
date the translation was created
user that created this translation
domain model control updates
set primary identifier
foreign key to refs on model
date the record was last updated
script to get child model from row model
tab separator control
identifies the system which originally created this row if reference
script to get child model from row model
number of times this record has been updated
custom controller used to render the values in this column
active indicator 1 active 0 inactive
transaction number assigned by the system
business logic is typically based upon the category not the reference value
business logic is typically based upon the category not the reference value
visible indicator 1 visible 0 invisible
custom controller used to render the values in this column
date the translation was updated
term search category
visible indicator 1 visible 0 invisible
date the translation was last updated
visible indicator 1 visible 0 invisible
term search category
system supported lanuage translation
set primary identifier
system supported lanuage translation
visible indicator 1 visible 0 invisible
number of times this translation has been updated
visible indicator 1 visible 0 invisible
description of this reference code
active indicator 1 active 0 inactive
visible indicator 1 visible 0 invisible
order items should display in lists
type of document such as clinic progress note
type of document such as clinic progress note
date the record was created
create a control panel for the embedded view
script executed with access id parameter to get the xml for that row
indicates to use a shorter display for the values
user that created this record
incremented to facilitate duplicate key if needed
date the record was created
incremented to facilitate duplicate key if needed
user that created this record
reference qualifying the source of this control
context used for role based security
custom controller for this control
identifies the system which originally created this row if reference
identifies the system which originally created this row if reference
transaction number assigned by the system
name of the template
shorter display for reference code display if applicable
name of the template
system determined change made to this record
date the record was updated
sequential display of control within app
transaction number assigned by the system
date the record was last updated
update the ref key setting it to the default ref key value
user who made the change
number of times this record has been updated
enable ability to drag the selected row exported as a model
date this record was saved to the log
enable ability to drag the selected row exported as a model
set primary identifier
identifies the system which originally created this row if reference
enable ability to drag the selected row exported as a model
active indicator 1 active 0 inactive
set primary identifier
set primary identifier
transaction number assigned by the system
enable ability to drag the selected row exported as a model
term search term type
active indicator 1 active 0 inactive
date the record was updated
active indicator 1 active 0 inactive
child reference id
enable ability to drag the selected row exported as a model
description of this group of reference codes
child reference id
reference to the traceability implementation nbr
child sequence within tree
check digit for mrn validation
date the record was last updated
child sequence within tree
reference to the traceability implementation nbr
enable ability to drag the selected row exported as a model
date the record was updated
date the record was created
number of times this record has been updated
embedded view layout e
user that created this record
date the record was last updated
deleted indicator 1 deleted 0 not deleted
category for the reference items
embedded view layout e
category for the reference items
date the record was created
unique code for this reference group
unique code for this reference group
number of times this record has been updated
user that created this record
type of reference this table contains 0 if a mix or undefined
parent reference id
embedded view placed directly alongside with this control
type of reference this table contains 0 if a mix or undefined
parent reference id
uppercase without spaces value of idvalue
relationship between reference
system defined reference groups are integrated into the sourc code
relationship between reference
system defined reference groups are integrated into the sourc code
embedded view placed directly alongside with this control
system defined reference groups are integrated into the sourc code
identifies the system which originally created this row if reference
system defined reference groups are integrated into the sourc code
date the record was created
decorate button as flat raise lower on hover click
system defined reference groups are integrated into the sourc code
transaction number assigned by the system
system defined reference groups are integrated into the sourc code
user that created this record
flag to prevent addition of reference values unless the development environment
date the record was updated
form opens this control receives focus 1 true 0 false
decorate button as flat raise lower on hover click
flag to prevent addition of reference values unless the development environment
date the record was last updated
flag to prevent addition of reference values unless the development environment
number of times this record has been updated
flag to prevent addition of reference values unless the development environment
source of identifier generation foreign key to reference identifier source
flag to prevent addition of reference values unless the development environment
decorate button as flat raise lower on hover click
flag to prevent addition of reference values unless the development environment
identifies the system which originally created this row if reference
duration of time to look back for a default value
identifies the system which originally created this row if reference
decorate button as flat raise lower on hover click
transaction number assigned by the system
duration of time to look back for a default value
transaction number assigned by the system
decorate button as flat raise lower on hover click
date the record was updated
date the record was updated
date the record was last updated
date the record was last updated
decorate button as flat raise lower on hover click
set primary identifier
number of times this record has been updated
number of times this record has been updated
time units for lookback value
javascript executed when the control gains focus
set primary identifier
active indicator 1 active 0 inactive
javascript executed when the control gains focus
time units for lookback value
color to override the default location color
active indicator 1 active 0 inactive
javascript executed when the control loses focus
set primary identifier
javascript executed when the control loses focus
unit of measure to convert from
deleted indicator 1 deleted 0 not deleted
unit of measure to convert from
date the record was created
active indicator 1 active 0 inactive
view used to override the default view for controls
user that created this record
business logic is typically based upon the category not the reference value
view used to override the default view for controls
the number of from units is multiplied by the numerator
the number of from units is multiplied by the numerator
identifies the system which originally created this row if reference
date the record was created
user that created this record
transaction number assigned by the system
unit of measure to convert to
description of this reference code
unit of measure to convert to
date the record was updated
how the default value is determined
convenience method to determine if order status is active
date the record was last updated
order items should display in lists
convenience method to determine if order status is new
set primary identifier
returns a random item if none exists it is added to the set
form for location
number of times this record has been updated
date the record was created
form for location
view of the order
how the default value is determined
0 no growth 0 weighted value to grow
returns a random item if none exists it is added to the set
icon for the location type
user that created this record
active indicator 1 active 0 inactive
returns a random item if none exists it is added to the set
icon for the location type
color to override the default order color
set primary identifier
list of medications in the order
incremented to facilitate duplicate key if needed
type of location
0 no growth 0 weighted value to grow
view of the order
type of location
0 no growth 0 weighted value to grow
context used for role based security
active indicator 1 active 0 inactive
shorter display for reference code display if applicable
type of form used for settings
0 no growth 0 weighted value to grow
returns a random item if none exists it is added to the set
identifies the system which originally created this row if reference
color to override the default order color
identifies the system which originally created this row if reference
date the record was created
set primary identifier
set primary identifier
transaction number assigned by the system
user that created this record
transaction number assigned by the system
icon used for this order type
date the record was updated
icon used for this order type
date the record was updated
date the record was last updated
order status this state is in
number of times this record has been updated
date the record was last updated
order status this state is in
number of times this record has been updated
sequential progression of this state
date the record was created
identifies the system which originally created this row if reference
active indicator 1 active 0 inactive
user that created this record
form type used to order or edit the order
form type used to order or edit the order
form type to chart the order
file path from resources images
icon used for this order type
set primary identifier
transaction number assigned by the system
form type to chart the order
order item type
order item type
return the first view order container found otherwise
date the record was updated
set primary identifier
date the record was last updated
comments for this order
report used when printing this order type
number of times this record has been updated
javascript executed when the control is first initialized
report used when printing this order type
settings for this transition
custom controller overrides order type
set primary identifier
default duration of order before expiring
identifies the system which originally created this row if reference
binding to the form record detail
date the record was created
default duration of order before expiring
active indicator 1 active 0 inactive
units the default duration is measured in
number of lines to insert before this control
transaction number assigned by the system
units the default duration is measured in
todo business rules
set primary identifier
date the record was updated
number of lines to insert before this control
date the record was last updated
set primary identifier
transaction number assigned by the system
number of times this record has been updated
active indicator 1 active 0 inactive
active indicator 1 active 0 inactive
whether to deny access by default to this transition
date the record was created
user that created this record
user that created this record
set primary identifier
order type transition
date the record was created
order type transition
deleted indicator 1 deleted 0 not deleted
user that created this record
date time the instance of the order occurs
role deny or allowed access to this transition
date time the instance of the order occurs
whether to deny access by default to this transition
the inset of the control where applicable such as with a button control
identifies the system which originally created this row if reference
active indicator 1 active 0 inactive
date the record was created
check digit for mrn validation
user that created this record
status of a single instance
transaction number assigned by the system
order type transition
status of a single instance
order type transition
the form the order was placed with
date the record was updated
status of the instance
role deny or allowed access to this transition
status of the instance
date the record was last updated
date the record was created
identifies the system which originally created this row if reference
number of times this record has been updated
string representation of the keystroke to activate this control
identifies the system which originally created this row if reference
transaction number assigned by the system
set primary identifier
string representation of the keystroke to activate this control
user that created this record
uppercase without spaces value of idvalue
date the record was updated
transaction number assigned by the system
instructions for this order
metaphone value of idvalue
date the record was last updated
sequential display of control within app
date the record was updated
returns a random item if none exists it is added to the set
date the record was created
instructions for this order
number of times this record has been updated
date the record was last updated
set primary identifier
user that created this record
1 order as needed 0 order as detailed
number of times this record has been updated
active indicator 1 active 0 inactive
1 order as needed 0 order as detailed
source of identifier generation foreign key to reference identifier source
1 order as needed 0 order as detailed
identifies the system which originally created this row if reference
active indicator 1 active 0 inactive
default duration of order before expiring
custom controller for transitions
transaction number assigned by the system
units the default duration is measured in
set primary identifier
date the record was updated
1 order as needed 0 order as detailed
date the record was last updated
reason for prn
active indicator 1 active 0 inactive
number of times this record has been updated
color to override the default order color
reason for prn
control locked from editing
order frequency e
returns a random item if none exists it is added to the set
order frequency e
domain model control updates
set primary identifier
set primary identifier
date the record was created
number of instances that should be generated for this order
enable ability to drag the selected row exported as a model
number of instances that should be generated for this order
user that created this record
date the record was created
active indicator 1 active 0 inactive
script used to retrieve the child model to apply the binding on
state the order was in prior to the action
user that created this record
active indicator 1 active 0 inactive
defines if the comparison is exclusive i
date the record was created
icon used for this order type
custom controller to process transitions
defines if the comparison is exclusive i
user that created this record
date the record was created
order status this state is in
type of order item the order contains e
embedded view layout e
order status this state is in
user that created this record
defines if the comparison is exclusive i
1 order as needed 0 order as detailed
sequential progression of this state
order priority e
defines if the comparison is exclusive i
order priority e
identifies the system which originally created this row if reference
1 order as needed 0 order as detailed
identifies the system which originally created this row if reference
order protocol e
defines if the comparison is exclusive i
order protocol e
set primary identifier
defines if the comparison is exclusive i
transaction number assigned by the system
provider authorizing this order
transaction number assigned by the system
order action potentially available for this state
provider authorizing this order
model script is ignored and defaults as give parameter with this value
date the record was updated
date the record was updated
embedded view placed directly alongside with this control
order frequency e
active indicator 1 active 0 inactive
date the record was last updated
date the record was last updated
number of times this record has been updated
model script is ignored and defaults as give parameter with this value
foreign key to refs on clinical overview
number of times this record has been updated
foreign key to refs on clinical overview
name of the parameter this control represents
units the order quantity is measured in
state the order was in prior to the action
settings for this transition
type of order item the order contains e
name of the parameter this control represents
units the order quantity is measured in
identifies the system which originally created this row if reference
date the record was created
identifier source for parameter
order priority e
date time this order will start from
date the record was created
user that created this record
identifier source for parameter
date time this order will start from
order protocol e
user that created this record
transaction number assigned by the system
identifies the system which originally created this row if reference
state the order is in after the action
application control id of parent component e
transaction number assigned by the system
date the record was updated
form used to support the transition
returns a random item if none exists it is added to the set
units the order quantity is measured in
set primary identifier
date the record was last updated
icon for action
number of times this record has been updated
date time this order will start from
active indicator 1 active 0 inactive
order action potentially available for this state
order state as defined by the order type
rule used to determine if the transition can take place
order transition label
order transition label
order state as defined by the order type
deleted indicator 1 deleted 0 not deleted
date the record was updated
required data entry
date the record was created
date the record was last updated
user that created this record
decorate button as flat raise lower on hover click
settings for this transition
set primary identifier
order status e
order status e
action executed for some controls such as a single column table
number of times this record has been updated
identifies the system which originally created this row if reference
owner of this list
date time this order will stop at
action executed for some controls such as a single column table
identifies the system which originally created this row if reference
active indicator 1 active 0 inactive
action executed when focus gains the control
date time this order will stop at
date time this order will stop at
action executed when right clicking on the control
color to override the default order color
transaction number assigned by the system
transaction number assigned by the system
action executed when right clicking on the control
context for table
action executed when focus gains the control
state the order is in after the action
date the record was updated
form used to support the transition
date the record was last updated
set primary identifier
order template used to start order
number of times this record has been updated
icon for transition
user ordering this order
active indicator 1 active 0 inactive
valid location to order this template from such as facility
user ordering this order
rule used to determine if the transition can take place
date the record was created
valid location to order this template from such as facility
source to collect specimen from
javascript executed when the control gains focus
date the record was created
user that created this record
user that created this record
date the record was updated
source to collect specimen from
settings for this transition
identifies the system which originally created this row if reference
rder for the specimen type e
date the record was last updated
identifies the system which originally created this row if reference
action executed when focus is lost from the control
order template used to start order
rder for the specimen type e
transaction number assigned by the system
date the record was updated
number of times this record has been updated
order type defining the processing action sequence
date the record was last updated
action executed when focus is lost from the control
transaction number assigned by the system
number of times this record has been updated
order type defining the processing action sequence
date the record was updated
date the record was last updated
javascript executed when the control loses focus
number of times this record has been updated
user ordering this order
icon used for this order type
icon used for this order type
action for mediator tree action select action list selection
user group which owns this order template
set primary identifier
set primary identifier
user group which owns this order template
skip focussing on this control by default
active indicator 1 active 0 inactive
skip focussing on this control by default
identifies the system which originally created this row if reference
font for text where applicable
skip focussing on this control by default
user who owns this template
set primary identifier
font for text where applicable
skip focussing on this control by default
date the record was created
user that created this record
skip focussing on this control by default
transaction number assigned by the system
active indicator 1 active 0 inactive
skip focussing on this control by default
identifies the system which originally created this row if reference
check digit for mrn validation
font size for text where applicable
current or last patient location for visit
transaction number assigned by the system
font style for text where applicable
reference qualifying the source of this control
date the record was updated
deleted indicator 1 deleted 0 not deleted
date the record was last updated
font style for text where applicable
provider for this patient
domain for this order
provider for this patient
is this order a template
role of the provider e
get a list of identifiers matching the source
system determined change made to this record
get a list of identifiers matching the source
role of the provider e
uppercase without spaces value of idvalue
number of times this record has been updated
set primary identifier
date the record was updated
display type associated with the action
date the record was created
user who made the change
last date time the schedule was generated for
user that created this record
date the record was last updated
active indicator 1 active 0 inactive
last date time the schedule was generated for
date this record was saved to the log
source of identifier generation foreign key to reference identifier source
number of times this record has been updated
identifies the system which originally created this row if reference
deleted indicator 1 deleted 0 not deleted
date the record was created
user that created this record
transaction number assigned by the system
date the record was updated
set primary identifier
role of provider
identifies the system which originally created this row if reference
role of provider
date the record was last updated
date the role ends or ended
number of times this record has been updated
date the role started or starts
set primary identifier
hospital or medical service
date the role started or starts
active indicator 1 active 0 inactive
foreign key to forms
transaction number assigned by the system
date and time of birth
identifies the system which originally created this row if reference
1 group with the next control place on same panel as single control
date and time of birth
multiple of standard row height
source to collect specimen from
transaction number assigned by the system
multiple of standard row height
date the record was updated
rder for the specimen type e
1 group with the next control place on same panel as single control
date the record was last updated
patient logs citizenship
identifies the system which originally created this row if reference
number of columns to span control with
number of times this record has been updated
patient logs citizenship
1 group with the next control place on same panel as single control
unique identifier for visit
date patient died if known
date patient died if known
date the record was updated
1 group with the next control place on same panel as single control
transaction number assigned by the system
patient is not alive
patient is not alive
set primary identifier
date the record was last updated
1 group with the next control place on same panel as single control
patient is not alive
patient is not alive
set primary identifier
patient is not alive
parameter value data type
active indicator 1 active 0 inactive
patient is not alive
status of death died in hospital date estimated
set primary identifier
1 group with the next control place on same panel as single control
status of death died in hospital date estimated
parameter value data type
accomodation private semi private
active indicator 1 active 0 inactive
deleted indicator 1 deleted 0 not deleted
accomodation private semi private
date the record was created
set primary identifier
is this order a template
user that created this record
defines the layout of the group panel as a split or border layout
identifies the system which originally created this row if reference
number of times this record has been updated
set primary identifier
date the record was created
active indicator 1 active 0 inactive
transaction number assigned by the system
term for this order
active indicator 1 active 0 inactive
user that created this record
date the record was updated
acuity level of admission such as acute chronic critical
defines the layout of the group panel as a split or border layout
active indicator 1 active 0 inactive
date the record was last updated
acuity level of admission such as acute chronic critical
role of portal user
role of portal user
source of admission referral transfer ed
provider for this visit
source of admission referral transfer ed
date the role ends or ended
type of admission such as emergency or elected
role of the user e
date the role ends or ended
type of admission such as emergency or elected
number of times this record has been updated
date the visit started
date the record was created
date the visit started
visit that created this record
portal user first name
location for this visit
date the record was updated
date the role started or starts
date the record was created
0 no growth 0 weighted value to grow
patient id for visit
allergy status such as no known allergies not recorded previously known allergies
patient logs answer to common identifier e
portal user that created this record
allergy status such as no known allergies not recorded previously known allergies
medical service for this visit
date the record was last updated
patient logs answer to common identifier e
identifies the system which originally created this row if reference
control is visible
mode of arrival such as car ambulance
identifies the system which originally created this row if reference
number of times this record has been updated
persons second name middle initials
mode of arrival such as car ambulance
date the record was created
transaction number assigned by the system
indicates the password was reset and new password required
indicates the password was reset and new password required
date the record was updated
visit for this order
indicates the password was reset and new password required
transaction number assigned by the system
user that created this record
indicates the password was reset and new password required
date the record was last updated
alerts for this order
indicates the password was reset and new password required
0 no growth 0 weighted value to grow
patient logs preferred language
date the record was updated
alerts for this order
number of times this record has been updated
indicates the password was reset and new password required
patient logs preferred language
date the record was last updated
role group user logs in with
state of discharge
number of times this record has been updated
role group user logs in with
state of discharge
set primary identifier
html help file associated with this control
persons family name surname
date the visit ended
date the visit ended
active indicator 1 active 0 inactive
type of association to the location such as primary care facility
type of association to the location such as primary care facility
html help file associated with this control
persons name suffix e
destination of discharged patient
identifies the system which originally created this row if reference
destination of discharged patient
patient logs marital status single married
date the record was created
patient logs marital status single married
location that created this record
facility location for this visit
transaction number assigned by the system
location for the visit
system user if applicable
identifies the system which originally created this row if reference
system user if applicable
persons second name middle initials
form used to create visit
transaction number assigned by the system
date the record was updated
patient logs veteran military status
date the record was updated
date the record was last updated
patient logs veteran military status
date the record was created
date the record was last updated
number of times this record has been updated
identifies the patient was born as part of a multiple birth
number of times this record has been updated
user that created this record
identifies the patient was born as part of a multiple birth
patient logs nationality
current or last location for visit
patient logs nationality
set primary identifier
patient owning visit foreign
set primary identifier
1 hide this control from the patient portal
accomodation private semi private
persons name prefix e
free text reason for patients visit
primary care gp or care group
free text reason for patients visit
1 hide this control from the patient portal
active indicator 1 active 0 inactive
set primary identifier
primary care gp or care group
primary care provider
date and time of birth
active indicator 1 active 0 inactive
active indicator 1 active 0 inactive
primary care provider
1 hide this control from the patient portal
acuity level of admission such as acute chronic critical
date the record was created
source of admission referral transfer ed
user that created this record
hospital or medical service
1 hide this control from the patient portal
type of admission such as emergency or elected
identifies the system which originally created this row if reference
role of provider
get a list of identifiers matching the source
todo name format
todo for performance better if this is not called via base script
date the visit started
date the role ends or ended
1 hide this control from the patient portal
get the formatted age of the patient
set primary identifier
get number of years
date patient died if known
get number of years
get number of years
set one and only one visit
ensure a visit exists and return it
ensure a visit exists and return it
date the role started or starts
transaction number assigned by the system
system determined change made to this record
1 hide this control from the patient portal
output used for debugging this model
active indicator 1 active 0 inactive
allergy status such as no known allergies not recorded previously known allergies
check digit for mrn validation
identifies the system which originally created this row if reference
user who made the change
mode of arrival such as car ambulance
max length of the html control
set primary identifier
date the record was updated
transaction number assigned by the system
date this record was saved to the log
date the record was updated
active indicator 1 active 0 inactive
date the record was last updated
date the record was last updated
max length of the html control
uppercase without spaces value of idvalue
number of times this record has been updated
number of times this record has been updated
patient is not alive
set primary identifier
date the record was created
identifies the system which originally created this row if reference
vip status for admission
state of discharge
user that created this record
length of the html input control
vip status for admission
status of death died in hospital date estimated
date the visit ended
source of identifier generation foreign key to reference identifier source
active indicator 1 active 0 inactive
type of content type
visit status active discharged
type of content type
name of this icon
identifies the system which originally created this row if reference
type of icon e
visit status active discharged
type of icon e
length of the html input control
content type of icon e
type of visit inpatient outpatient day surgery etc
transaction number assigned by the system
content type of icon e
transaction number assigned by the system
type of visit inpatient outpatient day surgery etc
dialog defining the content type controls
date the record was created
dialog defining the content type controls
date the record was updated
path to external application executed for file
date the record was updated
user that created this record
path to external application executed for file
destination of discharged patient
date the record was last updated
for icon type of virtual this is the icon contents
date the record was created
for icon type of virtual this is the icon contents
icon used in lieu of the path
number of times this record has been updated
user that created this record
date the record was last updated
date the record was created
identifies the system which originally created this row if reference
identifies the system which originally created this row if reference
user that created this record
number of times this record has been updated
transaction number assigned by the system
transaction number assigned by the system
file path from resources images
date the record was updated
date the record was updated
returns a random item if none exists it is added to the set
current or last location for visit
set primary identifier
date the record was last updated
date the record was last updated
number of times this record has been updated
number of times this record has been updated
patient owning visit foreign
active indicator 1 active 0 inactive
javascript executed when the control is first initialized
free text reason for patients visit
deleted indicator 1 deleted 0 not deleted
date the record was created
user that created this record
hospital or medical service
printer physical location
printer physical location
patients answer to common identifier e
make of printer such as hp or intermec
make of printer such as hp or intermec
date the record was created
system determined change made to this record
model of printer
model of printer
printer such as certification or production
user who made the change
printer such as certification or production
initial form used to create the patient
type of printer such as label dot matrix etc
type of printer such as label dot matrix etc
identifies the system which originally created this row if reference
date this record was saved to the log
date the record was created
transaction number assigned by the system
indicates the printer is used as a test printer
indicates the printer is used as a test printer
user that created this record
indicates the printer is used as a test printer
indicates the printer is used as a test printer
number of lines to insert before this control
indicates the printer is used as a test printer
identifies the system which originally created this row if reference
indicates the printer is used as a test printer
returns a random item if none exists it is added to the set
patients preferred language
date the record was updated
set primary identifier
returns a random item if none exists it is added to the set
date the record was last updated
number of times this record has been updated
set primary identifier
persons family name surname
returns a random item if none exists it is added to the set
transaction number assigned by the system
get rid of any windows path
get the combination of the device and directory
get the full path to the file
active indicator 1 active 0 inactive
set primary identifier
set primary identifier
user that created this record
date the record was updated
active indicator 1 active 0 inactive
foreign key to refs on database table
active indicator 1 active 0 inactive
date the record was last updated
active indicator 1 active 0 inactive
date the record was created
number of times this record has been updated
patients marital status single married
content type of file e
visit that created this record
vip status for admission
persons second name middle initials
date the record was created
the inset of the control where applicable such as with a button control
sequential order of help contents in the same group
user that created this record
foreign key to entity table
foreign key to entity table
identifies the system which originally created this row if reference
deleted indicator 1 deleted 0 not deleted
patients veteran military status
set primary identifier
order to access which copy of the file
order to access which copy of the file
visit status active discharged
transaction number assigned by the system
set primary identifier
identifies the patient was born as part of a multiple birth
date the record was updated
date the record was created
type of visit inpatient outpatient day surgery etc
drive share or device including delimeter to append directory e
date the record was last updated
drive share or device including delimeter to append directory e
user that created this record
active indicator 1 active 0 inactive
active indicator 1 active 0 inactive
number of times this record has been updated
directory files are stored in including delimeter to append file name e
directory files are stored in including delimeter to append file name e
last date time the schedule was generated for
identifies the system which originally created this row if reference
name patient would like to be addressed as if different from first name
type of file e
indexed uppercase nickname
type of file e
drive share or device including delimeter to append directory e
date the record was created
transaction number assigned by the system
indexed uppercase nickname
user that created this record
directory file copies are stored in including delimeter to append file name e
status of this scheduled job
status of this scheduled job
identifies the system which originally created this row if reference
foreign key to files on file id
scheduler executing this job
string representation of the keystroke to activate this control
scheduler executing this job
foreign key to refs on help topic
transaction number assigned by the system
foreign key to refs on help topic
type of file e
identifies the system which originally created this row if reference
date the record was updated
date the record was created
date the record was updated
date the record was last updated
date the record was last updated
transaction number assigned by the system
user that created this record
persons name prefix e
number of times this record has been updated
date the record was updated
number of times this record has been updated
returns a random item if none exists it is added to the set
date the record was created
date the record was last updated
for auditing purposes the orginal file name
set primary identifier
primary care gp or care group
for auditing purposes the orginal file name
number of times this record has been updated
user that created this record
action executed when the label is clicked
identifies the system which originally created this row if reference
identifies the system which originally created this row if reference
primary care provider
action executed when the label is clicked
transaction number assigned by the system
url used to access the database
transaction number assigned by the system
date the record was updated
database user name
date the record was last updated
date the record was updated
set primary identifier
number of times this record has been updated
date the record was last updated
environment such as certification or production
environment such as certification or production
number of times this record has been updated
root directory for the code install
for file type of virtual this is the file contents
root directory for the code install
indicates the environment is a production class environment
for file type of virtual this is the file contents
indicates the environment is a production class environment
set primary identifier
indicates the environment is a production class environment
indicates the environment is a production class environment
indicates the environment is a production class environment
persons name suffix e
indicates the environment is a production class environment
foreign key to the environments table
active indicator 1 active 0 inactive
foreign key to the environments table
default settings for this job
identifies the system which originally created this row if reference
default settings for this job
transaction number assigned by the system
set primary identifier
fully qualified hostname to connect to node
set primary identifier
active indicator 1 active 0 inactive
type of connectivity to printer such as tcp ip or usb
type of connectivity to printer such as tcp ip or usb
ip address used if the hostname is not available
node environment is running on
date the record was created
node environment is running on
transaction number assigned by the system
type of node such as server client
user that created this record
type of node such as server client
action executed by this job
port used to connect to server
indicates this is a test patient not a real patient
action executed by this job
fully qualified domain name for the server
port used to connect to server
custom controler executed instead of script
fully qualified domain name for the server
custom controler executed instead of script
indicates this is a test patient not a real patient
date the record was created
preferred size height for label
indicates this is a test patient not a real patient
set primary identifier
script which defines this job
indicates this is a test patient not a real patient
user that created this record
local hostname of operating system starting this server
script which defines this job
indicates that lpr should be used to filter the contents
transaction number assigned by the system
indicates this is a test patient not a real patient
indicates that lpr should be used to filter the contents
preferred size height for label
view used to enter job parameters
indicates this is a test patient not a real patient
indicates that lpr should be used to filter the contents
indicates that lpr should be used to filter the contents
identifies the system which originally created this row if reference
active indicator 1 active 0 inactive
indicates that lpr should be used to filter the contents
date the record was updated
indicates that lpr should be used to filter the contents
transaction number assigned by the system
queue name on the node
transaction number assigned by the system
preferred size width for the label
queue name on the node
date the record was last updated
set primary identifier
date the record was updated
date the record was created
number of times this record has been updated
set primary identifier
date the record was last updated
user that created this record
preferred size width for the label
number of times this record has been updated
active indicator 1 active 0 inactive
date time the instance of the scheduled job occurs
currency of cost
active indicator 1 active 0 inactive
ip address of the printer
status of job execution such as successful skipped or failed
ip address of the printer
check digit for mrn validation
status of job execution such as successful skipped or failed
action generated when clicking on the control
scheduled job identifier
port number of the printer
scheduled job identifier
port number of the printer
identifies the system which originally created this row if reference
printer queue such as certification or production
expiry date for product if applicable
printer queue such as certification or production
expiry date for product if applicable
action generated when clicking on the control
transaction number assigned by the system
tray to print to
tray to print to
date the record was updated
linked application control used instead of this one
date the record was last updated
identifies the system which originally created this row if reference
number of times this record has been updated
linked application control used instead of this one
date the record was created
uppercase without spaces value of idvalue
set primary identifier
transaction number assigned by the system
user that created this record
set primary identifier
date the record was created
date the record was updated
shorter name used for display where appropriate
cost of this item to purchase
user that created this record
active indicator 1 active 0 inactive
date the record was last updated
color to override the default order color
current location of this item
number of times this record has been updated
set primary identifier
current location of this item
source of identifier generation foreign key to reference identifier source
quantity at this location
active indicator 1 active 0 inactive
quantity at this location
identifies the system which originally created this row if reference
charge item used to bill for this item
number of components e
active indicator 1 active 0 inactive
number of components e
for solution or gas total volume of item
unit of measure for each component e
unit of measure for each component e
transaction number assigned by the system
volume units e
check digit for mrn validation
date the record was updated
barcode formatted number
barcode formatted number
date the record was last updated
returns a random item if none exists it is added to the set
date the record was created
number of times this record has been updated
set primary identifier
user that created this record
form used to record the item
form used to record the item
long description of this item
icon used for this order type
date the record was created
set primary identifier
manufacturer lot number
active indicator 1 active 0 inactive
uppercase without spaces value of idvalue
manufacturer lot number
user that created this record
status of single instance
control locked from editing
cost for this item
date the record was created
identifies the system which originally created this row if reference
status of single instance
form used to record this item
active indicator 1 active 0 inactive
state of record
return the slot if matching
form used to record this item
business that supplied the lot
user that created this record
type of appointment
business that supplied the lot
file representing an image of the item
returns a random item if none exists it is added to the set
color to override the default appointment color
source of identifier generation foreign key to reference identifier source
set primary identifier
file representing an image of the item
transaction number assigned by the system
identifies the system which originally created this row if reference
identifies the system which originally created this row if reference
date the record was updated
full name of the item
active indicator 1 active 0 inactive
date the record was last updated
item name index
date reminder was completed
duration of this instance
transaction number assigned by the system
date reminder was completed
transaction number assigned by the system
item name index
number of times this record has been updated
date the record was updated
item name metaphone
date the record was updated
date the record was created
date the record was last updated
item name metaphone
appointment will be hidden from the calendar
user that created this record
price for the item used for the charge item
number of times this record has been updated
appointment will be hidden from the calendar
date the record was last updated
appointment will be hidden from the calendar
price for the item used for the charge item
date time the instance of the appointment occurs
appointment will be hidden from the calendar
appointment will be hidden from the calendar
number of times this record has been updated
date the reminder was created
appointment will be hidden from the calendar
user that created this reminder
date the record was created
owner of the reminder such as clinic or user group
for solution or gas total volume per item
user that created this record
icon for this status
location of this appointment
set primary identifier
icon for this status
cancellation or no show or other reasons related to the status change
cancellation or no show or other reasons related to the status change
identifies the system which originally created this row if reference
active indicator 1 active 0 inactive
status of the reminder
identifies the system which originally created this row if reference
status of the reminder
contents of reminder if not predefined
transaction number assigned by the system
contents of reminder if not predefined
date the record was updated
transaction number assigned by the system
identifies the system which originally created this row if reference
date the record was last updated
date the record was created
date the record was updated
user that created this record
number of times this record has been updated
medication item package if the item type is medication
resource of the user e
get a single instance or a new one
date the record was last updated
resource of the user e
transaction number assigned by the system
duration from start to stop
medication item package if the item type is medication
identifies the system which originally created this row if reference
number of times this record has been updated
date the reminder was updated
set primary identifier
set primary identifier
date the reminder was last updated
transaction number assigned by the system
date the record was updated
domain model control updates
number of times this reminder has been updated
active indicator 1 active 0 inactive
active indicator 1 active 0 inactive
appointment instance identifier
date the record was last updated
currency of the price
appointment instance identifier
currency of the price
number of times this record has been updated
file for this reminder
date the record was created
user that created this record
returns a random item if none exists it is added to the set
date the record was created
identifies the system which originally created this row if reference
recipients of the message
identifies the system which originally created this row if reference
returns a random item if none exists it is added to the set
user that created this record
script used to retrieve the child model to apply the binding on
transaction number assigned by the system
set primary identifier
date time the instance of the appointment occurs
date the record was updated
date the record was last updated
number of times this record has been updated
transaction number assigned by the system
active indicator 1 active 0 inactive
returns a random item if none exists it is added to the set
date the record was updated
set primary identifier
message for this appointment
free text description of resource
set primary identifier
message for this appointment
free text description of resource
specific slot for overbooking
specific slot for overbooking
date the record was last updated
active indicator 1 active 0 inactive
identifies the system which originally created this row if reference
active indicator 1 active 0 inactive
number of times this record has been updated
volume units e
set primary identifier
transaction number assigned by the system
volume units e
date the record was created
date the record was created
set primary identifier
user that created this record
date the record was updated
user that created this record
indicator that the frequency is once or one time
date the record was created
returns a random item if none exists it is added to the set
active indicator 1 active 0 inactive
indicator that the frequency is once or one time
user that created this record
date the record was last updated
indicator that the frequency is once or one time
indicator that the frequency is once or one time
type of message recipient
active indicator 1 active 0 inactive
set primary identifier
indicator that the frequency is once or one time
number of times this record has been updated
type of message recipient
indicator that the frequency is once or one time
flag this type of message recipient e
schedule is run every n minutes hours weeks etc
flag this type of message recipient e
schedule is run every n minutes hours weeks etc
file for this message
message recipient for reused message recipients
repeat every repeat value in this measure of units
repeat every repeat value in this measure of units
message recipient for reused message recipients
date the record was created
defines if the comparison is exclusive i
active indicator 1 active 0 inactive
message for reused messages
user that created this record
form type used for the appointment
date the record was created
message for reused messages
form type used for the appointment
identifies the system which originally created this row if reference
user that created this record
appointment type group
identifies the system which originally created this row if reference
appointment type group
transaction number assigned by the system
icon for the appointment type
gap for controls arranged on a panel in columns
free text description of resource
transaction number assigned by the system
icon for the appointment type
address of the sender if sent from an external system
date the record was updated
specific slot for resource overbooking
date the record was updated
type of appointment
address of the sender if sent from an external system
status of the message for this recipient
date the record was last updated
date the record was last updated
gap for controls arranged on a panel in columns
type of appointment
user or entity sending the message
identifies the system which originally created this row if reference
status of the message for this recipient
user or entity sending the message
number of times this record has been updated
number of times this record has been updated
address of the sender if sent from an external system
color to override the default appointment color
address of the sender if sent from an external system
title or subject of the message
appointment will block the schedule for the given time
transaction number assigned by the system
user or entity receiving the message
appointment will block the schedule for the given time
user or entity receiving the message
date the record was updated
identifies the system which originally created this row if reference
appointment will block the schedule for the given time
error message deliverying to recipient
date the record was last updated
appointment will block the schedule for the given time
error message deliverying to recipient
appointment will block the schedule for the given time
number of retries left before delivery stops
number of times this record has been updated
appointment will block the schedule for the given time
set primary identifier
transaction number assigned by the system
identifies the system which originally created this row if reference
date the record was updated
active indicator 1 active 0 inactive
appointment type identifier
date the record was last updated
transaction number assigned by the system
default status for new appointments
appointment type identifier
default status for new appointments
date the record was updated
number of times this record has been updated
date the record was last updated
message for this visit
number of times this record has been updated
model script is ignored and defaults as give parameter with this value
strategy for scheduling for conflict
returns a random item if none exists it is added to the set
strategy for scheduling for conflict
set primary identifier
set primary identifier
set primary identifier
active indicator 1 active 0 inactive
facility for the appointment type
active indicator 1 active 0 inactive
length of time for slot
active indicator 1 active 0 inactive
override default foreground color
date the record was created
units of measure for duration
override to create matching
user that created this record
units of measure for duration
schedule template name
appointment frequency e
view used to override the default view for controls
schedule template name
set primary identifier
name of the parameter this control represents
date the record was created
type of user schedule
appointment frequency e
1 free text display comments as appointment type
type of user schedule
user that created this record
1 free text display comments as appointment type
identifies the system which originally created this row if reference
1 free text display comments as appointment type
sequence for appointment with multipe slots
date the record was created
appointment priority e
1 free text display comments as appointment type
identifies the system which originally created this row if reference
appointment priority e
1 free text display comments as appointment type
user that created this record
transaction number assigned by the system
date time this appointment will start from
1 free text display comments as appointment type
date the record was updated
date time this appointment will start from
transaction number assigned by the system
date time this schedule template time will start from
date the record was last updated
date the record was created
identifier source for parameter
date time this schedule template time will start from
set primary identifier
date the record was updated
number of times this record has been updated
user that created this record
date the record was last updated
active indicator 1 active 0 inactive
number of times this record has been updated
check digit for mrn validation
context used for role based security
date time this schedule template time will stop at
set primary identifier
date time this schedule template time will stop at
appointment status e
settings for this transition
date time this appointment will stop at
active indicator 1 active 0 inactive
date time this appointment will stop at
identifies the system which originally created this row if reference
appointment for this resource
uppercase without spaces value of idvalue
identifies the system which originally created this row if reference
date the record was created
date the record was created
transaction number assigned by the system
user that created this record
user that created this record
appointment template used to start appointment
transaction number assigned by the system
date the record was updated
source of identifier generation foreign key to reference identifier source
identifies the system which originally created this row if reference
identifies the system which originally created this row if reference
date the record was updated
date the record was last updated
template html and or javascript used to display in the patient portal
date the record was last updated
transaction number assigned by the system
transaction number assigned by the system
number of times this record has been updated
date the record was updated
number of times this record has been updated
date the record was updated
date the record was last updated
duration of appointment for recurring appointment logs
date the record was last updated
template html and or javascript used to display in the patient portal
number of times this record has been updated
unit of measure for duration
number of times this record has been updated
date the record was created
user that created this record
override preferred size height in pixels
user appointmenting this appointment
set primary identifier
cancellation or no show or other reasons related to the status change
set primary identifier
override preferred size height in pixels
system determined change made to this record
active indicator 1 active 0 inactive
active indicator 1 active 0 inactive
appointment type default
user who made the change
override preferred size width in pixels
appointment type default
returns a random item if none exists it is added to the set
date this record was saved to the log
set primary identifier
override preferred size width in pixels
returns a random item if none exists it is added to the set
active indicator 1 active 0 inactive
date the record was created
set primary identifier
field not required but recommended for data entry
identifies the system which originally created this row if reference
user that created this record
date the record was created
foreign key to the frequencies table
foreign key to the frequencies table
user that created this record
field not required but recommended for data entry
location of this resource schedule
date the record was created
resource slot with this schedule
user that created this record
type of resource such as location or user
transaction number assigned by the system
field not required but recommended for data entry
quantity of this resource available from start to stop with the frequency specified
identifies the system which originally created this row if reference
type of resource such as location or user
quantity of this resource available from start to stop with the frequency specified
active indicator 1 active 0 inactive
context used for role based security
title or short description of the appointment
date time this resource schedule will start from
field not required but recommended for data entry
transaction number assigned by the system
appreviation of title when space is more constrained
settings for this transition
date the record was updated
appreviation of title when space is more constrained
date the record was last updated
length of the duration of a slot
type of value
field not required but recommended for data entry
length of the duration of a slot
date the record was updated
number of times this record has been updated
date time this resource schedule will stop at
slot duration units
slot duration units
appointment frequency e
date the record was last updated
identifies the system which originally created this row if reference
field not required but recommended for data entry
appointment priority e
number of times this record has been updated
type of user schedule
transaction number assigned by the system
date time this appointment will start from
date the record was updated
identifies the system which originally created this row if reference
date the record was last updated
number of times this record has been updated
record item for a bound form record control
transaction number assigned by the system
date the record was updated
appointment status e
date the record was last updated
view used as a repeating section to simulate a table
date time this appointment will stop at
number of times this record has been updated
view used as a repeating section to simulate a table
appointment template used to start appointment
control printing option for html or report
duration of appointment for recurring appointments
unit of measure for duration
date the record was created
user that created this record
user appointmenting this appointment
last date time the schedule was generated for
date the status last changed
date the status last changed
action executed for some controls such as a single column table
cancellation or no show or other reasons related to the status change
identifies the system which originally created this row if reference
action executed when right clicking on the control
transaction number assigned by the system
title or short description of the appointment
appreviation of title when space is more constrained
date the record was updated
date the record was last updated
user for staff scheduling
number of times this record has been updated
set primary identifier
returns a random item if none exists it is added to the set
used to override the column spec for the next panel only
set primary identifier
set primary identifier
active indicator 1 active 0 inactive
set primary identifier
used to override the column spec for the next panel only
active indicator 1 active 0 inactive
get the user id calling the service
get the user ref id calling the service
active indicator 1 active 0 inactive
set the user id
set primary identifier
active indicator 1 active 0 inactive
color to override the default order color
used to override the form control columns for the panel
date the record was created
context assigned to this report foreign key to refs on context
user that created this record
context defines the report image
custom controller used to pull and manipulate the data and generate the xml
context defines the report image
custom controller used to pull and manipulate the data and generate the report
used to override the form control columns for the panel
identifies the system which originally created this row if reference
date the record was created
default settings for this report
user that created this record
transaction number assigned by the system
jasper compiled report
set primary identifier
jasper compiled report
date the record was updated
layout of the section such as north east west or south
jasper source code for report
date the record was last updated
jasper source code for report
number of times this record has been updated
folder this report falls into
date the record was created
view for the user to enter the parameters
active indicator 1 active 0 inactive
date the record was created
user that created this record
check digit for mrn validation
layout of the section such as north east west or south
icon used for this order type
user that created this record
icon used for this order type
context defines the report
jasper compiled report
sql passed to the report if valued
jasper source code for report
sql passed to the report if valued
settings for this transition
used to override the row spec for the next section only
view for the user to enter the parameters
identifies the system which originally created this row if reference
pdf report file
pdf report file
uppercase without spaces value of idvalue
image preview of what this report looks like
transaction number assigned by the system
context defines the report
used to override the row spec for the next section only
date the record was created
date the record was updated
sql passed to the report if valued
identifies the system which originally created this row if reference
type of report
user that created this record
date the record was last updated
type of report
source of identifier generation foreign key to reference identifier source
identifies the system which originally created this row if reference
number of times this record has been updated
transaction number assigned by the system
1 system only can expand hide the section
set primary identifier
identifies the system which originally created this row if reference
transaction number assigned by the system
date the record was updated
transaction number assigned by the system
transaction number assigned by the system
date the record was last updated
date the record was updated
active indicator 1 active 0 inactive
date the record was updated
date the record was last updated
1 system only can expand hide the section
number of times this record has been updated
check digit for mrn validation
date the record was last updated
number of times this record has been updated
xslt used to transform the xml into html
number of times this record has been updated
xslt used to transform the xml into html
xslt used to transform the xml into pdf fo
set primary identifier
xslt used to transform the xml into pdf fo
1 system only can expand hide the section
uppercase without spaces value of idvalue
active indicator 1 active 0 inactive
1 system only can expand hide the section
color to override the default location color
date the record was created
user that created this record
1 system only can expand hide the section
source of identifier generation foreign key to reference identifier source
identifies the system which originally created this row if reference
return the address class
1 system only can expand hide the section
transaction number assigned by the system
add an object to the map
remove from active list of objects
todo name format
location display order
date the record was updated
return a string representation of all the modified fields
get the field name
tests if get id null get id 0 l
record this field as having been modified
date the record was last updated
tests if get id null get id 0 l
copys the id and display from the model
facility this location belongs to
returns true if the field value has been modified
set primary identifier
view linked as this section
returns true if any field value has been modified
set reference id
set reference id
returns a random item if none exists it is added to the set
number of times this record has been updated
hide from display in the hierarchy
postcondition no fields are defined as modified
convenience to determine if the idvalue was populated
convenience to determine if the idvalue was populated
set primary identifier
postcondition no fields are defined as modified
hide from display in the hierarchy
compares id if both 0
active indicator 1 active 0 inactive
get the short display if it exists else the normal display
returns true if any field value has been modified
hide from display in the hierarchy
view linked as this section
determine if this id is the same as the id passed
convenient method to determine if the two objects are
determine if this id is the same as the id passed
data type of value determines the column the value is stored in
hide from display in the hierarchy
no display or key or id or value
hide from display in the hierarchy
determine if the models are logically matched and should be merged
get the value double int string or date
hide from display in the hierarchy
determine if value is null or zero
active indicator 1 active 0 inactive
default sort by primary key
set primary identifier
name of the table
date the record was created
name of the table
date the parameter value was created
user that created this record
active indicator 1 active 0 inactive
return boolean value
automatically generate a sequence value if not valued
form used for this location
user that created this parameter value
automatically generate a sequence value if not valued
form used for this location
automatically generate a sequence value if not valued
return date time value
action for mediator tree action select action list selection
identifies the system which originally created this row if reference
returns a random item if none exists it is added to the set
automatically generate a sequence value if not valued
date the record was created
get or add the parameter
icon for the location
get or add the parameter
user that created this record
alternative access to value if model reference is null
transaction number assigned by the system
sql starting with where used to qualify the source table
override and implementation set index fields as the default is no action
returns true if time ms 0
sql starting with where used to qualify the source table
status of the location
date the parameter value was updated
returns true if time ms 0
type of migration
returns a random item if none exists it is added to the set
copys the id and display from the model
status of the location
type of migration
date the parameter value was last updated
type of caching hibernate does for the model
type of caching hibernate does for the model
todo need better solution for ordering to prevent typos
type of location room bed etc
set primary identifier
lazy instantiation of the hql model
average number of ms to execute
create model for table
return the class of this model
settings for this transition
generate a hibernate hql statement qualfiying this models identifier only
generate a hibernate hql statement qualfiying this model
create model for table
build hql to exclude a list of ids
checks if there exists at least one search result
sets the search results when the model is used for base
1 patient may be added to this location 0 may not
facility owning this identifier where applicable
create model for table
generate a hibernate hql statement qualfiying this model
change the time component to be the end of the day
get hql and parameters
script used to generate a custom identifier
1 patient may be added to this location 0 may not
create model for table
change the time component to be the end of the day
script used to generate a custom identifier
change the time component to be the end of the day
create model for table
1 patient may be added to this location 0 may not
change the time component to be the start of the day
create model for table
1 patient may be added to this location 0 may not
active indicator 1 active 0 inactive
get the field name
source of identifier source generation foreign key to reference identifier source
1 patient may be added to this location 0 may not
source of identifier source generation foreign key to reference identifier source
date of birth of the user
1 patient may be added to this location 0 may not
set primary identifier
suffix appended to identifier values
primary contact for this location
term defining this record
suffix appended to identifier values
package source code is generated into
type of identifier source e
primary contact for this location
quantitative values stored in the parameter value are measure in these units
primary key column
change the time component to be the nearest hour
type of identifier source e
0 may not schedule into this location 1 may schedule to this location
primary key column
number of times this parameter value has been updated
subtract 24 hours from this datetime
0 may not schedule into this location 1 may schedule to this location
add 24 hours to this datetime
date the record was created
subtract nbr hours from this datetime
original source of the database table
0 may not schedule into this location 1 may schedule to this location
default location user will login with
user that created this record
0 may not schedule into this location 1 may schedule to this location
default location user will login with
system should match on this identifier if a unique entry is found
identifies the system which originally created this row if reference
0 may not schedule into this location 1 may schedule to this location
set the time zone offset on all date time fields
system should match on this identifier if a unique entry is found
0 may not schedule into this location 1 may schedule to this location
system should match on this identifier if a unique entry is found
get day of month starting at 1 for the 1st
system should match on this identifier if a unique entry is found
get a hash value for object data
system should match on this identifier if a unique entry is found
returns the offset of this time zone from utc
settings for this transition
transaction number assigned by the system
system should match on this identifier if a unique entry is found
override to create matching
return true if the time is on or after date time
identifies the system which originally created this row if reference
identifies the system which originally created this row if reference
return true if the time is on or after date time
return the query model patient model or null
return true if the time is on or after date time
user first name
get the number of ms passed in that day
return the query model patient model or null
transaction number assigned by the system
transaction number assigned by the system
combined parts and compare
return the query model patient model or null
combined parts and compare
date the record was updated
date the record was updated
combined parts and compare
skip focussing on this control by default
return the query model patient model or null
date the record was updated
date the record was last updated
return the query model patient model or null
date the record was last updated
number of times this record has been updated
return the query model patient model or null
date the record was last updated
date the record was created
number of times this record has been updated
return the query model patient model or null
set primary identifier
return the query model patient model or null
number of times this record has been updated
user that created this record
transaction number assigned by the system
set primary identifier
return the query model patient model or null
user last name
return the query model patient model or null
active indicator 1 active 0 inactive
any errors associated with this address
any errors associated with this address
active indicator 1 active 0 inactive
type of address
type of address
city or town entered as free text
city or town entered as free text
city or town
city or town
persons second name middle initials
country entered as free text
country entered as free text
county or district entered as free text
county or district entered as free text
county or district
county or district
reference qualifying the source of this control
date the record was created
type of three state field
indicates the password was reset and new password required
user that created this record
get the field name
column ending in ind
field name for is or is not
set primary identifier
date the record was created
type of three state field
get the converter
primary language of the user
user that created this record
column field class
get the reference group from comments
get last word after the space
primary language of the user
set the reference
free text note or comment for this address
active indicator 1 active 0 inactive
form for provider information
second line of address
set the timezone
check digit for mrn validation
form for provider information
second line of address
check is valid
1 suppress this control from displaying by default on listing views or flowsheets
is a view
is a view
users currently selected role
state or province entered as free text
state or province entered as free text
settings for this transition
original source of the database table field
1 suppress this control from displaying by default on listing views or flowsheets
state or province
returns a random item if none exists it is added to the set
persons name suffix e
street or first line of address
uppercase without spaces value of idvalue
identifies the system which originally created this row if reference
set primary identifier
identifies the system which originally created this row if reference
identifies the system which originally created this row if reference
1 suppress this control from displaying by default on listing views or flowsheets
date the record was created
transaction number assigned by the system
transaction number assigned by the system
user that created this record
active indicator 1 active 0 inactive
1 suppress this control from displaying by default on listing views or flowsheets
date the record was updated
date the record was updated
transaction number assigned by the system
instruction on how this parameter should be compared to the value
source of identifier generation foreign key to reference identifier source
date the record was last updated
date the record was last updated
data type of value determines the column the value is stored in
identifies the system which originally created this row if reference
number of times this record has been updated
number of times this record has been updated
date the record was updated
1 suppress this control from displaying by default on listing views or flowsheets
determine if the check time minutes equals this minute
determine if the check time seconds equals this seconds
date the record was last updated
transaction number assigned by the system
date the record was updated
increment the count by the amount
date the record was last updated
user login name
1 suppress this control from displaying by default on listing views or flowsheets
number of times this record has been updated
user pin to authorize actions or restore sessions
date the parameter was created
user pin to authorize actions or restore sessions
user that created this parameter
swing component in context
application view definition
model reference identifying the model field representing this parameter
suppress the ability to sort this control e
model directly accessed by control
number of times this record has been updated
suppress the ability to sort this control e
indicates if 1 that the comparison operator is preceded by not
suppress the ability to sort this control e
parameter name used for name in isparameter
authorize event action
suppress the ability to sort this control e
identifies the system which originally created this row if reference
suppress the ability to sort this control e
run cleanup in background thread
get the time the object was cached
transaction number assigned by the system
get the primary key
todo object key was failing to qualify the form controls update
adds current to results
suppress the ability to sort this control e
builds a new
date the parameter was updated
date the parameter was last updated
get list of mrns
start the thread
determine if should search on contents
identifies the system which originally created this row if reference
initialize combo box editing
get the selected object
select this object
add a table to the list with specified context
get the child table model if exists
get the child table context if exists
get the child table context if exists
determine if the table with specified context has a child list
number of tables in list
handle local application messages
initialize combo box editing
add a list to the end
add a list to the end
get the selected object
send an update to the table identified by context
select this object
clear all tables after the first in the list
action on select
term defining this record
quantitative values stored in the parameter are measure in these units
new editing session
number of times this parameter has been updated
execute value changed executed list data event
execute value changed executed list data event
perform action executed with a wait cursor if the frame
transaction number assigned by the system
add an object to the map
remove from active list of objects
store the view this object was created under
get the application control id for this component
automatically select all the text in the control on focus
overridden for performance reasons
sets the code string code object for the cell being rendered to
clear instruction text from the control
add instruction text to this control
apply all bound model properties
clear instruction text from the control
configure mediator to allow programatic tab selected using the mediator
not applicable returns null
get the tab title todo setting to turn on off
if a table defines the access scripts which will populate the table
customize the ui
listener to toggle the select tab color
if a table defines the access scripts which will populate the table
add item if new
1 this control have a template value 0 no template
1 this control have a template value 0 no template
select all the text
make the calendar editable or not
1 this control have a template value 0 no template
set the date time of the calendar
is this calendar in free
set calendar free
value should be the file id
add a listenering on click
1 this control have a template value 0 no template
make the double text editable or not
set the date time of the double text
1 this control have a template value 0 no template
not applicable no effect
not applicable no effect
set the document text
return the document text or null if empty
the listener will be executed when focus leaves the text component
not applicable no effect
get the menu action for this menu item
set the menu action for this menu item
not applicable to a menu item
not applicable to a menu item
set the menu action for this menu item
return string as number
make the calendar editable or not
set the date time of the calendar
set the document text
return the document text or null if empty
1 this control have a template value 0 no template
set the document text
the listener will be executed when focus leaves the text component
the listener will be executed when focus leaves the text component
set an empty border with inset 1
is this calendar in free
set calendar free
execute model default script to custom define
add child containers to a dialog
start the thread
determine if should search on contents
get the layout
set the layout
unit height of control typically 1
set the unit height of the control
unit width of control typically 1
set width of control
remove the selected models setting delete indicator
get the control definition
apply the options to the table
set the control definition
set the default format
set the table model and columns
resychronize with the model collection
if the control should be locked then it is made not editable
update the listeners that a major event occurred
binds the ui component and the model initializing the component
return the base model at the specified row
add a new mode to the table model
add a new model to the table model
layout representation of control
add a new model to the table model
1 control available for use as a template
add a new model to the table model
add a new model to the table model
flag the model as deleted for the specified row
definte the renderer for cell formatting
flag the models as deleted for the specified row
set the class of the model
reset the columns when the table is updated
do not reset the columns when the table is updated
list the orginal collection of models
test if the row value matches
move the selected rows up
return true if the selected rows could be moved up
load the table incrementally in the background
return true if selected rows can be moved down the list
iterate through the list of identifiers
overrides code jcomponent
display the chunk of rows
overrides code jcomponent
default is system loading
add the defined cell editor
automatically select all text in the field on focus
add rows to the table
clear table of rows
set the text value of the field
this method initializes the buttons
get the text value of the field
sets the enabled disabled state of each button
the listener will be executed when focus leaves the text component
load the table incrementally in the background
apply bound properties
apply model changes
apply bound model properties
add the container as the left child component
add the container as the left child component
add child containers to the frame
apply model changes
create the blur
add child containers to a dialog
term bound to this control
add a table model listener to the model and execute the action
default node format
default node format
returns true if a node is selected
adds the listeners and initalize the load
add listeners to dynamically trigger loading tree
returns the selected tree node
load the top level of children
load the children of the parent node
returns the selected nodes user defined object
return child node
display for node to override the contained objects display
display for node to override the contained objects display
determines based upon the action state whether this
add all the nodes to this as children
execute the action
table has no single value
add the new nodes and update the tree to reflect the additions
remove the nodes and update the tree to reflect the additions
build the layout specification
update the nodes
not applicable to a table
remove text from the document
initialize combo box editing
sequence to differentiate records where the term is repeated on the form
highlight the typed and accepted text
lookup an item
get the first selected model
expand the path to all nodes
add a control to the form
create a new row
expand the path to all nodes
get the layout spec
get the row growth
set the default cell renderer on the tree
get the row growth
build the row specification
1 text field will be monitored for changes and update the listener
make the calendar editable or not
set the date time of the calendar
1 text field will be monitored for changes and update the listener
get the selected object
remove the nodes and update the tree to reflect the additions
configure the link
add button listeners
1 text field will be monitored for changes and update the listener
execute this listener when add is pressed
add an item to the list
add an item to the list
add an item to the list
execute this listener when remove is pressed
execute this listener when move up is pressed
execute this listener when move up is pressed
number of rows in the list
this method initializes the buttons
execute this listener when add is pressed
layout specification for buttons
the listener will be executed when focus leaves the text component
create four buttons with add remove up and down
execute refresh teh control
1 text field will be monitored for changes and update the listener
get button 3
select table row
get button 0
set button 0
get button 1
set button 1
get button 4
set button 4
todo need to ensure table doesnt interfere with scroll
initialize and bind a form control for tabs and separators
initialize and bind a form control for tabs and separators
set the button text
1 text field will be monitored for changes and update the listener
action on select
process the event
create a table action
1 text field will be monitored for changes and update the listener
add a listenering on select
define with width in columns for text fields
replace the contents of the table model with the action table contents
define with width in columns for text fields
get the view which contains the control with the specified context
get the view which contains the control with the specified context
get the view which contains the control with the specified context
multiple of standard row height
get the view which contains the control with the specified context
get the view which contains the control with the specified context
get the view which contains the control with the specified context
stop or start editing
transfer focus to the editor and prepare the editor for key strokes
get the view which contains the control with the specified context
initialize the table to default values
get the view which contains the control with the specified context
number of columns to span control with
get the view which contains the control with the specified context
get the view which contains the control with the specified context
get the view which contains the control with the specified context
get the view which contains the control with the specified context
date the record was updated
execute the validation script
set before populating table with the model
date the record was last updated
get standard list of references
get standard list of references
create the references for the control component
determine if this is the last column
determine if this is the last column
get the underlying panel
send the defined action
has a panel
check all recommended
check all recommended
get the view which contains the control with the specified context
filter on a pattern
get the view which contains the control with the specified context
navigate the control parent hierarchy to find the parent panel
get the view which contains the control with the specified context
user defined tag useful for scripting
user defined tag useful for scripting
parameter value data type
value of the control
number of times this record has been updated
control is visible
cache a object
cache a object
adds to the sql and adds an alias
adds to the sql with a space before the sql
convert the parameter to a long value
get the defined class name for this add on model
get a parameter from the list and add to the query
all all parameters to the list
cache a object
get a hash value
create a code which represents the sound index of s
cache a object
create a code which represents the upper case of s
cache a object
create a work slot dedicated to the instance to prevent multiple per line
call is the call to the bean methods execution
get the value from the row for this column
create the data models
add reference item
create the file com
iterate through the dialog and duplicate any views
create the file com
create table schema
recurse through the dialog
upgrade the target database
insert the row into the table
migrate all of the system setup and configuration data
migrate all of the system setup and configuration data
create the data models
convert to table model
serialize rows to files
create the sets
convert first column in sql to a list of strings
convert first column in sql to a list of strings
create the models
get the drug database
clear the cache
create the models
create the mvc sub controller
upload the formulary transaction
create the models
return the single item form model for the primary key
same transaction return the single item form model for the primary key
get the medication
get the definition to poll
execute a command on all processors
missing from refs
get all medication items
adds the message to the database if message
create the data models
use the table index from schema not the table
start the processors
return the single med dispense model for the primary key
get the medication ref id
same transaction return the single med dispense model for the primary key
get the table model
store the transaction with an error status
is child of
execute a command on all processors
return the single interface message model for the primary key
test the interface service
same transaction return the single interface message model for the primary key
get the interface processor
return the single interface processor model for the primary key
same transaction return the single interface processor model for the primary key
clear the cache
create the interface message
return the single interface transaction model for the primary key
return the single med effect model for the primary key
same transaction return the single interface transaction model for the primary key
create the interface message
convert all identifiers to reference values
same transaction return the single med effect model for the primary key
save the account model model creating a new account or updating existing rows
return the single account model for the primary key
same transaction return the single account model for the primary key
return the single med product model for the primary key
return the single med interaction model for the primary key
same transaction return the single med interaction model for the primary key
return the single form definition model for the primary key
same transaction return the single form definition model for the primary key
return the single med item component model for the primary key
same transaction return the single med item component model for the primary key
return the single form state model for the primary key
return the single med item type model for the primary key
save the form model model creating a new form or updating existing rows
return the single charge algorithm model for the primary key
determine if table has field
same transaction return the single med item type model for the primary key
same transaction return the single form state model for the primary key
same transaction return the single charge algorithm model for the primary key
get the column for the index
get the column for the index
return the single med item model for the primary key
clear the cache
same transaction return the single med item model for the primary key
save the record model model creating a new record or updating existing rows
return the single charge item model for the primary key
return the single form type model for the primary key
same transaction return the single charge item model for the primary key
same transaction return the single form type model for the primary key
save the record model model creating a new record or updating existing rows
looks up the application view defined by the setting tree
returns the control model for the given id
save the record model model creating a new record or updating existing rows
returns the control model for the given id
returns the user model for the given id
get the tree model representation of the dialog builder tree
get the nodes for the dialog
returns the user model for the given id
return the single med product model for the primary key
returns the user model for the given id
save the record model model creating a new record or updating existing rows
create a new reference item for the display returning
same transaction return the single med product model for the primary key
store the group relationship between the child and parent
return true if at least one panel belongs to this dialog
get a tree node for the application panel
save the access model model creating a new access or updating existing rows
looks up the application dialog defined by the setting tree
merge the redirected link panel trees
return the single access model for the primary key
merge the redirected link panel trees
get the results for the specific patient and tests in the test groups
get the container for the specified dialog
save the form model model creating a new form or updating existing rows
same transaction return the single access model for the primary key
returns the security model for the given id
save the med model model creating a new med or updating existing rows
returns the panel tree entry for the given id
return the single form model for the primary key
get the date time model value for this setting
get the primary key column
return the single location type model for the primary key
same transaction return the single form model for the primary key
return the single med model for the primary key
same transaction return the single location type model for the primary key
get the primary column name
get the string value for this setting
same transaction return the single med model for the primary key
get the string value for this setting
get the primary column name
save the charge model model creating a new charge or updating existing rows
return the single charge model for the primary key
get the double value for this setting
return the single ref group model for the primary key
same transaction return the single charge model for the primary key
same transaction return the single ref group model for the primary key
get the integer value for this setting
match on all context
get the single setting value
return the single ref tree model for the primary key
return the single application column pref model for the primary key
same transaction return the single ref tree model for the primary key
same transaction return the single application column pref model for the primary key
get the tree model representation of the ref tree builder tree
create a new child reference item
creates a frame or dialog panel under the selected application dialog
return the tree model with this panel as a child
remove this reference item from the local cache
returns the ref model for the given id
returns the ref model for the given id
save the loinc model model creating a new loinc or updating existing rows
returns the ref model for the given id
returns the ref model for the given id
get the reference model matching the group name and key name
todo rebuild cache with commonly used
get the reference model matching the group name and key name
return the single loinc model for the primary key
save the ref model model creating a new ref or updating existing rows
get the reference model matching the group name and key name
get the tree model representation of the dialog builder tree
determine if the reference group and key combination exists
same transaction return the single loinc model for the primary key
return the single order instance container model for the primary key
return the single ref model for the primary key
same transaction return the single order instance container model for the primary key
return the single application control pref model for the primary key
same transaction return the single ref model for the primary key
get the display model for the reference group and key
same transaction return the single application control pref model for the primary key
get the display model for the reference group and key
get the application panel tree model for the specified child panel
get the display model for the reference group and key
get the display model for the reference group and key
get display value
get the display value by the long ref id
get the display value by the long ref id
adds the ref model to the database if reference
return the single facility account post model for the primary key
return the unique display for the ref id
return the single order instance med model for the primary key
store the relationship between the child and parent
same transaction return the single order instance med model for the primary key
return the unique display for the ref id
same transaction return the single facility account post model for the primary key
creates a new chain store
return the display for the ref id
return the display for the ref id
duplicate the application and create a new application node for the duplicated hierarchy
save the template model model creating a new template or updating existing rows
return the ref modelfor the ref id
return the single order instance state model for the primary key
return the identifier source next value
same transaction return the single order instance state model for the primary key
return the single application control type model for the primary key
return the single template model for the primary key
get performance stats data
return the ref modelfor the ref id
same transaction return the single application control type model for the primary key
same transaction return the single template model for the primary key
authorize the action or throw an exception in response
get the script contents
load an instance from the database throw an error if id not found
return the single record item state model for the primary key
p execute a query based on the models populated fields
return the single order instance model for the primary key
same transaction return the single record item state model for the primary key
save the translation model model creating a new translation or updating existing rows
return the single facility account model for the primary key
same transaction return the single order instance model for the primary key
add search results to list
return the access model by id
same transaction return the single facility account model for the primary key
return the single translation model for the primary key
same transaction return the single translation model for the primary key
return the single application panel pref model for the primary key
return the single order state model for the primary key
execute the hql with the specified parameters and return the matching models
same transaction return the single order state model for the primary key
get the script for the specified reference
same transaction return the single application panel pref model for the primary key
remove the relationship from the parent and child
same transaction return the single form model for the primary key
get the access model for the specified reference
same transaction return the single form model for the primary key
return the single unit conversion model for the primary key
return the single record item type model for the primary key
return the single fee schedule model for the primary key
same transaction return the single unit conversion model for the primary key
store the relationship between the child and parent
same transaction return the single fee schedule model for the primary key
same transaction return the single record item type model for the primary key
return the single order type model for the primary key
same transaction return the single order type model for the primary key
customize the layout of the columns
customize the layout of the panels
todo monitor per visit for now
store the panel preference for the user for the panel
save the order model model creating a new order or updating existing rows
clear the cache
adds the order to the visit if order
adds the order to the visit if order
return the single order model for the primary key
get the tree model representation of the reference tree builder tree
returns the order model for the given id
same transaction return the single order model for the primary key
get the tree model representation of the reference tree builder tree
return the single application panel tree model for the primary key
create a new order for the specified patient
return the single record item model for the primary key
get the tree model representation of the reference tree builder tree
same transaction return the single application panel tree model for the primary key
return the single invoice format model for the primary key
same transaction return the single invoice format model for the primary key
get the tree model representation of the reference tree builder tree
same transaction return the single record item model for the primary key
store a new reference relationship
store the record transaction
return the single view order instance model for the primary key
same transaction return the single view order instance model for the primary key
create a new order for the specified patient
get the script for the specified reference
get the ref id for the matching identifier of the specified source
return the single invoice payment model for the primary key
get the ref id for the matching identifier of the specified source
same transaction return the single invoice payment model for the primary key
get the patient model with the specified visit
singleton get the order catalog controller
singleton get the order catalog controller
get the reference id for the group and key
get the script for the specified reference
get the reference id for the group and key
store an audit
return the single invoice type model for the primary key
todo move to models
return the single application panel model for the primary key
get the identifier value for the source ref for the reference value
same transaction return the single invoice type model for the primary key
get the boolean value for this setting
get and or possibly add the patient which get from an external system
for performance testing return a display model
return the single term concept model for the primary key
same transaction return the single application panel model for the primary key
for performance testing return a single integer
same transaction return the single term concept model for the primary key
get version of the application server
returns the user model for the given id
get version of the database
store the result transaction
get the string value for this setting
get the patients for the portal user
store the patient from external system
save the invoice model model creating a new invoice or updating existing rows
save the role model model creating a new role or updating existing rows
save the order model model creating a new order or updating existing rows
return the single term procedure model for the primary key
return the display if unchanged otherwise add or update and return
return the display if unchanged otherwise add or update and return
save the order model model creating a new order or updating existing rows
get list of mrns
return the single invoice model for the primary key
same transaction return the single term procedure model for the primary key
return the display if unchanged otherwise add or update and return
same transaction return the single invoice model for the primary key
get the database the server is connected to
get the id for the matching identifier
todo check user is authorized to change role
return the single application view model for the primary key
todo check user is authorized to change role
return the single form state model for the primary key
get the id for the matching identifier
same transaction return the single application view model for the primary key
todo check user is authorized to change role
set deleted and inactivated flag and rename ref key to unique value
get view patient models for the list of patient ids
return the single term type model for the primary key
save the census model model creating a new census or updating existing rows
same transaction return the single term type model for the primary key
return the single census model for the primary key
get the reference for the category
return the single form state model for the primary key
same transaction return the single census model for the primary key
refresh the jobs every day assuming default scheduler jobs gets a days worth
add the default job
save the audit model model creating a new audit or updating existing rows
return the single content type model for the primary key
same transaction return the single content type model for the primary key
get the id for the matching identifier
stores the scheduler job instance
gets the scheduler job by id
check if the cache has changed
execute the scheduled job
check if the cache has changed
gets the job by job ref id
return the single audit model for the primary key
save the environment model model creating a new environment or updating existing rows
save the term model model creating a new term or updating existing rows
start job scheduler
same transaction return the single audit model for the primary key
start the job scheduler
return the single environment model for the primary key
return the single item location model for the primary key
return the single patient list model for the primary key
same transaction return the single item location model for the primary key
same transaction return the single environment model for the primary key
mark the file complete
same transaction return the single patient list model for the primary key
get the file contents
save the file model model creating a new file or updating existing rows
get the file handle
return the single term model for the primary key
return the single file model for the primary key
return the single item type model for the primary key
same transaction return the single item type model for the primary key
same transaction return the single file model for the primary key
same transaction return the single term model for the primary key
get current time on the server
get language default english
save the item model model creating a new item or updating existing rows
return the single patient portal user model for the primary key
same transaction return the single patient portal user model for the primary key
return the single item model for the primary key
save the location model model creating a new template or updating existing rows
same transaction return the single item model for the primary key
return the single help content model for the primary key
same transaction return the single help content model for the primary key
return the single custom controller model for the primary key
save the patient model model creating a new patient or updating existing rows
return the single template model for the primary key
same transaction return the single custom controller model for the primary key
return the single patient model for the primary key
same transaction return the single patient model for the primary key
return the single template model for the primary key
clear the reference cache
adds the medication to the database if medication
same transaction return the single template model for the primary key
adds the medication to the database if medication
save the icon model model creating a new icon or updating existing rows
get the appointment for the specific instance only includes that instance
return the single appointment status model for the primary key
get the patient with the appointment id
same transaction return the single appointment status model for the primary key
get the patient with the appointment id
return the single icon model for the primary key
add or update the appointment type
return the single report type model for the primary key
same transaction return the single report type model for the primary key
get the tree model representation of the dialog builder tree
same transaction return the single icon model for the primary key
save the report model model creating a new report or updating existing rows
return the single portal user model for the primary key
return the single report model for the primary key
remove resource schedules
same transaction return the single report model for the primary key
same transaction return the single portal user model for the primary key
save the permission model model creating a new permission or updating existing rows
get the reference model matching the group name and key name
get return value of last command
set the return value of the last command
execute the store command
execute the store command
return the single appointment type model for the primary key
create a database session and transaction if they did not exist
execute the delete command
same transaction return the single appointment type model for the primary key
return the single permission model for the primary key
return the single view patient model for the primary key
execute the delete command
call is the call to the bean methods execution
save the job model model creating a new job or updating existing rows
same transaction return the single view patient model for the primary key
same transaction return the single permission model for the primary key
return the single view visit model for the primary key
save the appointment model model creating a new appointment or updating existing rows
return the single job model for the primary key
same transaction return the single view visit model for the primary key
store schedules already associated with a resource
return the single view patient form model for the primary key
same transaction return the single job model for the primary key
save the frequency model model creating a new frequency or updating existing rows
return the single appointment model for the primary key
save the printer model model creating a new printer or updating existing rows
get the tree model representation of the reference tree builder tree
same transaction return the single view patient form model for the primary key
same transaction return the single appointment model for the primary key
return the single visit type model for the primary key
return the single view patient record model for the primary key
same transaction return the single visit type model for the primary key
save the appointment model model creating a new appointment or updating existing rows
return the single printer model for the primary key
same transaction return the single view patient record model for the primary key
same transaction return the single printer model for the primary key
save the visit model model creating a new visit or updating existing rows
return the single scheduler job instance model for the primary key
save the frequency model model creating a new frequency or updating existing rows
same transaction return the single scheduler job instance model for the primary key
return the single visit model for the primary key
return the single frequency model for the primary key
same transaction return the single visit model for the primary key
same transaction return the single frequency model for the primary key
get the reference model matching the group name and key name
provide a chance to pause if necessary
determine if a wakeup call has been received in which case
poll for new messages for this processor
issue a command to the controller
wakeup now as a processor should have entries
return the processor with the specified key or null
start all processors and this controller
process the queue
get the reference model matching the group name and key name
consume the object
add to queue if there is space
provide a chance to pause if necessary
issue a command to the controller
match and update the processor
return the single scheduler job model for the primary key
trigger an update for the view
save the plugin model model creating a new plugin or updating existing rows
save the message model model creating a new message or updating existing rows
same transaction return the single scheduler job model for the primary key
trigger an update for the view
trigger an update for the view
return the single message model for the primary key
subclasses define which reference groups they can hold values for
determine if the node reference value is found in this context
add references to the parameter list from this context
same transaction return the single message model for the primary key
return the single plugin model for the primary key
remove the tree node from the parent node in the reference builder tree
compare by resource then time then slot
trigger an update for the view
same transaction return the single plugin model for the primary key
trigger an update for the view
trigger an update for the view
create a new result
trigger an update for the view
trigger an update for the view
save the server model model creating a new server or updating existing rows
trigger an update for the view
save the reminder model model creating a new reminder or updating existing rows
return the single server model for the primary key
trigger an update for the view
same transaction return the single server model for the primary key
called by label links buttons etc
create a new result
return the single reminder model for the primary key
same transaction return the single reminder model for the primary key
create a new result
display the form
trigger an update for the view
trigger an update for the view
return the single role group model for the primary key
trigger an update for the view
return the single resource appointment model for the primary key
this method is responsible for creating the surescripts
create the surescripts message body
creates the phone number type
this method is used for the nighlty pharmac update
creates the object representing the prescribers name
create the prescriber id
this method calls the surescripts server to get a complete download of
same transaction return the single role group model for the primary key
add a unit of measure conversion
this method makes a request using the criteria specified when creating
get the unit of measure conversion or return null if not found
create a new pharmacy form and save it
same transaction return the single resource appointment model for the primary key
precondition from value must be in the units of from units
multiply the two values
get the value as a double
get the value rounded to the specified number of decimal places
return the unit of measure conversion
create the surescripts message body
get some appointment info
trigger an update for the view
cell display on calendar
cell display on calendar
store as transaction
number of time intervals
called when the form is started
called when the form is started
called when the form is started
called when the form is started
called when the form is ended
add a separator to the form
called when the form is ended
called when the form is started
save the role model model creating a new role or updating existing rows
called when the form is ended
return the single resource schedule model for the primary key
add a separator to the form
use this on all client side forms e
add a separator to the form
add a separator to the form
add a separator to the form
add a separator to the form
add a separator to the form
add a separator to the form
same transaction return the single resource schedule model for the primary key
add a separator to the form
called when the form is started
add a separator to the form
called when the form is ended
add a separator to the form
return the single role model for the primary key
save the resource model model creating a new resource or updating existing rows
same transaction return the single role model for the primary key
return the single resource model for the primary key
same transaction return the single resource model for the primary key
return the single rule filter model for the primary key
return the single schedule template model for the primary key
same transaction return the single schedule template model for the primary key
same transaction return the single rule filter model for the primary key
return the single user resource model for the primary key
same transaction return the single user resource model for the primary key
return the single rule map model for the primary key
return the single view patient appointment model for the primary key
same transaction return the single rule map model for the primary key
same transaction return the single view patient appointment model for the primary key
save the script model model creating a new script or updating existing rows
return the single script model for the primary key
same transaction return the single script model for the primary key
save the setting model model creating a new setting or updating existing rows
return the single setting model for the primary key
same transaction return the single setting model for the primary key
return the single user state model for the primary key
same transaction return the single user state model for the primary key
return the single user template text model for the primary key
same transaction return the single user template text model for the primary key
return the single user template model for the primary key
same transaction return the single user template model for the primary key
calls the search api of okkam core and returns an instance of
push even blank null indents as they are like scopes must
the following was broken
the following was broken
the following grammar should yield an error that rule a has
the following grammar should yield an error that rule a has
when looking at a result set that consists of a map hash table
get next token from stream and make a node for it
adapts model objects for display in workbench viewers
helper method to set decorators properties based on model values
command is executable if src target and link are not null
creates an swt color resource from a business objects rgb
controlling method for creating a palette
initialises the root palette at the start of the editor
provides label for property value column in properties view
dimension not currently editable from the property sheet
the code text property descriptor code implementation of this
dimension not currently editable from the property sheet
returns the alignment rectangle to which all selected parts should be
draw the outline of the polygon ex
adds the passed point to the polyline ex
calculates the bounds of the point list and expands
returns the first point in the polyline ex
inserts a given point at a specified index in the polyline ex
erases the polyline ex and removes all of its
removes a point from the polyline ex
sets the end point of the polyline ex
sets the point at code index code to the point
sets the list of points to be used by this polyline connection
sets the start point of the polyline ex
sets the polyline decorations point template to
sets the amount of scaling to be done along x and y
sets the angle by which rotation is to be done on the
sets the value for the amount of scaling to be done
sets the amount of scaling to be done along x and y
sets the translation amounts for both axes
delegates to set scale
called during connection drawing to find the absolute
returns a new transformed point of the input point based on the transformation
overrides superclass to return a conveniently casted decorator object
convenience method for dtermining if line segment goes in direction north 12 oclock
convenience method for dtermining if line segment goes in direction south 6 oclock
convenience method for dtermining if line segment goes in direction east 3 oclock
convenience method for dtermining if line segment goes in direction west 9 oclock
responds to selection changed events
removes all fonts currently in the cache and dispose of them
allows hook to dispose of any artifacts around the creation of the
overridden so that image can be disposed
implementation of the resizable image interface that will allow the svg
accessor for retrieving the default image for the rendered svg data
creates an awt image for the contents of the diagram editpart
method used to get the svg root element from the document
creates an swt image descriptor for the contents of the diagram editpart
get instance static constructor method for retrieving the appropriate
get instance static constructor method for retrieving the appropriate
get instance static constructor method for retrieving the appropriate
get instance static constructor method for retrieving the appropriate
get instance static constructor method for retrieving the appropriate
get instance static constructor method for retrieving the appropriate
constructs a mapping of figures to their corresponding edit parts
retrieves the list of constants for this enumerated type
sets the extra data to bee cached for the rendered image
retrieves a hash code value for this output operation
should maintain aspect ratio accessor method to return whether or not the
retrieves a hash code value for this output operation
copy the values from a given state to this state
this is a helper method used to create the swt graphics object
create the svg graphics object and initializes it with the current line
get buffered image
override to create a buffered image type that support an alpha channel for
retrieves a web safe colour that closely matches the provided colour
open an appropriate destination browser so that the user can specify a source
the main logic for deciding whether the page is complete
paints the shape
allows clients to reset the font cache utilized by the scaled graphics in
sets the current clip values
this method requires advanced graphics support
this method requires advanced graphics support
sets the dash pattern when the custom line style is in use
sets the current translation values
this method requires advanced graphics support
this method requires advanced graphics support
accessor method to return the translation offset for the graphics object
logs a warning once if advanced graphics support is not available
returns the decorated value as string
sets the value for a given graph vertex edge
creates a bend point positioned at an offset from the source anchor
returns the decorated value as string
sets the value for a given graph vertex edge
sets the value for a given graph vertex edge
converts the enumerated type to an integer
converts a numerical value into an enumerated type
converts a numerical value into an enumerated type
converts a numerical value into an enumerated type
converts a numerical value into an enumerated type
create a new instance with a new value for the red component
gets the major version number
create a new instance with a new value for the green component
creates a new instance with the new major version number
create a new instance with a new value for the blue component
gets the minor version number
creates a new instance with the new minor version number
gets the patch version number
creates a new instance with the new patch version number
gets the compiled figure definition
gets the textual figure definition that is to be compiled
get the x scale factor
get the y scale factor
does the list contain this object
does the list contain all the points in the collection
adds a point to the builder
adds a point to the builder
returns the first index matching this object
tests is the list is empty
gets the convex hull constructed by this builder
get the last index in the list that matches the given object
returns the point that is nearest to the specified coordinates
returns the point that is nearest to the specified point
gets the size of the list
the inverted line segment
resizes this dimension by the specified amount
resizes this dimension by the specified amount
negates each of the width and height dimensions
creates a new line segment translated by the specified displacement
get the angle of the vector of this line
calculate the scaling factor to convert the reference dimension into this dimension
scale this dimension and return the result
the difference between this point another
get the distance from this point to another point
get the square distance from this point to the other point
gets the length of this line segment
creates a new point that is the negation of this one i
create a new vector corresponding to this line segment
create a new point with the new x coordinate
create a new point with the new y coordinate
create a new point translated by the specified amount
create a new point translated by the specified amount
gets the terminus end of this line segment
scale the point by the specified amount
translate the point by the specified amount
negate the point held by this builder
get a new point equivalent to the current point held by this builder
calculates the magnitude of the vector
get the dimension or size of this envelope
calculates the scalar product of this vector and another vector
gets the centre point of the envelope
creates a new vector that is the unit vector of this one i
tests whether the code other code intersects with this one
does this envelope contain this point
tests if envelope is contained by this envelope
creates a new envelope that has been translated by the specified amount
creates a new envelope that has been resized relative to this one
creates a new envelope with a the new specified origin
creates a new envelope with a the new specified size
sets the individual schema that will have code generated for it
sets the directory such that all schemas in this directory will have code
adds a fileset to process that contains schemas to process
specifies the name of the ddl file to be generated
specifies the default grouping to be xsd all
sets the individual schema that will have code generated for it
configured the code generator
derives the xml schema file name from the xml instance document name
sets the directory such that all schemas in this directory will have code
sets the individual schema that will have code generated for it
adds a fileset to process that contains schemas to process
sets the directory such that all schemas in this directory will have code
adds a fileset to process that contains schemas to process
specifies the name of database engine to generate ddl for
specifies the name of a database specific properties file to be used
sets the package that generated code will belong to
specifies the name of the ddl file to be generated
specifies the name of a global properties file to be used during
configured the code generator
sets the directory into which code will be generated
sets the binding file to be used for code generation
sets the individual schema that will have code generated for it
sets the directory such that all schemas in this directory will have code
adds a fileset to process that contains schemas to process
sets the package that generated code will belong to
sets the line seperator to use for code generation
sets the directory into which code will be generated
sets the binding file to be used for code generation
sets the line seperator to use for code generation
sets the type factory for code generation
sets the type factory for code generation
sets whether or not code generation gives extra information about its work
sets whether or not non fatal warnings should be suppressed
sets whether or not class descriptors are generated
sets whether or not code generation gives extra information about its work
sets whether or not marshaling methods are generated
sets whether or not marshaling methods are generated
sets whether ctf framework code is generated
sets the name conflict strategy to use
controls whether to generate code for imported schemas as well
controls whether to generate sax 1 compliant code
controls whether enumerated type lookup should be performed in a case
sets the name conflict strategy to use
sets the file to use for castor builder properties
public execute method entry point for the ant task
set the schema file name
sets whether or not non fatal warnings should be suppressed
set the target package name
set the line separator
set overwriting existing files
sets whether or not class descriptors are generated
set the type factory
set the destination directory into which the java sources should be copied to
sets whether or not marshaling methods are generated
sets whether ctf framework code is generated
controls whether to generate code for imported schemas as well
controls whether to generate jdo specific class descriptors
controls whether to generate sax 1 compliant code
controls whether enumerated type lookup should be performed in a case
the grammar file to process
sets the file to use for castor builder properties
the directory to write the generated files to
sets the mode for printing jclass instances
the directory to write the generated files to
the token files output directory
controls whether a mapping file should additionally be generated
the output style for messages
sets an optional super grammar file
runs source generation
runs source generation on a xml schema instance pointed to by an url
sets a flag to enable report statistics
sets a flag to print out the grammar without actions
sets a flag to enable profiling
sets a flag to enable nfa generation
sets a flag to enable nfa generation
run the analysis multithreaded
test lookahead against ebnf block exit branches
test lookahead against ebnf block exit branches
override the default conversion timeout with xconversiontimeout nnnn
set a flag to enable printing of the grammar tree
set a flag to enable dependency checking by antlr itself
if true enables all tracing
if the environment variable antlr home is defined and points
execute in a forked vm
convert a list of files
convert the specified file read each line and ask matcher implementation
in this test we replace using the simple pattern log the full log
in this test we use a simple pattern to replace the log instanciation
in this test we combine two pattern to achieve the intended conversion
clear all entries in the mdc
this method is mainly used with expression evaluators
log a message at level trace according to the specified format and
log a message at level trace according to the specified format and
log a message at level trace according to the specified format and
directly delegates to the wrapped code org
delegates to the code is error enabled code method of the wrapped
converts the input parameter to string and then delegates to
converts the first input parameter to string and then delegates to
converts the input parameter to string and then delegates to the wrapped
converts the first input parameter to string and then delegates to
converts the input parameter to string and then delegates to the wrapped
converts the first input parameter to string and then delegates to
converts the input parameter to string and then delegates to the wrapped
converts the first input parameter to string and then delegates to
converts the input parameter to string and then delegates to the wrapped
converts the first input parameter to string and then delegates to
converts the input parameter to string and then delegates to
converts the first input parameter to string and then delegates to
converts the input parameter to string and then delegates to
converts the first input parameter to string and then delegates to
converts the input parameter to string and then delegates to the wrapped
converts the first input parameter to string and then delegates to
converts the input parameter to string and then delegates to the wrapped
converts the first input parameter to string and then delegates to
converts the input parameter to string and then delegates to the wrapped
converts the first input parameter to string and then delegates to
converts the input parameter to string and then delegates to the wrapped
converts the first input parameter to string and then delegates to
converts the input parameter to string and then delegates to
converts the first input parameter to string and then delegates to
return the level in effect for this category logger
returns the assigned
determines whether the level passes as parameter is enabled in
a nop implementation as this logger is permanently disabled for
a nop implementation as this logger is permanently disabled for
a nop implementation as this logger is permanently disabled for
a nop implementation as this logger is permanently disabled for
return an appropriate
a nop implementation as this logger is permanently disabled for
a nop implementation as this logger is permanently disabled for
a nop implementation as this logger is permanently disabled for
a nop implementation as this logger is permanently disabled for
this is our internal implementation for logging regular non parameterized
currently this method always returns an instance of
for formatted messages first substitute arguments and then log
a simple implementation which always logs messages of level info according
perform single parameter substitution before logging the message of level
perform double parameter substitution before logging the message of level
perform double parameter substitution before logging the message of level
log a message object at level finest
log a message of level info including an exception
log a message at level finest according to the specified format and
always returns true
a simple implementation which always logs messages of level warn according
log a message at level finest according to the specified format and
perform single parameter substitution before logging the message of level
log a message at level finest according to the specified format and
perform double parameter substitution before logging the message of level
perform double parameter substitution before logging the message of level
log an exception throwable at level finest with an accompanying message
log a message of level warn including an exception
log a message object at level fine
a simple implementation which always logs messages of level error according
log a message at level fine according to the specified format and argument
perform single parameter substitution before logging the message of level
log a message at level fine according to the specified format and
perform double parameter substitution before logging the message of level
log a message at level fine according to the specified format and
perform double parameter substitution before logging the message of level
log an exception throwable at level fine with an accompanying message
log a message of level error including an exception
log a message object at the info level
log a message at level info according to the specified format and argument
log a message at the info level according to the specified format and
log a message at level info according to the specified format and
log an exception throwable at the info level with an accompanying
return the logger instance that will be used for logging
log a message object at the warning level
log a message at the warning level according to the specified format and
publish a log record
log a message at the warning level according to the specified format and
log a message at level warning according to the specified format and
log an exception throwable at the warning level with an accompanying
log a message object at the severe level
log a message at the severe level according to the specified format and
log a message at the severe level according to the specified format and
log a message at level severe according to the specified format and
log an exception throwable at the severe level with an accompanying
log the message at the specified level with the specified throwable if any
subclasses should not override this method
subclasses should not override this method
subclasses should not override this method
subclasses should override by returning code true code
subclasses should not override this method
subclasses should not override this method
subclasses should not override this method
provides access for subclasses to the parser factory
provides access for subclasses to the report builder
loads the root library taking a library stub name
loads all the libraries added to this class
generate id for ndom description of map element
write error to the report
write warnings to the report
assign new root map object to be parsed
convert string value to integer
is empty string acceptable by the rule
set acceptability of empty string
is molecule independent in the model
check validity of parameter string in the process node
extracts rules from store
checks if the current canvas has been validated
this method is called when the component knows the desired
sends an error message from antlr analysis to the maven log sink
sends a warning message to the maven log sink
sends an error message from the antlr tool to the maven log sink
given the source directory file object and the full path to a
load the properties file org antlr antlr
set the location base directory where output files should be produced
used by build tools to force the output files to always be
set the base location of input files
name a file from the lib dir
return a file descriptor for vocab file
indicates whether antlr has gnerated or will generate a description of
indicates whether antlr has generated or will generate a description of
return the path to the directory in which antlr will search for ancillary
indicate whether antlr has generated or will generate a version of the
indicates whether antlr has generated or will generate a version of the
indicates whether antlr has generated or will generate a report of various
indicates whether antlr will force all files to the output directory even
provide the current setting of the conversion timeout on dfa creation
returns the current setting of the message format descriptor
returns the number of errors that the analysis processing threw up
indicate whether the tool will analyze the dependencies of the provided grammar
set the message format to one of antlr gnu vs2005
set the timeout value in milliseconds after which dfa creation stops
indicate whether antlr should generate a description of
indicates whether antlr should generate a description of
set the path to the directory in which antlr will search for ancillary
indicate whether antlr should generate a version of the
indicate whether antlr should generate a report of various
indicate whether antlr should print a version of the input grammar
indicates whether antlr will force all files to the output directory even
indicate whether the tool should analyze the dependencies of the provided grammar
make sure we have need elements from current position p
add n elements to buffer
return element i elements ahead of current element
return string of current buffer contents non destructive
pull elements from tree iterator
for debugging destructive moves tree iterator to end
used for testing just return the token type stream
override this if you need transformation tracing to go somewhere
draw a corner handle at the given centre point
draw a corner handle at the given centre point
sets the layout calculator to be used for auto layout of the canvas
carry out auto layout on the canvas
checks a log4j message element against expectations
add permitted child
override this method to supply a custom error message
determines if a password has expired
set session attributes containing user preferences like locale and
font hssffont clone
report table cell itext cell tc css class
create new sessions
create new sessions
update sessions status
delete session by session object
delete sessions by id
insert sessions sessions without users
delete by sesssion id
delete by session object
insert sessions sessions with users
delete categories object
delete category object
insert sessions sessions with user id
delete category object
update sessions status
delete by topic id
make the message go forward in its logical way
try to answer the message as the destination node
answer the message using our rslist
test the net to get the response
sets the resized letter
gets the letters tiles
returns letter width
create the classifier training files
run the classifier training
run encoders training
run classifier training
put in file the rmse values each 200 epochs
gets the biggest height of the letters
execute the real segmentation of the letters previously produced
prints all rows detected on a given image
writes the output file
gets the final cdkey values
called when a connection is made
closes the server socket to break it out of the loop
set the next item in the linked list
get the next item in the linked list
set the last item in the linked list
get the last item in the linked list
destry removed this thread from the linked list
send 0x ff jbls news
this method like all others with 32 bit offsets was native
returns the offset of a field truncated to 32 bits
returns the base address for accessing some static field
check for equality to another card
compare one card with another
convert the card into a string representation of its suit and value
getter for property list of available flvs
adds the specified thread to this task
default getter for plasm code scanner
standard getter for plasm partition scanner
checks if a character is a valid pla sm word initial character
implements the is word start method from iword detector interface
checks if the given character c is a valid pla sm internal word
implements the is word part method from iword detector interface
default constructor for document provider it associates to the current
this method uses the pla sm code detectors to examine any word being
method overridden to apply the change of the properties
this action evaluate the the bufferr currently displayed on the active
this action starts and runs the plasm process
sets the plasm path needed to run plasm as it takes it
set a stream listener for this plasm process
warning this is a blocking method to be used inside a display
evaluation of solution for external use
purpose evaluation of solution file
test method for
insert the methods description here
insert the methods description here
insert the methods description here
insert the methods description here
insert the methods description here
sets the null if
gets the read lock
gets the write lock
checks if is locked
sets the job type name
adds the xml error node
gets the job type name
gets the project name
gets the parameter lists
gets the xml job definition
gets the xml job definition
gets the current db time stamp
sets the child nodes
gets the job type id
sets the job type id
simplified version of set cancel job used strictly for cancelling jobs
to be used by jobs that have connections to close etc
insert the methods description here
hash m d5
insert the methods description here
insert the methods description here
insert the methods description here
insert the methods description here
this method returns the top level parameters in a given list by name
insert the methods description here
insert the methods description here
sets the pages only
insert the methods description here
sets the id counter
insert the methods description here
insert the methods description here
insert the methods description here
insert the methods description here
insert the methods description here
insert the methods description here
insert the methods description here
insert the methods description here
insert the methods description here
refresh a project lock to extend the lock timeout
sets the id counter
insert the methods description here
insert the methods description here
insert the methods description here
insert the methods description here
release a project lock in the metadata
sets cancel flag for job if possible
insert the methods description here
insert the methods description here
removes the specified server id from the ketlservers
insert the methods description here
insert the methods description here
insert the methods description here
sets the valid page
insert the methods description here
insert the methods description here
gets the valid page
insert the methods description here
insert the methods description here
sets the method
insert the methods description here
insert the methods description here
insert the methods description here
sets the valid status
insert the methods description here
insert the methods description here
insert the methods description here
output bad session
sets the close out mode
adds the session identifier map
insert the methods description here
sets the variable name
insert the methods description here
insert the methods description here
sets the hash map to monitor
insert the methods description here
insert the methods description here
gets the project id
insert the methods description here
insert the methods description here
insert the methods description here
insert the methods description here
insert the methods description here
insert the methods description here
recurse parameter list
recurse parameter list
insert the methods description here
copy parameter values list
gets the global parameter list id
insert the methods description here
insert the methods description here
sets the global parameter list id
insert the methods description here
gets the max rows
insert the methods description here
sets the max rows
insert the methods description here
insert the methods description here
insert the methods description here
insert the methods description here
insert the methods description here
insert the methods description here
insert the methods description here
insert the methods description here
checks if is alerting disabled
insert the methods description here
insert the methods description here
insert the methods description here
insert the methods description here
insert the methods description here
sets the disable alerting
insert the methods description here
insert the methods description here
sets the exec id
gets the exec id
sets the job id
sets the date
gets the date
sets the code
insert the methods description here
gets the code
sets the messag
gets the message
sets the details
gets the details
sets the step name
gets the step name
insert the methods description here
insert the methods description here
runs through the threads to see if they are still running
insert the methods description here
gets the counter
insert the methods description here
insert the methods description here
this function runs through the thread collection and checks status
insert the methods description here
insert the methods description here
insert the methods description here
insert the methods description here
return a live count of the number of threads currently running
insert the methods description here
note that this will not affect jobs currently in the queue
gets the total count
insert the methods description here
sets the exception
gets the exception
insert the methods description here
sets the stats
gets the dump file
insert the methods description here
insert the methods description here
gets the logging path
sets the ketl path
insert the methods description here
checks if is killed
insert the methods description here
insert the methods description here
insert the methods description here
apply the given unlocalized pattern string to this date format
insert the methods description here
insert the methods description here
gets the 2 digit year start
gets the stats node
gets the date format symbols
insert the methods description here
insert the methods description here
insert the methods description here
sets the stats
prints the tree
configure document builder factory
sets the value class
sets the array limit
parses the ambiguous dates as after
removes the first
checks for next
override read object
test is same day
test is same instant
test add years
test add months
test add hours
test add seconds
test add milliseconds
sets the 2 digit year start
test truncate date
gets the class
gets the backing map
sets the date format symbols
creates the set
sets the calendar cache
sets the calendar from cache
adds the to sorted list
sets the calendar cache field
gets the last exception
insert the methods description here
return a localized pattern string describing this date format
return a pattern string describing this date format
insert the methods description here
allow for no delimeter at eof
gets the standard error message
gets the standard out message
gets the alternate insert value
sets the alternate insert value
gets the alternate update value
sets the alternate update value
sets the source class
gets the source class
gets the parameter definition
sets the value wrapper
gets the data file
gets the parameter list id
gets the sql
creates the pipe
sets the sql
inits the file
gets the type desc
gets the xml config
checks for property
sets the in use
sets the property
un set property
sets the property
long to binary
sets the column name
gets the month of year
gets the column name
gets the hour of day
gets the job
gets the minute of hour
gets the once only date
gets the enable date
gets the disable date
checks if is schedule validated
reconstitute the tt knihash map tt instance from a stream i
gets the owner
sets the owner
gets the date part
gets the metadata version
gets the lookup
gets the thread manager
gets the right source queue
gets the aggregate comparator
adds the step
gets the max sort size
generate core imports
adds the step
gets the merge size
gets the read buffer size
gets the batch manager
gets the job executor
gets the sort comparator
count of step threads alive
gets the code field
gets the total read buffer size
increment error count
always override outs
gets the write buffer size
increment error count
gets the code generation output object
sets the sort comparator
repeat record possible
gets the core class name
increment error count
send aggregate batch
gets the in port
sets the config
gets the config
sets the thread group
sets the thread groups
gets the thread group
sets the node class
gets the node class
gets the in port
gets the target source queue
gets the name
gets the source thread
gets the source object
gets the etl step
gets the error code
gets the etl event
gets the new in port
gets the new out port
gets the out channel
gets the current etl job
gets the shared lookup
adds the executor
gets the out port
gets the executor
adds the executor state
gets the parameter lists used
adds the executor
gets the server details
gets the alive servers
checks if is server alive
checks if is server alive
gets the as xml
gets the records processed
gets the qa type
sets the qa name
gets the used port index
gets the error code
gets the used ports from worker
register qa collection
gets the xml config
gets the qa item node
handle event code
sets the string
handle port event code
sets the connection
handle port exception
put key array data array
gets the call
gets the namespace
builds the post batch sql
checks if is memory low
interrupt all steps
gets the unique object name
gets the unique object name
gets the id quote
creates the project
sets the db case
gets the timing
gets the cpu timing
sets the waiting
checks if is waiting
gets the hash code
clear batch log batch
adds the headers
check and escape xml data
clear batch log batch
gets the event
gets the associated load id
checks if is used
sets the qa event generators
checks if is object type
gets the port class
checks if is array
gets the xml config
checks if is constant
gets the code
gets the port index
sets the index
sets the data type from port
gets the constant value
use inherited data type
gets the job executor
gets the method map from system xml
gets the paramater lists
gets the parameter value
gets the qa class
put scd key
gets the required tags message
checks for complete parameter set
gets the cache directory
adds the trigger
gets the key
gets the qa collection
gets the qa collection
record to log
gets the log
sets the job executor
gets the error count
gets the nearest scd value
gets the last exception
increment error count
increment error count
creates the cache table
matches event handler
creates the load command
gets the cache file name
adds the batch
gets the batch size
handle log message
gets the connection
load command ready
sets the boolean
sets the byte array value
handle error message
sets the double
sets the float
sets the int
sets the long
handle fatal error
sets the null
sets the object
sets the string
sets the timestamp
is first thread to start
record job message
creates the load command
adds the batch
is last thread to complete
checks if is first thread to enter initialize phase
sets the null
checks if is last thread to enter complete phase
gets the triggers
gets the target step
sets the code generation reference object
gets the source port index
sets the source port
sets the sort
gets the sort
gets the source field definition
gets the files
configure document builder factory
dedup file list
gets the open channels
gets the current file channel
insert the methods description here
insert the methods description here
insert the methods description here
this is the publicly accessible function to set the shutdown flag
gets the connection
gets the java type
insert the methods description here
gets the sql
gets the restart filenaname
insert the methods description here
insert the methods description here
gets the results
gets the xml dump
insert the methods description here
gets the channel
gets the simple date format
gets the decimal format
gets the format
gets the current db time stamp
gets the pk
load table name
gets the primary key columns
gets the source key columns
gets the surrogate key
put key array data array
sets the db case
sets the byte array value
sets the double
sets the float
sets the int
sets the long
sets the null
sets the object
sets the string
creates the load command
adds the batch
sets the null
sets the string
no more nodes
load node list
set static status
remove an element for the array list
return constructor element
set class name information
set type for equation
set type for other
get class name information
remove the whole variable map from arraylist
check if there is an open method
return hash map copy
print member hash map table
print hash map information
store variable in temp array list
add variable occurence to the hashmap
add declared variable to the hashmap
get variable occurence object from the hashmap
clear a hashmap
add hashmap variables to the arraylist
close both windows and quit app process
close both windows and quit app process
return the charset that best matches the supplied input data
autodetect the charset of an input stream and return a java reader
set the total price of the cart with the new parameter
remove the product identify by the reference in the cart
check if there are enough articles in the stock
buy the basket
set the id of the children with the new parameter
set the gender of the children with the new parameter
set the name of the client with the parameter
set the balance of this account bank with the parameter
set the children list of the customer with the new parameter
set the order list of the customer with the new parameter
set the quantity of this product in the cart with the parameter
set the price of this product in the cart with the parameter
create a children if a customer have children
create a children if a customer have children
search the account identify by the parameter
check if the login correspond to the password
show information of the account identify by the email in parameter
delete the account which is identify by email
show information of the account identify by the reference in parameter
change the price of the product identify by the reference
change the stock of the product identify by the reference
add quantity in the stock of the product identify by the reference
change the description of the product identify by the reference
change the picture of the product identify by the reference
delete the product which is identify by reference
set the id of the order with the parameter
search the account identify by the parameter
checks to see whether everything has been setup
sets the start value
sets the start value
checks whether everything has been setup using the cached value of
sets the delta
sets the parameter
sets the parameter
sets the number of iterations
sets the time stamp for the generation
returns the best pl measure
sets the duration in months of the period of the generation
checks to see whether everything has been setup
adds a parameter generator
sets the time of day for each generated time stamp in the generation
adds a given configuration
adds a parameter to the configuration
sets the map of parameters to be used by hibernate dont call this
sets the group by
returns the current local time in millis
returns local time in seconds from midnight 1 january 1900
return a name of the time server
returns the value of type double
sets the value of type double
validates the value
returns the mid price for the price
formats a message specifying that an incorrect class was received
returns the value of type string
sets the value of type string
sets the trading system that the strategy uses
returns the value of type integer
sets the value of type integer
sets the value of type iproduct
sets the description of the parameter
sets the parameter id
returns the current moving average as it us currently stored in the
returns the moving average length as it is currently set up in the
returns the last price that the strategy came accross
returns the error code
sets the price data access object
sets the timestamp comparator
returns the frequency of positive p l
sets the implementation of the
returns whether the recommendation is to buy true or to sell false
the event that causes processing to fail
returns the position of the requested type of price in the input
rounds the passed in value to
returns the number of decimal places that this rounder will round to
calculates the average of a set of values rounded to
returns the number of decimal places of the result returned by
slides the mean average of one value
returns the current average
initialises the algorithm with a set of values
returns the last value added to this sliding average
the sliding mean average is initialised when a buffer has been allocated
the prices parsed will be associated to the product corresponding to this
increments the index that points to the oldest added value in the values
sets the dao
sets the data source
sets the filter
sets the parser
sets the file path
sets the timer
imports the data from the csv file and inserts them into the
sets the country
sets the exchange name
sets the exchange suffix
copies the attribute of this instance into the clone
the equals by attributes method is called by equals to test this objects
test the second group of fields
adds a code ivalidate transaction code to the trading system
the list of transactions to store
sets the book
sets the cash manager
sets the market data service
returns the cash balance
sets the cash balance
sets the account name
sets up the current book iterator
compute the margin required by this transaction
computes the margin required to hold the transaction belonging to
getter method for the sell field
returns the present value of a book for the given product and
setter method for the sell field
sets ticker stock code
gets underlying type
removes all the transactions
sets underlying type
method that adds for a given market data source the corresponding market
sets the product type of the product
given a source id this method returns the alias for that underlying in
returns the stop loss expressed in points
calculates the stop loss price according to the tic size of the
sets the valid from date on this product
sets the underlying for this alias
sets the alias in the other system
sets the valid to date on this product
deletes an code iproduct code from the database
deletes all code iproduct code from the database
saves the transactions list
saves an code iproduct code into the database
method used by
scans all the transactions to find the first open transaction
adds a transaction to the database and fires a creation event
finds the cash does a deposit or a withdraw and updates it
validates the parameters
finds the cash manager
creates a new account with the given name
returns the balance of the given account
sets the cash balance
divides remaining by the factor and returns the result
implementation of the comparator interface
validates the fact that the stop loss of a transaction is greater than
returns the hour
returns the millisecond
initialises the file
saves the data to a file in a single step
closes the file
saves the data to a file in a single step it expects
returns the time value of the
prepends the row with the current local timestamp
returns a row in the csv file
returns whether the given year is a leap year
returns the side of the last open position s
returns a post method
the input of the b first b parser
sets the mail sender used by this emailer
sets the from address in the email message
returns the strong current strong position size
returns the price of the book
creates the configuration according to the passed in parameters
gets the double price from the given
creates a composite configuration from the passed in configurations
combines the parameters from 2 configurations returning a new
get the profit made by closing a transaction given the current price
returns whether the context is closed
notifies all observers that a transaction has been closed and that a
generates by default a timestamp at 0700 and 1700 everyday
imports the prices
returns the bean id of the trading system in the configuration
generates by default a timestamp at 0700 everyday
updates the last open position side according to the side of the given
perturb an object field
checks that if x
using reflection perturbs all of the fields in the class and checks that
convenience method for adding a tester to the internal list
returns whether equals was called with a different class
returns whether equals was called with null
returns whether the equals method was called with the object itself
builds an iprice with the specified parameters
returns the some value
sets the some value
adds a set of transactions to the book with specific stop loss values
get the default product for testing purposes
set the product
counts the elements in the iterator
creates a transaction with the passed in attributes
returns a product parameter having as value the product created in the
creates and persists a set of products
creates a mock http client that returns the give http status when used
creates a mock http client that throws the given exception when used
this is called whenever the disc is either caught
sets the field of the strategy and all of its movement routines
sets the point that the player is moving to to an input point
sets the field to the input field
tells the off stack routine where to move the player into
sets the field to the input field
is used by the off stack to tell the routine when to cut
this is called whenever the disc is either caught
returns the opposing team
is called by the other team to get the current
returns true if a player is on the team
this is called whenever the disc is either caught
sets the field of the team and current strategy
returns a pseudo random uniformly distributed
pseudo randomly generates approximately a normally distributed
modifies the seed a using linear congruential formula presented in i the
returns a new
returns a new
returns the sign of this
returns a new
returns a hash code for this
if the precision already was calculated it returns that value otherwise
send a message to a node
this function sets the first event to a node
store in the local routing table the message the destination and how many
selects a random node from the current view
this function returns the degree of the cache in the message
this method starts a communication
notify a hit in the current node message table
performs the actual checks to compare query keys to the protocol own key
load the current node query data distribution structure
sets the node specific keys collection and their own frequency
gets the given value as a number
gets the given integer value
prints statistics information about a vector
gets the given real value
initializes a protocol vector with values in the range
sets values in a protocol vector by copying the values of another
prints statistics information about a vector
print statistics for an average aggregation computation
using an underlying
this is the standard method to define to process incoming messages
does not check if the index is out of bound
cuts off first 10 elements
removes n random nodes from the network
removes n random nodes from the network
returns a peer node which is accessible has ok fail state
normally it does the same as
does not check if the index is out of bound
convenience function for adding an element to the in view taking care of
might be less than cache size
removes the given node from the views view and subs
might be less than cache size
this is the entry point method
fired when the user clicks on the send button
fired when the user types in the name field
register the given namespace uri as the default namespace of the
register a namespace prefix to prevent prefixes for certain
convenience method for starting a visit
register a namespace prefix to prevent prefixes for certain
start the visit process with an arbitrary node within a document
prints out comments used for tokens and non terminals
test method for
test method for
initialize for jjtree
where the input jj files are located
generate the output file
test method for
test method for
test method for
this prints the banner line when the various tools are invoked
test method for
close the output file writing any necessary trailer information such as
test method for
test method for
test method for
test method for
test method for
test method for
test method for
test method for
test method for
a reimplementing of object
test method for
test method for
test method for
test method for
entry point of the visit
append a flat copy of the given node to the given parent node
rename of the overriden super implementation of
rename of the overriden super implementation of
this method is called for the objects default value property that is
the java script object constructor
hook for collecting incremental changes to the document tree
initializes this page context and attaches itself to the given document
creates a new dom level 3 compliant document node with a fully initialized
parse the contents of the given reader
central point for accessing network resources
writes this attribute to an output stream
writes any to a print writer
sets the type of the attribute
gets the type of the attribute
returns true if this object is equal to another
writes the notation for this cardinality value
sets the declaration fixed required implied
stores an array of items in the items array
returns the declaration
stores an item in the items array
sets the cardinality of the item
sets the default value
retrieves an item from the items array
writes a declaration for this notation
retrieves the cardinality of the item
writes out a declaration for this notation
sets the items in the notation list
writes out the keyword empty
writes out a declaration for this enumeration
stores an item in the notation list
writes out the value of this name
sets the external id
retrieves an item from the notation list
retrieves the external id
writes out a declaration for this sequence
writes out the pcdata keyword
writes out a public external id declaration
adds an element to the container
removes an element from the container
sets the public identifier
retrieves the public identifier
stores items in the container
writes out a declaration for this system id
writes out an entity declaration for this entity
stores an item in the container
sets the list of attributes
retrieves an item from the container
returns a specific attribute from the list
sets a specific attribute in the list
writes out an element declaration and an attlist declaration if
sets the instruction text
sets the system id
sets the is parsed flag
stores an attribute in this element
returns the is parsed flag
gets an attribute for this element
sets the content type of this element
returns the content type of this element
sets the external id for the entity
fetch the next request from the priority queue that matches the given
parses the dtd file and returns a dtd object describing the dtd
sets the entity ndata
returns the entity ndata
parses the dtd file and returns a dtd object describing the dtd
split the passed name into prefix and local part
prepares this visitor for reuse
at startup create and show the main frame of the application
convenience method to get the id of the inserted user
create or reuse a type reference for the given jdt type binding
create a field reference for the given polyglot field instance
create a type reference for the given polyglot type
create a method reference for the given polyglot method instance
set up the method map mapping
remove any phis that are dead assignments
initialize the type reference field for this instance
clear all optional cached data associated with this class
does the class file indicate that this class is a static inner class
if this is an inner class return the outer class
return the method that this call site calls
is this an invokestatic call site
most subclasses should override this
remove from s any class file module entries which already are in t
return the program counter bytecode index for a particular shrike instruction index
return the number of shrike instructions for this method
do a cheap pass over the bytecodes to collect some mapping information
set up mapping from type name to module entry
method get bytecode stream
get the contents of a jar file
by default a synthetic class is loaded by the primordial loader
return the program counter index into the methods bytecode for this call site
start tabulation with the initial seeds
restart tabulation from a particular path edge
handle lines 33 37 of the algorithm
method get number of parameters
clear all optional cached data associated with this class
does a particular summary edge exist
note this is inefficient
todo optimize this
initializer for ssa inference equations
create a dataflow equation induced by a given instruction
create a dataflow variable for each value number
invoked when a callee is processed with a particular entry fact
set up the analysis scope object
add the application modules to the analysis scope
handles method recursion by only collapsing cycles of recursive
returns code true code if
re initialize state for a new query
do all instance keys in p2set pass ikey pred
including first parameter this for non static methods
the calling loop must call this in each iteration
add pointer flow constraints based on instructions in a given node
add pointer flow constraints based on instructions in a given node
precondition may be live in some caller ik m
not including first parameter this for non static methods
set the default value for a value number
return the value number of the ith parameter
ensure that the symbol table has allocated space for the particular value number
not including first parameter this for non static methods
return the phi value that is associated with a given value number
this is ugly
returns the result
the existence of this is unfortunate
invalidate the cached ir for a method context pair
invalidate the cached
invalidate all cached information for a method context pair
clients should not call this
invalidate all cached information about a method
method get first instruction index
is this block marked as a catch block
this method is used during ssa construction
this method is used during ssa construction
return the ith def
is this a static call invokestatic in java
might this call dispatch to one of several possible methods i
is this a special call invokespecial in java
what is the declared return type of the called method
what method is the declared callee
is the given i a catch block
build the ir
finish populating the map of local variable information
initialize the all instructions field with every
what is the ith value number defined by instruction s
what is the ith value number used by instruction s
how many value numbers does instruction s def
how many value numbers does instruction s use
has exceptional edge src dest
has normal edge src dest
does this instruction represent a monitorenter
return the value number of the array reference
create mappings from call sites new sites and peis to instruction index
visit each normal non phi non pi non catch instruction in this ir
visit each instruction in this ir
return the instruction indices corresponding to a call site
return the new instruction corresponding to an allocation site
return the instruction index corresponding to an allocation site
this is space inefficient
evaluate a meet of machine states
evaluate a meet of machine states at a catch block
this object may understand a dispatch to class
if receiver is a
set the value of local i to symbol j
handle a predecessor when processing some tracked locations
this object may understand a dispatch to constructor
returns the stack height
initialize the visitors used to perform the flow functions
process a field access
this is here for convenience it makes sense for point and cone dispatch
subclasses must call this before calling add edge but after creating the nodes
return the entry basic block for the cfg
return the exit basic block for the cfg
record that basic block i is a catch block
returns the catch blocks
compute a mapping from instruction to basic block
compute outgoing edges in the control flow graph
compute outgoing edges in the control flow graph
return the type computed for a particular value number
create basic blocks for an empty method
set to null any slots in the array with phi instructions
add all classes in a class loader to the hierarchy
record that a klass implements a particular interface
add any exceptional edges generated by the last instruction in a basic block
correct pi instructions with appropriate basic block numbers
does a particular class contain implement a particular method
force eager construction of the entire sdg
force computation of all pdgs in the sdg
get the node with the given number if it already exists
should we cut off flow into node t when processing reflection
does c implement i
for an array class get the innermost type or null if its primitive
return an object which encapsulates the tabulation logic for the slice problem
does an expression c1 x c2 y typecheck
warning since were using a
should be invoked when the underlying call graph has changed
add a node to the ipcfg for each node in a cfg
this context gives no information
add interprocedural edges to nodes in callees of n
add edges to callees for return block and corresponding call block s
add a return statement
add a new statement of the given type
add a new statement of the given array type and length
add edges to nodes in callers of n
add a new statement of the given type
convert a normal or phi statement to an ssainstruction
record that a node is an entrypoint
create all nodes in this pdg
expands the form for final type var iterable
create nodes representing defs of formal parameters
subclasses may wish to override
create nodes corresponding to
create nodes in the graph corresponding to normal bytecode instructions
add a call to this entrypoint from the fake root method
initialize a scope for java analysis
initialize the standard 3 class loaders for java analysis
create the class loader for synthetic classes
return the information regarding the primordial loader
return the information regarding the extension loader
return the information regarding the application loader
return the information regarding the application loader
add a class file to the scope for a loader
add a class file to the scope for a loader
add a jar file to the scope for a loader
add a module to the scope for a loader
add all modules from another scope
add a module file to the scope for a loader
install a method target selector
install a class target selector
use distinct instance keys for distinct string constants
use distinct instance keys for distinct string constants
should analysis of lexical scoping consider call stacks
should analysis of lexical scoping consider call stacks
should global variables be considered lexically scoped from the root node
should global variables be considered lexically scoped from the root node
should call graph construction handle possible invocations of static initializer methods
should call graph construction handle possible invocations of static initializer methods
find or create an ir for the method using the
find or create a def use for the ir using the
record state for each method implemented by i key
add a constraint for each allocate
add a constraint for each invoke
handle accesses to static fields
add pointer flow constraints based on instructions in a given node
record that a particular points to set is represented implicitly
record that a particular points to set has been unioned with another
record points to sets that are roots of the transitive closure
keep this method private
wipe out the cached transitive closure information
unify the points to sets for the variables identified by the set s
record that a particular points to set is represented implicitly
giant switch statement
advance to the next operator
warning this is real slow dont use it anywhere performance critical
update side effect after unification
add constraints from newly discovered nodes
update the fixed points to set associated with this side effect
todo expand this api to differentiate between different array indices
handle assign of a particular exception instance into an exception variable
default context functions
side effect populates the smush map
a class is interesting iff we distinguish instances of the class
returns the method
note that by convention get parameter type 0 this for non static methods
throw an assertion if the instruction array contains a phi instruction
todo what is this doing document me
register the existence of a new synthetic class
return the class loader reference for this class loader
subclasses must register the context interpreter before building a call graph
lookup bypass rules based on a method reference only
method get bypass
method extract package
was the last cancel state due to a timeout
read is into bytes
force the reference to be cleared collected
process an element indicating an athrow
special method that is called by java deserialization process
return the name of the raw type for this signature
process an element which indicates this method is poison
this method does not include the implicit this parameter
method class loader name2 ref
method class loader name2 ref
record that weve discovered a node
expands the given tree node rec levels
returns an image icon or null if the path was invalid
returns the plugins resource bundle
subclasses can override as needed
is n a call to primitive within our synthetic modeling code
set the class file format major version
set the class file format minor version
add a utf8 string to the constant pool if necessary
add an integer to the constant pool if necessary
add a float to the constant pool if necessary
add a long to the constant pool if necessary
add a double to the constant pool if necessary
add a string to the constant pool if necessary
add a class to the constant pool if necessary
add a field ref to the constant pool if necessary
add a method ref to the constant pool if necessary
add an interface method ref to the constant pool if necessary
add a name and type to the constant pool if necessary
set the access flags for the class
set the constant pool index for the name of the class
set the constant pool index for the name of the superclass
set the constant pool indices for the names of the implemented interfaces
set the name of the class
set the names of the implemented interfaces
add a method to the class
add constraints when the interpretation of a node changes e
add a field to the class
add a method to the class
add a field to the class
add an atttribute to the class
set the raw table entries
set the raw local variable table values
set the list of exceptions that can be thrown
get the utf8 constant pool value where the constant pool offset is given
set the index of the constant pool item holding the source file name
set the constant value to a long
set the constant value to a double
set the constant value to an int
set the constant value to a float
set the constant value to a string
set the index of the constant pool item holding the constant value
set the bytecodes for this code attribute
set the raw handler data for this code attribute
set the attributes of this code
point iter at the list of attributes for this code
the attribute iterator must be valid
the attribute iterator must be valid
the attribute iterator must be valid
the attribute iterator must be valid
the attribute iterator must be valid
the attribute iterator must be valid
the attribute iterator must be valid
point iter at the list of attributes for field f
point iter at the list of attributes for method m
point iter at the list of attributes for the class
java does not permit this
get the next class to be instrumented
update the original class with some method changes
update the original class with some method changes
controls whether to print line number information
controls whether to print all the constant pool entries
indicate that the method should be deleted from the class
do something to every method in the class
get the current state of method i
get the original code resource for the method
replace the code for method i with new code
check whether any methods in the class have actually been changed
delete the class information from the store
use class hierarchy information in h
print the path to the given stream if there is one
try to verify the method
verify the method and compute types at every program point
only called from create class declaration
get the annotation for the given key
set the annotation for the given key
do the work of generating new bytecodes
write the disassembly to a stream
write the disassembly to a stream
get the output bytecodes and other information for the method
emit a label definition at the current point in the code
emit an instruction at the current point in the code
emit a list of instructions at the current point in the code
this must be called before inserting any patches
this must be called after inserting any patches
allocate a fresh label
insert code to be executed whenever the method is entered
insert code to be executed before the instruction
insert code to be executed after the instruction
insert code to replace the instruction
get the underlying zip entry corresponding to this resource
a method exception handler handles exceptions generated anywhere in the method
open a jar zip file
this method inserts code that will be placed after the method body
set the file in which instrumented classes will be deposited
add a jar file containing source classes to instrument
add a jar entry containing a source class to instrument
add a class file containing a source class to instrument
add a directory containing class files to instrument
set the current editor and instruction index for this visitor
start traversing the source class list from the beginning
get the name of the resource containing the last class returned
insert a patch after the current instruction in the code
returns the file we are storing classes into
insert a patch before the current instruction in the code
replace the current instruction in the code with a patch
add an exception handler to the current instruction
set the jar comment for the output jar
skip the last class returned in every future traversal of the class list
add a raw zip entry to the output jar
complete and flush the entry initiated by add output jar entry
call this when youre done modifying classes
here we need an edge transfer function for call to return edges see
we dont need a merge function the default unioning of tabulation works fine
test for bug 1714480 reported oom on
test that calls to init methods are treated specially
test that get method works even if a declared ancestor interface doesnt
a simple test of the graph bit vector dataflow system
test the mutable shared bit vector int set implementation
test the mutable sparse int set implementation
test the bimodal mutable sparse int set implementation
test the bit vector int set implementation
test the semi sparse mutable int set implementation
test the mutable sparse long set implementation
have we already processed a particular bundle description
convert this path to a wala analysis scope
model the html dom
store the cast nodes used to represent the loop variable for the
adds a node to the mapping if it is not present yet
determines the label of a node in the mapping
determines the node associated with a given label
should the analysis model the semantics of function
returns the plugins resource bundle
adds the given source module to the source loaders module list
adds the given compiled module to the application loaders module list
adds the given module to the primordial loaders module list
is n our synchronized block node or the synchronized block node of a
recursively traverse a module and add entrypoints from application client archives
analyze each call to command
todo cache this
add an entrypoint which initializes the j2 ee container model
create a field reference from a container managed field attribute
create a method reference from a finder
create a method reference from a container managed field attribute
create a method reference from a container managed field attribute
return the information regarding the primordial loader
return the information regarding the extension loader
return the information regarding the application loader
return the information regarding the application loader
add a class file to the scope for a loader
each language can specify whether a particular field name should be stored
establish a mapping between some object node and the ast node ast
construct a context for a file entity or delegate by default
construct a context for a type entity or delegate by default
construct a context for a code entity or delegate by default
construct a context for a local scope node or delegate by default
construct a context for an unwind node or delegate by default
get the parent entity for a given entity
set the parent entity for a given entity
entity processing hook sub classes are expected to override if they
enter the entity visitor
post process an entity after visiting it
visit any entity
leave any entity
get the parent entity for a given entity
visit a file entity
leave a file entity
set the parent entity for a given entity
visit a field entity
entity processing hook sub classes are expected to override if they introduce new
leave a field entity
visit a type entity
leave a type entity
if this returns true new global declarations get created for any attempt
visit a function entity
leave a function entity
visit a script entity
if this returns true then attempts to lookup non existent names return
leave a script entity
node processing hook sub classes are expected to override if they
enter the node visitor
post process a node after visiting it
visit any node
leave any node
visit a function expr node
leave a function expr node
visit a function stmt node
get the value number for a name defined locally i
leave a function stmt node
visit a local scope node
leave a local scope node
visit a block expr node
leave a block expr node
visit a block stmt node
leave a block stmt node
visit a loop node
visit a loop node after processing the loop header
leave a loop node
visit a get caught exception node
leave a get caught exception node
visit a this node
node processing hook sub classes are expected to override if they
leave a this node
visit a super node
node processing hook sub classes are expected to override if they
visit a call node
leave a call node
visit a var node
leave a var node
visit a constant node
leave a constant node
visit a binary expr node
leave a binary expr node
generate instructions to check if ref has field storing answer in result
visit a unary expr node
leave a unary expr node
run the collector on an entity
visit an array length node
creates a reference to a global named global name
leave an array length node
visit an array ref node
leave an array ref node
visit a decl stmt node
leave a decl stmt node
visit a return node
leave a return node
visit an ifgoto node
leave an ifgoto node
visit a goto node
visit a label stmt node
leave a label stmt node
visit an if stmt node
visit an if stmt node after processing the condition
visit an if stmt node after processing the true clause
leave an if stmt node
visit an if expr node
kills the definitions variables written to
generates variables that are read skips constants
visit an if expr node after processing the condition
visit an if expr node after processing the true clause
leave an if expr node
visit a new node
leave a new node
visit an object literal node
visit an object literal node after processing the i th field initializer
leave an object literal node
visit an array literal node
visit an array literal node after processing the array object
visit an array literal node after processing the i th element initializer
leave a array literal node
visit an object ref node
leave an object ref node
visit an assign node
leave an assign node
visit an array ref assignment node after visiting the rhs
visit an array ref assignment node after visiting the lhs
visit an array ref op assignment node after visiting the rhs
visit an array ref op assignment node after visiting the lhs
visit an object ref assignment node after visiting the rhs
visit an object ref assignment node after visiting the lhs
visit an object ref op assignment node after visiting the rhs
visit an object ref op assignment node after visiting the lhs
subclasses should override to perform actions after cast and ir have been
visit a block expr assignment node after visiting the rhs
translate all relevant entities in the module to cast storing the results
visit a block expr assignment node after visiting the lhs
visit a block expr op assignment node after visiting the rhs
subclasses can override if needed
visit a block expr op assignment node after visiting the lhs
visit a var assignment node after visiting the rhs
visit a var assignment node after visiting the lhs
visit a var op assignment node after visiting the rhs
visit a var op assignment node after visiting the lhs
visit a switch node
some setup which occurs only before the first solve
visit a switch node after processing the switch value
leave a switch node
visit a throw node
add a step to the work list
add all to the work list
call this method when the contents of a variable changes
leave a throw node
add a step with zero operands on the right hand side
visit a catch node
add a step with one operand on the right hand side
add an equation with two operands on the right hand side
add a step with three operands on the right hand side
leave a catch node
update the worklist assuming that a particular equation has been re evaluated
number the graph in topological order
visit an unwind node
re order the step definitions
leave an unwind node
visit a try node
a method that will be called every n evaluations
subclasses should override as desired
visit a try node after processing the try block
subclasses should override as desired
evaluate this equation setting a new value for the
return the left hand side of this equation
does this equation contain an appearance of a given cell
leave a try node
visit an empty node
check that this graph is well formed
leave an empty node
evaluate this equation setting a new value for the left hand side
does this equation contain an appearance of a given cell
visit a primitive node
leave a primitive node
visit a void node
leave a void node
copies the values of the bits in the specified set into this set
if appropriate change the representation of v
visit a cast node
leave a cast node
use with care
visit an instance of node
todo optimize me
todo optimize me
add an object to the set of mapped objects
replace a in this mapping with b
leave an instance of node
add an object to the set of mapped objects at index i
use with extreme care doesnt detect concurrent modification exceptions
add all elements from another int set
add all elements from another int set
add all elements in bitset b to this bit set
add all bits in bit vector b to this bit set
add an object to this bit set
remove an object from this bit set
does this set contain a certain object
does this object hold the same bits as other
internal optimized form
set all the bits to 0
set all the bits to 1
perform intersection of two bitsets
perform the difference of two bit sets
this implementation must not despoil the original value of this
record a delayed edge addition from src to dst
make sure we can store to a particular index
invoke an action on each element of the set
add an integer value to this set
remove an integer from this set
interset this with another set
add any delayed edges to the exit block
expand this bit vector to size new capacity
add all elements from another int set
sets a bit
clears all bits
clears a bit
gets a bit
logically not this bit string
logically ands this bit set with the specified set of bits
logically ors this bit set with the specified set of bits
logically xors this bit set with the specified set of bits
check if the intersection of the two sets is empty
copies the values of the bits in the specified set into this set
how many bits are set
calculates and returns the sets size in bits
this is slow
add an integer value to this set
remove an integer from this set
this implementation must not despoil the original value of this
add all members of set to this
intersect this with another set
invoke an action on each element of the set
associate n with the current block and update the current unwind state
indicate whether the specified element was ever in the queue
use with care
return the current number of enqueued objects the number of objects that
returns whether or not this queue is empty no enqueued elements
indicate whether the specified element is currently in the queue
remove the next object from the queue and return it to the caller
returns the next object in the queue but leaves it in the queue
switch backing implementation from a small map to a hash map
sjf i know this is uglified
todo this can be optimized
this iteration will cover all indices even when remove is called while
pop the stack
make sure we can store to a particular index
spawn a process to execute the given command
wait for the spawned process to terminate
compute the classpath for the spawned process
set input which will be fed to the launched processs stdin
this is implemented as a shortcut for efficiency
note that this variable appears on the rhs of an equation
note that this variable appears on the lhs of an equation
remove the edge that indicates this variable is succd by a certain equation
remove the edge that indicates this variable is predined by a certain
add this edge unconditionally setting it as the next successor
determine whether there are any more sccs remaining in this enumeration
return whether there are any more nodes left to enumerate
find the next graph node in discover time order
return whether there are any more nodes left to enumerate
method set pending children
find the next graph node in discover time order
subclass constructors must call this
subclasses must call this in the constructor
subclass constructors must call this
return whether there are any more nodes left to enumerate
is node dominated by master
return the immediate dominator of node
mark the current position as the position for the instruction
evaluate this equation setting a new value for the
does this equation contain an appearance of a given cell
this recursive method performs the path compression
add all the bits in b to this bit vector
add all the bits from other to this bit vector
does this variable have the same value as another
this final step sets the final dominator information
set a particular bit
is a particular bit set
add all integers from the set b
add all integers from the other int set variable
set a particular bit
is a particular bit set
classpath set target classpath not set
classpath set target classpath not set
classpath not set target classpath set to empty value
classpath not set target classpath set to illegal value
both classpath and target classpath set
classpath not set target classpath set
target classpath set to default classpath
note field type is not considered in equals and hash code
visit an instance of node
leave an instance of node
non static class
non static class
non static class
indirect ctor call to string builder
add y to the count for x
initial state of the base safe problem
allow solver to add a result for a processed instance
merge states of dfa
updates dfa to contain accepting state and have add missing transitions to
completes a dfa with a single accepting error state
removes a node from the dfa
returns a string describing parse exception details
warning in xml parsing
error in xml parsing
fatal error in xml parsing
returns true if file is a directory or is an xmi file
returns true if file is a directory or is an xmi file
max heap size in mb
return paths with prefix other than the one provided
reset all state to free up space
return paths with prefix other than the one provided
does the path set contain a give access path
adds a path to the access path set
removes a path from the access path set
is this path an anchored path i
get the path element at the head of the accesspath
length of access path
get path element at the given index
return a string representation of the access path
is this path equals to another object
kill all paths of s that start with x
kill all paths of s that start with some x in roots
add a path x
add a path x
add a path x
add a path x
generate an abstract trace of events instead of normal typestate
record a particular factoid holding an abstract trace reaches the program
persist the collected factoids to a file
is a a subset of b
have we recorded the fact that r i j holds
have we recorded the fact that r i j does not hold
record the fact that r i j does not hold
record the fact that r i j does hold
determine when extend should be avoided
name required for reporting statistics
unconditionally unsoundly perform strong update
return a clone of this trace but marked as having exited
merge all state from t into this
todo this is a quick and dirty hack
might pointers x and y be aliased according to base pointer analysis
create the analysis domain
create a new flow function to handle dataflow representing a particular
a normal intraprocedural edge may cause a transition to the initial state
return a string representation of the tuple
is this tuple equal to another object
should this function use strong update to kill the input fact
return the domain index of a give instance state
no ordering implemented
is a new instruction allocating an individual of the tracked type
subclasses will override as desired
handle allocation instruction
throw out must not paths that cant happen according to pointer analysis
kill any locals from the node n in the set s
set up the mapping of state names to istates
returns the number of elements in the dfa alphabet
gets the event corresponding to a particular event name
returns the rule encapsulated
returns the number of states in the dfa
gets the automaton state from a given state name
gets access to automaton initial state
returns a single successor for a given state and event
initialize the typestate property find the iclass of the tracked type
check whether some targets of this event are accepting that is there
build a supergraph
initialize the no collapse set to contain all call graph nodes
todo this should be refactored
special treatment for call edge from fake root method
todo this is inefficient
compute a map cgnode ievent
a temporary migration aid
initialize the ordinal set which identifies tracked instances
in order to allow strong updates wed better not slice selectively at call
should this function use strong update to kill the input fact
return the domain index of a give instance state
create a new flow function to handle dataflow representing a particular
returns a textual representation of the typestate solver kind encapsulated
does the property receive i
initializes the type on which type state automaton is defined
create the nodes
simlifies the aggregated flow function to
add an object to the set of mapped objects
find or create a factoid if it doesnt already exist
a horrible hack todo fix the class hierarchy
add a node to the ipcfg for each node in a cfg
subclasses should override as desired
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
the result may contain x
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
kills the definitions variables written to
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
preparing system for sliding
visits the given type specific ast node
start the sliding
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
init or update the system
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
update the ast
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
save the call to the query or the variable that hold its result
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
prepare the original method to be inlined
visits the given type specific ast node
visits the given type specific ast node
check the correctness of the functions we created
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
declare a new variable in the first statement in a block
visits the given type specific ast node
set which algorithm will be execute and need to analyze
perform the refactoring and return the change object
add separate query from modifier input page to this wizard
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
only visiting the needed method
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
this function is called from every visit function
visits the given type specific ast node
warning since were using a
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
create all nodes in this pdg
create nodes in the graph corresponding to normal bytecode instructions
add replace temp with query input page to this wizard
reset the document by undo list
update the ast
activate a composite change one by one
called when a request is placed to load a class
called after a class has been successfully loaded
called before a class is resolved
called after a class is resolved
the method finds the application classes on the target class path
prevents code system
note names have to be in source format e
if set only classes in these packages are loaded by this class loader
define packages for which loading is forwarded to parent loader
contained classes will not be instrumented but loaded by customized class loader
report the nodes and edges in the call graph to a printer
edges within sequence of edges can be separated by code icall graph
same as code add edge iedge code but for sets
adds a node to the graph if not null and not external
removes the return type from the end of every contained node signature
note needs to be called using reflection otherwise the standard classloader is used
loads the application classes with a specified class loader
methods with no callsites can be skipped after one execution
finds the method data object corresponding to the static initializer
method called by ant framework in order to execute this particular task
specifies if in the case of an archive file dependent jars should be
specifies the directories where safe will walk through to collect byte code
specifies if analysis for j2 ee modules is close world or not
specifies if end user wants to create domo report
specifies if end user wants to dump xml files for asts parsed during
specifies a string containing globally a sequence of main classes used as
specifies the modules that end user wants to analyze
specifies the directories where to load the modules
specifies the output directory where all generated files will be located by
specifies if end user wants to dump typestate automaton in a dot file
specifies rules directories where to load safe emf rules
specifies the regular expression or list of qualified names identifying the
sets the maximal path length for must accesspath solvers
specifies if end user wants to dump statistics results during structural
specifies if end user wants structural analysis activated
specifies the structural rules end user wants especially load
specifies if end user wants to dump some time and memory tracking results
specifies the timeout for limit of processing time of each rule
specifies if end user wants typestate analysis activated
specifies the call graph kind to build for typestate analysis
specifies the typestate rules end user wants especially load
expected results due to weak updates any use of these methods should
expected result warning never get output stream get input stream from a
expected result no alarms reported
warning always connect a piped input stream when using default constructor
expected results warning always connect a piped input stream when using
warning always connect a piped output stream when using default
warning always connect a piped output stream when using default
unique solver reports the error as expected
this produces a false alarm with unique engine since weak updates have to
this produces no false alarm with mmn engine the engine gets the required
reset cached info about value numbers that may have changed
record that in entity e the access is performed
create a field reference for the given polyglot field instance
create a method reference for the given polyglot method instance
find any ast lexical access instructions in instrs with a zero access count
method get invocation string
set up mapping from type name to module entry
record that variable n1 in1 is the same as variable n2 in2 where
todo refactor to avoid allocation
todo refactor to avoid allocation
set up the analysis scope object
add the application modules to the analysis scope
handles method recursion by only collapsing cycles of recursive
add constraints to represent the flow of exceptions to the exceptional
add pointer flow constraints based on instructions in a given node
add constraints for a particular basic block
add pointer flow constraints based on instructions in a given node
if file extension is not provided use system default
convert this path to a wala analysis scope
return the value number of the ith parameter
ensure that the symbol table has allocated space for the particular value
return the phi value that is associated with a given value number
method get first instruction index
is this block marked as a catch block
is the given i a catch block
returns the bb
has exceptional edge src dest
has normal edge src dest
return the actual honest to goodness ir object used to compute the
add a step with zero operands on the right hand side
add an equation with two operands on the right hand side
does this equation contain an appearance of a given cell
giant switch statement
this object may understand a dispatch to class
if receiver is a
im not using clone because i dont want to necessarily inherit the
set the value of local i to symbol j
assign rval to nm as appropriate depending on the scope of ls
initialize the visitors used to perform the flow functions
return the type computed for a particular value number
clear out null refs
compute outgoing edges in the control flow graph
add all classes in a class loader to the hierarchy
correct pi instructions with appropriate basic block numbers
method get last instruction index
add a node to the ipcfg for each node in a cfg
add interprocedural edges to nodes in callees of n
add edges to callees for return block and corresponding call block s
add edges to nodes in callers of n
add a return statement
add a new statement of the given array type and length
add a class file to the scope for a loader
add a jar file to the scope for a loader
add a module to the scope for a loader
add all modules from another scope
add a module file to the scope for a loader
record state for each method implemented by i key
add pointer flow constraints based on instructions in a given node
is s is a getstatic or putstatic then potentially add the relevant
add constraints for a particular basic block
if p is unified returns the representative for p
keep this method private
record that a particular points to set is represented implicitly
record that a particular points to set has been unioned with another
record points to sets that are roots of the transitive closure
record that a particular points to set is represented implicitly
add constraints from newly discovered nodes
todo expand this api to differentiate between different array indices
translate module represented by
side effect populates the smush map
record if this is a factory method meaning it returns some object which
lookup bypass rules based on a method reference only
record that the currently active new instance may allocate a particular
begin processing of a method
are we allowed to allocate for analysis purposes an instance of a given
process an element indicating an athrow
union the equiv classes of x and y
add an object to the set of mapped objects at index i
add all elements from another int set
not very efficient
this implementation must not despoil the original value of this
invoke an action on each element of the set
add all elements from another int set
add all elements from another int set
sets a bit
clears a bit
gets a bit
logically ands this bit set with the specified set of bits
check if the intersection of the two sets is empty
add an integer value to this set
this implementation must not despoil the original value of this
interset this with another set
invoke an action on each element of the set
add constraints when the interpretation of a node changes e
use with care
switch backing implementation from a small map to a hash map
method set pending children
subclass constructors must call this
set a particular bit
todo i hate that this exists
launch the java process
wait for the spawned process to terminate
compute the classpath for the spawned process
set the constant value to a string
this method allows direct read only access to the constant pool for the
notify the compiler that the constants appearing in the constant pool reader
add a class to the constant pool if necessary
calling this means that methods without line numbers get fake line numbers
append some class information to the store
emit an instruction with some exception handlers at the current point in
emit a list of instructions with some exception handlers at the current
insert code to be executed after the instruction
this installs a manifest builder callback that this class will notify
an instruction exception handler handles exceptions generated by a
this class represents a resource which can be opened and read either a
a method exception handler handles exceptions generated anywhere in the
indicate whether classes which are not modified will be put into the output
apply visitor v to each instruction in the code for the purpose of
call this when youre done modifying classes
test for bug 1714480 reported oom on
test that calls to init methods are treated specially
test that get method works even if a declared ancestor interface doesnt
a simple test of the graph bit vector dataflow system
test the mutable shared bit vector int set implementation
test the mutable sparse int set implementation
test the bimodal mutable sparse int set implementation
test the bit vector int set implementation
test the semi sparse mutable int set implementation
test the mutable sparse long set implementation
establish a mapping between some object node and the ast node ast
construct a context for a file entity or delegate by default
construct a context for a type entity or delegate by default
construct a context for a code entity or delegate by default
construct a context for a local scope node or delegate by default
construct a context for an unwind node or delegate by default
entity processing hook sub classes are expected to override if they
enter the entity visitor
post process an entity after visiting it
visit any entity
leave any entity
entity processing hook sub classes are expected to override if they introduce new
visit a file entity
leave a file entity
visit a field entity
leave a field entity
visit a type entity
leave a type entity
visit a function entity
leave a function entity
visit a script entity
leave a script entity
node processing hook sub classes are expected to override if they
enter the node visitor
post process a node after visiting it
visit any node
leave any node
visit a function expr node
leave a function expr node
visit a function stmt node
leave a function stmt node
visit a local scope node
leave a local scope node
visit a block expr node
leave a block expr node
visit a block stmt node
leave a block stmt node
visit a loop node
visit a loop node after processing the loop header
leave a loop node
node processing hook sub classes are expected to override if they
visit a get caught exception node
leave a get caught exception node
node processing hook sub classes are expected to override if they
generates variables that are read skips constants
visit a this node
leave a this node
visit a super node
leave a super node
visit a call node
leave a call node
visit a var node
leave a var node
visit a constant node
leave a constant node
visit a binary expr node
leave a binary expr node
visit a unary expr node
leave a unary expr node
visit an array length node
leave an array length node
visit an array ref node
leave an array ref node
visit a decl stmt node
leave a decl stmt node
visit a return node
leave a return node
visit an ifgoto node
leave an ifgoto node
visit a goto node
visit a label stmt node
leave a label stmt node
visit an if stmt node
visit an if stmt node after processing the condition
visit an if stmt node after processing the true clause
leave an if stmt node
visit an if expr node
visit an if expr node after processing the condition
visit an if expr node after processing the true clause
leave an if expr node
visit a new node
leave a new node
visit an object literal node
visit an object literal node after processing the i th field initializer
leave an object literal node
visit an array literal node
visit an array literal node after processing the array object
visit an array literal node after processing the i th element initializer
leave a array literal node
visit an object ref node
leave an object ref node
visit an assign node
leave an assign node
visit an array ref assignment node after visiting the rhs
visit an array ref assignment node after visiting the lhs
visit an array ref op assignment node after visiting the rhs
visit an array ref op assignment node after visiting the lhs
visit an object ref assignment node after visiting the rhs
visit an object ref assignment node after visiting the lhs
visit an object ref op assignment node after visiting the rhs
visit an object ref op assignment node after visiting the lhs
visit a block expr assignment node after visiting the rhs
visit a block expr assignment node after visiting the lhs
visit a block expr op assignment node after visiting the rhs
visit a block expr op assignment node after visiting the lhs
visit a var assignment node after visiting the rhs
visit a var assignment node after visiting the lhs
visit a var op assignment node after visiting the rhs
visit a var op assignment node after visiting the lhs
visit a switch node
visit a switch node after processing the switch value
leave a switch node
visit a throw node
leave a throw node
visit a catch node
leave a catch node
visit an unwind node
leave an unwind node
visit a try node
visit a try node after processing the try block
leave a try node
visit an empty node
leave an empty node
visit a primitive node
leave a primitive node
visit a void node
leave a void node
visit a cast node
leave a cast node
visit an instance of node
leave an instance of node
marshall a collection of entities
marshall a collection of entities
marshall a collection of entities
get route identifier
set route identifier
start a streaming track
start a new track
pause a track
stop a track
stop the service if it is necessary
indicates if the controller is recording a new track
get the altitude of the placemark
returns the current point
get the placemark name
obtain the identifier of a route of the position indicated
get the placemark description
obtain the first geo points of the route
generate the kmz of the specified route
update the placemank information
upload a route to the server
delete the placemank
obtain the last geo points captured of the route
delete a route
show any error detected when the thread was uploading the route
obtain the last geo points of a finished route
delete the current route
save the properties of the route
save the photo to its permanent path
get the video identifier
set the photos of the route
get the location
get the video description
set the placemarks of the route
set the location
get the video path
set the points of the route
delete the photo
save the video to its permanent path
constructor of the class
set the distance of the route
set the desn of the route
generate a string representation of the class
get the photo identifier
add a new point to the route
set an username and a password for the current session
get the photo description
get the username
set the password
get the photo path
get the description of the route
delete the photo
get the type of the route
get the desn of the route
add a new point to the route
display the activity to record a new video
set the recorded video to be shown
take a new photo
show the photo in the view
obtain the preferred localization system
save the name and the password to be used in the current session
inserts a new photo in the table
delete the user information from the preferences
insert the path in a existing photo
retrieves a route from the database
get the current location
update the information of a photo
start a track ask for updates to the listener of the positioning system
stop a track ask for stopping updates to the listener of the positioning
set the photo to be uploaded
retrieves a route with all the associated information from the database
obtain the path of a photo
insert an empty route in the database
mark all the photos as uploaded
generate and save a kmz of a route
initial marker and track overlay setup
prepare a temporal kmz
delete a single photo
delete the temporal directory
inserts a new video in the table
insert a new point in a route of the database
update route overlays to display new points and markers added since last refresh
deltete all the photos of a route
updates the information of the video
updates the information of the video
update the information of the route
insert the path of an existing video
obtain the path of a video
update the details of the route
opens the database
inserts a new point in the table
mark all the videos as uploaded
the first geopoint of the route
deletes a single video of the table
obtaint the last point of a route
obtaint the last geopoint of a route
deletes all the videos of a route
inserts a new placemark in the table
update the information of a placemark
obtain the first point of the route with geo point format
set the place to be uploaded
insert a route with the default name the current date
insert a route
update the information of the route
mark all the placemarks as uploaded
obtain the last point of the route with geo point format
update the details of a route
deletes a single placemark
delete a route
deletes all the placemarks of a route
query if the server route has been downloaded before
set the server identifier of a route
query if the server route has been downloaded before
creates a new placemark and associates it with the last point
retrieves a placemark from the database
update the information of a placemark
mark a placemark to be uploaded
deletes a placemark from the database
creates a new photo associates it with the last point and prepares the
save a photo in the file system
retrieves a photo from the database
update the information of the photo
mark a photo to be uploaded
deletes a photo from the database and from the file system
creates a new video associates it with the last point and prepares the
save the video move the video from the temporal path to his path
retrieves a video from the database
update the information of a video
deletes a video from the database and from the file system
calculates the cutoff frequency above which the open hole correction is not valid
effective wall thickness i
called when a change to the specification needs rendering
called when a change to the specification needs rendering
internal version do the bare minimum
method to avoid creating duplicate instances when deserializing the object
externally called we must ensure that there is always a valid spec
this method initializes this
implement event handling method of listener
fires a selection changed event to all added selection changed listeners
this method will delete n oldest world models stored in the
in this function first of all a singleton object of the settings values
we use this method to send a message to rcssserver3d
after finishing the game it is better to close all opened connections
with this method we get next word from current position
this method is used to printing out the attributes of the class
this method is used to printing out the attributes of the class
we can get the next character from current position in this method
a constructor to set the values in the existing object
a constructor to set the values in the existing object
we can get the n th next character from current position without moving
this is a method in first prototype form for moving left shoulder
this is a method in first prototype form for moving right shoulder
this is a method in first prototype form for rotating left brachium
this method get three next double from the current position and return
after each simulation step we should call this method to reset pointer
this is a method in first prototype form for rotating right brachium
this is a method in first prototype form for moving left talus
this is a method in first prototype form for moving right talus
this is a method in first prototype form for moving left leg
this is a method in first prototype form for moving right leg
this is a method in first prototype form for moving left knee
this is a method in first prototype form for rotating left hip
this is a method in second prototype form for moving left shoulder
this is a method in second prototype form for rotating left brachium
this is a method in second prototype form for moving left elbow
this is a method in second prototype form for moving right elbow
this is a method in second prototype form for moving left talus
this is a method in second prototype form for moving right talus
this is a method in second prototype form for moving left leg
this is a method in second prototype form for moving right leg
this is a method in second prototype form for moving right knee
this is a method in second prototype form for rotating left hip
this is a method in third prototype form for moving left shoulder
this is a method in third prototype form for rotating left brachium
this is a method in third prototype form for rotating right brachium
this is a method in third prototype form for moving left elbow
this is a method in third prototype form for moving right elbow
this is a method in third prototype form for moving right talus
this is a method in third prototype form for moving left leg
this is a method in third prototype form for moving left knee
this is a method in third prototype form for moving right knee
this is a method in third prototype form for rotating left hip
this is a method in third prototype form for rotating right hip
this is a method in fourth from of prototype for rotating left brachium
this is a method in fourth from of prototype for moving right brachium
this is a method in fourth from of prototype for moving left elbow
this is a method in fourth from of prototype for moving right elbow
this is a method in fourth from of prototype for moving left leg
this is a method in fourth from of prototype for moving left knee
this is a method in fourth from of prototype for moving right knee
this is a method in fourth from of prototype for rotating left hip
this is a method in fourth from of prototype for rotating right hip
in this method we set 0
after each step we should clear the list of the command
check that specified
get bytecode for predefined types except those were compiled
return a switch key that is used to save us from using a
a method like those in
a method like those in
a method like those in
do not use this method
this procedure is only called to verify the edge case in the
this should only be called from
3 4 phases to building a context
scans compilation unit for privilaged aspects and
packs and centers this component
create a javax
first packs and then shows this component
returns the value of the field on entry to the joinpoint
returns null when calling static for consistency with get executing object
in a static initializer or a static method get executing object returns null
a method to update the database with only one file
creates new editor popup
invoked when a mouse button has been released on a component
invoked when a mouse button has been pressed on a component
invoked when the mouse has been clicked on a component
start a set of results
shuts down the editor and all its components
constructs an editor popup
displays a an emplty editor window
this method is called whenever the observed object is changed
creates new ty ru ba result parser
configures an executor object
creates a new prolog list
appends to the classpath programmatically
stops the execution of a query abruptly
returns the name of this compiler pass
returns the name of this compiler pass
tests the equality of two result objects
finds all files with a certain extension pre specified to
init the game
free the current game state and restart the game in
create all screens of the game
returns the current menu type of the game
set the current menu type of the game
internal method to calculate previous menu command
updates the loading screen state
internal method to calculate next menu command
called to render the menu on screen
deactivate the game screen
creates and starts the loading thread
draws the screen title
draws the help screen
method to draw the softkeys
internal method to animated menu
this method is responsible for loading resources on a secondary
scroll the screen up
set the credits text
internal method that draw the menu options
returs true if the loading thread is being executing
called to adjust sound string
stops the loading thread
free the memory alloced the internal game controller instance
sets the dimention of hte view window
put the game in the paused state
put the game in the playing state
returns the player to the start of the level without restart its life
checks the result of a http request
updates the game state
changes the current screen to the one informed
indicates that an error has happen
return the data received in the notify sucess method
shows the last screen shown
sets this calendars current time from the given long value
gets this calendars current time as a long expressed in milliseconds
creates an object of type image based on this pngs data
scroll the screen up
changes made to the
retrieves the palettes size
finds the location of a desired color
translates the layer to a new coordinate
use only after a find color call
changes an entry in the palette to a desired color
changes an entry in the palette to a desired color
updates key states according to key released events stored during
changes multiples entries in the palette to a desired colors
frees all instances of objects created by this object
returns the current screen
returns the required screen
associates an animated tile with the specified static tile
called when midletcontroller receives a pause app message
gets the tile referenced by an animated tile
resume the actual screen state
gets the index of the static or animated tile currently displayed in a
gets the height of a single cell in pixels
this method is called when the canvas returns to the display
gets the width of a single cell in pixels
gets the number of columns in the tiled layer grid
gets the number of rows in the tiled layer grid
sets the contents of a cell
called when someone calls change screen method
returns the index before to that passed by parameter
returns the game object horizontal coordinate in pixels
returns the game object vertical coordinate in pixels
set the game object vertical and horixontal coordinate in pixels
returns if the reference pixel of the object is inside the window
set the visible value of game object
returns the current sprite index
returns the index after to that passed by parameter
sets the game object current sprite index
returns the current sprite
set the game object sprite
updates the game object state
retrieves the tile at the given positions
paints the game components in the game graphics object
allow the game object to return the current damage depending its
called at the end of any sprite animation
notifies the game object that it is colliding with other game object is
return the correct key states depending on the value
clean the instance of the layer
creates a new sprite with the specified dimensions
show the menus of the game
called to hide the actual menu
play a specific sound
allocates any necessary resources to be used by the loading screen
release the sound resources of all sounds
unloads any resource used only by the loading screen
release the sound resources
this method is responsible to draw the background
finishes this midlets execution
starts the thread running game loop
stops the thread running game loop
returns the current fps rate frames per second
returns the unique instance of the main canvas class
set the current menu type of the game
internal method that draw the menu options
deactivate the game screen
put the game in the playing state
updates the game state
starts this midlets execution
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the kind feature
this adds a property descriptor for the symbol feature
this adds a property descriptor for the pin count feature
this adds a property descriptor for the port reg feature
this adds a property descriptor for the index feature
this adds a property descriptor for the tris reg feature
this adds a property descriptor for the pin index feature
this adds a property descriptor for the config feature
this adds a property descriptor for the latch reg feature
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
this sets the selection into whichever viewer is active
creates a new adapter for an object of class
creates the meta model objects for the package
decisecond tick notification
resets the screen to its starting condition
handle the pressing of the mouse button
handle the pressing of the mouse button
mouse released event from mouse listener
mouse moved event from mouse motion listener
sets the four images the user selects from
returns the id of the image selected 0 3 or 1 if none
resets the screen to its starting condition
handle the pressing of the mouse button
mouse released event from mouse listener
mixes up the puzzle
sets the arrow images to use
mixes up the puzzle
controls the speed of the animation
sets the color of the grid
enables or disables the displaying of the grid
this solves the puzzle and causes the game to be won
swaps two pieces of the puzzle
mixes up the puzzle
decisecond tick notification
some parser productions do not build nodes with exactly the
generates a string object from an input stream object
generates the java program
resets all the mappings of the result set they are all removed
description of the method
returns a string representation of the object
creates and returns a copy of this object
returns the number of key value mappings in this map
returns tt true tt if this map contains a mapping for the specified
build a list of position elements from a flat string
mounts a position element object from a string
returns the value to which this map maps the specified key
associates the specified value with the specified key in this map
changes the parser to be used in the class
copies all of the mappings from the specified map to this map
removes all mappings from this map optional operation
returns a set view of the keys contained in this map
returns a set view of the mappings contained in this map
adds a new statement in the list
gets an element from the specified position
removes an element from the spacified position
true if the list is empty
gets an iterator to transverse the list
gets the table entry name associated to a given attribute
returns the error message string of this throwable object
returns the error message string of this throwable object
adds a statements to the statement list
number of root statements in the program
retrieves the statement at position index
retorna o label do switch
retorna a express o do switch
retorna o bloco try deste statement
retorna o bloco finally
seta o bloco finally deste statement
gets the statements attribute of the jblock object
sets the statements attribute of the jblock object
sets the statements attribute of the jblock object
remove the element from the position indicated by index
gets the specified statement
description of the method
removes the specified element from the block
diz se este um statement while
indicates whether some other object is equal to this one
retorna a string que representa este objeto jnode string
sets the node value attribute of the jnode string object
retorna true se o tipo for boolean
retorna true se a classe ou interface for protected
returns a hash code value for the object
indicates whether some other object is equal to this one
gets the transformation attribute
sets the transformation attribute
retorna o tipo da express o se information extracting ou
this method has the standard behavior when this object has been
returns a hash code value for the object
creates and returns a copy of this object
retrieves this nodes parent
update this doc with the guts of another
obtain the number of display lines of text in the specified panel
load the master template config
update the file that will be used to persist the template data
set the template configuration for the active session
get the specified type of parse template configuration
get a template by guid from the specified config type
copy code src template code into the configuration specifed by code to code
give the template a new name
get the template at the specifed index and update it with changes
set unset this template as default for a root tag name
add the specifed tag behavior to the template
get the set of notable tags for this tempate
generate a basic template based on the root name and tag set
get the set of excluded tags for this template
get the set of tags that include newline for this template
create a new template by cloning the source template
helper to get a specific tag set
scrolls the left text area to the specified position
scrolls the right text area to the specified position
writes the document to the target source file
set the list of accepted revisions as string containing
set the list of accepted revision indexes
get the accepted revisions as a comma separated string
return the absolute position in the raw xmltext string given by a
save the currrent juxta session to the specified file
obtain the code comparison set code object for this session
retrieve the code juxta document code for the specified document
serializes this session to the specified file
adds the specified document to the session collating it in the process
sets the specified document to be the current base text for display purposes
obtain the code document manager code object for this session
obtain the collation of the current base text for this session
handles mouse over at the specified point
removes the specified document from the comparison set
grab the full xml content of the specified node and find the
enable disable the revsion manager
enabled disable the revision mouse hovers only
obtain the current save file for this session if there is one
set the current save file for this session
mark this session as having been modified since the last save point
frees system resources associated with this object
regenerates the collation cache files for the associated comparison set
call when parse template code template code has changed
recalculates and redraws surface
determine which xml tag contains the point clicked and notify
looks for a difference tag at the given location
load the difference set to use with this painter
clear all highlights from the document
highlight the specified difference in a brighter color
create a ui panel to show export progress
contact the webservice at the current base url and ensure that
find the identifier for a set with the specified name
send a cancel request to the webservice to abort the current
start the process of exporting the jxt file to the web service
scroll to a position that is code doc percent code percent
check the status on an initated request
center the display on the specified character offset position
setup the template dialog with the working document and
set the active parse template configuration
get the active parse tempate configuration
create the top panel with template select combo
create a panel that contains controls for picking the active
notification that a new template config was selected
cancel all outstanding edits on the active view
enable edits on the active view panel
generates the critical apparatus at the location specified
delete the currently selected template exception
generates the annotation export report at the location specified
open the edit template view for the currently seleted template
save the current config and pop an error box if something goes south
delete the specified witness
helper method used to setup a schema aware validating xml document builder
parse out all parse templates from the templates
tokenize the comparison set
collate the comparison set
returns a string representation of this difference
compares the two objects using the comparator provided with the
get the symbol length ratio for this difference set
returns the code for the type of difference
sets the number of lines in the witness citation
sets the number of lines in the base text citation
compares for semantic equivalence without the side effects of overriding equals
save the specified document to the disk
removes the given document from the session deleting the cache file
load the master template config
set the starting xpath used by when importing documents with this template
get the starting xpath used by when importing documents with this template
remove annotations which reference the specified document
create a new template by cloning the source template
obtain the collation of the current base text for this session
serializes this session to the specified file
sets the specified document to be the current base text for display
removes the specified document from the comparison set
get the path to the base directory used to resolve relative paths
frees system resources associated with this object
remove the specified document from the document manager
retrieve the code juxta document code for the specified document
setup the template dialog with the working document and
delete the currently selected template exception
open the edit template view for the currently seleted template
save the current config and pop an error box if something goes south
looks for a difference tag at the given location
load the difference set to use with this painter
only for use with collation view
obtain the number of display lines of text in the specified panel
scrolls the left text area to the specified position
scrolls the right text area to the specified position
selects the specified difference and document in the main document window
helper to show an info messgae about the new template setup process
implement table cell tool tips
cancel all outstanding edits on the active view
enable edits on the active view panel
obtain the number of display lines of text in the specified panel
repositions the scroll bar of the main document window
gets the current scroll position of the main document window
add a listener to the main document window scrollbar
draw caret standard color is red 255 0 0
process the switch language request
process back space request
gets color assigned to specified value
returns the mixed color for all given values
get the color associated with the class given in value darkened by the
get the color associated with the class given in value desaturated by the
returns colormap with stored values as keys and assigned colors
sets the som neuron branch group this vis config handles
sets up the colors for classification as random colors split to rgb channel
sets up the different colors for classification
removes the som neuron branch group from the canvas
sets the data branch group handled by this vis config
sets up the different colors for classification
returns a reference to the data branch group handled by this vis config
sets up the different colors for classification
removes the som neuron branch group from the canvas
translates the view with the given vector
sets up the different colors for classification
convenience method for moving display back
sets up the different colors for classification
sets up the different colors for classification
indicates if display is regular i
displays the som in regular coordinates i
shows the som in dataspace coordinates
makes graphics more fancy by adding lights and reflections
toggle axis visibility
toggle visibility of vis spheres
set background color
sets all capabilities for the branch group all objects are attached to
returns its background child
returns rotation behaviour child
colors all neurons with the default neuron color and sets them opaque
returns its transform group with animation and roatational behaviour
returns reference to animation behaviour
sets neuron coordinates to regular coordinates as delivered by the topology
resets animation behaviour
sets animation behaviour
sets the radius of all vis spheres to the given amount
returns the radius of the first vis sphere in the internal array
activate reflections on the spheres
returns a reference to the soms topology
sets the actual rotation center to specified point3 d
sets calculated transform center to vworld in canvas
trys to get the intersection rays of selected objects
colors datapoints according to their classification
changes the size of the data points
initializes the context menu
actions called by action event for context menu
sets the transparency of this vis sphere to the specified value
sets capabilities on subshapes of this
sets this vis sphere to be opaque i
sets the color of this shape
toggles visibility of this vis sphere
toggle selection state of this vis sphere
sets the selection state of this vis sphere
creates new grid with new appearance and coordinates provided by the
creates new grid with new appearance and coordinates provided by the
make vertex nearly invisible
make vertex fully visible
returns a reference to the neuron this sphere represents
updates its coordinates with the ones provided by the global neuron array object
sets the radius of the sphere
updates its coordinates with the ones provided by the global neuron array object
updates its appearance
makes the grid totally invisible but still existing
makes the grid visible
returns the number of needed lines from the adjacency
trys to get the intersection rays of selected objects
calculates the number of needed lines from the adjacency
set this capabilities
returns the som branch with grid neurons and animation behaviour as children
returns the data point branch with all data points
returns the axis object fs axis inherited from branch group
returns if axis are shown
returns if data points are shown
returns if som is shown
removes the som with all data from scene graph
get the correlationmatrix
creates detachs the current som
compute the eigenvectors of a matrix
creates detachs the axis
creates removes data points in space with classification
creates removes data points in space
writes the principal components into a file
sets the capabilities of vis transform group
test of are neighbors method of class som
to be called when the frame should be set busy
must be called after
adds the canvas to the frame
online value validity check for value fields
returns a reference to the
returns a reference to the
returns a reference to the
returns a reference to the
returns a reference to the
returns a reference to the
returns the som trainer controlled by this panel
sets the text fields in the panel according to the values in the
helper function to make distance function selector
updates tooltip giving info on the selected distance function
sets the reference to the vis config and enables the button
updates tooltip giving info on the selected distance function
handle ok button action
handles cancel button presses
sets icons for the buttons
sets the descriptor vector of this data pattern
sets the resources ths panel needs for its function
returns a the id the descriptor vector and the activity as tab separated
returns the dimensionality of the descriptor vector
returns the next pattern in a random permutation of all patterns
sets the buttons action listeners
returns the next data pattern in the file or null if no
returns true if more patterns are available false if last
resets the internal counter such that the next call to next
initializes the random sequence for pattern delivery
returns the number of different activity values
initializes the combo box for class choice
returns the counts for each activity value
checks every line in the dataset if it can be parsed
returns the number of lines in the data file
returns a random line of the file
set the default state of the buttons
counts the number of instances of the given class associated with this
action handler for reset button
action handler for the skip button
action handler for the play button
action handler for fast forward button
action handler for the pause button
update interval setter
interface implementation gets called by training observables
updates the som neuron branch group if its not null
to be called when training is finished disables all buttons
returns the length of the imbalance moment scaled by the number of
implemented from runnable
returns the length of the contra imbalance moment moment excerted by
handles training thread starting
sets the reference to the training thread
returns the classifiability index defined by the length of the scaled balance
stops the training thread and clears the reference to it
returns a human readable form of the imbalance moment
returns a human readable form of the imbalance moment with numbers
this method gets called when an selection observable this
prints data ids associated to the neuron to stdout
implemented from interface training observer
a reference to the vertices in the topology
returns a string representation of the vertices
allows to set the adjacency table
returns a string representation of this topologys adjacency table
returns a string representation of this topology
intializes each neuron in the topology to radnom weights of the given
sets the dimensionality of this neurons weight vector
returns the ith weight of this neurons weight vector
sets the ith weight of this neurons weight vector
sets the neurons weight vector to the vector given in the argument
set the som trainer to control with this panel
retuns a string representation of this small neuron
adjust the corresponding variable
adjust the corresponding variable
adjust the corresponding variable
initializes this topology to the values set by the accessors
adjust the corresponding variable
initialize the vertices on the given parameters
sets the adjacency table
converts grid coords into a linear index
deep equals test internal coords for equality
returns string representation of coords
returns a shiny new instance of grid coords
returns the current neighborhood factor n t
returns the current learning rate l t
depending on the topological distance and the current neighborhood factor
intializes each neuron in the topology to radnom weights of the given
sets default values for the parameters
sets up the name the short name and the description
trains som by presenting data patterns in sequential order
sets up the name the short name and the description
trains som by presenting data patterns in random order
initializes this topology to the values set by the accessors
initializes this topology to the number of divisions currently set
initialize topology parameters
trains the som until tp
sets up the regular coordinate hash map
returns the max time training parameter
returns the initial neighborhood
sets the initial neighborhood
returns the final neighborhood
sets the final neighborhood
setter required by the topolgy factory
returns the current neighborhood
returns the initial learning rate
sets initial learning rate
setter required by the topolgy factory
returns the final learning rate
converts rectangular grid coords into a linear index
sets the final learning rate
returns the current learning rate
deep equals test internal coords for equality
indicates if the maximum training time is reached
returns string representation of coords
returns a shiny new instance of rectangular grid coords
resets the training status to zero
decreases update counter by one
set the tooltip text
returns the number of dimensions this topology is configured for
set values for the parameters
initializes the hash map mapping topologies to their topology parameters
returns the topology these parameters describe
returns an interpolated value
used to check the correctness of this spline
used to check the correctness of this spline
returns the absolute position of the main label
returns the absolute position of the specified extra label
returns true if the graph accepts drops pastes from external sources
converts relative label position to absolute and allows for
paint the background of this graph
hook for subclassers to paint the background image
paint the foreground of this graph
constructs the root handle for code context code
invalidate the offscreen region do not just delete it since if the new
if set to true the grid will be visible
utility method to create a standard buffered image
returns the area that is deemed dirty for the next double buffered redraw
adds the specified area to the region deemed dirty for the next double
clears the region deemed dirty for the next double buffered redraw
schedules the offscreen resources taken by the offscreen buffer to
sets the background image
override parent to clear offscreen double buffer
invoke this method after youve changed how the cells are to be
sets the code graph model code that will provide the data
sets the code graph layout cache code that will provide the view data
highlights the given cell view or removes the highlight if no cell
returns the bounds to be used to highlight the given cell view
creates new and empty workflow
processes code xml file code using code xsl file code
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
validates the pattern constraint of em bpel variable name em
validates the min length constraint of em bpel variable names em
validates the item type constraint of em bpel variable names base em
validates the min length constraint of em qnames em
validates the pattern constraint of em bpel variable name member0 em
validates the min length constraint of em bpel variable names em
validates the item type constraint of em bpel variable names base em
validates the min length constraint of em qnames em
validates the item type constraint of em qnames base em
create the frist versionid
begin user doc
initializes the annotations for b teneo
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
begin user doc
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
begin user doc
sets a style property on this widget
sets a style property on this widget
gets the css declaration used by this widget
event that occurs before the current
event that occurs after the current
gets the element used as container when adding child widgets to this
sets the element to use as container when adding child widgets to this
gets the element to use as handler of size properties like width and
sets the element to use as handler of size properties like width and
sets the element used to handle style properties
sets the margin bottom style property for this widget
sets the margin left style property for this widget
sets the margin right style property for this widget
sets the margin top style property for this widget
sets the margin bottom style property for this widget
sets the margin left style property for this widget
sets the margin right style property for this widget
sets the margin top style property for this widget
adjusts before index to account for the possibility that the given widget is
insert a new child widget into this panel at a specified index attaching
gets the amount of spacing between this panels cells
sets the height of the cell associated with the given widget related to
sets the horizontal alignment of the given widget within its cell
sets the vertical alignment of the given widget within its cell
sets the width of the cell associated with the given widget related to
sets the amount of spacing between this panels cells
adds a child widget
adds a new widget from a html fragment
ensures that the specified item is visible by adjusting the panels scroll
gets the horizontal scroll position
gets the vertical scroll position
scroll to the bottom of this panel
scroll to the far left of this panel
scroll to the far right of this panel
scroll to the top of this panel
sets the horizontal scroll position
sets the vertical scroll position
sets the visibility of the horizontal scroll bar for this widget
gets the visibility of the horizontal scroll bar for this widget
sets the visibility of the vertical scroll bar for this widget
gets the visibility of the vertical scroll bar for this widget
this method is responsible to setup the widgets configuration
this method is responsible to create the widget elements and render its
loads this widget elements from a template
this method is responsible to setup the widgets configuration
event fired after this widget elements has been created
this method is responsible to create the widget elements and render its
event fired after the
checks if this widget is ready to be used
checks if this widget has a state
gets the element responsible for an attribute of this widget
checks if this widget is ready to be used
assigns an element name of any attached elements in this widget to be
attach an element to this widget
checks if this widget has a state
gets the element responsible for an attribute of this widget
assigns an element name of any attached elements in this widget to be
attach an element to this widget
checks if the item is in a valid range
this event is fired before the item be added to selection
this event is fired before the item be removed from selection
this event is fired after the item be added to selection
this event is fired after set a new focused item
creates a new css user declaration
creates a new css declaration if it doesnt already exists
performs parameterized substitutions on a css
update the current direction
sets the theme default direction for elements
gets the current default direction for elements
publish all cached css declarations to the document
remove all css theme declarations published in document
publish the declaration into the html document
event that occurs when this theme is set using
event that occurs when this theme is replaced by another
creates an user defined css declaration
creates an user defined css declaration
sets the theme default direction for elements
sets the theme default direction for elements
gets the theme default direction for elements
gets the default style for list or table row
gets the default style for collation of list or table row
gets the default style for list or table row when it is selected
gets the default style for list or table cell when it is selected
gets the default style for list or table row when it is focused
gets the default style for list or table cell when it is focused
standard css for the html document
global css for dijit themes
gets the name of base class used in this css
adds one or more css as a super class of this
adds one or more css as a required class by this
applies this css on a
applies this css on a
applies this css on a
applies this css on a
imports the declaration into the html document
appends a css fragment at end of the current
appends a css fragment at end of the current
gets the ltr declaration of this css
gets the rtl declaration of this css
replace the declaration of this css
replace the declaration of this css
return true if the declaration of this css is empty
return true if this css is anonymous dont have a base class
define this css as published or not
gets the text currently selected within this text box
determines whether or not the widget is read only
programmatic equivalent of the user clicking the button
selects all of the text in the box
turns read only mode on or off
sets the range of text to be selected
sets the alignment of the text in the text box
gets a temporary element to perform dom operations
adds a class to node if not present or removes if present
note this event is fired before the item be added
note this event is fired after the item be added
note this event is fired before the item be removed
note this event is fired after the item be removed
accesses styles on a node
notifies all listeners that have registered interest for
notifies all listeners that have registered interest for
open the dialog
open the dialog
execute command that is available for this location
add a child location to this location
return a specifically named child location
set this locations parent through adding itself to parents children
description of room returned as string
used to make the lock function generic
returns the level number of the location type 0 room 1 building etc
returns the number of immediate children of this node t
adds a child to the list of children for this node t
inserts a node t at the specified position in the child list
remove the node t element at index index of the list node t
returns whether or not this mob is empty
returns the number of monsters in this mob
prints the names of all monsters in this mob
returns false if monsters new hp is negative or zero
returns the first monster in this mob with given name
adds a monster m to this mob
deletes the corresponding monster from this mob
does damage to specified player p in the game
add the player p to the party
change the staticleader flag
returns the party leader
does damage to specified monster m in the game
changes the player p to the a new position
return true if player is part of the party
returns the position in the party of the player p
return the first color
set the first color
return the second color
set the second color
set the drawing surface
processes window events occurring on this component
returns the mnemonic for a menu item
this method adds an interactive event listener to the interactive view
this method saves all results to the specified file
at startup create and show the main frame of the application
returns the underline flag
returns the last valid object for time
returns the last valid object
overridden to import a color if it is available
does the flavor list have a color flavor
execute this command
execute this command
set the property to use to render list items
get the render property name
set the cell renderer to use for items in the list
get the number of visible rows to display on the list
update our controls based on our state
return the group of command buttons to control this master detail form
called after the actual window control has been created
calculates the base amount of the order that is all product prices
constructs an empty user class
adds an account to this user
get the pokemon move that this object refers to
ran at the start of each battle
return the possible genders for this species
get the name of the mod data
return whether narration is enabled
set the possible genders for this species
get the species data
get a balanced level for this species using this formula
return whether a pokemon can have a particular ability
set whether to narrate the battle
get the move set data
set the type of this pokemon
create a substitute to take hits for this pokemon
get the effectiveness of a move against a given pokemon on this field
get the hold item data
dispose of this object by breaking all links to other objects making it
get the move data
get the move set associated with this species
return whether this species can learn a particular move
get the mechanics used on this battle field
save mod data species abilities move sets and items to a file
set the health of the substitute
set the length of the mod data file
return the instance of random used on this battle field
save a database of pokemon species to a file
get the length of the mod data file
called when the trainer runs from battle
get the health of the substitute
attach this field to all of its pokemon
remove a set of items from an array
add a pokemons abilities to the hash map
return whether an ability is implemented
return whether this pokemon has a substitute
return whether a pokemon can have a particular ability
get a single species
return the number of species
handle the items in a mod data line
find a pokemon by name
return whether this species can learn a particular move
handle a stat modification
synchronise field effects
remove a field effect from this field
returns the first instance of an effect of a certain class that is
dispose of this object
get the index of a trainer from one of his pokemon
apply a mod data patch to this mod data object
apply field effects to a pokemon
switch in a pokemon and apply field effects to it
get the opponent of the pokemon passed in
replace a fainted pokemon
determine the order in which pokemon attack etc
set whether this pokemon is shiny
tick status effects at the end of a turn
return the number of party members in a given party who are alive
check if one party has won the battle and inform victory if so
return whether this pokemon is shiny
return this pokemons gender
invoked when a client joins the server
normalise a players name no idea why this is here
return the name of this pokemons ability
return whether the move hit
return whether a given move deals special damage
get the effect a nature has on a particular stat
gets the stat that this nature benefits
gets the stat that this nature hinders
return this pokemons ability
set this pokemons ability
return whether the named species can use a particular item
get an item set corresponding to the named species
write item data to an arbitrary output stream
read item data in from an arbitrary input stream
remove an exclusive item from a pokemon
add an exclusive item to a pokemon
return the name of this pokemons item
awesome stays through switching out
awesome removes 1 8 max hp multiplied by the number of active turns
awesome is in the 5th tier
get this pokemons item
awesome immobilises 40 of the time
burn stays through switching out
burn removes 1 8 max health each round
burn is in the fourth tier
sleep immolilises the pokemon
return the move that will be used after the charge finishes
poison stays through switching out
toxic removes 1 16 2 16 3 16 etc
set the pokemon who induced this effect
paralysis has a 25 chance of immobolising the afflicted pokemon
get the pokemon who induced this effect
get the lock of this effect
ice pokemon cannot be frozen
can this status effect by baton passed almost all can
freeze immolilises the pokemon
does this effect allow the application of the given status effect to
change the percent that this move heals hurts
return whether this effect can coexist with another effect
clone this status effect
set this pokemons item
return whether this effect immobilises the pokemon
weather effects are currently all in the third tier zero is the first
weather effects are move transformers
whether the weather should have effects
called each turn that this status effect is applied to a pokemon
changes the types of a pokemon for forecast
remove the tier of the after turn effect
allow for functional cloning when applying this effect to a field
tick the effect on a pokemon
remove this effect from a field
prepare this effect for ticking
called when a pokemon with this status effect switches in
called when a pokemon with this status effect switches out
tick this effect for the whole field
tick this effect for the whole field
unapply this status effect
remove this effect from a field
apply this effect to a field
remove this effect from a field
apply this effect to a field
return whether this status effect can apply statuses through a
does this status effect transform effectivenesses
tick this effect for the whole field
tick this effect for the whole field
remove this effect from a field
remove this effect from a field
this method is called when the pokemon to whom the status effect is
increase the evasion of a pokemon with the sand veil ability
restores the evasion of a pokemon with sand veil when the sandstorm ends
apply this effect to a field
apply this effect to a field
return the sprite to use for the pokemon with this effect or null
compound eyes transforms moves by giving them 30 higher accuracy
poison removes 1 8 max health each round
calculate stats from a given set of ivs and evs
return whether this type deals special damage
get the multiplier when attacking a pokemon of a given type
return whether this type is equal to the test type
unapply this status effect
get a textual representation of this type
returns true if this status effect is capable of transforming moves
returns whether this stat represents an increase in a stat
returns the stat being modified by this effect
return whether this effect listens for damage
react to damage
attempt a hit
determine whether this effect deactivates a pokemon
determine whether two status effects are equal semantically
save the move sets to a file
sets if a an effect affects the attacker
return whether this status effect can be successfully applied
save the move sets to an arbitrary output stream
cause this pokemons stats to be calculated
return this moves entry in the move list
prune the move set of null entries
return whether this move should use special attack and defence
attempt to hit an enemy
inform that this effect was applied unsuccessfully a second time
cause a pokemon to use this move on another pokemon
load the move sets in from a url
return whether this move deals damage
load the move sets in from a file
load the move sets from an input stream
set the accuracy of this move
return whether this status effect allows switching
get the type of this move
return the number of move sets
some moves can be used even if a status effect e
get the effectiveness of this move against a denfending pokemon
get the move set identified by the parameter
this method catches errors
return whether this move can strike critical
set the power of this move
returns whether this status effect vetoes the choice of a particular
determine whether this move has a high chance of striking a critical
returns whether this move is an attack
begin ticking this effect
return whether this move is buggy
merge in another move sets data
load the situations database from a file
find whether a string is in a move list
return whether two memories are semantically equal
get the name of this pokemons trainer
return whether a given move deals special damage
get the pokemon that this pokemon is fighting in a battle
return whether a pokemon is a particular type
get the additive critical hit ability of this pokemon
boost the power of one type of move by 10
return whether this pokemon is immune to critical hits
set a moves pp
get a moves pp
get a moves max pp
get one of this pokemons moves
return whether it is the pokemons first turn out
switch in this pokemon
return the original ability of this pokemon
switch out this pokemon
allows users to add remove components directly to the windows container
return the effect that vetoes the use of a particular one of this
sets the appearance for this slider
adds the specified listener to the list
return whether this pokemon has a particular effect
removes the specified listener from the list
a convenience method to check whether the position eg
adds the specified listener to the list
removes the specified listener from the list
return whether this pokemon has a particular class of effect
adds the specified listener to the list
removes the specified listener from the list
sets the background color for the windows content pane
creates the appearance and returns the proper type
gets the increment button
gets the background color for the windows content pane
gets the decrement button
return the effect of a particular class applied to this pokemon or null
return whether this pokemon has a particular class of effect
sets the title of this window
gets the title of this window
return whether this pokemon has a particular ability
adds a child to this frames content pane
inserts a child to this container at the specified index
used by subclasses to create the bounds set the corner segments of this
return whether this pokemon has a particular item
removes the child from this container if it exists
return whether this pokemon is active able to choose moves and switch
get the name of this species
set this pokemons name
get the display name of this pokemon i
get all status effects of a certain tier
get a list of statuses that are not special weather abilities or
return whether this pokemon can switch
fires a change event to all action listeners in this component
begin ticking effects
remove status effects that have ended
this is the knob or thumb button whic appears on the slider
a utility method to create a scroll button based on the given scroll
invoke unapply on a status effect optionally disabling it
invoke unapply on a status effect and disable it as well
remove a status effect from this pokemon
remove a class of statuses from this pokemon
used by skins to render the text in a text field
fires an action event with the specified command to all action listeners
remove statuses by class type
sets the pixel spacing between components or uses automatic spacing if
used by displays to activate a window
get this pokemons party
sets the visibility for this component and all of its children
get the field to which this pokemon is attached
used internally to determine the display
get the name of this pokemons moves
determines whether this component is showing on screen
determine whether this pokemon has fainted
called to render this component
creates a new object of the same class as this object
sets this padding to the spacing of the specified padding object
sets this padding to the specified spacings
sets this padding to the specified spacing
returns a string representation of this dimension
set whether to enable or disable this label
is this pokemon immobilised
notification that a controller button has been pressed
notification that a controller button has been released
gets the old x value before the mouse position was changed
gets the key char for this event
changes the key code for this event
gets the old y value before the mouse position was changed
changes the key char for this event
gets the absolute x position relative to the game container
gets the absolute y position relative to the game container
gets the amount of change
called to ensure the z ordering of this containers children is correct
returns tt true tt if the given object is an instance of dimension
adds a child to this container
creates a new object of the same class as this object
returns a string representation of this dimension
inserts a child to this container at the specified index
removes the child from this container if it exists
sets the foreground text color
gets the child at the specified index
creates the appearance and returns the proper type
whether this container contains the specified component
transform a move based on the status effects applied to the pokemon
gets the index of the specified child component
removes all children from this container
called to recursively render all children of this container
called to recursively update all children of this container
creates a new object of the same class as this object
returns a string representation of this point
sets the background color
sets whether this label is opaque
called to update this component
called to render this component as a whole
check for accuracy and then use an arbitrary move
updates this container and its children to the screen
packs this label based on current font text leaving a space for
adjusts the size on this display if it has changed from the context
inform that this pokemon was damaged
sets the disabled foreground color to be used
centers this container relative to the specified component
gets the disabled foreground color
sets the text to be displayed
sets the horizontal alignment of the text image
gets the horizontal alignment of the text image
sets the vertical alignment of the text image
centers this component based on the size of the given context
gets the vertical alignment of the text image
gets the yoffset if the current font is an instanceof angel code font
returns the component which currently has the focus
determines the image to draw based on the given state
returns the down pressed image
returns the rollover image
sets the disabled image
sets up this display with a new context changing this displays default
sets the down pressed image
sets the rollover image
fires a virtual press
cause this pokemon to faint
restarts this timer
starts the timer
whether the timer is active
get the health of this pokemon
sets the appearance for this text component
translates the location of this container
allows subclasses to tap into changed events directly without the need
gets the absolute x position of this component
return whether this pokemon must struggle if it wants to use a move
enables key repeating on this text component instance with the specified
gets the absolute y position of this component
enables key repeating on this text component instance with the last used
disables key repeating on this text component instance
returns tt true tt if this text component instance has key repeating
check whether the effects present on this pokemon permit the application
sets the bounds of this container
sets the height of this container
sets the width of this container
get a stat multiplier including the ones for accuracy and evasion
sets the focus ability of this component
called once the session has begun
called once the session is closed
releases the focus on this container and all of its window parents
if a network error occurs this gets called
whether the absolute relative to the guicontext x and y positions are
checks whether the specified point is within the bounds of this
glass pane components will ignore events and the underlying components
whether this component is a glass pane component ignoring events and
update players party
sets the left and right padding of this component
returns a string representation of this container
fires the specified mouse wheel event to all mouse wheel listeners in
fires the specified controller event to all controller listeners in this
provides a hint for skins as to whether or not this component should
register an intrinsic ability
intrinsic abilities generally do not immobilise
return whether this ability works with role play and skill swap
returns whether an opponent claims the effect of this intrinsic
compare this object to another intrinsic ability
removes a list of effects from a pokemon
applies a list of effects from a pokemon
returns the number of layers of spikes that are applied to a pokemon
adds a layer of spikes to a pokemons team
removes spikes from a pokemons team
get the move list
get a move by its name
read data on all moves from an input stream
plays the given game using auto player
this method is called upon plug in activation
searches for a uniquely resolvable field updating min resolver to be the resolver
is previewing in given windows handle
the windows handle in previewing mode
runs as screen saver
open on a flagged field should result in flag removal
flagging a closed field should set the flag property
flagging an already flagged field should remove the flag
flagging an open field should not set the flag property
the flag action on an open field with all available neighboring flags set
the open action on an already opened field with all available neighboring
reproduces a bug condition forcing stack overflow error due to recursive
opening an empty field no bombs in neighborhood should open the field
read all reader data to a string
interface method for perl5 regular expressions
removes all occurences of a given character c from the input string
extended request data key to hold editpart visual id
creates elementos palette tool group
creates links palette tool group
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the target feature
this adds a property descriptor for the source feature
this adds a property descriptor for the label feature
this adds a property descriptor for the descricao feature
this adds a property descriptor for the software feature
this adds a property descriptor for the label feature
this adds a property descriptor for the descricao feature
this adds a property descriptor for the label feature
this adds a property descriptor for the regra produtora feature
this adds a property descriptor for the descricao feature
this adds a property descriptor for the software feature
this adds a property descriptor for the informacoes consumidas feature
this adds a property descriptor for the impactos feature
this adds a property descriptor for the software feature
this adds a property descriptor for the source feature
this adds a property descriptor for the target feature
this adds a property descriptor for the target feature
this adds a property descriptor for the source feature
load show details of specified term
get terms list from db corresponding specified criteria
get term id of by index in the list of loaded terms
get count of terms loaded
sets the data attribute of the layer info
gets the data attribute of the layer info
this method will iterate through the arp table and clean out
displays all the interfaces in the network interfaces hashtable
get links vector returns a vector containing all the links in the simulation
this method is for display information about a paritular node
method returns a hashtable containing all interfaces for a given node
quits the main screen
currently not implemented but will eventually save the simulation and gui nodes
this method returns the description that is in the file choosers dialog
delete information some or all
delete information some or all
execute the command
return a shell appropriate for parenting dialogs of this handler
sleeps current thread for n milliseconds
returns the hexadecimal representation of
returns the matching java
sets the progress
todo update the test
some nice progress events
changing the gui to middle tab will start the
finds the field that leads to a confilict with updated field
calculates six matching colors and sets
displays java exception in a message dialog
returns the url as file
returns tree node for a given index name
test item does not exist on an unknown index name
gets the text entry of the given xpath
gets the contaxt entrys name
gets the adresses
deliver progress information to the attached listener if any
gets the email
gets the phone
gets all entries for printing
adds listener to the buttons
appends text to buffer
shows popup for a given event
sets the default values for directory and output file
sets a preference entry
copies current selected link to the clipboard
opens message dialog to show the error
thread does actions that take a longer time
tree selection listener displays html page in jeditor pane if
roll a encounter level treasure of the given level
print a simple 1 line name of the treasure item
read and evaluate the percentage string
read and evaluate the fraction string
apply any modifications to the rolled treasure
initialize all handlers to be used for this code default treasure item code
check that we can roll with this settings simply a setting that is
disable all item types
print the log if logging is enabled
tbd move fix reimplement this method print the current state and
handle print jobs for magic armor and shields
create a new default treasure item in this treasure
items are removed by object reference only exactly the passed instance
handle print jobs for the gems and art object categories
the property key is numeric
handle print jobs for the gold category
append the property value to the existing property value if any
handle print jobs for the gems and art object categories
roll the die for this code table code
return the code table code entry that matches the given die roll
handle print jobs for potion and oils
create a new tab ready to be used and select it
this method initializes this
remove the selected tab from the jtabbed pane
handle print jobs for the rod category
remove all tabs
add a reference to an additional table that should be rolled to
handle print jobs for the staff category
get a clone of the data in this code table row code
handle print jobs for scrolls
evaluate the expression replace the expression with the evaluated result
handle print jobs for the staff category
the real table where to continue may be determined later
handle print jobs for wands
roll the according item and check whether the result is correct
create a default treasure of the required treasure type and create
generate and display treasures after the user has clicked the generate button
prepare the generator and the tgrandom instance for this test
handle print jobs for magic armor and shields
handle print jobs for the wondrous items category
print the amount if necessary if its not 1
print the bonus
in the brackets we have the following elements
print masterwork it the property exists
print the material
print the name
print the item prefixes separated with comma
if the item has a second weapon head print its bonus
print the item size if the size is not normal
add the spell with given index
disable all magic item checkboxes
print the suffixes with and and depending on the number of
anable all magic item checkboxes
anable all magic item checkboxes
this method initializes j jmenu bar
reload the whole configuration
applicaton context captcha service
session factory hibernate sql orm
session factory hibernate sql orm
application context aware context
creates the field editors
print this fileset to the given ant script
close the output stream
print an code antcall code task to the script
print a code jar code ant task to this script
print a code jar code ant task to this script
gets list of the args build the application and package if required
print the code available code ant task to this script
print the code available code ant task to this script
print an code ant code task to this script
print an code arg code element to the ant file
print the given string to the ant script
print the given comment to the ant script
add the given name value attribute pair to the script
print a code copy code tak to the script
print a code delete code task to the ant script
print an code exec code task to the ant script
print a code mkdir code task to the ant script
print a code brand code task to the ant script
print an code echo code task to the ant script
print a code path code structure to the ant script
print a code project code tag to the ant script
print a code project code end tag to the ant script
print a code property code tag to the ant script
print the given string to the ant script within quotes
print a start tag in the ant script for the given element name
print an end tag in the ant script for the given element name
print the given number of tabs to the ant script
print the given string to the ant script followed by a carriage return
print the given string to the ant script
print a carriage return to the ant script
print the given task to the ant script
print a code target code tag to the ant script
print a closing code target code tag to the script
print a code eclipse
print a code eclipse
print a code dirname code task to the script
print a code condition code task with isset test to the script
return all request parameter names for both regular controls and file upload
return the parameter value
modifies the user specified by the user id passed in user to
method used to send an approval email to a user request
method used to send a disapproval email to a user request
get region returns a region with an id matching code region id code
deletes a user from the system and removes it from any lists
reads all contents from the resource table and returns an array list
locates and returns a code resource to code from the persistent
creates a new herbarium row in the database based on the supplied
updates the current state of value object to database
delete a particular herbarium from the database based on the supplied
locates and returns an code herbarium to code from the persistent
locates and returns an code herbarium to code from the persistent
locates and returns the head of chah host code herbarium to code from
reads all contents from the herbariums table and returns an array list
this method will return the number of rows from the herbarium table
this method update user table in the database and used to update existing
this method update user table in the database and used to update existing
this method deletes record from user table for given user id and its
this method returns user details user to for unique email address
this method returns the user entry in the user table given the users
modifies the user specified by the user id passed in user to
a method which gets all the approved ews users
update required plant list updates the persistent stores required plant list
this method returns all approved users ews admin users and herbarium
a method which returns the role of the user
a method which returns the user id referenced by the given username
implementation of the cont processing method doing some logging and sending
example method waiting a few seconds and returning intermediate results
this example implementation of cont processing does some logging only
implementation of the cont processing method which is called once all threads
return the name of the opereation represented with this object
return the element name
overloaded constructor for binary boolean operators or and nor nand
overloaded constructor for binary boolean operators or and nor nand
overloaded constructor for binary boolean operators or and nor nand
overloaded constructor for binary boolean operators or and nor nand
overloaded constructor for unary boolean operators not
overloaded constructor for the one and only usefull unary boolean operator not
report an exception
check whether the given child argument specified with the parameter of
returns the first operand of this object
accessor for record count
returns the second operand of this object
accessor for record start
start a poster thread for every provider in the provider list
method to handle callbacks from threads is used to return results from
accessor for record dropped
accessor for the result list
accessor for total search hits
accessor for num response used for retrieving the number of responses already
constructor setting the url and script path where the query has to go
accessor for url string
accessor for cgi script path
accessor for failure state
accessor for falure message
accessor for software
accessor for send time
accessor for id
accessor for source
return protocol query string this response belongs to
set the mail host
set the email address used as tzhe sender
send the email
replace invalid xml character
check whether this request is complete
return time in milliseconds since the threadpool has been created
return xml document containing the real data
return number of records contained in this response and 1 if no valid
return the number of database records which could not be converted to xml
connect will test a connection to the provider at code url code
return the software used by the provider module as free text string intended
add task to adds a task to to the internal job to
return the time this response has been produced by the provider iso
return the diagnostic message created by the provider software
set the protocool query this response belongs to
set the time needed to create this response object
set the number of the first record returned
a method used to send out green and orange alerts to users
set the number of database records which could not be converted into xml
set the total number of search hits not necessarily contained in this recordset
a method used to send out red alerts to users
set software used by provider wrapper to produce the result
run analysis initiates the persistent store update searches on that store and
this method temporarily puts all the new plant occurrence in the alert list
set the time when this resonse has been sent by the provider
set the type of request scan search capabilities this response belongs to
set the search criteria for this bio case search
set the diagnostics message created by the provider software
set url sets the url of the remote bio case resource
get url returns the url of the remote bio case resource
get sub criteria calls the get search criteria function on all
add sub search adds a bio case search to this search object
clear sub searches clears any sub search components that have been added
move the end segment of abcd concept read in
add the end segment of abcd concept read in
accessor for record count
accessor for record start
accessor for record dropped
accessor for total search hits
method used to send an approval email to a client request
accessor for failure state
accessor for falure message
accessor for software
accessor for send time
method used to send a disapproval email to a client request
method called to send a new client registration to the ews admin
update required plant list updates the persistent stores required plant list
private helper method that constructs the body of the email and the subject
this method will return the number of rows from the herbarium table
get last successful job date returns the date of the last successful persistent
get concurrent thread number
set concurrent thread number
accessor for provider
add a concept for sorting in ascending order
add a concept for sorting in specific order
add a new query
get the number of concepts
get a concept
clear all information
send the email
execute all queries in the background and wait for them to finish
set a boolean value for count
add a post processor to the session
get number of total matched records
a flag of whether more records could be returned
clear all data possessed by the current session
get actual number of records being returned
resume query until all records are returned usually used in post processor interface
add a ping query to the current session
clean the data release memory
add a metadata query to the current session
add a capabilities query to the current session
get thread object
set thread object
get the operation number
generate request xml string
replace invalid xml character
when the parser encounters plain text not xml elements it calls
report an exception
set lsit of concepts
get number of total matched records
returns all herbariums in the form of an list of herbarium to objects
get number of records being dropped
get starting index of records
modifies the client specified by the client id passed in client to
modifies the client specified by the client id passed in client to
deletes a client from the system and removes it from any lists
get region returns a region with an id matching code region id code
update the code start time code field in the taxon name table
retrieves an code list code of code result tos code from the
retrieves an code list code of code result tos code from the
retrieves an code list code of code result tos code from the
get first job date returns the date of the first successful persistent
this method returns all ews administrators represented by client to objects
this method returns all ews administrators represented by client to objects
returns the total number of plants in the master plant list
this method returns all the clients users managed by the ews admin
this method returns all the clients users managed by the avh admin
get a parameterized type such as
first letter with lower case
first letter with upper case
gets java bean property
method render and assert
method render and assert
return the http unit web conversation object for this dialog
return the string representation of the current response encoded as
return the page title of the current response page encoded as specified
assert title of current html page matches the value of a specified web
return true if a form parameter input element is present on the current
return true if a form parameter input element is present on the current
method test remove page from room cache
assert that a form input element with a given name is not present
return true if given text is present in a specified table of the
return the http unit web table object representing a specified table in the
submit the current form with the specifed submit button
assert that a specific checkbox is selected
assert that a specific checkbox is not selected
assert that a specific option is present in a radio group
assert that a specific option is not present in a radio group
assert that a specific option is selected in a radio group
assert that the display values of a select elements options match a
assert that the currently selected display value of a select box matches
assert that a submit button with a given name is present
assert that a submit button with a given name is not present
assert that a submit button with a given name and value is present
assert that a button with a given id is present
assert that a button with a given id is not present
make the frame with the given name active in the current conversation
supports a http delete to be equivlanent of consuming a singe message
set the broker container to be used by this listener
supports a http delete to be equivlanent of consuming a singe message
return the broker container
factory method to create a new active mq broker
supports a http delete to be equivlanent of consuming a singe message
select a specified checkbox
deselect a specified checkbox
close an zip entry
close the output stream flush it before closing
dump html of current response to a specified stream for debugging
get the desired format out the export out from the request
get the plaintext page with the given id
replace characters we do not wont
converts a xml document into a stream source
removes all href attributes
find the method in the url whre i was coming from
transform a plaintext page into a jdom document
get the export template for the page
find the page id in the url whre i was coming from
returns the hostname and port in this format http hostname port
find the room id in the url whre i was coming from
renders a given text using the plain text htmlrenderer and parse it to
determines if a string is a tag name to copy
copy the ressource with a broken image to the output stream
always return tiny little images
converts the tuple of day month year to a millisecond clock value
the url contains a user id
checks if id ist a room id
investigates the passed request and looks for a user that is registered
determine the id of a room from path info pathinfo has form
determine the id of a page from path info pathinfo has form
get the current room
method substitutes elements named
method render element
method box title
return a select box for template selection
no real decoration can be done since we dont know who we are
adds a selection to the give base element this selection contains all
method substitutes elements named
method render element
these scripts will be placed in the header of the document
create a set of rendered elements that represents me
adds a selection list to the gibr base element the selection list
method render string
creates an input form for a reply to the actual mail in model
method edit information
method render element
method hide pages in folder
returns the name of the file which is currently stored in my model
these scripts will be placed in the header of the document
views share the same channel for each view class
display an icon that represents the documents current status and show a
the user wants to join the other users session so that they can
the user wants to join the other users session so that they can
the user opens the document using the document helper
the address under which the document helper is accessed
the listeners have to be initialized while loading of the body
method plain text area
the listeners have to be initialized while loading of the body
method page url
adds initialization scripts to the body of the document which will be
method produces text node for element named
checks whether or not a specific node type represents a macro that
method last author
checks whether or not a specific node type represents a macro that will
method last edit time
method render child string
method tool bar
method template selector
method rendered text node
templates do not allow a preview function so far
checks whether or not a specific node type represents a macro that
checks whether or not a specific node type represents a macro that
method substitutes elements named
method render element
method substitutes elements named
method render element
method substitutes elements named
method render element
adds number of containing mails and a freshiness indicator
a page can be fresh
method substitutes elements named
method render element
method render element
method substitutes elements named
method render element
method set attribute for parent
return a form with dynamic ids in the action string
returns the user name stored under the given id
method apply link formatting
extracts the prefix of a url containing the linktype url must have the
extracts the prefix of a url containing the linktype url must have the
method render display string
maps ids in links corresponding mapids key object used for copy a
method save block
creates some rooms that are allways in the system used when creating a
returns the plain text
initialize the instance variables from the xml document
sets the default object and the dictionary entries
restore an entry using the passed meta description
method save center
returns the plain text
looks up the persistent object accessible by key in the dictionary
method add user
returns the plain text for a given id
looks up the persistent object accessible by key in the dictionary
returns the first object that is found with the passed name
returns the object that has the passed id
method drop content
returns all deleted persistent object stored in the dictionary
returns all values sorted by the default sort method
returns the names of the contained objects
adds the passed entry to the dictionary
maps ids in links corresponding mapids key object used for copy a
removes the passed object from the dictionary
load the next id and named objects if they exist
searches for an unused name in the dictionary
one of my component changed its name
restores all changed values to the state they had after the last commit
determines the key for a specific persistent object using the key criteria
returns true if the dictionary allows more than one entry with the same
when a read transaction ends it checks first if there are some writing
remove the object with the passed id from the cache
stops a write transaction
clears all objects from the cache
removes objects from the cache until no more opbjects need to be removed
hands a key to the user
before the object is removed from memory make sure that you remove all
get a string representation for this string utils
replaces all occurences of find with replacement in original
split the string held by me into substrings that are seperated by the
plain text pages can be searched by the content of all text fields
subclasses have to return true if instances should be part of tha index
adds the object to the list of loaded objects
reading can start when there are no waiting writing threads
updates the content from the passed element containing partial versions
begins a write transaction
method add session
method get or create equation
loads the object identified by the id
method contains page
removes the entries from the database
de registers the passed object and ensures that the object is caan be
searches for an unused folder name in this room
remove the object with the passed id from the cache
by default pages appear in the daily report
the om lives forever
method remove room
method remove user
information about last author to show in reference descrioptions e
method last edit time
a page can be fresh
method full name
templates are not versioned
information about last author to show in reference descrioptions e
create an xml element that links to the mini homepage of the sending
folder is now persistent in the model over his id
by default mails are compared by date
represent my fields as a xml ree
returns the version of the page that is returned if no explicit version
return the objects content as a string
previous thread on same level e
subclasses have to return true if instances should be part of tha index
next thread on same level e
a page allways links to a room as its container
returns next mail in depht first order of threaded mail index for correct
when the status of a document changes we have to create a new
templates show themselves without the leading t and link to the edit
method is new
returns true if the user u has already read the page
returns previous mail in depht first order of threaded mail index for
create document status views for each changed document and notify the
returns the full keys of a user for a room
initialize the instance variables from the xml document
returns true if the page is not older than freshiness milliseconds
calculates the file name for the corresponding upload
copies the meta information and the corresponding file so that it exists
copies the meta information and the corresponding file so that it exists
inverts to add parent a parent
returns true if the last edit time is newer than the passed time
according to the stored mime type an icon is searched
returns first mail in the thread containing this page for correct
returns parent mail in the thread containing this page for correct
returns true if the concrete class has a special view mode for showing
the user who edited the page the last time
restore an entry using the passed meta description
sets the content type which is passed in the string
looks up the persistent object accessible by key in the dictionary
looks up the persistent object accessible by key in the dictionary
returns the first object that is found with the passed name
returns the object that has the passed id
access all potential lazy fields in order to have the page fully loaded
returns all deleted persistent object stored in the dictionary
returns the names of the contained objects
removes the passed object from the dictionary
returns true if the page is not older than freshiness milliseconds
searches for an unused name in the dictionary
inverts to the method add child
determines the key for a specific persistent object using the key criteria
move a persistent object from its current container to a new conatiner
method get or create equation
only the latest version of a file page may be edited
since it is a singleton it is allways called user registry
stores a session id for a user
file based pages are thought to be used collaboratively
some elements are shown within another element
method terminate session
returns true if the binary page has a file attached
the default user of the user registry is the admin
binary pages can only be searched by descriptions
only store users if they are not null
mails can be searched by subject and content
returns first mail in the thread containing this page for correct
returns parent mail in the thread containing this page for correct
previous thread on same level e
next thread on same level e
returns previous mail in depht first order of threaded mail index for
create the tree structure needed for a threaded view of the mailbox
returns next mail in depht first order of threaded mail index for correct
additionally add the next id and the dictionary of named objects to the
load the next id and named objects if they exist
removes all files for objects that were associated with garbage
loads the object identified by the id
terminates a users session
creates a shallow copy
returns the title that a user entered
creates a copy and moves it to the new container
remove the object completely
adds this object to the object managers set of dirty objects which means
adds this object to the object managers set of dirty objects which means
returns true if the concrete instance shows a document status
remove the object from its container
returns the container
title to show in urlstrings e
whenever a document status changes the icons in front of the files should
terminates a users session
method create text page with form
a long textual description that corresponds to my mime type
combines channel type and channel to create an identifier for the methods
returns an element that can be inserted by the renderer who is interested
create a notification message and broadcast this to all interested
the messages produced by an active html view contains two parts separated
returns the users keys that match a specific room
returns the url that will return the page in the edit mode
returns the url that will return the page in the view mode
all default values of instance variables have to be set here
method inline link title
presence views are the same for the whole room
checkes if the object should be handled as a nonexistant object
returns the name of the default type
returns the room for the current awareness view
method last edit time
checks if this user is the only room owner for room r
cut long names to i 3 characters and adds
for debug purposes only
register the object in the current object manager
makes this size of object ready for reuse
sets the container
this is needed after cloning a persistentobject to set the correct
return the displayname of the field
set the displayname of the field
deletes an object not really but marking it as deleted
the description is a bigstring used to describe the object to the user
should not be called by anyone else than the object manager
when a room is dropped it also drops all its pages
write the object to a persistent storage
for debug purposes only
if the object was part of the cache unload it
create presence indicator views for each affected room and notify the
by default persistent objects are stored in a file named id
returns all users with a full key for this room
the path in the directory where the xml document for this object
to be called by the object manager
to be called by the object mnager
controlls whether or not changes on instances of me should be tracked to
store the discriminator and the object id
method get child named
return true if instances of this class should not be removed from the
method linked rev full name
method remove session
method rev full name
method right password
returns the home page
searches for an unused folder name in this room
searches for an unused room name for subrooms in the room
method set preferred language
never use this method
looks for the parent room that has no parents
return the url for viewing the users mini homepage
returns the user type
method is descendant
returns true if user is an owner of this room e
returns all other rooms who are smaller than the given room
move a mail to new parent mail returns true if mail was successfully
creates a new template and initializes its edit and display templates
creates a new template and initializes its edit and display templates
returns the path to room relative to the defaultroom
inverts to remove parent
inverts to remove child
returns whether the properties should be inherit from the pipelines parent element
adds a new task to the group
sets a new inherit status
sets a new specifier for the port count
connects the in side of the connection to a port
connects the out side of the connection to a task
sets a new count
returns the in port
returns the used properties for this project
returns the index at the in port
returns the out port
sets a new status to the quiet parameter
sets new properties for this project
returns the amount that should be used for the verbose parameter
returns the index at the out port
sets new coordinates to the parameter
returns the type of this port
sets the amount that should be used for the verbose parameter
returns whether both sides of the connection are connected to a port
returns the current value
returns the left coordinate
returns the properties for this solution
returns the amount that should be used for the quiet parameter
adds this connection to the ports
returns the count type of this port
returns the right coordinate
checks whether this pipeline is valid
removes the connection to its ports
sets the amount that should be used for the quiet parameter
returns the direction of this port
returns the top coordinate
sets a new value
returns the used properties for this pipeline
returns whether this connection is valid
returns whether this property can inherit from its parent
loads a new resource bundle
returns the parameter that specifies the count of this port
returns the bottom coordinate
returns the message that is associated with the given key
returns whether the directory where the project solution is saved should
invoked when the specifiers value changed
returns true if the hole file has been analyzed
sets whether the directory where the project solution is saved should
sets a new parent task
returns the specific child
tries to find a type for the given token text
returns the document handled by this class
executes the layering process with its 3 phases
creates a new element with the given name
adds a list with the extensions to the description
appends a new child to the document
adds a new connection to the port
gets the root element of the document
removes the connection from this task
returns the first of the extensions that will be accepted by this filter
returns the result from the osmosis execution
reads a document from the given file
returns a display friendly name of the parameter representation
writes the document to the given file
removes that connection at the given index
returns the parent task
sets a new long parameter name
returns whether this is a group parameter
gets the specific connection
updates the components with the set data
returns the long parameter representation
adds a new allowed value for a selection parameter
returns the data model of the dialog
updates the enabled states of the components
removes all connections of this port
returns the number of allowed values
updates the dialogs components from the data model
sets a new short parameter name
updates the data structure with the data from the components
sorts the tasks in the given layer by using the meridian methode
returns the data model of the dialog
updates the data model from the dialogs components
returns the specific allowed value
returns the short parameter representation
updates the data and closes the window
returns whether a cell are editable
sets the port whichs count is specified by this parameter
shows a file chooser dialog to choose the working directory
returns whether cells are foldable
returns a display friendly name
updates the enabled flags for the destination selection components
calculates how many crossings are in the whole graph
creates the displayed list from the model
called when the export button has been clicked
returns whether a cell is selectable
updates the data structure with the data from the components
returns whether a cell is a valid drop target for an other cell
updates the data structure and closes the dialog
returns the data model of the dialog
assigns a task group to this task
maximizes one site of the layout
sets a new task which preferences should be displayed
adds a component to the status bar
sets a new selected task parameter
calculates the positions of the task elements in the graph
gets the task group for this task
updates the displayed status text
sets a new selected status for the component
sets a new status text to be displayed
closes this tab
sets a new x position for the task
returns the parameter that is handles by this component
sets the location of the divider
called when the button has been pressed
sets a new dirty status
returns the current location of the divider
invokes that something has changed
fixes a divider location to one that is 100 valid
sets a new y position for the task
returns the size of the split pane without the divider and the insets
paint a cross as this button
sets the left component for the split pane
sets a new current file
sets the right component for the split pane
if updating list selection model is false this will reset the
generates a new coordinates string that should be displayed for the parameter
sets the components for the split pane
verifies the current pipeline and colors the pipeline status panel
sets a new task selection
removes a single pipeline tab
returns the graph model of this tab
sets a new project list
updates the ports depending on the count in the task data
sets the name for the project to generate
returns the type of this port
returns the data model of the dialog
sets the selected project
returns the project that has been selected
enables or disables some components depending on the checked states of the
returns the selection only status
adds a task to the model
sets the selection only status
updates the data model from the dialogs components
removes all tasks from the model
returns whether short task parameter names should be preferred
returns the task at the given index
sets whether short task parameter names should be preferred
returns the pipeline that is represented by this model
updates the dialogs components from the data model
returns the number of tasks handled by the model
updates the data and closes the dialog
creates a task cell from a task data
returns the undo manager for the graph in this tab
adds a new parameter to this task
sets an other task
sets the solution that is handles by this model
updates the dialogs components from the current settings
gets the specific parameter
adds a new project to the solution
updates the settings from the dialogs components
gets the number of incoming connections of a task
gets the path to a node
returns the number of parameters for this task
updates the settings and closes the dialog
returns whether the model has a solution set
displays a file chooser dialog to browse for the osmosis executable
updates the data task with the geometry of this cell
returns whether the model contains a project
displays a file chooser dialog to browse for the task library file
returns a specific in port
returns whether the model contains at least one pipeline
registers a new action
checks whether a action has been registered
returns a registered action by its class object
returns a specific out port
gets the undo manager of the currently open pipeline graph
creates the task browser
this function updates the enabled status of the action
this function updates the enabled status of the action
this function updates the enabled status of the action
returns the total count of in ports for this task
returns the total count of out ports for this task
gets the attribute string of a node
returns the result from the osmosis execution
should be invoked when e
gets the attribute string of a node
exports a whole solution to a file
returns whether this task is valid
focuses the project browser
exports a whole project to a file
creates a new main node for a save file
focuses the task browser
exports a single pipeline to a file
creates a new child node element for the document
focuses the preference browser
exports a project to a string
returns the project solution browser tree
returns the preference browser component
returns the center pane that handles the open pipelines
returns the next number to use for a names connection
creates the preference browser
adds all following tasks of the passed one to the queue
creates the menu bar
creates the project menu with its entries
creates the help menu with its entries
tries to handle a simple string
returns whether the token is a osmosis call
creates a new node for a named object
generates a task from its parameter name
gets the attribute string of a node
reads a node attribute and parsed it to a double value
reads a node attribute and parsed it to a integer value
whether this user has the given role
whether this user has any of the given roles
the actual login process
returns the string representation of this object
returns a list of all the files found in the directory
returns the my file found at the specific index
removes all rows from the data model
add a row to the data model
initializes the content of this window
returns the element at the specified row and column
sets an object at the specified row and column
compares this abstract pathname to another object
sets the marked flag
gets the value of the currency from property
gets the value of the return property
sets the value of the currency from property
sets the value of the return property
gets the value of the currency to property
sets the value of the currency to property
create an instance of
sets the value of the amount property
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
call this method regularly
checks if a dependency has already been resolved
checks if a plug in is resolved
format the string to adds the plug in name
load jar by adding it to the current thread class loader
gets the jar url
gets the plug in name
gets the plug in class name
test no class plugin
test no name plugin
set the endpoint address for the specified port name
get the persistence entity
set the persistence entity
get the persistence entity
set the persistence entity
get the persistence entity
return the human friendly name of the association
set the persistence entity
get the persistence entity
get the persistence entity
set the persistence entity
set the persistence entity
get the persistence entity
set the persistence entity
get the persistence entity
get the persistence entity
set the persistence entity
set the persistence entity
override the object method to give a usable human readable
override the object method to give a usable human readable
override the object method to give a usable human readable
override the object method to give a usable human readable
override the object method to give a usable human readable
override the object method to give a usable human readable
override the object method to give a usable human readable
utility for building string
override the object method to give a usable human readable
override the object method to give a usable human readable
override the object method to give a usable human readable
override the object method to give a usable human readable
override the object method to give a usable human readable
get the persistence entity
try to login the using the user supplied parameters
set the persistence entity
send a new reset password to the supplied email address
is the date in the range
delete the membership entity with the id
delete the database entity object
called before the start of a transaction
called at the end of a transaction
delete the membership type entity with the id
set the paid flag to true for the membership entity with the id
human friendly name of person
servlet implementation of http post
servlet implementation of http get
called by container when context is initialized
called by container when context is destroyed
should the servlet process the class
format date in ical file format and handle null dates
extract the human readable label for the method name
write out the command buttons
write out page footer
find the entity name name form the class name
you need to get rid of the test persistance
adds an email
handles on click event on the submit button
adds a profile action
validates users password on the server
updates contacts profile action
set the time that the count up timer is in reference to
sets the format string used for display
the same as calling
insert into table
insert into table from table
creation of infinite table
creation finite table
loads and run script
print status about db
here are methods for physical access in data for tables
this is for parser
initialize index for table with it number
initialize index for table with it number
must be closed before calling this method
it compares to its common length
read without values
create index on table
close every table structure and release its resources
here are methods which extends main table class
create index on table
this methods are private but maybe some will be public later
deletes record by its sequence number
method for index reading
method for index reading
method for index reading
its checks for number of atributes dont need value
result without values
result with values
copy with values
copy without values
there must be values
there dont need to be values
returns its definition with atribute type and position
returns its definition there dont need to be values
returns its definition there must be values
returns number of values in structure
returns number of atributes in structure
sets all the parameters of a query
adds the order by parameter to a query
locates the order by clause if there is one
intercepts execution and checks that the user has appropriate permissions
sets the number attribute of the extenso object
description of the method
adds a feature to the remainder attribute of the extenso object
description of the method
finds the connection with the given connection string
retrieves a value from a palo database and allows the ui
retrieves the name of the first element within a dimension
retrieves the index of the element within all elements of a dimension
retrieves the number of elements within a dimension
retrieves the number of child elements of an element within a dimension
returns the number of parents a certain element has
retrieves the depth of a certain element within a dimension
returns the level of a certain element within the consolidation hierachy
returns the type of the element
returns the maximum level within a dimension
reads hidden data from a cell
re load font
close splash screen
returns a prolog source text representation of this jvoid
returns a debug friendly representation of this jvoid
the boolean value which this jpl
returns a debug friendly representation of this jboolean
confirm password from local table
should have the parameter a value
return the command hashtable
should have the parameter a value
returns the combined password type and expression as the mutable block
returns the type of mutable password
returns the expression of the mutable block
returns the calendar value for the specified enum
returns the mutable element of the password
this will shift the alphabet a z by the argument value
returns the start date for the zodiac
returns the end date for the zodiac
passing null will be treated as a string value
return whether the device is an iphone or i pod touch
return whether the device is in the tablet tier
return whether the device is in the iphone tier
return whether the device is in the rich css tier of mobile devices
return whether the device is a generic less capable mobile device
initialize key stored values
detects if the current device is an i phone
detects if the current device is an i pod touch
detects if the current device is an i pad tablet
detects if the current device is an i phone or i pod touch
detects any i os device i phone i pod touch i pad
detects any android os based device phone tablet and multi media player
detects if the current device is a small ish android os based device
detects if the current device is a self reported android tablet
detects if the current device is an android os based device and
detects if the current device is a google tv
detects if the current browser is based on web kit
detects if the current browser is the symbian s60 open source browser
detects if the current browser is any black berry
detects if the current browser is on a black berry tablet device
detects if the current browser is a black berry device and uses a
detects if the current browser is a black berry touch
detects if the current browser is a black berry device and
detects if the current browser is a black berry device and
detects if the current browser is on a palm os device
detects if the current browser is on a palm device
detects if the current browser is on an hp tablet running web os
detects if the current browser is a
check to see whether the device is any device
detects whether the device is a brew powered device
detects the danger hiptop device
detects opera mobile or opera mini
detects opera mobile on an android phone
detects opera mobile on an android tablet
detects whether the device supports wap or wml
detects if the current device is an amazon kindle
detects if the current device is a sony playstation
detects if the current device is a nintendo game device
detects if the current device is a microsoft xbox
detects if the current device is an internet capable game console
detects if the current device supports midp a mobile java technology
detects if the current device is an archos media player internet tablet
detects if the current browser is a sony mylo device
the longer and more thorough way to detect for a mobile device
the quick way to detect for a tier of devices
the quick way to detect for a tier of devices
the quick way to detect for a tier of devices
the quick way to detect for a tier of devices
get value returns the value as a string
set parser sets the adapters parser reference
append appends a node to the container
insert inserts a node into the container at the specified position
remove removes the specified node from the container
set handler sets the adapters object handler
item returns the node at the specified position
get handler returns the adapters object handler
get length returns the number of items being stored in this
get componenttype returns the type of the values of this array
parse node parses the next node from the object stream
parse stream invokes the associated parser and completely materializes
get value returns the value as a string
get value returns the value as a string
get value returns b the b atomic value for this map
append appends a node to the container
insert inserts a node into the container at the specified position
item returns the node at the specified position
set parser sets the parser instance that is associated with
parse parses the dl stream using the parser instance that
parse parses the dl stream specified by the input source using a
set handler assigns the handler that will be called back to
parse parses the dl stream specified by the system id using a
parse parses the dl stream specified by the input source using a
parse parses the dl stream specified by the system id using a
set whitespace sets the whitespace reporting flag for the parser
is whitespace returns whether or not whitespace is reported
set comments sets the comment reporting flag for the parser
is comments returns whether or not comments are reported
parse events from the stream to completion
getter of the rank property of the card class
setter of the rank property of the card class
getter of the suit property of the card class
setter of the suit property of the card class
getter of the color property of the card class
setter of the description property of the card suit enumeration
this function is only called by deserialization
gets the position and size of the window in partial scan mode
sets the position and size of the window in partial scan mode
determines if a specific color code can be set in partial scan mode
sets the specified color code for partial scan mode
sets the specified bytes per packet for partial scan mode
returns a blocks color
closes a region input stream
returns a chunk input stream at x z
returns a regions x coordinate
returns a regions z coordinate
returns a stream to a chunk file at a given x z
returns a chunks root tag
returns a region input stream
apply illumination to a pixel
apply occlusion to a pixel
returns true if a block is an emitter
returns true if a block is to be excluded
returns true if a block is not an air or water block
renders a series of region files
returns a maps maximum height
returns a maps minimum height
renders a series of region files
set the heading of this column
set the sortable flag for this column
get the value of the sortable flag for this column
set the state of the binary switch to on
set the state of the binary switch to off
set the state of the binary switch
check if the switch is currently in the on state
test the validity of the input in this widget
check if the switch is currently in the off state
get the radio button widget representing the on switch for this widget instance
get the radio button widget representing the off switch for this widget instance
returns the current version information of gwt15widgets as a string
return the ith row of the table
retrieve the widget at the specified cell in the table
store the specified widget at the specified cell in the table
add a new row to the table
add a new row to the end of the table
replace a row with the given data
sort the model on the given column
add a listener to this model
return the column descriptor for the given column offset
remove the given listener from this model
remove all the listeners from this model
fire the model cell updated event for the given cell on this model
fire the model sorted event for this model
test in jpf without limits
run the program in jpf
report the outcome of any test runs
note that the state is accepting
is this state in the current path
is the named state part of an accepting loop
add an edge to the graph and check whether a loop is created
prune a state from the graph
conjunctions are true if both conjuncts are true
is this state and accepting one according to the graph
whether this is an until property
setter method for the output level
checks the truth of the formula agent believs fmla
whether this is a release property
getter method for the goal
is this a proposition that forms a contradiction with the properties in s
getter method for the agent
disjunction is true if a disjunct is true
is this a proposition
two or formulas are equal if their properties are equal
getter method for the in l
getter method for the in r
and properties do not split the state
detects whether this buchi state is fully expanded or not
two or formulas are equal if their properties are equal
detects whether this buchi state is not fully expanded
checks for violations of any properties that can be detected in the current
or properties split the automata state
initialise the automation by expanding the states and setting current states
checks whether two buchi states can be identified
is this an accepting state
given a set of new buchi states this method adds them to the
checks the truth of the formula agent believs fmla
checks whether the automaton duplicates a fully expanded state
is this state accepting and are all future states accepting i
add new buchi state names to the incoming field
returns a state that matches an existing state
checks the truth of the formula agent believs fmla
getter method for the formula
getter method for the multi agent system
removes a state from the buchi automata
checks the truth of the formula agent believs fmla
returns true if one of the current states is an accepting state
is this an accepting state
getter method for the mcapl formula to be believed
this indicates that all states reachable from this one will be accepting
is the next state empty
add a new state
checks the truth of the formula agent believs fmla
whether this is a true or not an atomic proposition
add a buchi state to the statesby incoming lists with a particular key
is this a proposition that forms a contradiction with the properties in s
getter method for the action
false is equal to fale
getter method for the agent
return a new number for the next state created in building the automata
getter method for the phi in phi u psi
is this a proposition that forms a contradiction with the properties in s
getter method for the psi in phi u psi
is this a proposition
whether this is a true or not an atomic proposition
obviously this is an until property
checks the truth of the formula agent has intention fmla
an until formal is equal to another until formula with the same two
negation by failure
is this a proposition that forms a contradiction with the properties in s
getter method for the phi in phi r psi
getter method for the psi in phi r psi
two not formulas are equal if their propositions are equal
getter method for the proposition
obviously this is a release property
an relase formal is equal to another release formula with the same two
is this a proposition that forms a contradiction with the properties in s
informs the thread whether it should continue running
wakes up the agent and registers a notificaiton
called when the thread starts
implementation of the check method for a jpf property
dummy method call to trigger actions in the mcapl listener
helper method for check
succeeds if the agent reports it believes a formula
what do do if the system reaches a search constraint e
succeds if the agent reports it has intention phi
what do do when jpf back tracks the system
succeeds if the agent reports it has a goal
getter for the agent name
reporting of the nature of the error by jpf
sets the print writer to something
sets a notification for the agent
removes a notification for the agent
returns the agent with a given name
getter method for the specification
returns true if the agent has no outstanding notifications
setter method for the outputlevel flag
returns the status of the agent thread
check the multi agent sysem still satisfied the specification
starts the controller and the underlying system and agents
hacky method to trigger the listener to update its version of the
adds a new property to the specification
create the automaton from the initial properties negating them in the
wake all the agents in the system
treating the intial properties as a conjunction negate this property and
wake a particular agent
add an action the agent can take
checks to see that all agents are asleep and no notifications are outstanding
dummy procedure for triggering the listener
check an agent is all done
getter method for the resulting mas
helper method that returns true if a mental state contains no achieved goals
adds a plan to the plan library
adds a plan from itself to the lbirary
remove a goal
adds a belief to the belief base annotating it with a source
adds a belief to the belief base indexed by n
adds a belief to teh belief base indexed by n
getter method for the number representing the stage
compare two stages
adds a perception for a specific agent
adds a message to the queue
detects which agent the top message on the queue is for
returns the top message in the queue
nothing is pending for this agent in the environment
helper function for nothing pending to check message queue contents
getter method for the environment assumed to be an saapl environment
compare two stages
when a pickup action is executed the environment stores new perceptions
when a pickup action is executed the environment stores new perceptions
overrides a function in default environment and pretty prints performatives nicely
adds a perception for a specific agent
adds a message to the queue
detects which agent the top message on the queue is for
returns the top message in the queue
when a pickup action is executed the environment stores new perceptions
nothing is pending for this agent in the environment
always leave p on an on channel token
given a starting index return the index of the first on channel
reset this token stream by setting its token source
move the input pointer to the next incoming token
add n elements to buffer
for every node in this subtree make sure its start stop tokens
reset this token stream by setting its token source
given a start and stop index return a list of all tokens in
grab all tokens from stream and return string
set the parent and child index values for all child of t
reset the parsers state subclasses must rewinds the input stream
base tree doesnt track child indexes
base tree doesnt track parent pointers
match the wildcard in a symbol
walk upwards and get first ancestor with this token type
instruct the lexer to skip creating a token for current lexer rule
return a list of all ancestors of this node
print out a whole tree not just a node
currently does not support multiple emits per next token invocation
the standard method called to automatically emit a token at the
report a recognition problem
return the text matched so far for the current token or any
set the complete text of this token it wipes any previous
compare two stages
get number of recognition errors lexer parser tree parser
recover from an error found on the input stream
setter for the mas an agent is within
transforms the initial beliefs into a belief base and the initial goals
getter method for the agents name
getter method for the agents name
adds a new initial goal
push a rules follow set using our own hardcoded stack
add a new inital belief
select an intention from a linked list of intentions
returns the position of a chosen plan in a list of applicable plans
select a plan applicable to an intention from a linked list of plans
updates an records of plan usage
getter method for the illocutionary force
setter method for the content
getter metod for the content
setter method for the sender of the message
overridable function for scoring a plan
setter method for the receiver of a message
given a rule number and a start token index number return
getter method of the message id
setter method for the message id
getter method for the messages annotations
setter method for the message annotation
setter method for trackplanusage
produce a term to represent the message
apply a unifier to the message
has this rule already parsed input at the current index in the
converts the intention row to a string for printing
getter method for the intention rows event
setter method for the intention rows annotation
getter method for the intention rows annotation
change the top guard on this intention row
drop n items from the deed guard and unifier stacks
does this row represent an unplanned event
getter for default belief base name
return how many rule input index pairs there are in total
sunifies is a function in the ail interface for standardise
whether one source is relevant to another
sunifies is a function in the ail interface for standardise
whether a literal is consistent with the agents belief base
clear annotations from a variable
getter method for the agents belief base
suspends the intention
get a beliefbase indexed by a number
is the intention suspended
unsuspend the intention
setter method for the intentions source
get a beliefbase indexed by a stringterm
getter method for the intentions source
setter method for the receivers of a message
produce a term to represent the message
getter for the plan id
get a beliefbase indexed by a string
getter method for the plans unifier
helper function for equals in comparable interface
is the intention locked to the agents current intention
converst the applicable plan to a string
smaller print function
lock the intention to the agents current intention
unlock the intention from the agents current intention
set the belief base
puch a new intention row on top of the intention
view but do not remove the top row of the intention
pop and return the top row of the intention
the number of rows in the intention
return the first check intention row that unifies with a
remove all intention rows up to and including the first that
convert the intention to a string
adds a belief to the belief base annotating it with a source
finds the trigger event associated with the nth deed on the deed stack
finds the unifier associated with the nth deed on the deed stack counting
the guard associated with the nth deed on the deed stack counting down
pushes a new intention row onto the intention
reset the hash code
drop n deeds from the intentions deed stack along with their associated
drop n events from the intention along with their associated deed stacks
setter for db num converts from in to string term
the top deed on the deed stack
is the deed an action
is this a no plan yet deed
the top event on the event stack
is this a deed yes
is this a backtrack deed yes
is this a locking or unlocking deed
the top guard on the guard stack
apply a unifier to the deed
produce a term representing the deed that can be used in unification
adds a belief to the belief base indexed by n
is this a null deed
the top unifier on the unifier stack
add a literal to the belief base
removing a literal from the belief base
drop the top deed with associated event etc
convert the belief base into a string for printing
add a literal to the bel entry
remove a literal from the bel entry
adds a belief to teh belief base indexed by n
add a plan to the library
compose a new unifier with the top unifier of the intention
adds a belief to the belief base indexed by n
replace the top unifier of the intention
the intention has no plan defined as a deed stack consisting of a
is the intention empty
adds a new belief base with a particular index
change the top guard of the intention
add a plan library to this one
add a list of plans to the library
getter method for the plan library
remove a plan represented by the label i p label i
remove the plan with label i p label i
return the number of plans in the library
setter method for the plans label
setter method for the plan library
getter method for the plans label
setter method for the plans trigger event
setter method for the plans context
setter method for the plan body
setter method for the inference rules
presumably for pretty printing
setter method for the plan prefix
setter method for the unique id
getter method for the rule baes
getter method for the goal type
getter method for the plans trigger event
getter method for the goal base
setter method for the goalbase
is this plan relevant to the current intention i
convert the goal to a guard
returns either the variables or the literal
returns the literal part of the goal
add a rule to the rule base
since goals get used in unification we need to be able to annonymise
get the literal functor
get the literal term size
add a term to the literal
get the ith sub term of the literal
returns this plan in a string compliant with as syntax
represent as a string
generate a string for the goal type
adds a plan to the plan library
return the predicate indicator for swift lookup
adds a plan from itself to the lbirary
get the literal goal term that is contained in the structure
getter method for the constraint library
setter method for the constraint library
adds a constraint to the constraint library
this is the same as set literal
getter method for the current intention
setter method for the current intention
may be necessary to make an ail structures variables anonymous
setter method for the set of intentions
return those bits of the structure literal or term relevant
true if this structure is about the content or context of an agent
true if this structure is about a constraint
true if this structure is about a plan
getter method for the currently applicable plans
returns the name of the group that the structure refers to
setter method for the agent content
useful for quick and dirty comparisons
add a new agent to the content
checking two variables are equal
getter method for the action type
setter for the actiontype
make a hard copy of the terms
remove an agent from the content
gets the operation of this expression
gets the lhs of this expression
gets the rhs of this expression
is a unary expression
setter method for the constraints deed
setter method for the constraints guard
getter method for the constraints deed
is this constraint relevant to the current intention i
setter for the agents context
returns this constraint in a string compliant with as syntax
convert the constraint to a term in for unification purposes
adds an agent name to the context
removes an agent from the context
setter method for the currently applicable plans
make a hard copy of the terms
setter method for the annotations
gets the operation of this expression
gets the lhs of this expression
gets the rhs of this expression
setter method for the actions
returns true if the pred has at leat one annot
add a constraint to the library
import annotations from another predicate i p i
add a constraint library to this one
setter message for the agents inbox
add a list of constraints to the library
removes all annots in this pred that are in i p i
is this literal a negated
returns true if all this predicate annots are in ps annots
setter method for whether or not the literal is negated
adds a source annotation like source i ag name i
add new messages to the agents inbox
returns the sources of this pred as a new list
clear the inbox
returns true if this pred has a source i ag name i
grounds a variable set a value for this var e
setter method for the agents outbox
returns the value of this var
add a new sent message to the agents outbox
returns true if the expression was already evaluated
getter method for the reasoning cycle
set the value of this expression by calling solve
make a hard copy of the terms
gets the operation of this expression
setter method for the reasoning cycle
getter method for the multi agent system
setter method for the message annotation
getter for the illocutionary force
getter for the recipeint
getter for the thread id
getter for the message content
getter method for the environment
getter for the actions message returns null if the message hasnt
yes or no does the agent believe a guard
remove a goal
convert the guard to an explicit conjuction term
add a new gbelief conjunct to the guard
does an event entail the trigger of this plan
succeeds if the guard is trivial ie
check none of the guards to be disbelieved are believed
sets the current next solution if it isnt set already
stop the agent completely
return the gbelief as a term i
setter for the db num
send the agent to sleep stop processing the reasoning cycle until notified otherwise
getter for the db num
whether or not this is the distinguished true marker
clone this gbelief useful when propagating guards through intention structures
flag a gbelief as a varialble if the literal is a variable
getter method for wanting to sleep
sets the agents fields for it to be awake
is a belief a logical consequence of a specific event
unsuspends all intentions
is this a start event
true if all the agents intentions are suspended
is the event a variable as in a reactive plan
checks whether the agent is running
returns functor symbol arity
make a deep copy of the terms
print the agent
returns the i th term first term is 0
replaces all variables of the term for unnamed variables
replaces all variables of the term for unnamed variables
one reasoning step from the point of view of the model checker
whether the agent should keep reasoning
returns the name of the agent
whether the agent believes a formula
getter for the recipeint
getter for the thread id
getter for the actions message returns null if the message hasnt
removing a literal from the belief base
does the belief base contain this literal
check whether the belief base contains something with a particular
convert the belief base into a string for printing
add a literal to the bel entry
does this bel entry contain some literal
setter method for the stage of the reasoning cycle
checks the socket is correctly initialised
write to the socket
check the socket is ready for reading
read a line from the socket
close the socket
for running experiments on plan indexing styles
this is the effect of excution of an action on the environment from
there are no outstanding percepts or messages for this agent
is this being run as a separate thread to the agents
sets a debugging outputlevel for the mas
write to the socekt
check socket is ready
close the socket
starts calculator thread
stops calculator thread
reads the boolean value of the sensor
reads the raw value of the sensor
reads the normalized value of the sensor
returns scaled value depending on mode of sensor
activate an rcx light sensor
passivate an rcx light sensor
add and abstraction engine
stolen from lego jason nxt by andreas schmidt jensen
compare two stages
add and abstraction engine
notify the relevant listeners that the perceptions have changed
notify all listeners about changes of shared beliefes
setter for connected to matlab
when a calculation is requested add it to the queue
stop the thread
when a calculation is requested add it to the queue
when resources are available actually do the calculation
make sure index i in tokens has a token
is this state in the current path
is the named state part of an accepting loop
add an edge to the graph and check whether a loop is created
prune a state from the graph
add an edge to the model
create the automata from a negated property
getter for the jpf state number
equate states associated wit the same jpf state number
getter for the to state of this directed edge
getter for teh from state of this directed edge
overridable method for annotating edges
prune this product run
if there was a loop do we have an accepting run
getter for the tuple should only be used in testing equality
overridable method for annotating model edges
getter for the program model
getter for the model state
does this tuple contain a model state
setting up the method infos for storage
helper method for check
implementation of the check method for a jpf property
what do do if the system reaches a search constraint e
what do do when jpf back tracks the system
reporting of the nature of the error by jpf
adds a plan to the plan library
adds a belief to the default belief base annotating it with a source
adds a belief to the belief base indexed by n
removes a belief from the belief base indexed by i
adds a goal to the goal base indexed by i
some goals are conjunctions we split into conjuncts to determine
remove all achieved goals from the agent
adds a plan from itself to the lbirary
updates all the plan usage information
adding a belief rule to the agent
get a string with more details about the internals of the agent
select an intention from a linked list of intentions
goal messages are part of conversations
setter for conversatoin id
for controlling experiments in plan indexing algorithms
add an agent to the list the environment knows about
remove the perceptions about the conversation from agents
adds a perception for a specific agent
removes a perception for one agent
clears the list of messages of a specific agent
add a percept listener to the environment
notify the listeners that the perceptions have changed
notify the listents that a particular agents perceptions have changed
pretting printing for actions specifically sending of messages
return the string to represent various performatices
compare two stages
add an agent to the list the environment knows about
clears the list of messages of a specific agent
adds a perception for a specific agent
initialises the agent
produce a term representing the deed that can be used in unification
select an intention from a linked list of intentions
setter method for the source of the plan
getter method for the source of the plan
getter method for the agents belief base
make a deep copy of the terms
returns the i th term first term is 0
replaces all variables of the term for unnamed variables
replaces all variables of the term for unnamed variables
set the belief base
setter for the actiontype
getter method for the source of the constraint
adds a belief to the belief base annotating it with a source
may be necessary to make an ail structures variables anonymous
convert the constraint to a term in for unification purposes
return those bits of the structure literal or term relevant
returns the name of the group that the structure refers to
produce a term to represent the message
adds a belief to the belief base indexed by n
make a hard copy of the terms
sunifies is a function in the ail interface for standardise
sunifies is a function in the ail interface for standardise
adds a belief to teh belief base indexed by n
clear annotations from a variable
set the tail of this list
grounds a variable set a value for this var e
get the last list term of this list
add a term in the end of the list
add a list in the end of this list
getter method for the plan library
setter method for the plan library
setter method for the inference rules
getter method for the rule baes
add a rule to the rule base
adds a plan to the plan library
adds a plan from itself to the lbirary
getter method for the constraint library
setter method for the constraint library
adds a constraint to the constraint library
returns true if the pred has at leat one annot
import annotations from another predicate i p i
removes all annots in this pred that are in i p i
returns true if all this predicate annots are in ps annots
adds a source annotation like source i ag name i
returns the sources of this pred as a new list
returns true if this pred has a source i ag name i
return the gbelief as a term i
getter method for the goal base
setter method for the goalbase
represent as a string
add new messages to the agents inbox
gets the lhs of this expression
gets the rhs of this expression
setter method for the plans trigger event
setter method for the plans context
setter method for the plan body
presumably for pretty printing
setter method for the plan prefix
getter method for the plans trigger event
returns this plan in a string compliant with as syntax
setter for the db num
setter for db num converts from in to string term
getter for the db num
add a new gbelief conjunct to the guard
getter for the recipeint
getter for the message content
make a hard copy of the terms
make a hard copy of the terms
gets the lhs of this expression
gets the rhs of this expression
convert the deed to a string for printing
add a new agent to the multi agent system
adds a new initial goal
add a new inital belief
adds a belief to the belief base annotating it with a source
add a rule to the rule base
adds a plan from itself to the lbirary
produce a term to represent the message
single source config constructor does not process stack
setter for the environment
add a new agent to the multi agent system
remove an agent from the multi agent system
get an agent in the multi agent system
allows configuration of parameters within environments for individual applications
add a vehicle to the environment
currently nothing happens if a detectable vanishes
clear the percepts
perform any application specific finalisation
add an agent to the list the environment knows about
we use the name of the agent as a name for the vehicle
add a message to the inbox
remove a percept listener from the environment
remove a message from the inbox
clear the inbox
the conditions under which an agent reasoning cycle should be stopped
add a percept to the sensors
remove a percept from the sensors
clear the sensors
add a sensor to the vehicle
set the vehicles environment
helper method for pretty printing actions during logging
overridable method for printing illocutionary forces
remove a percept that unifies with the one given
adds a perception for a specific agent
removes a perception for one agent
clears the list of perceptions of a specific agent
print the agent
add an agent to the list the environment knows about
notify the relevant listeners that the perceptions have changed
whether the agent believes a formula
when a calculation is requested add it to the queue
disjunction is true if a disjunct is true
checks the truth of the formula agent believs fmla
conjunctions are true if both conjuncts are true
check against a set of propositions rather than a state
whether this is a true or not an atomic proposition
updates the current truth value of this proposition
getter method for the current truth value of this proposition
getter method for the formula
getter method for the mcapl formula to be believed
getter method for the goal
getter method for the action
getter for the string representing the actual content of the term
negation by failure
is this a proposition that forms a contradiction with the properties in s
an relase formal is equal to another release formula with the same two
wakes up the agent and registers a notificaiton
wake all the agents in the system
wake a particular agent
a custom format implementation that is designed for brevity
check the multi agent sysem still satisfied the specification
adds a new property to the specification
setter method for the outputlevel flag
create the automaton from the initial properties negating them in the
treating the intial properties as a conjunction negate this property and
when a pickup action is executed the environment stores new perceptions
starts the controller and the underlying system and agents
checks to see that all agents are asleep and no notifications are outstanding
when a pickup action is executed the environment stores new perceptions
to be called just after the constructor
to be called just after the constructor
useful to redefine if you need to use init params
returns the is total
returns the same line as
sets the feuille xsl fo
sets the feuille xsl
sets the compte agregation data
returns the compte agregation data
returns the societes xml
sets the societes xml
returns the comptes data
returns the sd
sets the spd
returns the spd
sets the sd
returns the mvts data
sets the mvts data
sets the comptes data
returns the current hierarchie
returns the hierarchies xml
sets the hierarchies xml
returns the current period
sets the current hierarchie
sets the current period
sets the numero pere
sets the sens credit
sets the sens debit
returns the journal data
sets the hierarchie
sets the journal data
sets the lignes mvt
n cessaire pour marshalling
returns the compte data
returns the mvt data
sets the compte data
sets the mvt data
sets the compte benefice
sets the compte perte
sets the journal cloture
sets the journal cloture
sets the journal cloture
sets the journal cloture
sets the accounting currency
sets the exercices
sets the mot
returns the soc pk
sets the soc pk
returns the j password
returns the j username
sets the j password
sets the j username
returns the numero
sets the numero
returns the numero
sets the numero
sets the soc pk
returns the anc key
sets the anc key
returns the action todo
sets the action todo
returns the numero
sets the soc pk
sets the numero
returns the action todo
sets the action todo
returns the action todo
sets the action todo
returns the decalage
sets the decalage
returns the hierarchie
returns the numero
sets the numero
returns the is free
returns the current hierarchie
sets the current hierarchie
returns the current period
sets the current period
return the max number of clock ticks
set the max counter for the clock
start the clock
inits the timer on start or on resume
interrupts the clock counting
resume the clock execution
stop the clock
sets a clock to adjust visually
prints the commandline help and exists with the given code
print the wake on lan version and exit
prints the commandline help and exits with code 0
returns the machines ethernet address
sets the machines
loads this configuration from the file returned by
saves this configuration to the file returned by
sets the host the magic packet will be sent to
saves this configuration to the given file
sets the ethernet address
sets the name
sets the port
sets the comment
returns the currently used configuration
a human readable account of the query
this property is true the criterium applies to any rubric or organ
a human readable account of the criterium
unsupported for now
object can be string image or item
unsupported for now
method gets actual controller from conversation and render its content to
start conversation and initialize it
resize current map and adds one new map at the end of array
resize current map and substracts one map from the end of array
render view is been called from micro midlet on refresh
prepare conversation to forward od backward next controller
set attribute to last map in map array
returns instance of controller in param
set attribute to last map in map array
basic action to go backward from controller
get attribute from last map in map array
get attribute from last map in map array
returns new instance of cancel controller from conversation
returns cancel controller class from current conversation
remove attribute from current map conversation
return actual midlet from conversation
return actual controller from conversation
switches a display to previous displayable of the current displayable
returns an initiliazed instance of image component
sets the number to contact in compliance with the inter com interface
sets the number to contact in compliance with the inter com interface
called when midlet is started
called when midlet is paused
called to signal the midlet to terminate
before compose composer page
cleans up the keyboard
dir list add
search oustanding record
this method checks that the certificate path is a valid
initialize the ssl socket factory
tests a successful document in this case by asking for an empty
tests a document where fetch version should throw an i o exception
tests a document list where the first document is fine and for
tests get attribute value with categories indexed
tests a document where fetch version should throw a
tests get attribute value with a null attr info
tests that the client must not be null
tests that the checkpoint must not be null
tests that all the other constructs arguments can be null
as an aside excluded volume types and included location nodes are
factory method creates a client value without underlying llvalue
factory method creates a client value with an underlying assoc
factory method creates a client value with an underlying list
this implementation only works on empty values
continue the setup after initializing the connector
tests that showing hidden items doesnt include a query restriction
tests that subtype numbers in the show hidden items property are
tests the default excluded volumes
tests the reverse of default excluded volumes with the undelete
tests a match against excluded location nodes
tests no match against either excluded volume types or
tests an excluded volume type that does not exist
tests a volume excluded by id that does not exist
tests the default authorization manager
tests configuring a custom authorization manager
tests configuring a custom authorization manager that implements
constructs a sql query string from the
a simple test that verifies that at least one of the connecion
tests enable ntlm which requires http username and http password
tests enable ntlm which requires http username and http password
tests enable ntlm which requires http username and http password
tests the check for system administration rights
tests show hidden items with an invalid null value
tests show hidden items with empty or false values
tests show hidden items with all or true values
tests show hidden items with numeric subtype values
tests show hidden items with all plus numeric subtype values
tests show hidden items with other non numeric values
gets the class under test
tests disjoint included and excluded nodes
tests disjoint included and excluded nodes
tests excluded nodes
helper method to shrink the text in the tests and hide the
parses a string representation of a date according to the the
parses the form snippet using the xhtml strict dtd the
a convenience method for logging
sets the shared password to check for
sets the list of authentication managers to try
uses the provided resource bundle to look up this
logs the exception
tests the default empty config form
gets a traversal manager to implement query based traversal
gets an authentication manager to implement per user authentication
sets the host name or ip address of the server
sets the livelink server port
the producer thread processes requests for item content
waits for a request and calls code fetch version code to fill
sets the database connection to use
tests prepopulating a config form
sets the livelink username
tests the validate config method with input which fails during
tests the validate config method with input which doesnt map to
sets the livelink password
gets a new instance of the configured content handler class
tests the validate config method with input that maps to a valid
sets the batch size
sets a flag indicating that http tunneling is enabled
tests the validate config method with http tunneling disabled
tests the validate config method with http tunneling disabled
sets the livelink cgi path to use when tunneling lapi
tests the validate config method with http tunneling disabled
sets the https property
sets the enable ntlm property
sets a username to be used for http authentication when
returns a form snippet containing the given string as an error message
sets a password to be used for http authentication when
sets the verify server property
sets the ca root certs property
handle stepparents for volume nodes where parent id object id
sets the livelink domain name
extract the livelink object id from the supplied docid string
returns cached document if not expired
the ldap provider url
the ldap security principal string for
sets the base display url for the search results e
formats and returns a failed instatiation message from
marks this output stream as closed
returns the exceptions message or the exception class
returns a message containing the description text the
sets the display action for each subtype
gets the category attribute values for the indicated
determine whether this field contains a user id or group id value
set the inserted items portion of the checkpoint
adds a property to the property map
adds a property to the property map
gets the llcookie value for this session
gets the matches for appending to the final descendants string
adds a property to the property map
set the checkpoint for the last inserted items candidate
gets a comma separated string of the current node ids
advance the checkpoint passed the last candidates
inserts a new matching node into the tree
returns true if some component of the checkpoint has changed
merges a node into its parents node
restores the checkpoint to its previous state
logs a warning for orphans discovered in the hierarchy
we dont control the relative display url patterns
tests authenticating with lapi
tests authenticating with lapi through the livelink cgi process
tests authenticating with lapi through a proxy to the
tests using the directory services enabled web server with
tests using the directory services enabled livelink through
establishes a session and obtains an authorization manager
tests using an authentication manager chain with only the
tests using an authentication manager chain with the ldap
sets a property which indicates that any username and
creates the session and authentication manager
sets the properties for direct lapi connections
sets the properties for livelink cgi connections
sets the properties for authentication through a proxy in
sets the properties for authentication through a livelink
sets the properties for authentication through the
sets a flag indicating that a separate set of
establishes a session and obtains an authentication manager
tests properties for a direct lapi connection
tests adding a domain
tests the validate config method with http tunneling enabled
tests the validate config method with http tunneling enabled
tests tunnelling with http authentication
tests the validate config method with http tunneling enabled
tests disabling ntlm
tests enabling https
tests the properties used by create client username
tests the properties used by create client username
tests the properties used by create client username
factory method creates a client value without underlying llvalue
factory method creates a client value with an underlying assoc
factory method creates a client value with an underlying list
wraps the code llsession
sets the start date property
sets the livelink public content username
sets the livelink public content display url
sets the travsersal username
sets the node types that you want to exclude from traversal
sets the volume types that you want to exclude from traversal
sets the fields from object info to index
sets the fields from version info to index
sets the categories to include
sets the categories to exclude
set the rules for handling the object info
set whether this connector instance will track deleted items
return true if this connector instance will track deleted
sets whether or not to use the dtree ancestors table for hierarchy data
gets whether or not to use the dtree ancestors table for hierarchy data
sets the concrete implementation for the code genealogist code
sets the option to include the domain name with the username for
sets the windows domain name to be used for user
sets the host name or ip address for authentication
sets the port to use
sets the database connection to use when
sets the https property
sets the enable ntlm property
sets the livelink cgi path for use when tunneling requests
sets the verify server property
sets the ca root certs property
sets the livelink domain name
sets the concrete implementation for the
sets the feed type
gets the livelink public content authorization manager
sets whether or not to try using lowercase usernames
gets the state of this module frame as a
insert the methods description here
insert the methods description here
estimate and bootstrap std
insert the methods description here
initiates computation of necessary data objects by the data manager if
insert the methods description here
insert the methods description here
shows the respective svar model panel
insert the methods description here
gets the global symbol table used for this model frame
for enabling disabling some components
gets the global symbol table stored in this state
sets the global symbol table to be stored in this state
sets the selection instance to be stored in this state object
gets the 3x1 array indicating the selection of constant trend seasonal
sets the 3x1 array indicating the selection of constant trend seasonal
gets the svar symbol table stored in this state
sets the svar symbol table to be stored in this state
call test procedure
call test procedure
selects deselects s2 s estimation
changes data table from editable to not editable and back
called when the component is shown or hidden
checks range for the cointegration rank
selects deselects two stage estimation
sets recomputation true and computes variable names
set to r 1 equations
property change method comment
adjust selectable coint relations of necessary
checks range for exogenous lags
show panel to input restrictions
clears the selected deterministics to the ec term
do not estimate any coint relation set all manually if selected
initializer for the dialog for optimization settings
this method initializes this
initiates computation of necessary data objects by the data manager if
invokes estimation if card is shown
this method initializes j check box
this method initializes j check box1
this method initializes j check box
this method initializes j check box2
this method initializes j check box
invokes the stage one settings dialog
this method initializes j check box1
insert the methods description here
gets the global symbol table
initializer for the dialog for stage one settings
sets the default values
displays dialog to specify optimization settings
gets the data object with the names of the beta coefficients
initializer for the dialog for structural coefficients settings
insert the methods description here
changes data table from editable to not editable and back
insert the methods description here
insert the methods description here
initializer for the dialog for optimization settings
insert the methods description here
this initializes all data managers such that they register themselves to
gets the svec symbol table stored in this state
sets the svec symbol table to be stored in this state
gets the data object with the restrictions on beta selected by the user
gets the data object with the r vector selected by the user
endogenous must have py t rows where t is the effective number of
exogenous must have px t rows where t is the effective number of
insert the methods description here
insert the methods description here
show components notification
insert the methods description here
insert the methods description here
insert the methods description here
insert the methods description here
insert the methods description here
insert the methods description here
confirm settings check if external specified relations have at least 2
invokes the vecm procedure call
sets the display to show whether restrictions on beta are set or not
gets the specified matrixc of structural coefficients
sets the data necessary for the display
this method initializes this
this method initializes j panel
adjust the display of the selectable ec equations
this method initializes j panel2
this method initializes cancel button
perform the selection changed method
property change method comment
this method initializes level break1
this method initializes level break2
this method initializes j radio button
checks the bound for the lags fields and enables disables the number
this method initializes j radio button
this method initializes j radio button1
sets recomputation true and computes variable names
this method initializes j radio button2
this method initializes j radio button3
sets the allowed range for the two date selecting text fields
sets selection to none and sets break indices to empty
called whenever the part throws an exception
disables the select panel if component is hidden and a select panel is
shows the select panel if component is shown and a select panel is
disables the select panel if component is hidden and a select panel is
gets the name of residuals property string value
gets the residual names property string value
gets the date range property string value
writes the text output to a string that can be referenced via
writes the text output to a string that can be referenced via
sets the name of the data object containing actual the series under
writes the text output to a string that can be
writes the text output to a string that can be referenced via
writes the text output to a string that can be referenced via
writes the text output to a string that can be referenced via
gets a descriptive string for the specified bootstrap ci
sets the global symbols declared in jmplot
sets the global symbols declared in jmplot
enable disable plag combo according to selection
gets the dialog for excluding variables from test for parameter
gets the dialog for setting transition variable and constant parameters
gets the selected indices for variables with the restriction theta 0
gets the selected index for s2 t in auxiliary regression
configure test for parameter constancy
configure test for remaining nonlinearity
gets the index of variables excluded from the parameter constancy test
keeps old selection
gets the selected indices for variables with the restriction phi 0
gets the selected indices for variables with the restriction theta 0
gets the selected indices for variables with the restriction theta
set all menus enabled disabled that depend on the availibility of a
set all menus enabled disabled that depend on the availibility of
lazily initializes the restriction dialog
gets the state of this module frame as a code project state code
this method initializes this
this method initializes this
computes the means of the selected endogenous variable and takes
this method initializes ar selector
this method initializes ma selector
this method initializes j panel1
this method initializes this
insert the methods description here
this method initializes j jmenu bar
this method initializes j menu
this method initializes card display panel
this method initializes j menu1
if true jarcque bera test is disabnled and hidden because it makes no
this method initializes j scroll pane
insert the methods description here
this method initializes this
this method initializes this
this method initializes j tabbed pane
this method initializes kern dens panel
this method initializes spectrum panel
this method initializes plot add res panel
this method initializes diag tests panel
method generated to support the promotion of the white noise selected
this method initializes h selector
this method initializes ci selector
this method initializes graph check box
this function sets the values where the estimated function is evaluated
this method initializes start date selector
this method initializes j tabbed pane
this method initializes dets scroll pane
this method initializes dets table
method generated to support the promotion of the white noise selected
enables disables fields according to selection
enables disables fields according to selection
sets the bootstrap ci method
gets the variable name for names of residuals
insert the methods description here
clears the cis from the manager
gets the variable name for the date range
gets the variable name for residuals
this method initializes number selector
makes call to spectrum
sets the variable name for the names of residuals
sets the variable name for the date range
sets the variable name for the residuals
gets the model type currently in use
method generated to support the promotion of the wn check selected
sets the state of this module frame from a code project state code
gets the state of this module frame as a code project state code
clears the stored cis for code model type code
a string representation of this
sets the model type to be used for this component
gets the selected number of bootstrap replications
gets the selected coverage of the bootstrapped confidence intervals
evaluates code card succession panel
gets the selected seed
deletes the computed ir function and the ci names
gets the selected number of bootstrap replications for the standard error
sets the model type that defines how the computations are carried out
gets the selected seed for the standard error bootstrap
gets the name of the data object containing the coefficients values
gets the name of the data object containing the covariance matrix
gets whether seed should be used
method generated to support the promotion of the wn check selected
gets whether seed should be used for bootstrap of standard errors
sets the original date range to check
gets the symbol name of the a0 matrix of structural coefficients
sets the levels names
gets the name of the data object containing the variable names
gets the selected yt row
gets the title of this display
called whenever the part throws an exception
gets the selected date range
gets the selected yts
cancels without setting numbers
sets the name of the data object containing the coefficients values
returns the selected criterion
returns the selected strategy
gets the variable names for the ia selection
sets the name of the data object containing the covariance matrix
gets the threshold for stp
gets the type of model in which this component is used
sets the symbol name of the a0 matrix of structural coefficients
sets the name of the data object containing the variable names
sets back all settings to its respective default values
this method initializes this
this method initializes j panel1
this method initializes j panel2
this method initializes ok button
this method initializes j table
this method initializes cancel button
checks number of selected cis
property change method comment
insert the methods description here
initialize and show plot configuration
insert the methods description here
returns value for max number of iterations
discards all changes and hides dialog
gets string for legends and puts them into code plot model code
returns selected maximum retries for random draw
gets selected resids and builds matrices
gets the model type that defines how the computations are carried out
sets the variable name for the names of residuals
sets the variable names for the ia selection
insert the methods description here
returns value for relative change in parameters
insert the methods description here
insert the methods description here
returns selected start value method
insert the methods description here
returns whether decomposition of residual corr
insert the methods description here
sets defaults to current control model and adjusts settings
insert the methods description here
insert the methods description here
sets fields and hides dialog
gets the plot control model for the underlying input mask
sets back all settings to its respective default values
sets the svar model type for the optimization settings which affects the
converts inch to a point
converts a point to an inch
overwrites supermethod to sync display with model when shown
this method initializes min max yselector
this method initializes step ytics selector
this method initializes minor ticks selector
adds a route to the request
returns code true code if the message has a session
report a property change to registered listeners for example edit parts
children should override this
children should override this
children should override this
children should override this
returns an object which is an instance of the given class
paint is subclassed to draw the background correctly
returns the parent of the receiver
returns true if the receiver represents a leaf that is it is
visit a specific node and update its degree of interest
adds a message type to the engine
sets the id of the message
sets the map of arguments
sets an attribute to the map
writes the request to disk
gets the message type of in this context
allows hook for processing the response message
sets the message type of this request
translates a string and replaces with values from the context bean
creates a context based on the document
returns the document used within this request
does the translation out to disk
sets the request document for this request
reads file in from the disk
proxies message to the system
sets the response of this request
sets the mode the servlet should be in
gets the url to proxy to for the system
sets the url for the proxy
sets the test name of a given request
copy the fields from this message into another freshly created one
expand a named template filling in substitutions from the supplied
expand a directly supplied template which may be a string or a tract
utility method for processing composite compound name
note that this is a relatively expensive operation
returns the personalised application properties
this method must be overriden by each subclass if required
adds a filetype dot extension to filter against
returns the human readable description of this filter
return the current number of mappings in the hash map
returns code true code if this map contains no key value mappings
removes all mappings from this map
return the number of objects created in by this instance
return the load factor of the instance
enable disable rehashing defaults to code true code
notifies all listeners that have registered interest for notification on this event type
adds a listener for the tree model event posted after the tree changes
returns the number of children of parent
returns the root of the tree
returns true if node is a leaf
removes a listener previously added with add tree model listener
returns the next plugin list model that wants to be executed
statistical output for this map
setter method for code value code property
setter method for code next code property
getter method for code next code property
file may be a single file or directory
get all elements to process
open a system external editor on the input path
initialises the preference store if it exists
used to determine if a run of text has been deleted
sets the new contents of parts of this memory word
retorna o ip
retorna o software de conex o remota
retorna as obs
especifica a lista nome software
m todo responsavel por incluir um software no banco
faz a filtragem das requisi es
m todo que fecha um prepared statement recebido
m todo que cancela uma transa o recebida
especifica o ip
returns the construct which has violates the
creates a topic with the item identifier a topic
returns a locator resolved against the base locator
creates an occurrence of type website
indicates the start of the serialization process
indicates the end of the serialization process
indicates the start of an element with the specified local name
indicates the start of an element with the provided local name
indicates the end of an elemnt
writes a tt x0 a tt to the output
writes the specified characters to the output
escapes the data according to the canonical xml rules
escapes the attributes value according to canonical xml
registeres a topic maps construct and if necessary gives it an id
returns a topic by its subject identifier
unregisteres the specified tt construct tt
returns a topic maps construct by its identifier
returns a topic by its subject identifier
returns a topic by its subject locator
merges the tt source tt topic with the tt target tt
returns a topic maps construct by its item identifier
returns the index of the provided topic maps construct
serializes an association
serializes an occurrence
writes the value datatype pair of an occurrence or variant
serializes a topic name
serializes the type of a typed topic maps construct
serializes the scope of a scoped topic maps construct
serializes a locator
serializes the item identifiers of the specified topic maps construct
serializes the tt locators tt using the tt local name tt as
returns attributes which contains a reference to the provided topic
returns attributes which contain the reifier if any and the number
adds a reference to the reifier of the topic maps construct to the
notifies the topic map about an event
releases used resources
returns an iterator over the elements in this set
returns the existing value if tt obj tt is registered
returns the number of elements in this set its cardinality
returns tt true tt if this set contains the specified element
returns tt true tt if this set contains the specified element
removes the specified element from the set
removes the specified element from the set
internal rehashes the hashset to a bigger size
removes all of the elements from this set
internal used for debugging only
returns if tt start tt is associated with tt end tt
internal rehashes the hashset to a bigger size
tests the default feature values
returns additional non default properties which should be set
tests if enabling disabling of various features delivers the expected
tests if an unknown feature throws the expected exception
tests if an association with no initialized properties returns the same
tests if a name with no initialized properties returns the same
tests if a variant with no initialized properties returns the same
tests if associations with the same type return the same signature
tests if a topic is an instance of itself
tests if a topic is an instance of the types returned by
this function will create a new dom document
will attach existing node to the parent
will create a new node from name and attach that to the parent
at startup create and show the main frame of the application
returns simplified expression which peforms better
tells if the specified axis always returns empty on this event id
return true if this range is before given number
returns true if this range is after given number
returns true if this range contains given number
returns the input data as
starts a thread with this instance as runnable
returns the input data as
starts a thread with this instance as runnable
prints message to
replaces the internal char buffer with the given char array
wrapps given code message message with special ansi control sequences and returns it
replaces the internal byte buffer with the given byte array
creates a new
prints formatted and colorized
prints formatted and colorized
prints formatted and colorized
return value tells whether the given character
launches jvm with current configuration
peeks into current frame
registers given handler with all its implementing interfaces
declared the specified
xsd import namespace namespace schema location schema location
xsd include schema location schema location
type qname type ns type localpart
ref qname type ns type localpart
if min occurs 1
parse an xml schema document from string specified
use reqd required optional
called by the start button when the task is started
called by the finish button when the task is complete
starts a new task of type task type
writes captured data to file
updates this sprites animation and its position based
created nov 4 2004 by dcase
returns the instance of the file chooser component
programmatically sets the selected file
returns the value of the show preview check box
sets the value of the show preview check box
sets the title of the dialog
stores the current state in a file based on the unique id
returns the state for the show preview
enable or disable the show preview
add an entry to the data inserting it after the
add an entry to the data inserting it before the
get a value in the array based on its index
set the value in the array based on its index
remove an entry based on its index
allocate a new array to hold the directory
return the type
method used to get if battery status is low
method used to know the product id
method used to know the type of the sensor
method used to know the version
this method return the value from a digital sensor
this method add data into a file
this method return the value from a analogic sensor
this method is necessary to execute to connect sensors on it
method used to use a us with the sensor and get the distances
method used to manage a touch sensor
method used to receive data from a sound sensor
calculate the value of the gaussian function for the specified
calculate the value of the derivative of the gaussian function
implements the activation function
implements the activation function derivative
a threshold function for a neural network
ignore the description it is not used for activation functions
ignore the name it is not used for activation functions
a threshold function for a neural network
implements the activation function
implements the activation function
implements the activation function
create a persistor for this activation function
implements the activation function derivative
implements the activation function derivative
implements the activation function
implements the activation function derivative
determine the winner for the specified input
this method turn on the device connected with dswitch
this method turn off the device connected with dswitch
returns the first parent node with an actual data association i
returns true if button will display checked icon on click
convenience method to get the id of the inserted user
get object class name method comment
persist the changes made to the member data
callback method to change the subscriptions range
checks whether the specified user has open rating tasks
add some component to footer after the user logged in
adds a row to the table
adds a row to the table
adds a row with valued emphasized to the table
adds a row with label emphasized to the table
adds an empty row to the table
adds a row with a label in the first column only
displays the popup window
adds a row with the specified component in the first column only
closes the popup window
adding the sub menu
toolbar layout style code vif toolbar code containing the
update the component with actual values
returns the active skin
notify the registry about the new skin selection
checks the entered passwords for length and confirmation
delegates the commit to the wrapped form component
adds a field to the form
adds a required field to the form
adds a required field to the form
refresh the applications view e
returns the subject text i
refresh the applications view e
saves the changes to the preferences service
creates the url to the view of the specified task e
closes the window can be called when the parent window is detached
centers the window
sets the dialogs visibility
registers the permissions for that they can be created after during servlet initialization
executes the scheduled creation of permissions
adds the specified forum use case
removes the specified forum use case
the services binding method
the services unbinding method
adds the specified admin use case
returns the lookup window of the specified type
registers the specified set of forum tasks to the task manager
removes the specified admin use case
unregisters the specified set of forum tasks from the task manager
unregisters the specified set of admin tasks from the task manager
loads the specified forum task
unregisters the contributions to the extendible menus
loads the specified admin task
this is the central part of the application where registered task
sets the osgi event admin
uses the registered code bundle code to load the task
returns the factory to create the extendible menu
adds the configuration of a context menu set to the menu manager
this menus position compared to other menu entrys position
removes the configuration of a context menu set from the menu manager
bundles can define permissions and make them available in the application
injecting the osgi code event admin code instance
registeres the specified target class with the specified alias
unregisteres the target task with the specified alias
start the workflow to set the applications initial configuration
package protected run the workflows next step
use osgi event service to display a notification message
use osgi event service to display a notification message with type code notification
create a fully qualified task name with the specified task
use osgi event service to display the next content view
use osgi event service to display the next content view
creates a key object that filters all groups in the specified group states
returns the collected text to notify the users about the changes
creates an order object from the specified string
same as code get notification text code
process the task to remove stale requests and create new requests
same as code get notification text html code
resets the instance i
creates a view component displaying the message please contact the administrator after
adds the authors name to the notification text
callback method saves the input of the db access configuration popup
get attribute method comment
runs this task
runs this task
get creation time method comment
get last accessed time method comment
subclasses which implement this method return the name of the specialiced application context
subclasses which implement this methode have to return an instance
get int header method comment
opens the method get context for testing purpose
returns the name of the applications properties file
contains header method comment
encode redirect url method comment
get protocol method comment
sets the text id version actually relevant for the application
get remote addr method comment
set the serialized string
get remote host method comment
set status method comment
returns an instance of the default task
returns an instance of the error task
subclasses have to override this method which initalizes
set generic parameters
converts any throwable to an instance of vthrowable
returns the single instance of this handler class
returns the generic parameters passed by a task controller
returns the generic parameters passed by a task controller
returns the current http session associated with this request or
is user in role method comment
runs the specified tasks and returns its view
create count all string method comment
create count string method comment
clear the context menu panel
create key count column list method comment
create select all string method comment
use osgi event service
create select string method comment
the purpose of this public method is to create an sql query string
get object class name method comment
get object def string method comment
adds a new element to the sortet array i
adds a new element to the sortet array i
get object def string extern method comment
get object def string intern method comment
reruns the last task and displays the specified message
each code search result code is an entry
returns true if in object is a code sortable item code and its
returns the hash code calculated from the value
creation of test sortable item
no test sortable item created with sort criteria
imagine this document stored e
renders the proper question on the specified layout
checks whether this component is the origin of a value change event
checks whether this component is the origin of a value change event
renders the specified completion review process unpublished state
translates the contributions state code to a human readable state information
checks the user input
creates a member entry
creates a member entry with the specified user id and mail address
saves the new bookmark
saves the new subscription
renders the author reviewer information
renders the author reviewer information
creates a member and returns his id
creates a member entry and two associated role entries
callback function for view
display form to create bibliographical entry
notifies the group administration that there are no reviewers available
handle click events on table of parent or child questions
displays the selected bibliography item in edit view
creates a member entry with the specified member name and
method called when user clicks the table of the search results
creates view to display the bibliographys edit form
callback from view process the state change
method of the code value change listener code interface
callback method handles accept request for review
deletes the existing download file s
returns the collection of download files belonging to the specified text entry
callback method for components managed by this task instance
callback function for view
creates a member entry with the specified member name and
callback method handles refuse request for review
returns the name of the specified discussion group
returns the subject text i
callback method handles give back review after accepting review request in first round
returns the subject text i
override the super classes method
creates a member entry with the specified user id and member name and
writes the echo string
starts the osgi runtime
stops the osgi runtime
updates the state of the contributions performing the specified transition
add the required listeners to the specified component
starts the service
setup the basic and extended properties for
creates the mail body sent to the subscribers in the notification mail
writes the entry name on the spash screen
callback method to set the suspend period
callback method to clear the suspend period
parses textile markup to html
parses textile markup to plain text
creates one group and returns its id
create a new entry to design a group admin for the specified group
creates a question and returns its id
returns the author of the contributions
convenience method triggers the restoration of the old db configuration
creates a question with specified group and returns its id
callback method to save the changed configuration settings
callback method to save the selected skin
bytes saved for supporting marks
no implementation provided
no implementation provided
not applicable in this case therefore no implementation provided
no implementation provided
not applicable in this case therefore no implementation provided
no implementation provided
not applicable in this case therefore no implementation provided
not applicable in this case therefore no implementation provided
member entries are cached in the internal member table
creates a subscription
creates a completion and returns its id
callback method continues without sending notification mail
creates a completion with specified state and returns its id
callback method delete the selected admins
callback method saves the changed group data
read a single byte
creates an author or reviewer entry in the question author reviewer table
creates an author or reviewer entry in the completion author reviewer table
reset the stream
registers the specified factory to the registry
checks whether the actual configuration is in the specified state
creates an author or reviewer entry in the text author reviewer table
unregisters the specified factory from the registry
returns the code data source factory code suitable to the specified properties
sets the context of this task
returns the code data source code suitable to the specified properties
returns html string representation of a css link e
returns the code connection pool data source code suitable to the specified properties
setter for the active code dbaccess configuration code
destructor which closes the query result
returns an instance of a document using the document builder
shortcut method to set the active code data source factory code directly
returns a file input stream which accesses the xsl file
returns the number of the last page according to the current page size
prepares the transformation of this view and sets it to this view
subclasses may provide their strategies to find the xsl files
returns the query result object
returns the parameter with key code in name code as string value
traces the xml can be used for testing purposes
switches to the next page of entries
sets the parameter for the xsl stylesheet
returns the file item with the specified name or code null code
returns the data of the specified domain object serialized
switches to the previous page of entries
flush the stream
returns the data of the specified domain object serialized
returns begin of this page as html string
returns end of this page as html string
lets the subclasses create a new page instance
adds a new html view to this page
returns the db adapter type matching the actual db access configuration
writes xml transformed representation of all files in this page
sets the number of rows the query result has
sets the page size
subclasses have to override
returns the home for the test table
returns the db adapter type matching the specified db access configuration
sets the page to the context
returns true if context contains parameter with name code in paramater name code
sets the information about the sorted columns in the query
returns the information about the sorted columns in the query as xml string
set the new page content with the given query result and the modified
adds the script link to the list if not added before
returns html string representation of all css links in this list
set the new page content with the given query result
adds the css link to the list if not added before
sets a name value list as parameters of this context
returns html string representation of all css links in this list
loads the first data page
set the relative path to the css file
sets a name value list as file items of this context
css links are equal if their media and href is equal
loads the last data page
returns the current directory view as a html string
sets the specified parameter with the specified value to the context
sets the media for which the stylesheet is used
creates a new entry with the specified name in the test table
returns an instance of a task
subclasses may override
returns an instance of the taskmappingtable
returns html string representation of a script link e
checks whether the request to inspect contains the specified parameter
returns the specified parameters value from the wrapped request
deletes all entries from the test table
returns string with names and values of all parameters in the context
returns begin of this page as html string
extracts all parameters except the specified out of the servlet request
setter for the url where the request has to be redirected
setter for the delay of the redirect
returns the html representation of this view as string
initializes the root directories of the websites and the documents
sets the path of the sub application to the context
the selection of the actual systems servlet container is done here
writes the view as html string to the passed servlet output stream
sets the server info
returns the path to the servlet containers instance the
sets the html representation of this view
returns the path to the servlet containers home
sets the internet protocol ip address of the client
subclasses may override
sets the transformer to generate this view
returns the language id set in the context of this view
returns the result of a query with the specified sql statement
returns the locale
returns the transformer which generates this view
two views are equal if their html strings are equal
sets the fully qualified name of the client that sent the request
returns begin of this page as html string
returns end of this page as html string
returns a list of css link
overrides the super classs init method
returns a list of script link
returns additional html code for this pages html head
sets the url the client used to make the request
sets the style definitions for the page
a hook to allow subclasses to define their own exception data
returns the title of the page
returns true if this exception contains a root cause exception
handling of errors and exceptions
we override this method to invoke the get message
returns the single instance of this handler class
returns a list of css link
a default implementation to handle the exception
returns a list of script link
returns object with the specified name
sets the application specific taskmanager
returns the error message set to this page
returns the localized message based on the default locale
creates the exception data
returns the message localized according to the actual language setting
returns the localized message based on the specified locale
returns the message localized according to the specified language
returns the message based on the default locale
returns a new instance of the application specific context
returns the exceptions message
returns the message based on the specified locale
returns the status message set to this page
returns the message parameter at the specified position
puts a name value pair to this object
add the message information to all views
sets this exception datas locale for that language sensitive messages can be returned
returns an instance of code value for sqldouble quote code
implements visitor pattern for this class
writes the view as html string to the passed servlet output stream
returns true if in object is a code sortable item code and its
overwriting the superclass method for that the propertys value
returns the hash code calculated from the value
sequence ending the visit of a domain object
returns the semantic object in the owing list the instance belongs to
emits the sequence ending the visit of a domain object iterator
sets a css link for this html page
sequence ending the visit of a property
sequence ending the visit of a property set
emits the sequence ending the visit of a sorted array
sequence starting the visit of a domain object
returns the domainobject cache
sequence starting the visit of a domain object iterator
sets a list of css link for this html page
sets the schema name
sequence starting the visit of a property
sequence starting the visit of a property set
sequence starting the visit of a sorted array
hook for subclasses
returns a domain object collection as an enumeration
sets a javascript link to this html page
sets cache to null
sets the notification status of this property
used to set an existing instance to an initial state for that
hook for subclasses
this method creates a new instance of a read only domain object
sets a list of css link for this html page
gets the current value
creates a select string for a sql union query
sets error message which will be added to the content
gets session id to allow cookieless session tracking i
adds the specified domain object to the collection
returns a domain object iterator
compares all items of having objects
delegates to the adapters create prepared select string
sets the specified visitor
add the set for the operation
sets a command in the on load tag of this pages body
this method creates a query statement as part of the frameworks query service
adds a new element to the sortet array i
sets the sets sql select string
this is the very basic implementation to create the select
sets the sets sql select count string
sets status message which will be added to the content
executes the set operation and returns the query result
executes the set operation and returns the query result
returns the number of rows in the resulting set
returns the domain object at the specified position
clears all status messages from the views
sets a key object as group in an enclosing key object
creates a code single value query statement code
returns the element at the specified position
checks the code query result code against the specified array
helper method to select the adapter type
returns the adapter for simple queries
clears all error messages from the views
returns the adapter for joined queries
two pages are equal all views they contain are equal
returns the name of the column which is mapped to the inputed property
compares all items of key objects
returns the name of the column which is mapped to the inputed property
returns a hash code value for the order object
creates the sql statement with the modified column names e
this method prepares the insert
returns number of entries in database corresponding to this
renders the key to a valid part in an sql statement
returns the object definition for the class managed
removes the element at the specified position from the sorted array
returns the collection with all domain objects
initializes the first domain object with data from the result set
returns the size of the sorted array
no hidden fields therefore an empty string is returned
returns number of entries in database corresponding to this
returns true if the page has more elements that is
returns the object definition for the class managed
setter for filter to be used for serializing
returns the next element
returns the page as xml string
this method returns the property def object which describes
returns number of entries in database corresponding to this
semantic objects are equal if all of their
returns the value to a given name
returns the key of the current domain object
sequence ending the visit of a property set
returns a hash code value for the semantic object
execute the update
this method sets the value of the specified property
this method returns the property def object which describes
this method prepares the update
emits the sequence ending the visit of a sorted array
used to set an existing instance to an initial state for that
adds a new placefiller to the collection
creates an alternative query result
this method returns the property def object which describes
this method can be used to initialize a new instance of the class
this method creates a property impl name value
sets the notification status of the properties in this property set
set field with chars to replace
used to set an existing instance to an initial state for that
setter for code use cdata code field
returns the internally hold result set
subclasses can overwrite this method if they want the property value
this method returns the specified column name unmodified
sequence starting the visit of a property set
this method returns the property def object which describes
this method sets an order item i
this method sets an order item i
compares all items of order objects
set the locale the date values can be formatted with
returns a hash code value for the order object
returns the correct structured text serializer to serialize
returns a new instance of the domain object initialized
this method creates a new instance of a domain object
query statements are equal if their sql statements are equal
retrieves the code connection code
creates the select string to fetch all domain objects
execute the query with this statement
creates the select string to fetch all domain objects matching
executes the given sql statement which may return multiple results
returns an instance of the visitor named in key
returns the next entry in form of an xml string
creates the select string to fetch all domain objects matching
creates the appropriate query result
creates the select string to fetch all domain objects matching
sets the specified visitor
executes an sql insert update or delete statement
this method will be called after the load from result set
creates the select string to fetch all domain objects
domain objects are equal if their class i
returns a hash code value for the query statement
loads cache with domain object from the collection
creates the select string to fetch all domain objects matching
moves to a statements next result
this method returns an instance of a key object
creates the select sql string counting all table entries
set a valid sql statement string to this statement
use this method to release a domain object
returns a specified amount of domain objects
this method returns an instance of a key object
creates the select sql string counting all table entries
returns the name of this object
returns the next n entries in form of an xml string
executes the given sql statement which may return multiple results
this method selects all domain objects of the corresponding
this method looks for all key columns of the table mapped to the
this method executes the update
this method was inspired by the domain object impl
returns a hash code value for the domain object
returns true if passed column name is part of the primary key
this method allows to invoke a query
this method creates a key item impl name value
initialize the domain object and mark it as new
returns the next n entries in form of an xml string
returns the joined object definition
returns the sql statement counting the entries in the join
returns the sql select statement doing the join
initializing of the domain objects property set with the help
returns the object definition for the class managed
this method selects all domain objects of the corresponding
returns the sql select statement ordered by the specified object
returns true if some properties have been changed
returns the mappings of hidden fields or an empty string
sets the position of this key criterion in the key object
domain objects do not allow a dynamic add
the temporary can used if the client does not use it for long
this method selects all domain objects of the corresponding
returns the list the instance is member from
initializes the domain object again i
this method selects all domain objects of the corresponding
returns an empty domain object
signals whether this query result loads into a collection or not
use this method to release a this domain object
renders the criterion to a valid part in an sql statement
this method selects all domain objects of the corresponding
insert the new domain object in the table of the db
sequence ending the visit of a domain object
this method selects all domain objects of the corresponding
sequence ending the visit of a domain object iterator
sequence ending the visit of a property
returns the type associated with the specified key in the specified
sequence ending the visit of a property set
sequence ending the visit of a sorted array
insert the new domain object in the table of the db
sequence starting the visit of a domain object
sequence starting the visit of a domain object iterator
sequence starting the visit of a property
creates the where or having part of the sql select string
sequence starting the visit of a property set
sequence starting the visit of a sorted array
creates the order by part of the sql select string
updates the domain object
creates the limitation part of the sql select
this method allows to invoke a query
resets the sql cache for that it can be recreated again
updates the domain object
returns the single value queried e
setter for code dbaccess configuration code used by this statement to retrieve data
returns the correct structured text serializer to serialize
deletes the domain object from the table of the db
this method creates a new instance of a domain object
returns the key of the current domain object
this method prepares the select statemen
returns the sql select statement matching the specified key
returns the sql string to delete an entry
creates select sql string counting all table entries
if set true the domain object home will cache domain objects fetched
deletes the domain object from the table of the db
returns the sql select statement matching the specified key
closes the connection
closes the statement
commits and closes the connection
returns the sql string to update an entry
initializes the connection
creates select sql string counting all table entries
rollbacks and closes the connection
trace all warnings
sets the specified in visitor
this method converts the specified value type to
returns the number of rows affected by this insert
returns the name of the table accessed through the specified object def
prepares the statement by creating the sql string
returns the maximum value of the specified column corresponding to this home
returns the code dbadapter type code matching the actual db access configuration
returns the sql statement counting the entries in the join
returns the sql string to prepare an update of an entry
returns the maximum value of the specified column
returns the database adapter for simple domain objects
returns the database adapter for joined domain objects
returns the column modifier to modify a column value to upper case
this method looks for all key columns of the table mapped to the
check the authentication
no implementation provided
creates the ldap filter expression by interpreting the specified code key object code
no implementation provided
no implementation provided
creates the prepared select sql string to fetch all domain objects with the
returns a sql command usable for a prepared update
no implementation provided
sets the context base
no implementation provided
closes the context
no implementation provided
sets the sort control to the contexts request
creates select string to fetch all domain objects
limits the number of results
makes the results returned sorted
creates select sql string to fetch all domain objects with the
in the ldap case this method returns the search filter
returns the modifier type of this grouping e
creates the sql grouping expression i
in the ldap case this method is used to set the search filter
returns the key to set and retrieve the column defs in the hashtable
creates the select string to fetch all domain objects matching
grouping defs are equal if their grouping expression is equal
returns a hash code value for the grouping def
this method returns the class name of the home
returns either an instance of object ref property impl composite property impl or
returns true if passed column name is part of the primary key
no implementation provided
adds a hidden column def to the object definition
returns an object def holding the meta information for a domain object
creates the select sql string counting all table entries corresponding to
returns the nestings name i
returns the mapping of the specified hidden field
returns the key to set and retrieve the column defs in the hashtable
no implementation provided
mapping defs are equal if their table name and column name
joined object defs are equal if their object name parent
is property def simple or object ref
retrieves the column name out of the attributes of the colums definition
creates the select string to fetch all domain objects
returns the join def of this joined object def
returns a hash code value for the object def
no implementation provided
returns the sql name of the table where this column set resides
returns the corresponding java class name to the values type according to
returns the type of the value
creates the select string to fetch all domain objects matching
sets the grouping applied to the result set
retrieves a table name involved in the join
returns the nestings name i
returns a hash code value for the object def
returns the key to set and retrieve the column defs in the hashtable
creates the select sql string counting all table entries with the specified
returns a hash code value for the object def
creates and returns the nested query
sets the join def of this joined object def
returns the sql name of the column mapped to the column def entry
nested defs are equal if their nested query is equal
sets the name of the tables this join def is joining
creates select sql string to delete all domain objects with the
returns a hash code value for the object def
adds the specified nested def to the collection of nested defs
inserts a property named in key name at the specified position
returns a string representation of the object
key defs are equal if all of their key property names are equal
returns the sql string to delete an entry
adds the specified placeholder def to the collection of placeholder defs
adds a property def to the list of property defs
fills the specified placeholder with the specified value
returns a hash code value for the key def
checks whether this join includes the specified placeholder
object defs are equal if their object name parent and version
sets the name of the tables this join def is joining
returns the mapping def associated with the specified property
join operations are equal if their attributes are equal
sets the columns the join is operating upon
returns the sql string to insert a new entry
returns a hash code value for the join operation
sets the nested query to the join operation
fills the specified placeholder with the specified value
renders the sql
join defs can be involved
handles the end of the key def tag
returns the parent join def if this join def is involved
returns the primary key definition
join defs can be involved
returns the child join def if this join def is involved
handles the end of the key item def tag
returns the sql string to update an entry
returns the property def for the specified property
join defs are equal if their join operations and operator types are equal
returns a hash code value for the object def
handles the end of the mapping def tag
returns a hash code value for the object def
adds the specified placeholder def to the collection of placeholder defs
handles the end of the object def tag
checks whether this join includes the specified placeholder
sets the definition of the primary key
handles the end of the property def tag
this method adds the specified mapping def to the collection of mapping defs
creates select sql string to fetch all domain objects
returns the definition of the join def
returns the sql string to prepare an update of an entry
returns the definition of the joined object def
returns the key def def
returns the mapping def def
this method handles the key def tag
this method handles the key item def tag
returns a sql command usable for a prepared update
creates the select sql string to fetch all domain objects with the
returns the relationship def def
returns the grouping def def
this method handles the mapping def tag
returns the nested def def
returns the definition of the placeholder def def
handles the start of the object def tag
handles the start of the property def tag
returns the object definition for the class managed
creates a joined object def from a definition string
this method handles the relationship def tag
execute the visit of a domain object
returns the buffer
execute the visit of a domain object iterator
execute the visit of a property
returns a new line
execute the visit of a property set
execute the visit of a sorted array
handles the end of the column def tag
creates the select sql string to fetch all domain objects with the
the temporary can used if the client does not use it for long
handles the end of the hidden tag
returns an instance of the code list the specified code class belongs to
handles the end of the join condition tag
handles the end of the object nested tag
the code id of the code list the item is belonging to
handles the end of the result grouping tag
after parsing the document the retrieved code list items have to be
get a label for the specified element id
returns an empty domain object
change the content of this code by the specified element id
handles the end of the object placeholder tag
checks whether the specified element id is in the set of selected codes
compares two code list elements for the same code id
start parsing the document by creating a new code list
checks whether the specified element id is in the set of selected codes
two code list elements are equal when they have the same code id
returns a domain object filled with the values of the inputed result set
handles the end of the join def tag
returns the appropriate label for this code list element
proper implementation because of own equals
compare two tokenizer
joined list of all code code label code
handles the end of the object desc tag
returns a xml string of the form
returns a xml string of the form
returns the raw string of this paragraph
checks if this paragraphs type is equal to the specified objects paragraph type
joined list of all code element id
implementation of visitor pattern e
adds a new list element to this numbered list
adds a new paragraph to the current list element
this method is a limited version of a delete
returns the type of this paragraph
checks whether this list has list elements
returns a string representation of this object
implementation of visitor pattern e
visit structured text bullet
returns the type of this paragraph
use this method to delete an entry from the table
visit structured text numbered
checks whether this paragraph has subparagraphs
returns the type of this paragraph
visit a plain structured text paragraph
implementation of visitor pattern e
adds a new list element to this bulleted list
adds a new paragraph to the current list element
returns the type of this paragraph
checks whether this list has list elements
implementation of visitor pattern e
handles the start of the hidden tag
creates a html formatted text of the specified string which is formatted
returns a hash code value for this bit pattern
compares this object against the specified object
returns a string representation of this bit pattern
checks whether the database table structure corresponds to the domain object definition
handles the start of the join condition tag
accessor to the private bit field for the subclasses
adds the specified tuple at the end of the rows
adds the specified object and bit row at the end of the rows
returns a hash code value for this bit pattern
compares this object against the specified object
returns a string representation of this bit pattern
returns the object of the tuple
returns the bit pattern of the tuple
empties the bit pattern of the tuple
handles the start of the joined object def tag
checks the bit in the specified row and column
returns a tuple with inverted bit pattern
returns the tuple at the specified position
returns the row position of the specified row id
returns the object at the specified row position
compares this object against the specified object
returns a hash code value for this tuple object
returns the bit pattern at the specified row position
returns a string representation of this tuple object
returns the column position of the specified column id
creates and returns a copy of this object
handles the start of the object desc tag
adds a new row to the bit map
handles the start of the object nested tag
returns the specified text with inline format converted to html
returns a hash code value for this bit pattern
compares this object against the specified object
returns a string representation of this bit pattern
returns the specified text with inline format converted to escaped html
creates and returns a copy of this object
handles the start of the result grouping tag
returns the specified text with inline format ignored
removes the specified row of the bit field
compares this bit field with the specified bit field and
returns a collection of checked positions of ids of the specified row
returns a hash code value for this bit pattern
handles the start of the object placeholder tag
converts a collection of matrix positions to id positions
compares this object against the specified object
creates the prepared select sql string to fetch all domain objects with the
returns a collection of checked positions of the specified row
this method creates a default name value
dynamic add is allowed in a parameter list
returns the list the instance is member from
creates and returns a copy of this object
adds a new element to the sortet array i
sets the value of the instance with the specified name
add method with reduced visibility
sets the value of the instance
returns true if more elements tokens are in the string
returns true if character at specifed postition in pos is a delimiter
returns the hash code calculated from the name and value
returns the element at the specified position
returns true if in object is a code name value code and its
creates select sql string to delete all domain objects with the
no implementation provided
returns true if in object is a code sortable item code and its
returns the xml as document
returns the hash code calculated from the value
no implementation provided
creates a default name value
adds an entry to the list
adds a formatted entry to the list
creates the where or having part of the sql select string
this method adds a new item to the set
joins the list using the specified separator between the entries
performs the transformation to the specified output stream
returns the item with the specified name
checks whether the list contains a value for the specified name
performs the transformation to the specified print writer
this method sets the value of the item with the specified sort position
this method sets the value of the item with the specified sort criteria
includes an error message to the xml
this method adds a new item to the sorted list
returns the value for the given in name
no implementation provided
creates the where or having part of a prepared sql select string
includes a message to the xml
returns count of name values added to this list
removes the messages from the xml
clears the visitor
removes the element at the specified position from the sorted array
removes the error messages from the xml
removes the node with the specified tag from the xml
returns the size of the sorted array
returns the hash code calculated from the name
returns the version number of the framework
no implementation provided
no implementation provided
re bind this object to the specified workflow
re bind this object to the specified workflow
no implementation provided
returns the name of the current state
returns the current state instance
do the specified action on enter on leave on transition on the specified
no implementation provided
sets the state with the specified name as default initial state
returns the name of the initial state
this method looks for all key columns of the table mapped to the
returns the state with the specified name
adds the specified html string to the content of the message
adds a new state with the specified name
sets the mail host address
adds a new transition
no implementation provided
adds the specified html view to the content of the message
gets the content of the prepared message
sets array with addresses of blind carbon copy recipients
no implementation provided
sets array with addresses of carbon copy recipients
sets address of the sender
sets the subject for this mail message
sets array with addresses of primary recipients
no implementation provided
generates the list of table names used for the sql from clause
no implementation provided
factory method to create instances of code ivalue for sql code
not applicable here
returns the attributes name mapped to the domain objects key
check the roles for the actual state concerning selected roles
returns the domain object cache
callback method saves the changed members roles
callback method processes the selected members
notify the user and forward to the next task
subclasses may override
processing the quick search for members
creates a new password
checks whether the password should be displayed on the administration screen
subclasses may override
hook for subclasses
deletes the selected members
returns the authors unpublished text entries
returns the model with the specified id
returns the reviewers unpublished text entries
use case to save modified contribution data without change of state
sets the specified member as author of the specified completion
returns the published version of the text entry identified by the specified id
sets the specified member as reviewer of the specified completion
creates a new link entry
returns the question this completion belongs to
the questions decimal id made sortable i
returns all completions in the specified group the specified member
returns the decimal id of the question this completion belongs to
returns the entry of the authenticated member
returns the completions id
returns the member identified by the specified id
returns the member identified by the specified id
returns the node id of this contribution
returns all completions in the specified group the specified member
sets the specified visitor see visitor pattern
does this member represent the same member as the specified member
does this member represent the same member as the entry with the specified
returns the id
returns the member identified by the specified user id
returns mail address
returns the member class name
returns the gender of the member
returns all questions in the specified group the specified member has authored
returns the members full name i
the member has refused to review the contributions
returns the id of the responsible member
returns the name of the objects which the this home can create
add this contribution to the full text search index
returns all completions being in the specified state in the specified group
returns the roles for the specified member
returns all questions in the specified group the specified member has reviewed
creates a new subscription with the specified values
returns a set of completions belonging to the question with the specified id
returns the specified authors yet unpublished completions in the specified group
checks whether a subscription with the specified values exists
deletes the entry with the specified key
returns the participants for the specified group
updates the range of the specified subscription
returns the completions being in the specified states belonging to the specified question
returns all completions being in the specified state in the specified group
returns the active participants of the specified group
returns the member history class name
returns all questions being in the specified states in the specified group
counts all questions belonging to the specified group
returns all questions belonging to the specified group
returns the questions published completions
makes the specified member an active participant in the specified group
returns the specified members ratings as rated person
checks whether this association belongs to the specified permission
returns all unpublished questions in the specified group
returns the questions published completions
returns the groups published questions
makes the specified member an active participant in the specified group
returns the permission identified by the specified permission id
creates a new permission entry
returns all questions being in the specified state in the specified group
returns the question identified by the specified id
execute the visit of a completion entry in the question hierarchy
execute the visit of a completion entry in the question hierarchy
execute the visit of a question entry in the question hierarchy
returns the root questions of the specified group
returns the group admins view of completions i
this method allows to update the selection behaviour of the collector
checks whether the specified question is a root
checks whether the specified group has any questions other then deleted ones
checks whether the rating with the specified id is completed by both parties
checks whether the specified actor is participant i
checks whether the rating with the specified id is completed by both parties
use case to save edited question data without change of state
returns the completions of the specified question according to
checks whether the specified actor is participant of the specified group
returns the question associated with this question hiearchy entry
returns the group admins view of questions i
asserts the existence of mandatory input
returns the number of participants of the specified group
creates a key to select entries the specified actor is author of
returns the group admins view of questions i
use the after load hook to rebind the reinitialized object to the
returns the node id of this contribution
removes the specified participant from the specified group
returns the max version of the bibliography entry with the specified id
returns the published contributions of the specified group
returns all reviewers that requests for review older then the specified date
sets this model to completed
checks this models code completed code value
sets the specified visitor see visitor pattern
returns the entry of the author responsible for the specified question
returns the members full name i
returns the entry of the reviewer responsible for the specified question
checks whether this question is a root
add this contribution to the full text search index
creates a new bookmark with the specified values
returns all completions belonging to the specified question
checks whether a bookmark with the specified values exists
returns the specified completion
deletes the entry with the specified key
returns the groups id the specified completion belongs to
sets the specified member as author of the specified question
retrieves the domain object identified by the specified idposition
sets the specified member as reviewer of the specified question
execute the visit of a completion entry in the question hierarchy
returns the childs of the specified question
deletes the specified associations of permissions with roles
execute the visit of a completion entry in the question hierarchy
returns all childs of the specified question being in the specified states
creates the specified associations of permissions with roles
returns all published childs of the specified question
returns the published questions linked to the specified text entry
associates the specified permission with the specified role
suspends the participation for the specified period
fills the specified history with the values of the actual domain object
creates a new history entry with the values of the actual domain object
creates a new history entry with the values of the actual domain object
returns the collected text to notify the users about the changes
returns the entry of the author responsible for the specified text version
returns the entry of the reviewer responsible for the specified text version
tests whether the specified member is group admin
tests whether the specified member is admin of the specified group
adds the authors name to the notification text
returns all published questions belonging to the specified group
starts the iteration at the specified node id
group admins can set the questions state to answered directly
returns the groups the specified member group administrator is administering
returns all reviewers with requests for review older then the specified date
returns the number of groups
returns the id of the parent of the specified question
returns the entry identified by the specified values i
returns the responsible author
set the questions state to answered after this state change has been requested
state answered requested
stores the specified version
retrieves the stored version information
climbs the tree as far as possible and sets the nodes to answered
returns the groups published questions up to the specified depth
checks whether the specified completion has been visited before
sets the specified visitor see visitor pattern
rejects setting the state of the specified question to answered and thus
overrides super implementation to return specialised query statement
returns the parent question of the specified question
overrides super implementation to return specialised query statement
state answered requested
group admins can reopen questions directly
execute the visit of a completion entry in the question hierarchy
checkes whether the associated roles have changed by comparing the
execute the visit of a question entry in the question hierarchy
authenticate this member with the specified password
reopens a question after this state change has been requested
we only delete private text entries
returns the visited domain objects as serialized xml
climbs the tree as far as possible and sets the nodes to open
returns the childs of the specified question
associates the indicated roles to the specified member
returns the number of contributions selected for deletion
change the state of the discussion group the question with the specified id
delete all roles associated to the specified member
returns the siblings of the specified question including the node itself
creates a group admin role for the specified member
creates a participant role for the specified member
creates a history entry and fills it with the values of the actual
counts the specified questions childs
deletes the group admin role of the specified member
returns the specified persons ratings
deletes the participant role of the specified member
deletes the specified role of the specified member
adds a new entry to the question hierarchy
returns the discussion group identified by the specified id
checks whether the specified member has the participant role
creates a new discussion group with the specified data and returns the
returns true if the specified question has a parent
returns the maximum version
checks whether the specified member has the group admin role
returns true if the specified group is of type where the contributions need
checks the visibility for guests of the specified question
creates recursively a sql command in the form
sets the specified visitor see visitor pattern
save the new password
checks the passed value
interface for parameter objects
returns the member id i
sets the member id i
sets the users login id
use case save the values of a new text entry
gets the users login id
returns the actors authorization
checks whether the actor is participant of the specified group
checks whether the actor is administering the specified group
refreshes the actors authorization i
checks whether this actor is guest or not
adds the question with the specified key to the full text search index
adds the completion with the specified key to the full text search index
adds the member with the specified key to the member search index
deletes the document with the specified member id from the member search index
refreshes the content of the document with the specified id in the
removed the content of the specified group from the search index
transition from answered requested to answered
transition from open to answered short cut for admins
interface for parameter objects
use case save changed values to code text code model
asserts the existence of mandatory input
method is protected for testing purposes
transition from answered to open short cut for admins
transition from reopen requested to open
transition from answered to deleted
transition from open to deleted
checks whether the user with the specified id has open tasks
register the specified task to this registry
returns true if the state of this object is code private code
returns true if the state of this object is unpublished
returns true if the specified external group id is the same as this
returns true if the state of this object is published
returns the number of root questions attached to this group
sets the specified key value pair to the store
the original su is stored in the cache home only
returns true if this group is of type where the contributions need
sets the states do be checked while visiting
sets the action performed if the check was ok
returns true if this group is private
this method deletes the member entry and reports the deletion to
returns the correct type of closing transition according to
adds the specified content
creates a node with the specified tag and content and adds it
adds the specified content
sets an alternative root node name default is code root code
this method overwrites the superclass delete method
returns the correct type of reactivating transition according to
add the mandatory fields to check
starts the iteration at the specified node id
getter of notification status
setter of notification status
retrieves the value of the specified key from the user settings
getter of mail body
setter of mail body
sets the specified value for the specified key
setter of mail subject
getter of mail subject
serializes the xml dom to an xml string that can be persisted
setter of group name
returns the number of participants registered to this group
setter of group id
tests if this stack is empty
looks at the task at the top of this stack without
removes the task at the top of this
pushes a task onto the top of this stack
delegates to render plain
removes all of the elements from this stack
returns the minimal number of participants needed for this group to be active
returns the first item or the second or both linked if needed
puts the prefix in front of the item if the items not empty
puts prefix and ending if the items not empty
returns the groups visibility i
code lt option value value selected selected label lt option code
asserts the existence of mandatory input
checks whether the index directories have been created
returns the code index writer code to index the the content
use the after load hook to rebind the reinitialized object to the
returns a new instance of the hits domain object
starts the search with the query term s provided and returns the
refreshes the index reader for content entries
returns the code index writer code to index the the members
hook for subclasses
refreshes the index reader for member entries
adds the string passed to the full text
hook for subclasses
for testing purposes create the indexes manually
b note b must be called in the applications code destroy code method
checks whether this group in the state just created
returns the id of the best role the member has
returns the id of the wrapped document
checks whether this group is active
returns the directory of the index
checks whether this group is open
checks whether the specified actor is participant in this group
checks the groups activation state against the specified value
binding the provided upgrade services
accessing the code preferences service code using the lookup strategy
unbinding the provided upgrade services
register member search component
registers the specified upgrader
unregister member search component
does this authorized person have the specified permission
register authentication component
unregisters the specified upgrader
unregister authentication component
retrieve the actual member searcher
retrieve the actual authenticator
checks the authorization against the specified roles
checks the authorization against the specified permissions
returns the authorization as xml serialized
compares this object against the specified object
getter for the property with the specified key
returns this objects hash code
getter for the property with the specified key
hook for subclasses
setter for the value of the property with the specified key
method to set the mails message body manually
set the db access configuration for an embedded db
creates the greetings of the mail
retrieves the configured skin id
retrieves the configured locale
retrieves the configured date pattern
checks the db type actually used
checks whether the application is started in embedded mode
returns the db access configuration
restores the db access settings
returns the configuration to access an external member database
creates the address of the mail e
returns the subject text i
add additional mail address es
starts the service
starts the service
renders the proper question on the specified layout
translates the contributions state code to a human readable state information
callback method saves the changes
callback method to edit the actual question
callback method to publish the actual question
method called when user clicks the table of the search results
callback method to publish the delete question
callback method to edit the completion with the specified id
callback method to publish the completion with the specified id
callback method to delete the completion with the specified id
callback method to process click event on table of contributions
callback method sets selected questions to state answered
callback method sets selected questions back to state open
callback method sets selected questions to state open
callback method sets selected questions back to state answered
returns this assertions localized message
shows the error message on an html error page impl
converts a throwable to a viffatal exception
converts a throwable to a vifwarning exception
converts a throwable to a vifwarning exception
hook for subclasses
implementation to handle the exceptions
returns the published version of the text entry identified by the specified id
creates a new link entry
returns a set of completions belonging to the question with the specified id
returns a set of published completions belonging to the question with
returns the completion identified by the specified id
returns the entry of the authenticated member
returns all completions in the specified group the specified member
does this member represent the same member as the entry with the specified
returns the member identified by the specified id
returns all completions in the specified group the specified member
returns all questions in the specified group the specified member has authored
returns all questions in the specified group the specified member has reviewed
returns all completions being in the specified state in the specified group
returns the specified authors yet unpublished completions in the specified group
returns all questions being in the specified states in the specified group
returns all completions being in the specified state in the specified group
returns all unpublished questions in the specified group
returns all questions being in the specified state in the specified group
checks whether a subscription with the specified values exists
deletes the entry with the specified key
updates the range of the specified subscription
makes the specified member an active participant in the specified group
returns the groups published questions
returns the permission identified by the specified permission id
makes the specified member an active participant in the specified group
returns the question identified by the specified id
checks whether the specified question is a root
checks whether the specified group has any questions other then deleted ones
returns the completions of the specified question according to
returns the max version of the bibliography entry with the specified id
returns all reviewers that requests for review older then the specified date
asserts the existence of mandatory input
checks whether this question is a root
state answered requested
deletes the entry with the specified key
returns the childs of the specified question
state answered requested
returns all childs of the specified question being in the specified states
execute the visit of a completion entry in the question hierarchy
returns the published questions linked to the specified text entry
returns all published childs of the specified question
execute the visit of a completion entry in the question hierarchy
returns the collected text to notify the users about the changes
resets the instance i
adds the authors name to the notification text
returns the entry of the author responsible for the specified text version
returns the entry of the reviewer responsible for the specified text version
returns the id of the parent of the specified question
returns the parent question of the specified question
returns the childs of the specified question
group admins can set the questions state to answered directly
returns the siblings of the specified question including the node itself
set the questions state to answered after this state change has been requested
counts the specified questions childs
adds a new entry to the question hierarchy
group admins can reopen questions directly
reopens a question after this state change has been requested
climbs the tree as far as possible and sets the nodes to open
transition from answered requested to answered
transition from open to answered short cut for admins
returns all reviewers with requests for review older then the specified date
returns the groups the specified member group administrator is administering
transition from answered to open short cut for admins
transition from reopen requested to open
transition from answered to deleted
transition from open to deleted
returns the groups published questions up to the specified depth
overrides super implementation to return specialised query statement
returns true if the state of this object is unpublished
authenticate this member with the specified password
returns the published bibliography entries linked to the specified question
gets the users login id
asserts the existence of mandatory input
renders this task as html for a menu item
checks whether the tasks meets the conditions
returns the html for the menu frame
save the new password
release all resources reserved by this task set instance
registers a sub application i
renders the menu as html code in the specified language
removes the document type declaration
renders the initial menu as html code in the specified language
renders the menus main entries
renders the menu entries at the start e
renders the menu entries at the end e
remove the specified partlet
renders this task as html for a menu item
renders this task with the specified label as html for a menu item
method is protected for testing purposes
release all resources reserved by this task instance
delegates to code abstract messages
delegates to code abstract messages
code lt option value value selected selected label lt option code
checks the groups activation state against the specified value
processes the entry into the application
the original su is stored in the cache home only
renders the content of this class
method to initialize the bit field i
renders the content of this class as xml
method to load the bit field
returns the id of the tuples object
returns the roles prepared as xml of the following form pre
adds a new permissions to the bit map
returns the index of the sort column i
checks the sort order of the list displayed
tests if this stack is empty
looks at the object at the top of this stack without
an alternative approach to get the bundles path to the resources directory
removes the object at the top of this
pushes a view onto the top of this stack
removes all of the elements from this stack
returns an instance of code vifforum context code
sets the stack blocked
starts the search with the query term s provided and returns the
returns the code index writer code to index the the content
returns the code index writer code to index the the members
refreshes the index reader for content entries
refreshes the index reader for member entries
adds the specified task to the registry of unassigned menu tasks
registers the permissions for that they can be created after during servlet initialization
returns the applications menu either from the forum or the administration part
adds a partlet i
renders the localized menu with the specified menu id
removes the specified partlet from the specified applications main menu
adds a partlet i
renders the partlets default menu entry
adds a pluggable menu to the applications main menu
returns the permission needed to call the default task
returns the directory of the index
removes the specified pluggable menu from the applications main menu
release all resource allocated for this partlet instance
this method can be used to filter html form input
returns the entries as xml text
creates the login page i
returns a navigation string telling us the page we actually are
evaluates the specified query result and inserts additional text to the xml
returns the request type of the task to show a forum group
redirects the task to the login page
removes the specified partlet from the application menu
returns the request type of the task to show a question
forward the actual task processing to the specified task
returns the request type of the task to show a bibliography
forward the actual task processing to the specified vif task
removes the specified pluggable task from the pluggable menu
adds a pluggable menu i
register this forum group partlet to the applications group manager
set the serialized string
starts the preparation of the serialization and transformation of
renders he applications menu in the specified language
renders the applications initial or empty menu
returns the xml string to generate view
displays the view from the view stack
